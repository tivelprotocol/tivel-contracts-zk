{"id":"83eab7248d563a0e09cc1f5301208554","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"contracts/base/Lockable.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ncontract Lockable {\n    uint256 private unlocked = 1;\n\n    error Locked();\n\n    modifier lock() {\n        if (unlocked != 1) revert Locked();\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n}\n"},"contracts/interfaces/external/IWETH9.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n/// @title Interface for WETH9\ninterface IWETH9 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}\n"},"contracts/interfaces/ICloseCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface ICloseCallback {\n    function closeCallback(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut,\n        bytes calldata _data\n    ) external;\n}\n"},"contracts/interfaces/IDEXAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IDEXAggregator {\n    function dexes(uint256) external view returns (address);\n\n    function dexNames(uint256) external view returns (string memory);\n\n    function dexIndex(address) external view returns (uint256);\n\n    function dexLength() external view returns (uint256);\n\n    function validatePair(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut\n    ) external view returns (bool);\n\n    function getAmountIn(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view returns (uint256 amountIn, address dex);\n\n    function getAmountOut(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view returns (uint256 amountOut, address dex);\n\n    function swap(\n        address _dex,\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _minAmountOut,\n        address _to\n    ) external returns (uint256 amountOut, address dex);\n}\n"},"contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function allowance(\n        address _owner,\n        address _spender\n    ) external view returns (uint256);\n\n    function approve(address _spender, uint256 _value) external returns (bool);\n\n    function transfer(address _to, uint256 _value) external returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external returns (bool);\n\n    function permit(\n        address _owner,\n        address _spender,\n        uint256 _value,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    ) external;\n}\n"},"contracts/interfaces/IFactory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IFactory {\n    function manager() external view returns (address);\n\n    function poolDeployer() external view returns (address);\n\n    function positionStorage() external view returns (address);\n\n    function withdrawalMonitor() external view returns (address);\n\n    function userStorage() external view returns (address);\n\n    function priceFeed() external view returns (address);\n\n    function dexAggregator() external view returns (address);\n\n    function protocolFeeRate() external view returns (uint256);\n\n    function protocolFeeTo() external view returns (address);\n\n    function liquidationFeeRate() external view returns (uint256);\n\n    function liquidationFeeTo() external view returns (address);\n\n    function serviceToken() external view returns (address);\n\n    function serviceFeeTo() external view returns (address);\n\n    function rollbackFee() external view returns (uint256);\n\n    function updateTPnSLFee() external view returns (uint256);\n\n    function updateCollateralAmountFee() external view returns (uint256);\n\n    function updateDeadlineFee() external view returns (uint256);\n\n    function minQuoteRate() external view returns (uint256);\n\n    function manualExpiration() external view returns (uint256);\n\n    function operator(address) external view returns (bool);\n\n    function pools(uint256) external view returns (address);\n\n    function poolLength() external view returns (uint256);\n\n    function poolIndex(address) external view returns (uint256);\n\n    function poolByQuoteToken(address) external view returns (address);\n\n    function baseTokenMUT(address) external view returns (uint256);\n\n    function collateralMUT(address) external view returns (uint256);\n\n    function baseTokenLT(address) external view returns (uint256);\n\n    function collateralLT(address) external view returns (uint256);\n\n    function interest(address _quoteToken) external view returns (uint256);\n}\n"},"contracts/interfaces/IMintCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IMintCallback {\n    function mintCallback(\n        address _token,\n        uint256 _liquidity,\n        bytes calldata _data\n    ) external;\n}\n"},"contracts/interfaces/IPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./IPositionStorage.sol\";\nimport \"./IWithdrawalMonitor.sol\";\n\ninterface IPool {\n    struct LiquidityPosition {\n        uint256 liquidity;\n        uint256 feeDebt;\n        uint256 pendingFee;\n        uint256 withdrawingLiquidity;\n    }\n\n    function factory() external view returns (address);\n\n    function positionStorage() external view returns (address);\n\n    function withdrawalMonitor() external view returns (address);\n\n    function quoteToken() external view returns (address);\n\n    function precision() external view returns (uint256);\n\n    function interest() external view returns (uint256);\n\n    function maxOpenInterest() external view returns (uint256);\n\n    function openInterest() external view returns (uint256);\n\n    function quoteReserve() external view returns (uint256);\n\n    function quoteInDebt() external view returns (uint256);\n\n    function withdrawingLiquidity() external view returns (uint256);\n\n    function accFee() external view returns (uint256);\n\n    function accProtocolFee() external view returns (uint256);\n\n    function accFeePerShare() external view returns (uint256);\n\n    function tradeableBaseToken(address) external view returns (bool);\n\n    function baseReserve(address) external view returns (uint256);\n\n    function collateralReserve(address) external view returns (uint256);\n\n    function availableLiquidity() external view returns (uint256);\n\n    function liquidityPosition(\n        address\n    )\n        external\n        view\n        returns (\n            uint256 liquidity,\n            uint256 feeDebt,\n            uint256 pendingFee,\n            uint256 withdrawingLiquidity\n        );\n\n    function claimableFee(address) external view returns (uint256);\n\n    function setInterest(uint256) external;\n\n    function setMaxOpenInterest(uint256) external;\n\n    function setBaseTokens(\n        address[] memory _baseTokens,\n        bool[] memory _tradeables\n    ) external;\n\n    function availLiquidity() external;\n\n    function mint(\n        address _to,\n        uint256 _liquidity,\n        bytes calldata _data\n    ) external;\n\n    function collect(address _to, uint256 _amount) external;\n\n    function addBurnRequest(\n        uint256 _liquidity,\n        address _to,\n        bytes calldata _data\n    ) external returns (uint256);\n\n    function burn(IWithdrawalMonitor.WithdrawalRequest memory) external;\n\n    function open(\n        IPositionStorage.OpenTradePositionParams memory\n    ) external returns (bytes32);\n\n    function close(IPositionStorage.CloseTradePositionParams calldata) external;\n\n    function rollback(\n        IPositionStorage.RollbackTradePositionParams memory\n    ) external;\n\n    function updateCollateralAmount(\n        IPositionStorage.UpdateCollateralAmountParams memory\n    ) external returns (uint256 collateralLiqPrice);\n\n    function updateDeadline(\n        IPositionStorage.UpdateDeadlineParams memory\n    ) external;\n}\n"},"contracts/interfaces/IPoolDeployer.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IPoolDeployer {\n    function factory() external view returns (address);\n\n    function deployPool(\n        address _quoteToken,\n        uint256 _interest\n    ) external returns (address payable pool);\n}\n"},"contracts/interfaces/IPositionStorage.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IPositionStorage {\n    struct BaseToken {\n        address id;\n        uint256 amount;\n        uint256 entryPrice;\n        uint256 liqPrice;\n        uint256 closePrice;\n    }\n    struct QuoteToken {\n        address id;\n        uint256 amount;\n    }\n    struct Collateral {\n        address id;\n        uint256 amount;\n        uint256 entryPrice;\n        uint256 liqPrice;\n        uint256 closePrice;\n    }\n    struct Status {\n        bool isClosed;\n        bool isRollbacked;\n        bool isClosedManuallyStep1;\n        bool isClosedManuallyStep2;\n    }\n    struct TradePosition {\n        bytes32 positionKey;\n        address owner;\n        address pool;\n        BaseToken baseToken;\n        QuoteToken quoteToken;\n        Collateral collateral;\n        uint256 deadline;\n        uint256 stoplossPrice;\n        uint256 takeProfitPrice;\n        uint256 fee;\n        uint256 protocolFee;\n        Status status;\n        address closer;\n        uint256 liquidationMarkTime;\n    }\n    struct OpenTradePositionParams {\n        address owner;\n        address baseToken;\n        address quoteToken;\n        address collateral;\n        uint256 baseAmount;\n        uint256 quoteAmount;\n        uint256 collateralAmount;\n        uint256 deadline;\n        uint256 stoplossPrice;\n        uint256 takeProfitPrice;\n    }\n    struct CloseTradePositionParams {\n        bytes32 positionKey;\n        bytes data0;\n        bytes data1;\n        address closer;\n    }\n    struct RollbackTradePositionParams {\n        bytes32 positionKey;\n        address rollbacker;\n        address serviceToken;\n        uint256 serviceFee;\n    }\n    struct UpdateTPnSLParams {\n        bytes32 positionKey;\n        uint256 takeProfitPrice;\n        uint256 stoplossPrice;\n        address updater;\n        address serviceToken;\n        uint256 serviceFee;\n    }\n    struct UpdateCollateralAmountParams {\n        bytes32 positionKey;\n        uint256 amount;\n        address updater;\n        address serviceToken;\n        uint256 serviceFee;\n    }\n    struct UpdateDeadlineParams {\n        bytes32 positionKey;\n        uint256 deadline;\n        address updater;\n        address serviceToken;\n        uint256 serviceFee;\n    }\n\n    function factory() external view returns (address);\n\n    function position(bytes32) external view returns (TradePosition memory);\n\n    function positionKeys(uint256) external view returns (bytes32);\n\n    function positionKeyToIndex(bytes32) external view returns (uint256);\n\n    function positionLength() external view returns (uint256);\n\n    function getMinCollateralAmount(\n        OpenTradePositionParams memory\n    ) external view returns (uint256);\n\n    function getQuoteAmountRange(\n        OpenTradePositionParams memory\n    ) external view returns (uint256 minQuoteAmount, uint256 maxQuoteAmount);\n\n    function previewTradePosition(\n        OpenTradePositionParams memory\n    ) external view returns (TradePosition memory);\n\n    function previewUpdateCollateralAmount(\n        UpdateCollateralAmountParams memory\n    ) external view returns (uint256 collateralLiqPrice);\n\n    function previewUpdateDeadline(\n        UpdateDeadlineParams memory\n    ) external view returns (uint256 fee, uint256 protocolFee);\n\n    function canLiquidate(bytes32) external view returns (bool);\n\n    function canLiquidationMark(bytes32) external view returns (bool);\n\n    function openTradePosition(\n        TradePosition memory\n    ) external returns (bytes32 positionKey);\n\n    function updateStatus(\n        bytes32 _positionKey,\n        address _updater\n    ) external returns (bool needLiquidate);\n\n    function liquidationMark(bytes32) external;\n\n    function rollback(bytes32 _positionKey, address _updater) external;\n\n    function closeManuallyStep1(bytes32) external;\n\n    function closeManuallyStep2(bytes32) external;\n\n    function updateCloseValues(\n        bytes32 _positionKey,\n        uint256 _baseValue,\n        uint256 _loss,\n        uint256 _remainingCollateralAmount\n    ) external;\n\n    function updateTPnSL(UpdateTPnSLParams memory) external;\n\n    function updateCollateralAmount(\n        UpdateCollateralAmountParams memory\n    ) external returns (uint256 collateralLiqPrice);\n\n    function updateDeadline(\n        UpdateDeadlineParams memory\n    ) external returns (uint256 fee, uint256 protocolFee);\n}\n"},"contracts/interfaces/IWithdrawalMonitor.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IWithdrawalMonitor {\n    struct WithdrawalRequest {\n        uint256 index;\n        address owner;\n        address quoteToken;\n        uint256 liquidity;\n        address to;\n        bytes data;\n    }\n\n    function factory() external view returns (address);\n\n    function requestLength(address) external view returns (uint256);\n\n    function currentIndex(address) external view returns (uint256);\n\n    function request(\n        address _pool,\n        uint256 _index\n    )\n        external\n        view\n        returns (\n            uint256 index,\n            address owner,\n            address quoteToken,\n            uint256 liquidity,\n            address to,\n            bytes calldata data\n        );\n\n    function addRequest(\n        address _owner,\n        address _quoteToken,\n        uint256 _liquidity,\n        address _to,\n        bytes calldata _data\n    ) external returns (uint256);\n\n    function updateCallbackResult(\n        uint256 _index,\n        string memory _result\n    ) external;\n\n    function execute(address) external;\n}\n"},"contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address _token, address _to, uint256 _value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeApprove: approve failed\"\n        );\n    }\n\n    function safeTransfer(\n        address _token,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address _token,\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address _to, uint256 _value) internal {\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"},"contracts/Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./libraries/TransferHelper.sol\";\nimport \"./interfaces/ICloseCallback.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IDEXAggregator.sol\";\nimport \"./interfaces/IFactory.sol\";\nimport \"./interfaces/IMintCallback.sol\";\nimport \"./interfaces/IPool.sol\";\nimport \"./interfaces/IWithdrawalMonitor.sol\";\nimport \"./interfaces/external/IWETH9.sol\";\nimport \"./base/Lockable.sol\";\n\ncontract Pool is Lockable, IPool {\n    address public override factory;\n    address public override positionStorage;\n    address public override withdrawalMonitor;\n    address public override quoteToken;\n    uint256 public override precision;\n    uint256 public override interest; // annual // 10000 = 100%\n    uint256 public override maxOpenInterest;\n    uint256 public override openInterest;\n\n    uint256 public override quoteReserve;\n    uint256 public override quoteInDebt;\n    uint256 public override withdrawingLiquidity;\n    uint256 public override accFee;\n    uint256 public override accProtocolFee;\n    uint256 public override accFeePerShare;\n    mapping(address => bool) public override tradeableBaseToken;\n    mapping(address => uint256) public override baseReserve;\n    mapping(address => uint256) public override collateralReserve;\n    mapping(address => LiquidityPosition) public override liquidityPosition;\n\n    error InitializedAlready();\n    error Forbidden(address sender);\n    error BadLengths(uint256 length0, uint256 length1);\n    error EthTransferFailed(address to, uint256 value);\n    error TransferFailed(address token, address to, uint256 value);\n    error InsufficientInput();\n    error InsufficientOutput();\n    error ZeroValue();\n    error UntradeableBaseToken(address token);\n    error InvalidParameters();\n    error ExceedMaxOpenInterest();\n    error InsufficientCollateral(uint256 amount, uint256 neededAmount);\n\n    event SetInterest(uint256 newInterest);\n    event SetMaxOpenInterest(uint256 newMaxOpenInterest);\n    event SetBaseToken(address baseToken, address quoteToken, bool tradeable);\n    event UpdateQuoteReserve(uint256 newQuoteReserve);\n    event UpdateQuoteInDebt(uint256 newQuoteInDebt);\n    event UpdateWithdrawingLiquidity(uint256 newWithdrawingLiquidity);\n    event UpdateFee(uint256 newFee);\n    event UpdateProtocolFee(uint256 newProtocolFee);\n    event UpdateBaseReserve(address baseToken, uint256 newReserve);\n    event UpdateCollateralReserve(address collateral, uint256 newReserve);\n    event Mint(address indexed sender, address indexed to, uint256 liquidity);\n    event Collect(address indexed sender, address indexed to, uint256 amount);\n    event Burn(address indexed sender, uint256 liquidity);\n    event Open(\n        address indexed sender,\n        address indexed owner,\n        bytes32 indexed positionKey,\n        address baseToken,\n        address quoteToken,\n        address collateral,\n        uint256 baseAmount,\n        uint256 quoteAmount,\n        uint256 collateralAmount,\n        uint256 fee,\n        uint256 protocolFee\n    );\n    event Close(\n        address indexed sender,\n        address indexed owner,\n        bytes32 indexed positionKey,\n        address baseToken,\n        address closer,\n        uint256 liquidationFee\n    );\n    event Rollback(\n        address indexed sender,\n        bytes32 indexed positionKey,\n        address rollbacker,\n        address serviceToken,\n        uint256 serviceFee\n    );\n    event CloseManuallyStep1(\n        address indexed sender,\n        bytes32 indexed positionKey,\n        address indexed executor\n    );\n    event UpdateCollateralAmount(\n        address indexed sender,\n        bytes32 indexed positionKey,\n        uint256 amount,\n        uint256 newCollateralLiqPrice,\n        address updater,\n        address serviceToken,\n        uint256 serviceFee\n    );\n    event UpdateDeadline(\n        address indexed sender,\n        bytes32 indexed positionKey,\n        address baseToken,\n        address quoteToken,\n        uint256 newDeadline,\n        uint256 fee,\n        uint256 protocolFee,\n        address updater,\n        address serviceToken,\n        uint256 serviceFee\n    );\n\n    function initialize(\n        address _factory,\n        address _quoteToken,\n        uint256 _interest\n    ) external {\n        if (factory != address(0)) revert InitializedAlready();\n        factory = _factory;\n        positionStorage = IFactory(_factory).positionStorage();\n        withdrawalMonitor = IFactory(_factory).withdrawalMonitor();\n        quoteToken = _quoteToken;\n        precision = 10 ** IERC20(_quoteToken).decimals();\n        interest = _interest;\n    }\n\n    modifier onlyFactory() {\n        if (msg.sender != factory) revert Forbidden(msg.sender);\n        _;\n    }\n\n    modifier onlyOperator() {\n        if (!IFactory(factory).operator(msg.sender)) {\n            revert Forbidden(msg.sender);\n        }\n        _;\n    }\n\n    function _unrealizeLiquidity() internal view returns (uint256) {\n        address _quoteToken = quoteToken;\n        uint256 balance = IERC20(_quoteToken).balanceOf(address(this));\n        return\n            balance -\n            collateralReserve[_quoteToken] -\n            (quoteReserve - quoteInDebt);\n    }\n\n    function _unrealizeAmount(address _token) internal view returns (uint256) {\n        if (_token == quoteToken) return _unrealizeLiquidity();\n        uint256 balance = IERC20(_token).balanceOf(address(this));\n        return balance - collateralReserve[_token] - baseReserve[_token];\n    }\n\n    function _availableLiquidity() internal view returns (uint256) {\n        int256 result = int256(quoteReserve) -\n            int256(quoteInDebt) -\n            int256(withdrawingLiquidity);\n        return result < 0 ? 0 : uint256(result);\n    }\n\n    function availableLiquidity() external view override returns (uint256) {\n        return _availableLiquidity();\n    }\n\n    function claimableFee(\n        address _owner\n    ) external view override returns (uint256 amount) {\n        LiquidityPosition memory pos = liquidityPosition[_owner];\n        amount =\n            pos.pendingFee +\n            (accFeePerShare * pos.liquidity) /\n            precision -\n            pos.feeDebt;\n        if (amount > accFee) amount = accFee;\n    }\n\n    function setInterest(uint256 _interest) external override onlyFactory {\n        interest = _interest;\n\n        emit SetInterest(_interest);\n    }\n\n    function setMaxOpenInterest(\n        uint256 _maxOpenInterest\n    ) external override onlyFactory {\n        maxOpenInterest = _maxOpenInterest;\n\n        emit SetMaxOpenInterest(_maxOpenInterest);\n    }\n\n    function setBaseTokens(\n        address[] memory _baseTokens,\n        bool[] memory _tradeables\n    ) external override onlyFactory {\n        address _quoteToken = quoteToken;\n        if (_baseTokens.length != _tradeables.length)\n            revert BadLengths(_baseTokens.length, _tradeables.length);\n        for (uint256 i = 0; i < _baseTokens.length; i++) {\n            tradeableBaseToken[_baseTokens[i]] = _tradeables[i];\n\n            emit SetBaseToken(_baseTokens[i], _quoteToken, _tradeables[i]);\n        }\n    }\n\n    function _addFee(uint256 _fee) internal {\n        accFee += _fee;\n        accFeePerShare += (_fee * precision) / quoteReserve;\n\n        emit UpdateFee(accFee);\n    }\n\n    function _transferProtocolFee() internal {\n        uint256 _protocolFee = accProtocolFee;\n        if (_protocolFee > 0) {\n            address feeTo = IFactory(factory).protocolFeeTo();\n            if (feeTo != address(0)) {\n                accProtocolFee = 0;\n                TransferHelper.safeTransfer(quoteToken, feeTo, _protocolFee);\n            }\n        }\n    }\n\n    function availLiquidity() external override {\n        if (msg.sender != withdrawalMonitor) {\n            revert Forbidden(msg.sender);\n        }\n        withdrawingLiquidity = 0;\n    }\n\n    function mint(\n        address _to,\n        uint256 _liquidity,\n        bytes calldata _data\n    ) external override lock {\n        address _quoteToken = quoteToken;\n        LiquidityPosition storage pos = liquidityPosition[_to];\n\n        uint256 _accFeePerShare = accFeePerShare;\n        uint256 _precision = precision;\n\n        if (pos.liquidity > 0) {\n            pos.pendingFee +=\n                (_accFeePerShare * pos.liquidity) /\n                _precision -\n                pos.feeDebt;\n        }\n        pos.liquidity += _liquidity;\n        pos.feeDebt = (_accFeePerShare * pos.liquidity) / _precision;\n\n        quoteReserve += _liquidity;\n        _transferProtocolFee();\n\n        uint256 balanceBefore = IERC20(_quoteToken).balanceOf(address(this));\n        IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data);\n\n        uint256 balance = IERC20(_quoteToken).balanceOf(address(this));\n        if (balance < balanceBefore + _liquidity) revert InsufficientInput();\n\n        emit Mint(msg.sender, _to, _liquidity);\n    }\n\n    function collect(address _to, uint256 _amount) external override lock {\n        if (_amount > 0) {\n            LiquidityPosition storage pos = liquidityPosition[msg.sender];\n\n            uint256 _accFeePerShare = accFeePerShare;\n            uint256 _precision = precision;\n\n            if (pos.liquidity > 0) {\n                pos.pendingFee +=\n                    (_accFeePerShare * pos.liquidity) /\n                    _precision -\n                    pos.feeDebt;\n            }\n            pos.feeDebt = (_accFeePerShare * pos.liquidity) / _precision;\n\n            if (_amount > pos.pendingFee || _amount > accFee) {\n                revert InsufficientOutput();\n            }\n            pos.pendingFee -= _amount;\n\n            TransferHelper.safeTransfer(quoteToken, _to, _amount);\n\n            emit Collect(msg.sender, _to, _amount);\n        }\n    }\n\n    function addBurnRequest(\n        uint256 _liquidity,\n        address _to,\n        bytes calldata _data\n    ) external override lock returns (uint256) {\n        LiquidityPosition storage pos = liquidityPosition[msg.sender];\n        if (_liquidity + pos.withdrawingLiquidity > pos.liquidity)\n            revert InsufficientOutput();\n\n        pos.withdrawingLiquidity += _liquidity;\n        withdrawingLiquidity += _liquidity;\n\n        IWithdrawalMonitor monitor = IWithdrawalMonitor(withdrawalMonitor);\n        return\n            monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data);\n    }\n\n    function burn(\n        IWithdrawalMonitor.WithdrawalRequest memory _request\n    ) external override lock {\n        IWithdrawalMonitor monitor = IWithdrawalMonitor(withdrawalMonitor);\n        if (msg.sender != address(monitor)) {\n            revert Forbidden(msg.sender);\n        }\n        LiquidityPosition storage pos = liquidityPosition[_request.owner];\n        if (_request.liquidity > pos.withdrawingLiquidity)\n            revert InsufficientOutput();\n        if (_request.liquidity > withdrawingLiquidity) {\n            withdrawingLiquidity = 0;\n        } else withdrawingLiquidity -= _request.liquidity;\n\n        uint256 _accFeePerShare = accFeePerShare;\n        uint256 _precision = precision;\n\n        if (pos.liquidity > 0) {\n            pos.pendingFee +=\n                (_accFeePerShare * pos.liquidity) /\n                _precision -\n                pos.feeDebt;\n        }\n        pos.liquidity -= _request.liquidity;\n        pos.withdrawingLiquidity -= _request.liquidity;\n        pos.feeDebt = (_accFeePerShare * pos.liquidity) / _precision;\n\n        quoteReserve -= _request.liquidity;\n        _transferProtocolFee();\n\n        // callback\n        if (_request.data.length > 0) {\n            bytes memory callbackData = abi.encodeWithSignature(\n                \"burnCallback(uint256,bytes)\",\n                _request.liquidity,\n                _request.data\n            );\n            (bool success, bytes memory result) = _request.owner.call(\n                callbackData\n            );\n\n            // will save callback result without caring if it is success or not, so be careful\n            if (!success) {\n                // Next 14 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) {\n                    monitor.updateCallbackResult(\n                        _request.index,\n                        \"Callback transaction failed silently\"\n                    );\n                } else {\n                    assembly {\n                        result := add(result, 0x04)\n                    }\n                    monitor.updateCallbackResult(\n                        _request.index,\n                        abi.decode(result, (string))\n                    );\n                }\n            }\n        }\n\n        TransferHelper.safeTransfer(\n            quoteToken,\n            _request.to,\n            _request.liquidity\n        );\n\n        emit Burn(msg.sender, _request.liquidity);\n    }\n\n    function _checkInputTokens(\n        IPositionStorage.OpenTradePositionParams memory _params\n    ) internal view returns (bool) {\n        if (_params.collateral != _params.baseToken) {\n            uint256 collateralAmount = IERC20(_params.collateral).balanceOf(\n                address(this)\n            );\n            collateralAmount -= (collateralReserve[_params.collateral] +\n                baseReserve[_params.collateral]);\n            if (_params.collateral == _params.quoteToken) {\n                collateralAmount -= (quoteReserve -\n                    quoteInDebt -\n                    accFee -\n                    accProtocolFee);\n            }\n            if (collateralAmount < _params.collateralAmount) return false;\n\n            uint256 baseAmount = IERC20(_params.baseToken).balanceOf(\n                address(this)\n            );\n            baseAmount -= (collateralReserve[_params.baseToken] +\n                baseReserve[_params.baseToken]);\n            if (baseAmount < _params.baseAmount) return false;\n        } else {\n            uint256 addedAmount = IERC20(_params.collateral).balanceOf(\n                address(this)\n            );\n            addedAmount -= (collateralReserve[_params.collateral] +\n                baseReserve[_params.collateral]);\n            if (addedAmount < _params.collateralAmount + _params.baseAmount)\n                return false;\n        }\n        return true;\n    }\n\n    function open(\n        IPositionStorage.OpenTradePositionParams memory _params\n    ) external override lock returns (bytes32 positionKey) {\n        if (!tradeableBaseToken[_params.baseToken])\n            revert UntradeableBaseToken(_params.baseToken);\n        if (openInterest + _params.quoteAmount > maxOpenInterest)\n            revert ExceedMaxOpenInterest();\n\n        address _quoteToken = quoteToken;\n        _params.quoteToken = _quoteToken;\n        if (_params.baseToken == _quoteToken) revert InvalidParameters();\n        if (!_checkInputTokens(_params)) revert InsufficientInput();\n\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n        IPositionStorage.TradePosition memory pos = _positionStorage\n            .previewTradePosition(_params);\n        if (pos.owner == address(0)) revert InvalidParameters();\n\n        uint256 realQuoteAmount = pos.quoteToken.amount - pos.fee;\n        uint256 available = _availableLiquidity();\n        if (realQuoteAmount > available) revert InsufficientOutput();\n\n        positionKey = _positionStorage.openTradePosition(pos);\n\n        quoteInDebt += _params.quoteAmount;\n        accProtocolFee += pos.protocolFee;\n        baseReserve[_params.baseToken] += _params.baseAmount;\n        collateralReserve[_params.collateral] += _params.collateralAmount;\n        openInterest += pos.quoteToken.amount;\n        _addFee(pos.fee - pos.protocolFee);\n\n        TransferHelper.safeTransfer(\n            _quoteToken,\n            _params.owner,\n            realQuoteAmount\n        );\n\n        emit Open(\n            msg.sender,\n            _params.owner,\n            positionKey,\n            _params.baseToken,\n            _params.quoteToken,\n            _params.collateral,\n            _params.baseAmount,\n            _params.quoteAmount,\n            _params.collateralAmount,\n            pos.fee,\n            pos.protocolFee\n        );\n    }\n\n    function _liquidateBaseToken(\n        IPositionStorage.TradePosition memory _pos,\n        bytes calldata _data\n    ) internal returns (uint256) {\n        uint256 balanceBefore = IERC20(_pos.quoteToken.id).balanceOf(\n            address(this)\n        );\n        TransferHelper.safeTransfer(\n            _pos.baseToken.id,\n            msg.sender,\n            _pos.baseToken.amount\n        );\n        ICloseCallback(msg.sender).closeCallback(\n            _pos.baseToken.id,\n            _pos.quoteToken.id,\n            0,\n            _data\n        );\n\n        uint256 balanceAfter = IERC20(_pos.quoteToken.id).balanceOf(\n            address(this)\n        );\n        if (balanceAfter < balanceBefore) revert InsufficientInput();\n        return balanceAfter - balanceBefore;\n    }\n\n    function _liquidateCollateral(\n        IPositionStorage.TradePosition memory _pos,\n        uint256 _neededCollateralAmount,\n        uint256 _loss,\n        bytes calldata _data\n    ) internal returns (uint256) {\n        uint256 colBalanceBefore = IERC20(_pos.collateral.id).balanceOf(\n            address(this)\n        );\n        uint256 quoteBalanceBefore = IERC20(_pos.quoteToken.id).balanceOf(\n            address(this)\n        );\n        TransferHelper.safeTransfer(\n            _pos.collateral.id,\n            msg.sender,\n            _neededCollateralAmount\n        );\n        ICloseCallback(msg.sender).closeCallback(\n            _pos.collateral.id,\n            _pos.quoteToken.id,\n            _loss,\n            _data\n        );\n\n        uint256 colBalanceAfter = IERC20(_pos.collateral.id).balanceOf(\n            address(this)\n        );\n        uint256 quoteBalanceAfter = IERC20(_pos.quoteToken.id).balanceOf(\n            address(this)\n        );\n        if (quoteBalanceAfter < quoteBalanceBefore + _loss)\n            revert InsufficientInput();\n        return colBalanceAfter - (colBalanceBefore - _neededCollateralAmount); // > 0 in case used less than sent\n    }\n\n    function close(\n        IPositionStorage.CloseTradePositionParams calldata _params\n    ) external override lock onlyOperator {\n        IFactory _factory = IFactory(factory);\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n\n        bool needLiquidate = _positionStorage.updateStatus(\n            _params.positionKey,\n            _params.closer\n        );\n        IPositionStorage.TradePosition memory pos = _positionStorage.position(\n            _params.positionKey\n        );\n        uint256 baseValue = _liquidateBaseToken(pos, _params.data0);\n        uint256 liquidationFee;\n        uint256 quoteAmount = pos.quoteToken.amount;\n        if (needLiquidate) {\n            uint256 liquidationFeeRate = _factory.liquidationFeeRate();\n            liquidationFee = (quoteAmount * liquidationFeeRate) / 10000;\n            quoteAmount += liquidationFee;\n        }\n        uint256 loss;\n        uint256 remainingCollateralAmount;\n        // avoid too deep stack\n        {\n            uint256 neededCollateralAmount;\n            if (baseValue < quoteAmount) {\n                loss = quoteAmount - baseValue;\n                neededCollateralAmount = loss;\n                if (pos.collateral.id != pos.quoteToken.id) {\n                    IDEXAggregator dexAggregator = IDEXAggregator(\n                        _factory.dexAggregator()\n                    );\n                    (neededCollateralAmount, ) = dexAggregator.getAmountIn(\n                        address(0),\n                        pos.collateral.id,\n                        pos.quoteToken.id,\n                        loss\n                    );\n                    remainingCollateralAmount += _liquidateCollateral(\n                        pos,\n                        neededCollateralAmount,\n                        loss,\n                        _params.data1\n                    );\n                }\n\n                if (neededCollateralAmount > pos.collateral.amount) {\n                    revert InsufficientCollateral(\n                        pos.collateral.amount,\n                        neededCollateralAmount\n                    );\n                }\n            }\n\n            remainingCollateralAmount += (pos.collateral.amount -\n                neededCollateralAmount);\n        }\n\n        _positionStorage.updateCloseValues(\n            pos.positionKey,\n            baseValue,\n            loss,\n            remainingCollateralAmount\n        );\n\n        quoteInDebt -= pos.quoteToken.amount;\n        withdrawingLiquidity += pos.quoteToken.amount;\n        baseReserve[pos.baseToken.id] -= pos.baseToken.amount;\n        collateralReserve[pos.collateral.id] -= pos.collateral.amount;\n        openInterest -= pos.quoteToken.amount;\n\n        if (liquidationFee > 0) {\n            address liquidationFeeTo = _factory.liquidationFeeTo();\n            TransferHelper.safeTransfer(\n                pos.quoteToken.id,\n                liquidationFeeTo,\n                liquidationFee\n            );\n        }\n        if (loss == 0) {\n            uint256 profit = baseValue - quoteAmount;\n            if (profit > 0) {\n                TransferHelper.safeTransfer(\n                    pos.quoteToken.id,\n                    pos.owner,\n                    profit\n                );\n            }\n        }\n        if (remainingCollateralAmount > 0) {\n            TransferHelper.safeTransfer(\n                pos.collateral.id,\n                pos.owner,\n                remainingCollateralAmount\n            );\n        }\n\n        emit Close(\n            msg.sender,\n            pos.owner,\n            pos.positionKey,\n            pos.baseToken.id,\n            _params.closer,\n            liquidationFee\n        );\n    }\n\n    function rollback(\n        IPositionStorage.RollbackTradePositionParams calldata _params\n    ) external override lock onlyOperator {\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n        IPositionStorage.TradePosition memory pos = _positionStorage.position(\n            _params.positionKey\n        );\n        uint256 quoteAmount = _unrealizeLiquidity();\n        if (quoteAmount < pos.quoteToken.amount) revert InsufficientInput();\n\n        _positionStorage.rollback(_params.positionKey, _params.rollbacker);\n\n        quoteInDebt -= pos.quoteToken.amount;\n        withdrawingLiquidity += pos.quoteToken.amount;\n        baseReserve[pos.baseToken.id] -= pos.baseToken.amount;\n        collateralReserve[pos.collateral.id] -= pos.collateral.amount;\n        openInterest -= pos.quoteToken.amount;\n\n        TransferHelper.safeTransfer(\n            pos.baseToken.id,\n            pos.owner,\n            pos.baseToken.amount\n        );\n        TransferHelper.safeTransfer(\n            pos.collateral.id,\n            pos.owner,\n            pos.collateral.amount\n        );\n\n        emit Rollback(\n            msg.sender,\n            pos.positionKey,\n            _params.rollbacker,\n            _params.serviceToken,\n            _params.serviceFee\n        );\n    }\n\n    // only in case ALL monitors cannot work\n    function closeManuallyStep1(\n        bytes32 _positionKey,\n        address _executor\n    ) external lock onlyOperator {\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n        _positionStorage.closeManuallyStep1(_positionKey);\n\n        IPositionStorage.TradePosition memory pos = _positionStorage.position(\n            _positionKey\n        );\n\n        // transfer all baseToken & collateral to executor to process manually\n        TransferHelper.safeTransfer(\n            pos.baseToken.id,\n            _executor,\n            pos.baseToken.amount\n        );\n        TransferHelper.safeTransfer(\n            pos.collateral.id,\n            _executor,\n            pos.collateral.amount\n        );\n\n        baseReserve[pos.baseToken.id] -= pos.baseToken.amount;\n        collateralReserve[pos.collateral.id] -= pos.collateral.amount;\n\n        emit CloseManuallyStep1(msg.sender, _positionKey, _executor);\n    }\n\n    // only in case ALL monitors cannot work, after sending tokens to pool and liquidationFeeTo\n    function closeManuallyStep2(\n        bytes32 _positionKey,\n        uint256 _baseValue,\n        uint256 _remainingCollateralAmount,\n        uint256 _liquidationFee\n    ) external lock onlyOperator {\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n        IPositionStorage.TradePosition memory pos = _positionStorage.position(\n            _positionKey\n        );\n\n        if (pos.collateral.id == pos.quoteToken.id) {\n            uint256 amount = _unrealizeLiquidity();\n            if (\n                amount <\n                _baseValue + _remainingCollateralAmount + _liquidationFee\n            ) revert InsufficientInput();\n        } else {\n            uint256 quoteAmount = _unrealizeLiquidity();\n            if (quoteAmount < _baseValue + _liquidationFee)\n                revert InsufficientInput();\n            uint256 _collateralReserve = collateralReserve[pos.collateral.id];\n            uint256 _baseReserve = baseReserve[pos.collateral.id];\n            uint256 collateralBalance = IERC20(pos.collateral.id).balanceOf(\n                address(this)\n            );\n            uint256 collateralAmount = collateralBalance -\n                _collateralReserve -\n                _baseReserve;\n            if (collateralAmount < _remainingCollateralAmount)\n                revert InsufficientInput();\n        }\n\n        _positionStorage.closeManuallyStep2(_positionKey);\n\n        uint256 loss;\n        uint256 neededQuoteAmount = pos.quoteToken.amount + _liquidationFee;\n        if (_baseValue < neededQuoteAmount) {\n            loss = neededQuoteAmount - _baseValue;\n        }\n        _positionStorage.updateCloseValues(\n            pos.positionKey,\n            _baseValue,\n            loss,\n            _remainingCollateralAmount\n        );\n\n        quoteInDebt -= pos.quoteToken.amount;\n        withdrawingLiquidity += pos.quoteToken.amount;\n        openInterest -= pos.quoteToken.amount;\n\n        if (_liquidationFee > 0) {\n            address liquidationFeeTo = IFactory(factory).liquidationFeeTo();\n            TransferHelper.safeTransfer(\n                pos.quoteToken.id,\n                liquidationFeeTo,\n                _liquidationFee\n            );\n        }\n        if (loss == 0) {\n            uint256 profit = _baseValue - neededQuoteAmount;\n            if (profit > 0) {\n                TransferHelper.safeTransfer(\n                    pos.quoteToken.id,\n                    pos.owner,\n                    profit\n                );\n            }\n        }\n        if (_remainingCollateralAmount > 0) {\n            TransferHelper.safeTransfer(\n                pos.collateral.id,\n                pos.owner,\n                _remainingCollateralAmount\n            );\n        }\n\n        emit Close(\n            msg.sender,\n            pos.owner,\n            _positionKey,\n            pos.baseToken.id,\n            msg.sender,\n            _liquidationFee\n        );\n    }\n\n    function updateCollateralAmount(\n        IPositionStorage.UpdateCollateralAmountParams memory _params\n    ) external override lock onlyOperator returns (uint256 collateralLiqPrice) {\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n        IPositionStorage.TradePosition memory pos = _positionStorage.position(\n            _params.positionKey\n        );\n        uint256 addedCollateralAmount = _unrealizeAmount(pos.collateral.id);\n        if (addedCollateralAmount < _params.amount) revert InsufficientInput();\n\n        collateralLiqPrice = _positionStorage.updateCollateralAmount(_params);\n\n        collateralReserve[pos.collateral.id] += _params.amount;\n\n        emit UpdateCollateralAmount(\n            msg.sender,\n            _params.positionKey,\n            _params.amount,\n            collateralLiqPrice,\n            _params.updater,\n            _params.serviceToken,\n            _params.serviceFee\n        );\n    }\n\n    function updateDeadline(\n        IPositionStorage.UpdateDeadlineParams memory _params\n    ) external override lock onlyOperator {\n        IPositionStorage _positionStorage = IPositionStorage(positionStorage);\n        IPositionStorage.TradePosition memory pos = _positionStorage.position(\n            _params.positionKey\n        );\n        (uint256 fee, uint256 protocolFee) = _positionStorage.updateDeadline(\n            _params\n        );\n\n        quoteInDebt += fee;\n        accProtocolFee += protocolFee;\n        openInterest += fee;\n        _addFee(fee - protocolFee);\n\n        emit UpdateDeadline(\n            msg.sender,\n            _params.positionKey,\n            pos.baseToken.id,\n            pos.quoteToken.id,\n            _params.deadline,\n            fee,\n            protocolFee,\n            _params.updater,\n            _params.serviceToken,\n            _params.serviceFee\n        );\n    }\n}\n"},"contracts/PoolDeployer.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"./interfaces/IPoolDeployer.sol\";\nimport \"./Pool.sol\";\n\ncontract PoolDeployer is IPoolDeployer {\n    address public override factory;\n\n    error Forbidden(address sender);\n    error InitializedAlready();\n\n    event SetFactory(address indexed factory);\n\n    modifier onlyFactory() {\n        if (msg.sender != factory) revert Forbidden(msg.sender);\n        _;\n    }\n\n    function setFactory(address _factory) external {\n        if (factory != address(0)) revert InitializedAlready();\n        factory = _factory;\n\n        emit SetFactory(_factory);\n    }\n\n    function poolInitCodeHash() external pure returns (bytes32) {\n        return keccak256(type(Pool).creationCode);\n    }\n\n    function deployPool(\n        address _quoteToken,\n        uint256 _interest\n    ) external override onlyFactory returns (address payable pool) {\n        // create pool contract\n        pool = payable(\n            address(new Pool{salt: keccak256(abi.encode(_quoteToken))}())\n        );\n        Pool(pool).initialize(factory, _quoteToken, _interest);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.15","long_version":"0.8.15+commit.e14f2714.Darwin.appleclang","zk_version":"1.5.0","sources":{"contracts/Pool.sol":{"id":0,"ast":{"absolutePath":"contracts/Pool.sol","exportedSymbols":{"ICloseCallback":[2818],"IDEXAggregator":[2905],"IERC20":[2990],"IFactory":[3156],"IMintCallback":[3168],"IPool":[3387],"IPositionStorage":[3715],"IWETH9":[3810],"IWithdrawalMonitor":[3796],"Lockable":[2804],"Pool":[2664],"TransferHelper":[3970]},"id":2665,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:0"},{"absolutePath":"contracts/libraries/TransferHelper.sol","file":"./libraries/TransferHelper.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":3971,"src":"71:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ICloseCallback.sol","file":"./interfaces/ICloseCallback.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":2819,"src":"112:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"./interfaces/IERC20.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":2991,"src":"154:33:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDEXAggregator.sol","file":"./interfaces/IDEXAggregator.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":2906,"src":"188:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IFactory.sol","file":"./interfaces/IFactory.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":3157,"src":"230:35:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IMintCallback.sol","file":"./interfaces/IMintCallback.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":3169,"src":"266:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPool.sol","file":"./interfaces/IPool.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":3388,"src":"307:32:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWithdrawalMonitor.sol","file":"./interfaces/IWithdrawalMonitor.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":3797,"src":"340:45:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/IWETH9.sol","file":"./interfaces/external/IWETH9.sol","id":10,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":3811,"src":"386:42:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/base/Lockable.sol","file":"./base/Lockable.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2665,"sourceUnit":2805,"src":"429:29:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":12,"name":"Lockable","nodeType":"IdentifierPath","referencedDeclaration":2804,"src":"477:8:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"477:8:0"},{"baseName":{"id":14,"name":"IPool","nodeType":"IdentifierPath","referencedDeclaration":3387,"src":"487:5:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"487:5:0"}],"canonicalName":"Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2664,"linearizedBaseContracts":[2664,3387,2804],"name":"Pool","nameLocation":"469:4:0","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3186],"constant":false,"functionSelector":"c45a0155","id":18,"mutability":"mutable","name":"factory","nameLocation":"523:7:0","nodeType":"VariableDeclaration","overrides":{"id":17,"nodeType":"OverrideSpecifier","overrides":[],"src":"514:8:0"},"scope":2664,"src":"499:31:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3191],"constant":false,"functionSelector":"8cd47415","id":21,"mutability":"mutable","name":"positionStorage","nameLocation":"560:15:0","nodeType":"VariableDeclaration","overrides":{"id":20,"nodeType":"OverrideSpecifier","overrides":[],"src":"551:8:0"},"scope":2664,"src":"536:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3196],"constant":false,"functionSelector":"a4fbc0d7","id":24,"mutability":"mutable","name":"withdrawalMonitor","nameLocation":"605:17:0","nodeType":"VariableDeclaration","overrides":{"id":23,"nodeType":"OverrideSpecifier","overrides":[],"src":"596:8:0"},"scope":2664,"src":"581:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":22,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3201],"constant":false,"functionSelector":"217a4b70","id":27,"mutability":"mutable","name":"quoteToken","nameLocation":"652:10:0","nodeType":"VariableDeclaration","overrides":{"id":26,"nodeType":"OverrideSpecifier","overrides":[],"src":"643:8:0"},"scope":2664,"src":"628:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3206],"constant":false,"functionSelector":"d3b5dc3b","id":30,"mutability":"mutable","name":"precision","nameLocation":"692:9:0","nodeType":"VariableDeclaration","overrides":{"id":29,"nodeType":"OverrideSpecifier","overrides":[],"src":"683:8:0"},"scope":2664,"src":"668:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3211],"constant":false,"functionSelector":"c392f766","id":33,"mutability":"mutable","name":"interest","nameLocation":"731:8:0","nodeType":"VariableDeclaration","overrides":{"id":32,"nodeType":"OverrideSpecifier","overrides":[],"src":"722:8:0"},"scope":2664,"src":"707:32:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3216],"constant":false,"functionSelector":"dc6638f4","id":36,"mutability":"mutable","name":"maxOpenInterest","nameLocation":"795:15:0","nodeType":"VariableDeclaration","overrides":{"id":35,"nodeType":"OverrideSpecifier","overrides":[],"src":"786:8:0"},"scope":2664,"src":"771:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3221],"constant":false,"functionSelector":"fa5a2e62","id":39,"mutability":"mutable","name":"openInterest","nameLocation":"840:12:0","nodeType":"VariableDeclaration","overrides":{"id":38,"nodeType":"OverrideSpecifier","overrides":[],"src":"831:8:0"},"scope":2664,"src":"816:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3226],"constant":false,"functionSelector":"9da771f4","id":42,"mutability":"mutable","name":"quoteReserve","nameLocation":"883:12:0","nodeType":"VariableDeclaration","overrides":{"id":41,"nodeType":"OverrideSpecifier","overrides":[],"src":"874:8:0"},"scope":2664,"src":"859:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3231],"constant":false,"functionSelector":"685b61d0","id":45,"mutability":"mutable","name":"quoteInDebt","nameLocation":"925:11:0","nodeType":"VariableDeclaration","overrides":{"id":44,"nodeType":"OverrideSpecifier","overrides":[],"src":"916:8:0"},"scope":2664,"src":"901:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3236],"constant":false,"functionSelector":"0121c777","id":48,"mutability":"mutable","name":"withdrawingLiquidity","nameLocation":"966:20:0","nodeType":"VariableDeclaration","overrides":{"id":47,"nodeType":"OverrideSpecifier","overrides":[],"src":"957:8:0"},"scope":2664,"src":"942:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3241],"constant":false,"functionSelector":"ada3112f","id":51,"mutability":"mutable","name":"accFee","nameLocation":"1016:6:0","nodeType":"VariableDeclaration","overrides":{"id":50,"nodeType":"OverrideSpecifier","overrides":[],"src":"1007:8:0"},"scope":2664,"src":"992:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3246],"constant":false,"functionSelector":"27014e33","id":54,"mutability":"mutable","name":"accProtocolFee","nameLocation":"1052:14:0","nodeType":"VariableDeclaration","overrides":{"id":53,"nodeType":"OverrideSpecifier","overrides":[],"src":"1043:8:0"},"scope":2664,"src":"1028:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3251],"constant":false,"functionSelector":"dd3b829a","id":57,"mutability":"mutable","name":"accFeePerShare","nameLocation":"1096:14:0","nodeType":"VariableDeclaration","overrides":{"id":56,"nodeType":"OverrideSpecifier","overrides":[],"src":"1087:8:0"},"scope":2664,"src":"1072:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3258],"constant":false,"functionSelector":"0adcf0f5","id":62,"mutability":"mutable","name":"tradeableBaseToken","nameLocation":"1157:18:0","nodeType":"VariableDeclaration","overrides":{"id":61,"nodeType":"OverrideSpecifier","overrides":[],"src":"1148:8:0"},"scope":2664,"src":"1116:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":60,"keyType":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"1124:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1116:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"1135:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"baseFunctions":[3265],"constant":false,"functionSelector":"ffc9dcbb","id":67,"mutability":"mutable","name":"baseReserve","nameLocation":"1225:11:0","nodeType":"VariableDeclaration","overrides":{"id":66,"nodeType":"OverrideSpecifier","overrides":[],"src":"1216:8:0"},"scope":2664,"src":"1181:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":65,"keyType":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1189:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1181:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[3272],"constant":false,"functionSelector":"8b6e00fa","id":72,"mutability":"mutable","name":"collateralReserve","nameLocation":"1286:17:0","nodeType":"VariableDeclaration","overrides":{"id":71,"nodeType":"OverrideSpecifier","overrides":[],"src":"1277:8:0"},"scope":2664,"src":"1242:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":70,"keyType":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"1250:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1242:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"1261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[3290],"constant":false,"functionSelector":"d4fd6905","id":78,"mutability":"mutable","name":"liquidityPosition","nameLocation":"1363:17:0","nodeType":"VariableDeclaration","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"1354:8:0"},"scope":2664,"src":"1309:71:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition)"},"typeName":{"id":76,"keyType":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1309:37:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition)"},"valueType":{"id":75,"nodeType":"UserDefinedTypeName","pathNode":{"id":74,"name":"LiquidityPosition","nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"1328:17:0"},"referencedDeclaration":3181,"src":"1328:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"}}},"visibility":"public"},{"errorSelector":"e7d06772","id":80,"name":"InitializedAlready","nameLocation":"1393:18:0","nodeType":"ErrorDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1411:2:0"},"src":"1387:27:0"},{"errorSelector":"a59d7f4d","id":84,"name":"Forbidden","nameLocation":"1425:9:0","nodeType":"ErrorDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"sender","nameLocation":"1443:6:0","nodeType":"VariableDeclaration","scope":84,"src":"1435:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1434:16:0"},"src":"1419:32:0"},{"errorSelector":"574092f9","id":90,"name":"BadLengths","nameLocation":"1462:10:0","nodeType":"ErrorDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"length0","nameLocation":"1481:7:0","nodeType":"VariableDeclaration","scope":90,"src":"1473:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"length1","nameLocation":"1498:7:0","nodeType":"VariableDeclaration","scope":90,"src":"1490:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1472:34:0"},"src":"1456:51:0"},{"errorSelector":"dea95fba","id":96,"name":"EthTransferFailed","nameLocation":"1518:17:0","nodeType":"ErrorDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"to","nameLocation":"1544:2:0","nodeType":"VariableDeclaration","scope":96,"src":"1536:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"value","nameLocation":"1556:5:0","nodeType":"VariableDeclaration","scope":96,"src":"1548:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"1548:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1535:27:0"},"src":"1512:51:0"},{"errorSelector":"bf182be8","id":104,"name":"TransferFailed","nameLocation":"1574:14:0","nodeType":"ErrorDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"token","nameLocation":"1597:5:0","nodeType":"VariableDeclaration","scope":104,"src":"1589:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"to","nameLocation":"1612:2:0","nodeType":"VariableDeclaration","scope":104,"src":"1604:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1604:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"value","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":104,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1588:42:0"},"src":"1568:63:0"},{"errorSelector":"f8b3bb61","id":106,"name":"InsufficientInput","nameLocation":"1642:17:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"1659:2:0"},"src":"1636:26:0"},{"errorSelector":"bb2875c3","id":108,"name":"InsufficientOutput","nameLocation":"1673:18:0","nodeType":"ErrorDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"1691:2:0"},"src":"1667:27:0"},{"errorSelector":"7c946ed7","id":110,"name":"ZeroValue","nameLocation":"1705:9:0","nodeType":"ErrorDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[],"src":"1714:2:0"},"src":"1699:18:0"},{"errorSelector":"bb3a2900","id":114,"name":"UntradeableBaseToken","nameLocation":"1728:20:0","nodeType":"ErrorDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"token","nameLocation":"1757:5:0","nodeType":"VariableDeclaration","scope":114,"src":"1749:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1749:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1748:15:0"},"src":"1722:42:0"},{"errorSelector":"e5239090","id":116,"name":"InvalidParameters","nameLocation":"1775:17:0","nodeType":"ErrorDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"1792:2:0"},"src":"1769:26:0"},{"errorSelector":"aa8051ce","id":118,"name":"ExceedMaxOpenInterest","nameLocation":"1806:21:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"1827:2:0"},"src":"1800:30:0"},{"errorSelector":"b07e3bc4","id":124,"name":"InsufficientCollateral","nameLocation":"1841:22:0","nodeType":"ErrorDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"amount","nameLocation":"1872:6:0","nodeType":"VariableDeclaration","scope":124,"src":"1864:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"neededAmount","nameLocation":"1888:12:0","nodeType":"VariableDeclaration","scope":124,"src":"1880:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1863:38:0"},"src":"1835:67:0"},{"anonymous":false,"eventSelector":"81ed86e8cfa3004fc54732477c3eda4f4c606394a0b423aba78153a3e696f65d","id":128,"name":"SetInterest","nameLocation":"1914:11:0","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"newInterest","nameLocation":"1934:11:0","nodeType":"VariableDeclaration","scope":128,"src":"1926:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1925:21:0"},"src":"1908:39:0"},{"anonymous":false,"eventSelector":"9290d3ed14fa81f8d341842ac22f26e4bb4449e0d0a8566656d54dafae29198e","id":132,"name":"SetMaxOpenInterest","nameLocation":"1958:18:0","nodeType":"EventDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"indexed":false,"mutability":"mutable","name":"newMaxOpenInterest","nameLocation":"1985:18:0","nodeType":"VariableDeclaration","scope":132,"src":"1977:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1977:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1976:28:0"},"src":"1952:53:0"},{"anonymous":false,"eventSelector":"ec4f975deac1f5c1d92fd5f7a2b08d2c4e3e60215ab50703da45f8f8e9f2fc9b","id":140,"name":"SetBaseToken","nameLocation":"2016:12:0","nodeType":"EventDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"indexed":false,"mutability":"mutable","name":"baseToken","nameLocation":"2037:9:0","nodeType":"VariableDeclaration","scope":140,"src":"2029:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":136,"indexed":false,"mutability":"mutable","name":"quoteToken","nameLocation":"2056:10:0","nodeType":"VariableDeclaration","scope":140,"src":"2048:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"2048:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":138,"indexed":false,"mutability":"mutable","name":"tradeable","nameLocation":"2073:9:0","nodeType":"VariableDeclaration","scope":140,"src":"2068:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":137,"name":"bool","nodeType":"ElementaryTypeName","src":"2068:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2028:55:0"},"src":"2010:74:0"},{"anonymous":false,"eventSelector":"044141ecee2fb3c75d1699b968fa546a18dfa4ee1d705699d81751270b385951","id":144,"name":"UpdateQuoteReserve","nameLocation":"2095:18:0","nodeType":"EventDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"newQuoteReserve","nameLocation":"2122:15:0","nodeType":"VariableDeclaration","scope":144,"src":"2114:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2113:25:0"},"src":"2089:50:0"},{"anonymous":false,"eventSelector":"26a8db85dd35b30712c42ae882de1d59c395aed810477ed980623164802cf142","id":148,"name":"UpdateQuoteInDebt","nameLocation":"2150:17:0","nodeType":"EventDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"indexed":false,"mutability":"mutable","name":"newQuoteInDebt","nameLocation":"2176:14:0","nodeType":"VariableDeclaration","scope":148,"src":"2168:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2167:24:0"},"src":"2144:48:0"},{"anonymous":false,"eventSelector":"2af1c3635b0d3de42213bf1f6e7979fc04bf2c07ff6d71fe72ccd76b9a045ea1","id":152,"name":"UpdateWithdrawingLiquidity","nameLocation":"2203:26:0","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"newWithdrawingLiquidity","nameLocation":"2238:23:0","nodeType":"VariableDeclaration","scope":152,"src":"2230:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2229:33:0"},"src":"2197:66:0"},{"anonymous":false,"eventSelector":"38e229a7f3f9c329892d08eb37c4e91ccac6d12c798d394990ca4f56028ec266","id":156,"name":"UpdateFee","nameLocation":"2274:9:0","nodeType":"EventDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"2292:6:0","nodeType":"VariableDeclaration","scope":156,"src":"2284:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2283:16:0"},"src":"2268:32:0"},{"anonymous":false,"eventSelector":"02f1bb46a1dd6774772e223bfa9c733cea598e6b1ac69187d1c614a04cfd1c36","id":160,"name":"UpdateProtocolFee","nameLocation":"2311:17:0","nodeType":"EventDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":false,"mutability":"mutable","name":"newProtocolFee","nameLocation":"2337:14:0","nodeType":"VariableDeclaration","scope":160,"src":"2329:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"2329:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2328:24:0"},"src":"2305:48:0"},{"anonymous":false,"eventSelector":"650aa761fa5f576577cdc0c020d74fa8bb091213a82ee311b7a274d9aa4f9559","id":166,"name":"UpdateBaseReserve","nameLocation":"2364:17:0","nodeType":"EventDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":false,"mutability":"mutable","name":"baseToken","nameLocation":"2390:9:0","nodeType":"VariableDeclaration","scope":166,"src":"2382:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":false,"mutability":"mutable","name":"newReserve","nameLocation":"2409:10:0","nodeType":"VariableDeclaration","scope":166,"src":"2401:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2381:39:0"},"src":"2358:63:0"},{"anonymous":false,"eventSelector":"63eb39417416506dc369967fba1b44e6418801a4a6845581c06cada91448c5c3","id":172,"name":"UpdateCollateralReserve","nameLocation":"2432:23:0","nodeType":"EventDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"indexed":false,"mutability":"mutable","name":"collateral","nameLocation":"2464:10:0","nodeType":"VariableDeclaration","scope":172,"src":"2456:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"newReserve","nameLocation":"2484:10:0","nodeType":"VariableDeclaration","scope":172,"src":"2476:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2476:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2455:40:0"},"src":"2426:70:0"},{"anonymous":false,"eventSelector":"ab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8","id":180,"name":"Mint","nameLocation":"2507:4:0","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2528:6:0","nodeType":"VariableDeclaration","scope":180,"src":"2512:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2552:2:0","nodeType":"VariableDeclaration","scope":180,"src":"2536:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"2536:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"2564:9:0","nodeType":"VariableDeclaration","scope":180,"src":"2556:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2511:63:0"},"src":"2501:74:0"},{"anonymous":false,"eventSelector":"1314fd112a381beea61539dbd21ec04afcff2662ac7d1b83273aade1f53d1b97","id":188,"name":"Collect","nameLocation":"2586:7:0","nodeType":"EventDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2610:6:0","nodeType":"VariableDeclaration","scope":188,"src":"2594:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2634:2:0","nodeType":"VariableDeclaration","scope":188,"src":"2618:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"2618:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2646:6:0","nodeType":"VariableDeclaration","scope":188,"src":"2638:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2638:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2593:60:0"},"src":"2580:74:0"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":194,"name":"Burn","nameLocation":"2665:4:0","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2686:6:0","nodeType":"VariableDeclaration","scope":194,"src":"2670:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"2670:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"2702:9:0","nodeType":"VariableDeclaration","scope":194,"src":"2694:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:43:0"},"src":"2659:54:0"},{"anonymous":false,"eventSelector":"6fa15176f59ef643f98e48bb7bbcdc1f7ed128c889a18626d6c28f6e7e2dece4","id":218,"name":"Open","nameLocation":"2724:4:0","nodeType":"EventDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2754:6:0","nodeType":"VariableDeclaration","scope":218,"src":"2738:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"2738:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2786:5:0","nodeType":"VariableDeclaration","scope":218,"src":"2770:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"indexed":true,"mutability":"mutable","name":"positionKey","nameLocation":"2817:11:0","nodeType":"VariableDeclaration","scope":218,"src":"2801:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2801:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":202,"indexed":false,"mutability":"mutable","name":"baseToken","nameLocation":"2846:9:0","nodeType":"VariableDeclaration","scope":218,"src":"2838:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"2838:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"indexed":false,"mutability":"mutable","name":"quoteToken","nameLocation":"2873:10:0","nodeType":"VariableDeclaration","scope":218,"src":"2865:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"2865:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"indexed":false,"mutability":"mutable","name":"collateral","nameLocation":"2901:10:0","nodeType":"VariableDeclaration","scope":218,"src":"2893:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"2893:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":208,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"2929:10:0","nodeType":"VariableDeclaration","scope":218,"src":"2921:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":210,"indexed":false,"mutability":"mutable","name":"quoteAmount","nameLocation":"2957:11:0","nodeType":"VariableDeclaration","scope":218,"src":"2949:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"2949:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"collateralAmount","nameLocation":"2986:16:0","nodeType":"VariableDeclaration","scope":218,"src":"2978:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"2978:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"3020:3:0","nodeType":"VariableDeclaration","scope":218,"src":"3012:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"3041:11:0","nodeType":"VariableDeclaration","scope":218,"src":"3033:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3033:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2728:330:0"},"src":"2718:341:0"},{"anonymous":false,"eventSelector":"ad34241f9e3b3d38652a7493d4e07da1f3e88afa819a546544b20de727f2ffd8","id":232,"name":"Close","nameLocation":"3070:5:0","nodeType":"EventDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3101:6:0","nodeType":"VariableDeclaration","scope":232,"src":"3085:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"3085:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3133:5:0","nodeType":"VariableDeclaration","scope":232,"src":"3117:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3117:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"indexed":true,"mutability":"mutable","name":"positionKey","nameLocation":"3164:11:0","nodeType":"VariableDeclaration","scope":232,"src":"3148:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3148:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"indexed":false,"mutability":"mutable","name":"baseToken","nameLocation":"3193:9:0","nodeType":"VariableDeclaration","scope":232,"src":"3185:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"3185:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"indexed":false,"mutability":"mutable","name":"closer","nameLocation":"3220:6:0","nodeType":"VariableDeclaration","scope":232,"src":"3212:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"indexed":false,"mutability":"mutable","name":"liquidationFee","nameLocation":"3244:14:0","nodeType":"VariableDeclaration","scope":232,"src":"3236:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3075:189:0"},"src":"3064:201:0"},{"anonymous":false,"eventSelector":"415e462bce09ff3142dc51f9a6878d89bb34d75a21bc8ffc7fc397eccce872e9","id":244,"name":"Rollback","nameLocation":"3276:8:0","nodeType":"EventDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3310:6:0","nodeType":"VariableDeclaration","scope":244,"src":"3294:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"indexed":true,"mutability":"mutable","name":"positionKey","nameLocation":"3342:11:0","nodeType":"VariableDeclaration","scope":244,"src":"3326:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":238,"indexed":false,"mutability":"mutable","name":"rollbacker","nameLocation":"3371:10:0","nodeType":"VariableDeclaration","scope":244,"src":"3363:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"3363:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"indexed":false,"mutability":"mutable","name":"serviceToken","nameLocation":"3399:12:0","nodeType":"VariableDeclaration","scope":244,"src":"3391:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"mutability":"mutable","name":"serviceFee","nameLocation":"3429:10:0","nodeType":"VariableDeclaration","scope":244,"src":"3421:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3284:161:0"},"src":"3270:176:0"},{"anonymous":false,"eventSelector":"1cc79853bbf119208b3fab3b7d33fcdb6ceaee7c8b16b89bdb389ed3b51ad17c","id":252,"name":"CloseManuallyStep1","nameLocation":"3457:18:0","nodeType":"EventDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3501:6:0","nodeType":"VariableDeclaration","scope":252,"src":"3485:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":true,"mutability":"mutable","name":"positionKey","nameLocation":"3533:11:0","nodeType":"VariableDeclaration","scope":252,"src":"3517:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3517:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"3570:8:0","nodeType":"VariableDeclaration","scope":252,"src":"3554:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3475:109:0"},"src":"3451:134:0"},{"anonymous":false,"eventSelector":"55c8ac91237f6fa939a79c1699293ce14171d61728c7cc56a131f51758fa598f","id":268,"name":"UpdateCollateralAmount","nameLocation":"3596:22:0","nodeType":"EventDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3644:6:0","nodeType":"VariableDeclaration","scope":268,"src":"3628:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":true,"mutability":"mutable","name":"positionKey","nameLocation":"3676:11:0","nodeType":"VariableDeclaration","scope":268,"src":"3660:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3660:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3705:6:0","nodeType":"VariableDeclaration","scope":268,"src":"3697:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"newCollateralLiqPrice","nameLocation":"3729:21:0","nodeType":"VariableDeclaration","scope":268,"src":"3721:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"updater","nameLocation":"3768:7:0","nodeType":"VariableDeclaration","scope":268,"src":"3760:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":false,"mutability":"mutable","name":"serviceToken","nameLocation":"3793:12:0","nodeType":"VariableDeclaration","scope":268,"src":"3785:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3785:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"serviceFee","nameLocation":"3823:10:0","nodeType":"VariableDeclaration","scope":268,"src":"3815:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3815:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3618:221:0"},"src":"3590:250:0"},{"anonymous":false,"eventSelector":"02bde35fb6c4387120ff67d8e52f04c37f08b2a8235cd8a731848afda59f622e","id":290,"name":"UpdateDeadline","nameLocation":"3851:14:0","nodeType":"EventDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3891:6:0","nodeType":"VariableDeclaration","scope":290,"src":"3875:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"3875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":true,"mutability":"mutable","name":"positionKey","nameLocation":"3923:11:0","nodeType":"VariableDeclaration","scope":290,"src":"3907:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3907:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":274,"indexed":false,"mutability":"mutable","name":"baseToken","nameLocation":"3952:9:0","nodeType":"VariableDeclaration","scope":290,"src":"3944:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"indexed":false,"mutability":"mutable","name":"quoteToken","nameLocation":"3979:10:0","nodeType":"VariableDeclaration","scope":290,"src":"3971:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"3971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":false,"mutability":"mutable","name":"newDeadline","nameLocation":"4007:11:0","nodeType":"VariableDeclaration","scope":290,"src":"3999:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3999:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"4036:3:0","nodeType":"VariableDeclaration","scope":290,"src":"4028:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"4028:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"protocolFee","nameLocation":"4057:11:0","nodeType":"VariableDeclaration","scope":290,"src":"4049:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":false,"mutability":"mutable","name":"updater","nameLocation":"4086:7:0","nodeType":"VariableDeclaration","scope":290,"src":"4078:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"4078:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":false,"mutability":"mutable","name":"serviceToken","nameLocation":"4111:12:0","nodeType":"VariableDeclaration","scope":290,"src":"4103:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"4103:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"indexed":false,"mutability":"mutable","name":"serviceFee","nameLocation":"4141:10:0","nodeType":"VariableDeclaration","scope":290,"src":"4133:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3865:292:0"},"src":"3845:313:0"},{"body":{"id":347,"nodeType":"Block","src":"4281:353:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4295:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4314:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4306:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"4306:7:0","typeDescriptions":{}}},"id":303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4306:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4295:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"4291:54:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"InitializedAlready","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"4325:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4325:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"RevertStatement","src":"4318:27:0"}},{"expression":{"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":309,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4355:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":310,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"4365:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4355:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":312,"nodeType":"ExpressionStatement","src":"4355:18:0"},{"expression":{"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4383:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":315,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"4410:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":314,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4401:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$3156_$","typeString":"type(contract IFactory)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"positionStorage","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"4401:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4383:54:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":320,"nodeType":"ExpressionStatement","src":"4383:54:0"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":321,"name":"withdrawalMonitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4447:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":323,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"4476:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":322,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4467:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$3156_$","typeString":"type(contract IFactory)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4467:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawalMonitor","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"4467:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4467:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4447:58:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":328,"nodeType":"ExpressionStatement","src":"4447:58:0"},{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4515:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":330,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4528:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4515:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":332,"nodeType":"ExpressionStatement","src":"4515:24:0"},{"expression":{"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":333,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"4549:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":336,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4574:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":335,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"4567:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4567:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2922,"src":"4567:28:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4567:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4561:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4549:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":342,"nodeType":"ExpressionStatement","src":"4549:48:0"},{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":343,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"4607:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":344,"name":"_interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4618:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4607:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"4607:20:0"}]},"functionSelector":"1794bb3c","id":348,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"4173:10:0","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"_factory","nameLocation":"4201:8:0","nodeType":"VariableDeclaration","scope":348,"src":"4193:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"4193:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"_quoteToken","nameLocation":"4227:11:0","nodeType":"VariableDeclaration","scope":348,"src":"4219:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"4219:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"_interest","nameLocation":"4256:9:0","nodeType":"VariableDeclaration","scope":348,"src":"4248:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4248:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4183:88:0"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"4281:0:0"},"scope":2664,"src":"4164:470:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":361,"nodeType":"Block","src":"4663:83:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4677:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4677:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":352,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4691:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4677:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":359,"nodeType":"IfStatement","src":"4673:55:0","trueBody":{"errorCall":{"arguments":[{"expression":{"id":355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":354,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"4707:9:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4707:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"RevertStatement","src":"4700:28:0"}},{"id":360,"nodeType":"PlaceholderStatement","src":"4738:1:0"}]},"id":362,"name":"onlyFactory","nameLocation":"4649:11:0","nodeType":"ModifierDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[],"src":"4660:2:0"},"src":"4640:106:0","virtual":false,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"4776:125:0","statements":[{"condition":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4790:39:0","subExpression":{"arguments":[{"expression":{"id":368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4818:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4818:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":365,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"4800:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":364,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4791:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$3156_$","typeString":"type(contract IFactory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4791:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"operator","nodeType":"MemberAccess","referencedDeclaration":3094,"src":"4791:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4791:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":378,"nodeType":"IfStatement","src":"4786:98:0","trueBody":{"id":377,"nodeType":"Block","src":"4831:53:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4862:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4862:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":372,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"4852:9:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4852:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"RevertStatement","src":"4845:28:0"}]}},{"id":379,"nodeType":"PlaceholderStatement","src":"4893:1:0"}]},"id":381,"name":"onlyOperator","nameLocation":"4761:12:0","nodeType":"ModifierDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"4773:2:0"},"src":"4752:149:0","virtual":false,"visibility":"internal"},{"body":{"id":413,"nodeType":"Block","src":"4970:245:0","statements":[{"assignments":[387],"declarations":[{"constant":false,"id":387,"mutability":"mutable","name":"_quoteToken","nameLocation":"4988:11:0","nodeType":"VariableDeclaration","scope":413,"src":"4980:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":389,"initialValue":{"id":388,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5002:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4980:32:0"},{"assignments":[391],"declarations":[{"constant":false,"id":391,"mutability":"mutable","name":"balance","nameLocation":"5030:7:0","nodeType":"VariableDeclaration","scope":413,"src":"5022:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"5022:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":401,"initialValue":{"arguments":[{"arguments":[{"id":398,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5078:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"5070:7:0","typeDescriptions":{}}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5070:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":393,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5047:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":392,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"5040:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5040:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"5040:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5040:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5022:62:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5113:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":403,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"5135:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":405,"indexExpression":{"id":404,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5153:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5135:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5113:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":407,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"5181:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":408,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"5196:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5181:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5180:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5113:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":385,"id":412,"nodeType":"Return","src":"5094:114:0"}]},"id":414,"implemented":true,"kind":"function","modifiers":[],"name":"_unrealizeLiquidity","nameLocation":"4916:19:0","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"4935:2:0"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"4961:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4960:9:0"},"scope":2664,"src":"4907:308:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"5295:212:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":421,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5309:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":422,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5319:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5309:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"IfStatement","src":"5305:54:0","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":424,"name":"_unrealizeLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5338:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":420,"id":426,"nodeType":"Return","src":"5331:28:0"}},{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"balance","nameLocation":"5377:7:0","nodeType":"VariableDeclaration","scope":450,"src":"5369:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"5369:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":439,"initialValue":{"arguments":[{"arguments":[{"id":436,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5420:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:0","typeDescriptions":{}}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5412:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":431,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5394:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":430,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"5387:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5387:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"5387:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5387:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5369:57:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5443:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":441,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"5453:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":443,"indexExpression":{"id":442,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5471:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5453:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5443:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":445,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"5481:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":447,"indexExpression":{"id":446,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5493:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5481:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5443:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":420,"id":449,"nodeType":"Return","src":"5436:64:0"}]},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"_unrealizeAmount","nameLocation":"5230:16:0","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"_token","nameLocation":"5255:6:0","nodeType":"VariableDeclaration","scope":451,"src":"5247:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5246:16:0"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"5286:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5286:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5285:9:0"},"scope":2664,"src":"5221:286:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":483,"nodeType":"Block","src":"5576:179:0","statements":[{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"result","nameLocation":"5593:6:0","nodeType":"VariableDeclaration","scope":483,"src":"5586:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":456,"name":"int256","nodeType":"ElementaryTypeName","src":"5586:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":472,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":460,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"5609:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5602:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":458,"name":"int256","nodeType":"ElementaryTypeName","src":"5602:6:0","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5602:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":464,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"5644:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5637:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":462,"name":"int256","nodeType":"ElementaryTypeName","src":"5637:6:0","typeDescriptions":{}}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5637:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5602:54:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":469,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"5678:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5671:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":467,"name":"int256","nodeType":"ElementaryTypeName","src":"5671:6:0","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5671:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5602:97:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5586:113:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5716:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5725:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5716:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5741:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5733:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5733:7:0","typeDescriptions":{}}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5733:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5716:32:0","trueExpression":{"hexValue":"30","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5729:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":455,"id":482,"nodeType":"Return","src":"5709:39:0"}]},"id":484,"implemented":true,"kind":"function","modifiers":[],"name":"_availableLiquidity","nameLocation":"5522:19:0","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"5541:2:0"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"5567:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5566:9:0"},"scope":2664,"src":"5513:242:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3277],"body":{"id":493,"nodeType":"Block","src":"5832:45:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_availableLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5849:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5849:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":489,"id":492,"nodeType":"Return","src":"5842:28:0"}]},"functionSelector":"74375359","id":494,"implemented":true,"kind":"function","modifiers":[],"name":"availableLiquidity","nameLocation":"5770:18:0","nodeType":"FunctionDefinition","overrides":{"id":486,"nodeType":"OverrideSpecifier","overrides":[],"src":"5805:8:0"},"parameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"5788:2:0"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"5823:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"5823:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5822:9:0"},"scope":2664,"src":"5761:116:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3297],"body":{"id":533,"nodeType":"Block","src":"5983:261:0","statements":[{"assignments":[504],"declarations":[{"constant":false,"id":504,"mutability":"mutable","name":"pos","nameLocation":"6018:3:0","nodeType":"VariableDeclaration","scope":533,"src":"5993:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_memory_ptr","typeString":"struct IPool.LiquidityPosition"},"typeName":{"id":503,"nodeType":"UserDefinedTypeName","pathNode":{"id":502,"name":"LiquidityPosition","nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"5993:17:0"},"referencedDeclaration":3181,"src":"5993:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"}},"visibility":"internal"}],"id":508,"initialValue":{"baseExpression":{"id":505,"name":"liquidityPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"6024:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition storage ref)"}},"id":507,"indexExpression":{"id":506,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6042:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6024:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage","typeString":"struct IPool.LiquidityPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5993:56:0"},{"expression":{"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"6059:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":510,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6080:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_memory_ptr","typeString":"struct IPool.LiquidityPosition memory"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingFee","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"6080:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"6110:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":513,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6127:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_memory_ptr","typeString":"struct IPool.LiquidityPosition memory"}},"id":514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"6127:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6110:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6109:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":517,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6156:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6109:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6080:85:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":520,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"6180:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_memory_ptr","typeString":"struct IPool.LiquidityPosition memory"}},"id":521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"6180:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6080:111:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6059:132:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":524,"nodeType":"ExpressionStatement","src":"6059:132:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"6205:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":526,"name":"accFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"6214:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6205:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":532,"nodeType":"IfStatement","src":"6201:36:0","trueBody":{"expression":{"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":528,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"6222:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":529,"name":"accFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"6231:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6222:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":531,"nodeType":"ExpressionStatement","src":"6222:15:0"}}]},"functionSelector":"a1c59afc","id":534,"implemented":true,"kind":"function","modifiers":[],"name":"claimableFee","nameLocation":"5892:12:0","nodeType":"FunctionDefinition","overrides":{"id":498,"nodeType":"OverrideSpecifier","overrides":[],"src":"5949:8:0"},"parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"_owner","nameLocation":"5922:6:0","nodeType":"VariableDeclaration","scope":534,"src":"5914:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"5914:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5904:30:0"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"amount","nameLocation":"5975:6:0","nodeType":"VariableDeclaration","scope":534,"src":"5967:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5966:16:0"},"scope":2664,"src":"5883:361:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3302],"body":{"id":550,"nodeType":"Block","src":"6320:75:0","statements":[{"expression":{"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":542,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"6330:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":543,"name":"_interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6341:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6330:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":545,"nodeType":"ExpressionStatement","src":"6330:20:0"},{"eventCall":{"arguments":[{"id":547,"name":"_interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6378:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":546,"name":"SetInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"6366:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6366:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"EmitStatement","src":"6361:27:0"}]},"functionSelector":"1d086720","id":551,"implemented":true,"kind":"function","modifiers":[{"id":540,"kind":"modifierInvocation","modifierName":{"id":539,"name":"onlyFactory","nodeType":"IdentifierPath","referencedDeclaration":362,"src":"6308:11:0"},"nodeType":"ModifierInvocation","src":"6308:11:0"}],"name":"setInterest","nameLocation":"6259:11:0","nodeType":"FunctionDefinition","overrides":{"id":538,"nodeType":"OverrideSpecifier","overrides":[],"src":"6299:8:0"},"parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"_interest","nameLocation":"6279:9:0","nodeType":"VariableDeclaration","scope":551,"src":"6271:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6270:19:0"},"returnParameters":{"id":541,"nodeType":"ParameterList","parameters":[],"src":"6320:0:0"},"scope":2664,"src":"6250:145:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3307],"body":{"id":567,"nodeType":"Block","src":"6499:103:0","statements":[{"expression":{"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":559,"name":"maxOpenInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"6509:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":560,"name":"_maxOpenInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6527:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6509:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":562,"nodeType":"ExpressionStatement","src":"6509:34:0"},{"eventCall":{"arguments":[{"id":564,"name":"_maxOpenInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6578:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"SetMaxOpenInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"6559:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"EmitStatement","src":"6554:41:0"}]},"functionSelector":"40650eef","id":568,"implemented":true,"kind":"function","modifiers":[{"id":557,"kind":"modifierInvocation","modifierName":{"id":556,"name":"onlyFactory","nodeType":"IdentifierPath","referencedDeclaration":362,"src":"6487:11:0"},"nodeType":"ModifierInvocation","src":"6487:11:0"}],"name":"setMaxOpenInterest","nameLocation":"6410:18:0","nodeType":"FunctionDefinition","overrides":{"id":555,"nodeType":"OverrideSpecifier","overrides":[],"src":"6478:8:0"},"parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"_maxOpenInterest","nameLocation":"6446:16:0","nodeType":"VariableDeclaration","scope":568,"src":"6438:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6428:40:0"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"6499:0:0"},"scope":2664,"src":"6401:201:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3316],"body":{"id":630,"nodeType":"Block","src":"6740:385:0","statements":[{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"_quoteToken","nameLocation":"6758:11:0","nodeType":"VariableDeclaration","scope":630,"src":"6750:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"6750:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":583,"initialValue":{"id":582,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6772:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6750:32:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":584,"name":"_baseTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6796:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6796:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":586,"name":"_tradeables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"6818:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6818:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6796:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"IfStatement","src":"6792:115:0","trueBody":{"errorCall":{"arguments":[{"expression":{"id":590,"name":"_baseTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6868:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6868:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":592,"name":"_tradeables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"6888:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6888:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":589,"name":"BadLengths","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"6857:10:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6857:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"RevertStatement","src":"6850:57:0"}},{"body":{"id":628,"nodeType":"Block","src":"6966:153:0","statements":[{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":608,"name":"tradeableBaseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"6980:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":612,"indexExpression":{"baseExpression":{"id":609,"name":"_baseTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6999:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":611,"indexExpression":{"id":610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7011:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6999:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6980:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":613,"name":"_tradeables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7017:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":615,"indexExpression":{"id":614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7029:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7017:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6980:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":617,"nodeType":"ExpressionStatement","src":"6980:51:0"},{"eventCall":{"arguments":[{"baseExpression":{"id":619,"name":"_baseTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7064:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":621,"indexExpression":{"id":620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7076:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7064:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7080:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":623,"name":"_tradeables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7093:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":625,"indexExpression":{"id":624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7105:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7093:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":618,"name":"SetBaseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"7051:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7051:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"EmitStatement","src":"7046:62:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6937:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":602,"name":"_baseTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6941:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6941:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"initializationExpression":{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"i","nameLocation":"6930:1:0","nodeType":"VariableDeclaration","scope":629,"src":"6922:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":600,"initialValue":{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6934:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6922:13:0"},"loopExpression":{"expression":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6961:3:0","subExpression":{"id":605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6961:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ExpressionStatement","src":"6961:3:0"},"nodeType":"ForStatement","src":"6917:202:0"}]},"functionSelector":"32196a01","id":631,"implemented":true,"kind":"function","modifiers":[{"id":578,"kind":"modifierInvocation","modifierName":{"id":577,"name":"onlyFactory","nodeType":"IdentifierPath","referencedDeclaration":362,"src":"6728:11:0"},"nodeType":"ModifierInvocation","src":"6728:11:0"}],"name":"setBaseTokens","nameLocation":"6617:13:0","nodeType":"FunctionDefinition","overrides":{"id":576,"nodeType":"OverrideSpecifier","overrides":[],"src":"6719:8:0"},"parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"_baseTokens","nameLocation":"6657:11:0","nodeType":"VariableDeclaration","scope":631,"src":"6640:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":570,"nodeType":"ArrayTypeName","src":"6640:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"_tradeables","nameLocation":"6692:11:0","nodeType":"VariableDeclaration","scope":631,"src":"6678:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":572,"name":"bool","nodeType":"ElementaryTypeName","src":"6678:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":573,"nodeType":"ArrayTypeName","src":"6678:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"6630:79:0"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"6740:0:0"},"scope":2664,"src":"6608:517:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":653,"nodeType":"Block","src":"7171:125:0","statements":[{"expression":{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":636,"name":"accFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"7181:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":637,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"7191:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":639,"nodeType":"ExpressionStatement","src":"7181:14:0"},{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"7205:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"7224:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":642,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"7231:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7223:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":645,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"7244:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7223:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7205:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ExpressionStatement","src":"7205:51:0"},{"eventCall":{"arguments":[{"id":650,"name":"accFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"7282:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"UpdateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"7272:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7272:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"EmitStatement","src":"7267:22:0"}]},"id":654,"implemented":true,"kind":"function","modifiers":[],"name":"_addFee","nameLocation":"7140:7:0","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"_fee","nameLocation":"7156:4:0","nodeType":"VariableDeclaration","scope":654,"src":"7148:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"7148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7147:14:0"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"7171:0:0"},"scope":2664,"src":"7131:165:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":694,"nodeType":"Block","src":"7343:326:0","statements":[{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"_protocolFee","nameLocation":"7361:12:0","nodeType":"VariableDeclaration","scope":694,"src":"7353:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"7353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":660,"initialValue":{"id":659,"name":"accProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"7376:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7353:37:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7404:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7419:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7404:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"7400:263:0","trueBody":{"id":692,"nodeType":"Block","src":"7422:241:0","statements":[{"assignments":[665],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"feeTo","nameLocation":"7444:5:0","nodeType":"VariableDeclaration","scope":692,"src":"7436:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"7436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":671,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":667,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"7461:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":666,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"7452:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$3156_$","typeString":"type(contract IFactory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7452:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"protocolFeeTo","nodeType":"MemberAccess","referencedDeclaration":3037,"src":"7452:31:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7452:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7436:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"feeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7503:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7520:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7512:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"7512:7:0","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7512:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7503:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":691,"nodeType":"IfStatement","src":"7499:154:0","trueBody":{"id":690,"nodeType":"Block","src":"7524:129:0","statements":[{"expression":{"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":678,"name":"accProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"7542:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7559:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7542:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":681,"nodeType":"ExpressionStatement","src":"7542:18:0"},{"expression":{"arguments":[{"id":685,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"7606:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":686,"name":"feeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7618:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"_protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7625:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":682,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"7578:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"7578:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7578:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"7578:60:0"}]}}]}}]},"id":695,"implemented":true,"kind":"function","modifiers":[],"name":"_transferProtocolFee","nameLocation":"7311:20:0","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[],"src":"7331:2:0"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"7343:0:0"},"scope":2664,"src":"7302:367:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3319],"body":{"id":714,"nodeType":"Block","src":"7719:140:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":699,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7733:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7733:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":701,"name":"withdrawalMonitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7747:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7733:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"7729:90:0","trueBody":{"id":708,"nodeType":"Block","src":"7766:53:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":704,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7797:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7797:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":703,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"7787:9:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7787:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"RevertStatement","src":"7780:28:0"}]}},{"expression":{"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":710,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"7828:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7851:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7828:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":713,"nodeType":"ExpressionStatement","src":"7828:24:0"}]},"functionSelector":"ba343922","id":715,"implemented":true,"kind":"function","modifiers":[],"name":"availLiquidity","nameLocation":"7684:14:0","nodeType":"FunctionDefinition","overrides":{"id":697,"nodeType":"OverrideSpecifier","overrides":[],"src":"7710:8:0"},"parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"7698:2:0"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"7719:0:0"},"scope":2664,"src":"7675:184:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3328],"body":{"id":842,"nodeType":"Block","src":"7987:923:0","statements":[{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"_quoteToken","nameLocation":"8005:11:0","nodeType":"VariableDeclaration","scope":842,"src":"7997:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"7997:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":730,"initialValue":{"id":729,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"8019:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7997:32:0"},{"assignments":[733],"declarations":[{"constant":false,"id":733,"mutability":"mutable","name":"pos","nameLocation":"8065:3:0","nodeType":"VariableDeclaration","scope":842,"src":"8039:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"},"typeName":{"id":732,"nodeType":"UserDefinedTypeName","pathNode":{"id":731,"name":"LiquidityPosition","nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"8039:17:0"},"referencedDeclaration":3181,"src":"8039:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"}},"visibility":"internal"}],"id":737,"initialValue":{"baseExpression":{"id":734,"name":"liquidityPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"8071:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition storage ref)"}},"id":736,"indexExpression":{"id":735,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8089:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8071:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage","typeString":"struct IPool.LiquidityPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8039:54:0"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"_accFeePerShare","nameLocation":"8112:15:0","nodeType":"VariableDeclaration","scope":842,"src":"8104:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"8104:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"initialValue":{"id":740,"name":"accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"8130:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8104:40:0"},{"assignments":[743],"declarations":[{"constant":false,"id":743,"mutability":"mutable","name":"_precision","nameLocation":"8162:10:0","nodeType":"VariableDeclaration","scope":842,"src":"8154:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8154:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":745,"initialValue":{"id":744,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"8175:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8154:30:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":746,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8199:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8199:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8215:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8199:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"8195:174:0","trueBody":{"id":765,"nodeType":"Block","src":"8218:151:0","statements":[{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":750,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8232:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingFee","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"8232:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":753,"name":"_accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"8267:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":754,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8285:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8285:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8267:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8266:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":758,"name":"_precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"8318:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8266:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":760,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8347:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8347:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8266:92:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8232:126:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"8232:126:0"}]}},{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":767,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8378:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8378:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":770,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8395:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8378:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":772,"nodeType":"ExpressionStatement","src":"8378:27:0"},{"expression":{"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":773,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8415:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8415:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"_accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"8430:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":777,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"8448:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8448:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8430:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8429:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":781,"name":"_precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"8465:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8429:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8415:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":784,"nodeType":"ExpressionStatement","src":"8415:60:0"},{"expression":{"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":785,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"8486:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":786,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8502:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8486:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":788,"nodeType":"ExpressionStatement","src":"8486:26:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":789,"name":"_transferProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"8522:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8522:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"8522:22:0"},{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"balanceBefore","nameLocation":"8563:13:0","nodeType":"VariableDeclaration","scope":842,"src":"8555:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"8555:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":803,"initialValue":{"arguments":[{"arguments":[{"id":800,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8617:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8609:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"8609:7:0","typeDescriptions":{}}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8609:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":795,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"8586:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":794,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"8579:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8579:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"8579:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8579:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8555:68:0"},{"expression":{"arguments":[{"id":809,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"8672:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8685:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":811,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"8697:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8647:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8647:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":804,"name":"IMintCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"8633:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMintCallback_$3168_$","typeString":"type(contract IMintCallback)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMintCallback_$3168","typeString":"contract IMintCallback"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mintCallback","nodeType":"MemberAccess","referencedDeclaration":3167,"src":"8633:38:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory) external"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"8633:70:0"},{"assignments":[815],"declarations":[{"constant":false,"id":815,"mutability":"mutable","name":"balance","nameLocation":"8722:7:0","nodeType":"VariableDeclaration","scope":842,"src":"8714:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"8714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":825,"initialValue":{"arguments":[{"arguments":[{"id":822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8770:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8762:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"8762:7:0","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8762:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":817,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"8739:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":816,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"8732:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8732:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"8732:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8732:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8714:62:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8790:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"8800:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":828,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8816:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8800:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8790:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"8786:68:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":831,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"8835:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8835:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"RevertStatement","src":"8828:26:0"}},{"eventCall":{"arguments":[{"expression":{"id":836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8875:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8875:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8887:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8892:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"8870:4:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8870:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"EmitStatement","src":"8865:38:0"}]},"functionSelector":"94d008ef","id":843,"implemented":true,"kind":"function","modifiers":[{"id":725,"kind":"modifierInvocation","modifierName":{"id":724,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"7982:4:0"},"nodeType":"ModifierInvocation","src":"7982:4:0"}],"name":"mint","nameLocation":"7874:4:0","nodeType":"FunctionDefinition","overrides":{"id":723,"nodeType":"OverrideSpecifier","overrides":[],"src":"7973:8:0"},"parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"_to","nameLocation":"7896:3:0","nodeType":"VariableDeclaration","scope":843,"src":"7888:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"7888:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"_liquidity","nameLocation":"7917:10:0","nodeType":"VariableDeclaration","scope":843,"src":"7909:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"7909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"_data","nameLocation":"7952:5:0","nodeType":"VariableDeclaration","scope":843,"src":"7937:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"7937:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7878:85:0"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"7987:0:0"},"scope":2664,"src":"7865:1045:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3335],"body":{"id":941,"nodeType":"Block","src":"8986:784:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9000:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9010:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9000:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":940,"nodeType":"IfStatement","src":"8996:768:0","trueBody":{"id":939,"nodeType":"Block","src":"9013:751:0","statements":[{"assignments":[858],"declarations":[{"constant":false,"id":858,"mutability":"mutable","name":"pos","nameLocation":"9053:3:0","nodeType":"VariableDeclaration","scope":939,"src":"9027:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"},"typeName":{"id":857,"nodeType":"UserDefinedTypeName","pathNode":{"id":856,"name":"LiquidityPosition","nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"9027:17:0"},"referencedDeclaration":3181,"src":"9027:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"}},"visibility":"internal"}],"id":863,"initialValue":{"baseExpression":{"id":859,"name":"liquidityPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"9059:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition storage ref)"}},"id":862,"indexExpression":{"expression":{"id":860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9077:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9077:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9059:29:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage","typeString":"struct IPool.LiquidityPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9027:61:0"},{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"_accFeePerShare","nameLocation":"9111:15:0","nodeType":"VariableDeclaration","scope":939,"src":"9103:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"9103:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":867,"initialValue":{"id":866,"name":"accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"9129:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9103:40:0"},{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"_precision","nameLocation":"9165:10:0","nodeType":"VariableDeclaration","scope":939,"src":"9157:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":871,"initialValue":{"id":870,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"9178:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9157:30:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":872,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9206:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"9206:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9222:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9206:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":892,"nodeType":"IfStatement","src":"9202:194:0","trueBody":{"id":891,"nodeType":"Block","src":"9225:171:0","statements":[{"expression":{"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":876,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9243:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingFee","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"9243:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"_accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9282:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":880,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9300:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"9300:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9282:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9281:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":884,"name":"_precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9337:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9281:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":886,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9370:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"9370:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9281:100:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9243:138:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":890,"nodeType":"ExpressionStatement","src":"9243:138:0"}]}},{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":893,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9409:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"9409:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"_accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9424:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":897,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9442:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"9442:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9424:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9423:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":901,"name":"_precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9459:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9423:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":904,"nodeType":"ExpressionStatement","src":"9409:60:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":906,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9498:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pendingFee","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"9498:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9488:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":909,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9516:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":910,"name":"accFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"9526:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9516:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9488:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"9484:110:0","trueBody":{"id":916,"nodeType":"Block","src":"9534:60:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":913,"name":"InsufficientOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"9559:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9559:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"RevertStatement","src":"9552:27:0"}]}},{"expression":{"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":918,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9607:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingFee","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"9607:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":921,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9625:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9607:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":923,"nodeType":"ExpressionStatement","src":"9607:25:0"},{"expression":{"arguments":[{"id":927,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"9675:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9687:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9692:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":924,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"9647:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"9647:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9647:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"9647:53:0"},{"eventCall":{"arguments":[{"expression":{"id":933,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9728:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9728:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"9740:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9745:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":932,"name":"Collect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9720:7:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9720:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"EmitStatement","src":"9715:38:0"}]}}]},"functionSelector":"6b8357ac","id":942,"implemented":true,"kind":"function","modifiers":[{"id":851,"kind":"modifierInvocation","modifierName":{"id":850,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"8981:4:0"},"nodeType":"ModifierInvocation","src":"8981:4:0"}],"name":"collect","nameLocation":"8925:7:0","nodeType":"FunctionDefinition","overrides":{"id":849,"nodeType":"OverrideSpecifier","overrides":[],"src":"8972:8:0"},"parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"_to","nameLocation":"8941:3:0","nodeType":"VariableDeclaration","scope":942,"src":"8933:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"8933:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"_amount","nameLocation":"8954:7:0","nodeType":"VariableDeclaration","scope":942,"src":"8946:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"8946:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8932:30:0"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"8986:0:0"},"scope":2664,"src":"8916:854:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3346],"body":{"id":1002,"nodeType":"Block","src":"9926:451:0","statements":[{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"pos","nameLocation":"9962:3:0","nodeType":"VariableDeclaration","scope":1002,"src":"9936:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"},"typeName":{"id":957,"nodeType":"UserDefinedTypeName","pathNode":{"id":956,"name":"LiquidityPosition","nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"9936:17:0"},"referencedDeclaration":3181,"src":"9936:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"}},"visibility":"internal"}],"id":963,"initialValue":{"baseExpression":{"id":959,"name":"liquidityPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"9968:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition storage ref)"}},"id":962,"indexExpression":{"expression":{"id":960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9986:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9986:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9968:29:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage","typeString":"struct IPool.LiquidityPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9936:61:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10011:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":965,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10024:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"withdrawingLiquidity","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"10024:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10011:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":968,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10051:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"10051:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10011:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":974,"nodeType":"IfStatement","src":"10007:98:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":971,"name":"InsufficientOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"10085:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10085:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"RevertStatement","src":"10078:27:0"}},{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":975,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10116:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"withdrawingLiquidity","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"10116:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":978,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10144:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10116:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":980,"nodeType":"ExpressionStatement","src":"10116:38:0"},{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":981,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"10164:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":982,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10188:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ExpressionStatement","src":"10164:34:0"},{"assignments":[987],"declarations":[{"constant":false,"id":987,"mutability":"mutable","name":"monitor","nameLocation":"10228:7:0","nodeType":"VariableDeclaration","scope":1002,"src":"10209:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"},"typeName":{"id":986,"nodeType":"UserDefinedTypeName","pathNode":{"id":985,"name":"IWithdrawalMonitor","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"10209:18:0"},"referencedDeclaration":3796,"src":"10209:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"visibility":"internal"}],"id":991,"initialValue":{"arguments":[{"id":989,"name":"withdrawalMonitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"10257:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"IWithdrawalMonitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"10238:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWithdrawalMonitor_$3796_$","typeString":"type(contract IWithdrawalMonitor)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10238:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"nodeType":"VariableDeclarationStatement","src":"10209:66:0"},{"expression":{"arguments":[{"expression":{"id":994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10323:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10323:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"10335:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10347:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":998,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"10359:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"10364:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":992,"name":"monitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"10304:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addRequest","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"10304:18:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address,bytes memory) external returns (uint256)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10304:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":955,"id":1001,"nodeType":"Return","src":"10285:85:0"}]},"functionSelector":"653741ff","id":1003,"implemented":true,"kind":"function","modifiers":[{"id":952,"kind":"modifierInvocation","modifierName":{"id":951,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"9903:4:0"},"nodeType":"ModifierInvocation","src":"9903:4:0"}],"name":"addBurnRequest","nameLocation":"9785:14:0","nodeType":"FunctionDefinition","overrides":{"id":950,"nodeType":"OverrideSpecifier","overrides":[],"src":"9894:8:0"},"parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"_liquidity","nameLocation":"9817:10:0","nodeType":"VariableDeclaration","scope":1003,"src":"9809:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"9809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"_to","nameLocation":"9845:3:0","nodeType":"VariableDeclaration","scope":1003,"src":"9837:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"9837:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"_data","nameLocation":"9873:5:0","nodeType":"VariableDeclaration","scope":1003,"src":"9858:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":947,"name":"bytes","nodeType":"ElementaryTypeName","src":"9858:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9799:85:0"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"9917:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"9917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9916:9:0"},"scope":2664,"src":"9776:601:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3352],"body":{"id":1207,"nodeType":"Block","src":"10488:2344:0","statements":[{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"monitor","nameLocation":"10517:7:0","nodeType":"VariableDeclaration","scope":1207,"src":"10498:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"},"typeName":{"id":1013,"nodeType":"UserDefinedTypeName","pathNode":{"id":1012,"name":"IWithdrawalMonitor","nodeType":"IdentifierPath","referencedDeclaration":3796,"src":"10498:18:0"},"referencedDeclaration":3796,"src":"10498:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"visibility":"internal"}],"id":1018,"initialValue":{"arguments":[{"id":1016,"name":"withdrawalMonitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"10546:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1015,"name":"IWithdrawalMonitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"10527:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWithdrawalMonitor_$3796_$","typeString":"type(contract IWithdrawalMonitor)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10527:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"nodeType":"VariableDeclarationStatement","src":"10498:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10578:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10578:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1023,"name":"monitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"10600:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}],"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10592:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"10592:7:0","typeDescriptions":{}}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10592:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10578:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1032,"nodeType":"IfStatement","src":"10574:89:0","trueBody":{"id":1031,"nodeType":"Block","src":"10610:53:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":1027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10641:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10641:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1026,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"10631:9:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10631:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"RevertStatement","src":"10624:28:0"}]}},{"assignments":[1035],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"pos","nameLocation":"10698:3:0","nodeType":"VariableDeclaration","scope":1207,"src":"10672:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"},"typeName":{"id":1034,"nodeType":"UserDefinedTypeName","pathNode":{"id":1033,"name":"LiquidityPosition","nodeType":"IdentifierPath","referencedDeclaration":3181,"src":"10672:17:0"},"referencedDeclaration":3181,"src":"10672:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition"}},"visibility":"internal"}],"id":1040,"initialValue":{"baseExpression":{"id":1036,"name":"liquidityPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"10704:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LiquidityPosition_$3181_storage_$","typeString":"mapping(address => struct IPool.LiquidityPosition storage ref)"}},"id":1039,"indexExpression":{"expression":{"id":1037,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10722:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"10722:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10704:33:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage","typeString":"struct IPool.LiquidityPosition storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10672:65:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1041,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10751:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"10751:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1043,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"10772:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"withdrawingLiquidity","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"10772:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10751:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"10747:90:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"InsufficientOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"10817:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10817:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"RevertStatement","src":"10810:27:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1050,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10851:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"10851:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1052,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"10872:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10851:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1059,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"10949:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":1060,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10973:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"10973:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10949:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ExpressionStatement","src":"10949:42:0"},"id":1064,"nodeType":"IfStatement","src":"10847:144:0","trueBody":{"id":1058,"nodeType":"Block","src":"10894:49:0","statements":[{"expression":{"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1054,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"10908:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10931:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10908:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"nodeType":"ExpressionStatement","src":"10908:24:0"}]}},{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"_accFeePerShare","nameLocation":"11010:15:0","nodeType":"VariableDeclaration","scope":1207,"src":"11002:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"11002:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1068,"initialValue":{"id":1067,"name":"accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"11028:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11002:40:0"},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"_precision","nameLocation":"11060:10:0","nodeType":"VariableDeclaration","scope":1207,"src":"11052:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"11052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1072,"initialValue":{"id":1071,"name":"precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"11073:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11052:30:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1073,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11097:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"11097:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11113:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11097:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1093,"nodeType":"IfStatement","src":"11093:174:0","trueBody":{"id":1092,"nodeType":"Block","src":"11116:151:0","statements":[{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1077,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11130:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"pendingFee","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"11130:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"_accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"11165:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1081,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11183:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"11183:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11165:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11164:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1085,"name":"_precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11216:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11164:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1087,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11245:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"11245:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11164:92:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11130:126:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"11130:126:0"}]}},{"expression":{"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1094,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11276:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"11276:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":1097,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11293:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"11293:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11276:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1100,"nodeType":"ExpressionStatement","src":"11276:35:0"},{"expression":{"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1101,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11321:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"withdrawingLiquidity","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"11321:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":1104,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11349:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"11349:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11321:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1107,"nodeType":"ExpressionStatement","src":"11321:46:0"},{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1108,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11377:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeDebt","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"11377:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"_accFeePerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"11392:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1112,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11410:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_LiquidityPosition_$3181_storage_ptr","typeString":"struct IPool.LiquidityPosition storage pointer"}},"id":1113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"11410:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11392:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11391:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1116,"name":"_precision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"11427:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11391:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11377:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"11377:60:0"},{"expression":{"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1120,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"11448:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":1121,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11464:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"11464:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11448:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1124,"nodeType":"ExpressionStatement","src":"11448:34:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1125,"name":"_transferProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"11492:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11492:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"11492:22:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1128,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11549:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":3729,"src":"11549:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"11549:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11572:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11549:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1189,"nodeType":"IfStatement","src":"11545:1100:0","trueBody":{"id":1188,"nodeType":"Block","src":"11575:1070:0","statements":[{"assignments":[1134],"declarations":[{"constant":false,"id":1134,"mutability":"mutable","name":"callbackData","nameLocation":"11602:12:0","nodeType":"VariableDeclaration","scope":1188,"src":"11589:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1133,"name":"bytes","nodeType":"ElementaryTypeName","src":"11589:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1143,"initialValue":{"arguments":[{"hexValue":"6275726e43616c6c6261636b2875696e743235362c627974657329","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11658:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c5991fe0ad25dfc034f583aed8813a61433d74b4103464a4b017a55df316648","typeString":"literal_string \"burnCallback(uint256,bytes)\""},"value":"burnCallback(uint256,bytes)"},{"expression":{"id":1138,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11705:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"11705:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1140,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11741:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":3729,"src":"11741:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8c5991fe0ad25dfc034f583aed8813a61433d74b4103464a4b017a55df316648","typeString":"literal_string \"burnCallback(uint256,bytes)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1135,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11617:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"11617:23:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11617:151:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11589:179:0"},{"assignments":[1145,1147],"declarations":[{"constant":false,"id":1145,"mutability":"mutable","name":"success","nameLocation":"11788:7:0","nodeType":"VariableDeclaration","scope":1188,"src":"11783:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1144,"name":"bool","nodeType":"ElementaryTypeName","src":"11783:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"result","nameLocation":"11810:6:0","nodeType":"VariableDeclaration","scope":1188,"src":"11797:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"11797:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"id":1151,"name":"callbackData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"11857:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1148,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11820:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3721,"src":"11820:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"11820:19:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11820:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11782:101:0"},{"condition":{"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11997:8:0","subExpression":{"id":1154,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"11998:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"11993:642:0","trueBody":{"id":1186,"nodeType":"Block","src":"12007:628:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"12110:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12110:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3638","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12126:2:0","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"src":"12110:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1184,"nodeType":"Block","src":"12331:290:0","statements":[{"AST":{"nodeType":"YulBlock","src":"12362:75:0","statements":[{"nodeType":"YulAssignment","src":"12388:27:0","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"12402:6:0"},{"kind":"number","nodeType":"YulLiteral","src":"12410:4:0","type":"","value":"0x04"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12398:3:0"},"nodeType":"YulFunctionCall","src":"12398:17:0"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12388:6:0"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1147,"isOffset":false,"isSlot":false,"src":"12388:6:0","valueSize":1},{"declaration":1147,"isOffset":false,"isSlot":false,"src":"12402:6:0","valueSize":1}],"id":1169,"nodeType":"InlineAssembly","src":"12353:84:0"},{"expression":{"arguments":[{"expression":{"id":1173,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12512:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3719,"src":"12512:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"12563:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12572:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1178,"name":"string","nodeType":"ElementaryTypeName","src":"12572:6:0","typeDescriptions":{}}}],"id":1180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12571:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":1175,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12552:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"12552:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12552:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1170,"name":"monitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12458:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateCallbackResult","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"12458:28:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) external"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12458:144:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"12458:144:0"}]},"id":1185,"nodeType":"IfStatement","src":"12106:515:0","trueBody":{"id":1168,"nodeType":"Block","src":"12130:195:0","statements":[{"expression":{"arguments":[{"expression":{"id":1163,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12206:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3719,"src":"12206:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"43616c6c6261636b207472616e73616374696f6e206661696c65642073696c656e746c79","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12246:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7025a5569cbc05a810ec6628f90dd376aaf8d5fc36f792414233db8f36181520","typeString":"literal_string \"Callback transaction failed silently\""},"value":"Callback transaction failed silently"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_7025a5569cbc05a810ec6628f90dd376aaf8d5fc36f792414233db8f36181520","typeString":"literal_string \"Callback transaction failed silently\""}],"expression":{"id":1160,"name":"monitor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12152:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWithdrawalMonitor_$3796","typeString":"contract IWithdrawalMonitor"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateCallbackResult","nodeType":"MemberAccess","referencedDeclaration":3790,"src":"12152:28:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) external"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12152:154:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"12152:154:0"}]}}]}}]}},{"expression":{"arguments":[{"id":1193,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"12696:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1194,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12720:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3727,"src":"12720:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1196,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12745:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"12745:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1190,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"12655:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"12655:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12655:118:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1199,"nodeType":"ExpressionStatement","src":"12655:118:0"},{"eventCall":{"arguments":[{"expression":{"id":1201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12794:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12794:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1203,"name":"_request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12806:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest memory"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":3725,"src":"12806:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"12789:4:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12789:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"EmitStatement","src":"12784:41:0"}]},"functionSelector":"fb2b74b2","id":1208,"implemented":true,"kind":"function","modifiers":[{"id":1010,"kind":"modifierInvocation","modifierName":{"id":1009,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"10483:4:0"},"nodeType":"ModifierInvocation","src":"10483:4:0"}],"name":"burn","nameLocation":"10392:4:0","nodeType":"FunctionDefinition","overrides":{"id":1008,"nodeType":"OverrideSpecifier","overrides":[],"src":"10474:8:0"},"parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"_request","nameLocation":"10450:8:0","nodeType":"VariableDeclaration","scope":1208,"src":"10406:52:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest"},"typeName":{"id":1005,"nodeType":"UserDefinedTypeName","pathNode":{"id":1004,"name":"IWithdrawalMonitor.WithdrawalRequest","nodeType":"IdentifierPath","referencedDeclaration":3730,"src":"10406:36:0"},"referencedDeclaration":3730,"src":"10406:36:0","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_storage_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest"}},"visibility":"internal"}],"src":"10396:68:0"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"10488:0:0"},"scope":2664,"src":"10383:2449:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1346,"nodeType":"Block","src":"12965:1292:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1216,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"12979:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"12979:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1218,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13001:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"13001:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12979:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1342,"nodeType":"Block","src":"13877:353:0","statements":[{"assignments":[1307],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"addedAmount","nameLocation":"13899:11:0","nodeType":"VariableDeclaration","scope":1342,"src":"13891:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"13891:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[{"arguments":[{"id":1315,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13975:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13967:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"13967:7:0","typeDescriptions":{}}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13967:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1309,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13920:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"13920:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1308,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"13913:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13913:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"13913:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13913:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13891:103:0"},{"expression":{"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1319,"name":"addedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"14008:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1320,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"14024:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1323,"indexExpression":{"expression":{"id":1321,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"14042:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"14042:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14024:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1324,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14080:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1327,"indexExpression":{"expression":{"id":1325,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"14092:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"14092:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14080:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14024:87:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14023:89:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14008:104:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1331,"nodeType":"ExpressionStatement","src":"14008:104:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"addedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"14130:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1333,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"14144:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"14144:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1335,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"14171:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseAmount","nodeType":"MemberAccess","referencedDeclaration":3485,"src":"14171:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14144:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14130:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"nodeType":"IfStatement","src":"14126:93:0","trueBody":{"expression":{"hexValue":"66616c7365","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14214:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1215,"id":1340,"nodeType":"Return","src":"14207:12:0"}}]},"id":1343,"nodeType":"IfStatement","src":"12975:1255:0","trueBody":{"id":1305,"nodeType":"Block","src":"13020:851:0","statements":[{"assignments":[1222],"declarations":[{"constant":false,"id":1222,"mutability":"mutable","name":"collateralAmount","nameLocation":"13042:16:0","nodeType":"VariableDeclaration","scope":1305,"src":"13034:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"13034:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1233,"initialValue":{"arguments":[{"arguments":[{"id":1230,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13123:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"13115:7:0","typeDescriptions":{}}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13115:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1224,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13068:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"13068:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1223,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"13061:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13061:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"13061:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13061:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13034:108:0"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1234,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"13156:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1235,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"13177:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1238,"indexExpression":{"expression":{"id":1236,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13195:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"13195:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13177:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1239,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"13233:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1242,"indexExpression":{"expression":{"id":1240,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13245:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"13245:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13233:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13177:87:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13176:89:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13156:109:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1246,"nodeType":"ExpressionStatement","src":"13156:109:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1247,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13283:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"13283:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1249,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13305:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"13305:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13283:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"13279:213:0","trueBody":{"id":1263,"nodeType":"Block","src":"13325:167:0","statements":[{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1252,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"13343:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"quoteReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"13364:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1254,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"13399:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13364:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1256,"name":"accFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"13433:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13364:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1258,"name":"accProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"13462:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13364:112:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13363:114:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13343:134:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ExpressionStatement","src":"13343:134:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"13509:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1266,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13528:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"13528:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13509:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1271,"nodeType":"IfStatement","src":"13505:61:0","trueBody":{"expression":{"hexValue":"66616c7365","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13561:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1215,"id":1270,"nodeType":"Return","src":"13554:12:0"}},{"assignments":[1273],"declarations":[{"constant":false,"id":1273,"mutability":"mutable","name":"baseAmount","nameLocation":"13589:10:0","nodeType":"VariableDeclaration","scope":1305,"src":"13581:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"13581:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1284,"initialValue":{"arguments":[{"arguments":[{"id":1281,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13663:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13655:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"13655:7:0","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13655:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1275,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13609:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"13609:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1274,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"13602:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13602:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"13602:35:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13602:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13581:101:0"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1285,"name":"baseAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"13696:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1286,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"13711:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1289,"indexExpression":{"expression":{"id":1287,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13729:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"13729:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13711:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":1290,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"13766:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1293,"indexExpression":{"expression":{"id":1291,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13778:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"13778:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13766:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13711:85:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13710:87:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13696:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"13696:101:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"baseAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"13815:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1299,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"13828:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseAmount","nodeType":"MemberAccess","referencedDeclaration":3485,"src":"13828:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13815:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1304,"nodeType":"IfStatement","src":"13811:49:0","trueBody":{"expression":{"hexValue":"66616c7365","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13855:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1215,"id":1303,"nodeType":"Return","src":"13848:12:0"}}]}},{"expression":{"hexValue":"74727565","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1215,"id":1345,"nodeType":"Return","src":"14239:11:0"}]},"id":1347,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInputTokens","nameLocation":"12847:17:0","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"_params","nameLocation":"12922:7:0","nodeType":"VariableDeclaration","scope":1347,"src":"12874:55:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"},"typeName":{"id":1210,"nodeType":"UserDefinedTypeName","pathNode":{"id":1209,"name":"IPositionStorage.OpenTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"12874:40:0"},"referencedDeclaration":3496,"src":"12874:40:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_storage_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"}},"visibility":"internal"}],"src":"12864:71:0"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"12959:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1213,"name":"bool","nodeType":"ElementaryTypeName","src":"12959:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12958:6:0"},"scope":2664,"src":"12838:1419:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3360],"body":{"id":1534,"nodeType":"Block","src":"14401:1767:0","statements":[{"condition":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14415:38:0","subExpression":{"baseExpression":{"id":1358,"name":"tradeableBaseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"14416:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1361,"indexExpression":{"expression":{"id":1359,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14435:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"14435:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14416:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"14411:102:0","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1364,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14495:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"14495:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"UntradeableBaseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"14474:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14474:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"RevertStatement","src":"14467:46:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1369,"name":"openInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"14527:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1370,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14542:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteAmount","nodeType":"MemberAccess","referencedDeclaration":3487,"src":"14542:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14527:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1373,"name":"maxOpenInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"14564:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14527:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"nodeType":"IfStatement","src":"14523:100:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1375,"name":"ExceedMaxOpenInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"14600:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14600:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1377,"nodeType":"RevertStatement","src":"14593:30:0"}},{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"_quoteToken","nameLocation":"14642:11:0","nodeType":"VariableDeclaration","scope":1534,"src":"14634:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"14634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1382,"initialValue":{"id":1381,"name":"quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"14656:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14634:32:0"},{"expression":{"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1383,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14676:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"14676:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1386,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"14697:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14676:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1388,"nodeType":"ExpressionStatement","src":"14676:32:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1389,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14722:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"14722:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1391,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"14743:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14722:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"IfStatement","src":"14718:64:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"14763:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14763:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"RevertStatement","src":"14756:26:0"}},{"condition":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14796:27:0","subExpression":{"arguments":[{"id":1398,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14815:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}],"id":1397,"name":"_checkInputTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"14797:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_OpenTradePositionParams_$3496_memory_ptr_$returns$_t_bool_$","typeString":"function (struct IPositionStorage.OpenTradePositionParams memory) view returns (bool)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14797:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"14792:59:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1401,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"14832:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14832:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"RevertStatement","src":"14825:26:0"}},{"assignments":[1407],"declarations":[{"constant":false,"id":1407,"mutability":"mutable","name":"_positionStorage","nameLocation":"14879:16:0","nodeType":"VariableDeclaration","scope":1534,"src":"14862:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":1406,"nodeType":"UserDefinedTypeName","pathNode":{"id":1405,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"14862:16:0"},"referencedDeclaration":3715,"src":"14862:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":1411,"initialValue":{"arguments":[{"id":1409,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"14915:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1408,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"14898:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14898:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"14862:69:0"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"pos","nameLocation":"14979:3:0","nodeType":"VariableDeclaration","scope":1534,"src":"14941:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":1415,"nodeType":"UserDefinedTypeName","pathNode":{"id":1414,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"14941:30:0"},"referencedDeclaration":3475,"src":"14941:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":1421,"initialValue":{"arguments":[{"id":1419,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15036:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}],"expression":{"id":1417,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"14985:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"previewTradePosition","nodeType":"MemberAccess","referencedDeclaration":3608,"src":"14985:50:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_OpenTradePositionParams_$3496_memory_ptr_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (struct IPositionStorage.OpenTradePositionParams memory) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14985:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"14941:103:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1422,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15058:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"15058:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15079:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15071:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"15071:7:0","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15071:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15058:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"IfStatement","src":"15054:55:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1429,"name":"InvalidParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"15090:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15090:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"RevertStatement","src":"15083:26:0"}},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"realQuoteAmount","nameLocation":"15128:15:0","nodeType":"VariableDeclaration","scope":1534,"src":"15120:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"15120:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1441,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1435,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15146:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"15146:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"15146:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1438,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15170:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"15170:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15146:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15120:57:0"},{"assignments":[1443],"declarations":[{"constant":false,"id":1443,"mutability":"mutable","name":"available","nameLocation":"15195:9:0","nodeType":"VariableDeclaration","scope":1534,"src":"15187:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"15187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1446,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1444,"name":"_availableLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"15207:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15207:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15187:41:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"realQuoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"15242:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1448,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"15260:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15242:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"nodeType":"IfStatement","src":"15238:60:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1450,"name":"InsufficientOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"15278:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15278:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"RevertStatement","src":"15271:27:0"}},{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1454,"name":"positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"15309:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1457,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15358:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}],"expression":{"id":1455,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"15323:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"openTradePosition","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"15323:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_TradePosition_$3475_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct IPositionStorage.TradePosition memory) external returns (bytes32)"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15323:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15309:53:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1460,"nodeType":"ExpressionStatement","src":"15309:53:0"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"15373:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1462,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15388:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteAmount","nodeType":"MemberAccess","referencedDeclaration":3487,"src":"15388:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15373:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ExpressionStatement","src":"15373:34:0"},{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"accProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"15417:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1467,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15435:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"15435:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15417:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ExpressionStatement","src":"15417:33:0"},{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1471,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"15460:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1474,"indexExpression":{"expression":{"id":1472,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15472:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"15472:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15460:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1475,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15494:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseAmount","nodeType":"MemberAccess","referencedDeclaration":3485,"src":"15494:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15460:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ExpressionStatement","src":"15460:52:0"},{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1479,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"15522:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1482,"indexExpression":{"expression":{"id":1480,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15540:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"15540:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15522:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1483,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15563:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"15563:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15522:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"15522:65:0"},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1487,"name":"openInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"15597:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":1488,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15613:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"15613:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"15613:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15597:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"15597:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1494,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15652:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"15652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1496,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15662:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"15662:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15652:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1493,"name":"_addFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"15644:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15644:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1500,"nodeType":"ExpressionStatement","src":"15644:34:0"},{"expression":{"arguments":[{"id":1504,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"15730:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1505,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15755:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3477,"src":"15755:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1507,"name":"realQuoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"15782:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1501,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"15689:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"15689:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15689:118:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"ExpressionStatement","src":"15689:118:0"},{"eventCall":{"arguments":[{"expression":{"id":1511,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15841:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15841:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1513,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15865:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3477,"src":"15865:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1515,"name":"positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"15892:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1516,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15917:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"15917:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1518,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15948:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"15948:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1520,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15980:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3483,"src":"15980:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1522,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"16012:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseAmount","nodeType":"MemberAccess","referencedDeclaration":3485,"src":"16012:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1524,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"16044:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteAmount","nodeType":"MemberAccess","referencedDeclaration":3487,"src":"16044:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1526,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"16077:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams memory"}},"id":1527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateralAmount","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"16077:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1528,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"16115:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"16115:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1530,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"16136:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":3467,"src":"16136:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1510,"name":"Open","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"15823:4:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes32,address,address,address,uint256,uint256,uint256,uint256,uint256)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15823:338:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1533,"nodeType":"EmitStatement","src":"15818:343:0"}]},"functionSelector":"122f7e8b","id":1535,"implemented":true,"kind":"function","modifiers":[{"id":1354,"kind":"modifierInvocation","modifierName":{"id":1353,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"14366:4:0"},"nodeType":"ModifierInvocation","src":"14366:4:0"}],"name":"open","nameLocation":"14272:4:0","nodeType":"FunctionDefinition","overrides":{"id":1352,"nodeType":"OverrideSpecifier","overrides":[],"src":"14357:8:0"},"parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"_params","nameLocation":"14334:7:0","nodeType":"VariableDeclaration","scope":1535,"src":"14286:55:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"},"typeName":{"id":1349,"nodeType":"UserDefinedTypeName","pathNode":{"id":1348,"name":"IPositionStorage.OpenTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"14286:40:0"},"referencedDeclaration":3496,"src":"14286:40:0","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_storage_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"}},"visibility":"internal"}],"src":"14276:71:0"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"positionKey","nameLocation":"14388:11:0","nodeType":"VariableDeclaration","scope":1535,"src":"14380:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14380:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14379:21:0"},"scope":2664,"src":"14263:1905:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1612,"nodeType":"Block","src":"16318:630:0","statements":[{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"balanceBefore","nameLocation":"16336:13:0","nodeType":"VariableDeclaration","scope":1612,"src":"16328:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"16328:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1558,"initialValue":{"arguments":[{"arguments":[{"id":1555,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16410:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16402:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"16402:7:0","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16402:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":1548,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"16359:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"16359:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"16359:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1547,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"16352:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16352:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"16352:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16352:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16328:97:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":1562,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"16476:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"16476:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"16476:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16507:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16507:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1567,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"16531:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"16531:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":1569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"16531:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1559,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"16435:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"16435:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16435:127:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"16435:127:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":1577,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"16626:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"16626:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":1579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"16626:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1580,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"16657:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"16657:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"16657:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16689:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1584,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"16704:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":1573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16587:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16587:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1572,"name":"ICloseCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"16572:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICloseCallback_$2818_$","typeString":"type(contract ICloseCallback)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16572:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICloseCallback_$2818","typeString":"contract ICloseCallback"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"closeCallback","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"16572:40:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory) external"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16572:147:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"ExpressionStatement","src":"16572:147:0"},{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"balanceAfter","nameLocation":"16738:12:0","nodeType":"VariableDeclaration","scope":1612,"src":"16730:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"16730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"initialValue":{"arguments":[{"arguments":[{"id":1597,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16811:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16803:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"16803:7:0","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16803:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":1590,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"16760:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"16760:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"16760:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1589,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"16753:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16753:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"16753:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16753:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16730:96:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1601,"name":"balanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"16840:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1602,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"16855:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16840:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1607,"nodeType":"IfStatement","src":"16836:60:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1604,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"16877:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16877:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"RevertStatement","src":"16870:26:0"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"balanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"16913:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1609,"name":"balanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"16928:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16913:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1544,"id":1611,"nodeType":"Return","src":"16906:35:0"}]},"id":1613,"implemented":true,"kind":"function","modifiers":[],"name":"_liquidateBaseToken","nameLocation":"16183:19:0","nodeType":"FunctionDefinition","parameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"_pos","nameLocation":"16250:4:0","nodeType":"VariableDeclaration","scope":1613,"src":"16212:42:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"16212:30:0"},"referencedDeclaration":3475,"src":"16212:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"_data","nameLocation":"16279:5:0","nodeType":"VariableDeclaration","scope":1613,"src":"16264:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1539,"name":"bytes","nodeType":"ElementaryTypeName","src":"16264:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16202:88:0"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1613,"src":"16309:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:9:0"},"scope":2664,"src":"16174:774:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1725,"nodeType":"Block","src":"17163:966:0","statements":[{"assignments":[1628],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"colBalanceBefore","nameLocation":"17181:16:0","nodeType":"VariableDeclaration","scope":1725,"src":"17173:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"17173:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1640,"initialValue":{"arguments":[{"arguments":[{"id":1637,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17258:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17250:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"17250:7:0","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17250:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":1630,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17207:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"17207:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"17207:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1629,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17200:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17200:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"17200:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17200:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17173:100:0"},{"assignments":[1642],"declarations":[{"constant":false,"id":1642,"mutability":"mutable","name":"quoteBalanceBefore","nameLocation":"17291:18:0","nodeType":"VariableDeclaration","scope":1725,"src":"17283:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"17283:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1654,"initialValue":{"arguments":[{"arguments":[{"id":1651,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17370:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17362:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"17362:7:0","typeDescriptions":{}}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17362:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":1644,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17319:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"17319:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"17319:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1643,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17312:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17312:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"17312:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17312:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17283:102:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":1658,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17436:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"17436:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"17436:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17468:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"17468:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1663,"name":"_neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"17492:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1655,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"17395:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"17395:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17395:130:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"17395:130:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":1671,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17589:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"17589:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"17589:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1674,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17621:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"17621:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"17621:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"_loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"17653:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1678,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"17672:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":1667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17550:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"17550:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1666,"name":"ICloseCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"17535:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ICloseCallback_$2818_$","typeString":"type(contract ICloseCallback)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17535:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ICloseCallback_$2818","typeString":"contract ICloseCallback"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"closeCallback","nodeType":"MemberAccess","referencedDeclaration":2817,"src":"17535:40:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory) external"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17535:152:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"17535:152:0"},{"assignments":[1682],"declarations":[{"constant":false,"id":1682,"mutability":"mutable","name":"colBalanceAfter","nameLocation":"17706:15:0","nodeType":"VariableDeclaration","scope":1725,"src":"17698:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"17698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1694,"initialValue":{"arguments":[{"arguments":[{"id":1691,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17782:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17774:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"17774:7:0","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17774:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":1684,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17731:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"17731:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"17731:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1683,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17724:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17724:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"17724:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17724:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17698:99:0"},{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"quoteBalanceAfter","nameLocation":"17815:17:0","nodeType":"VariableDeclaration","scope":1725,"src":"17807:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"17807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1708,"initialValue":{"arguments":[{"arguments":[{"id":1705,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17893:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17885:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"17885:7:0","typeDescriptions":{}}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17885:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":1698,"name":"_pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17842:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"17842:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"17842:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1697,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17835:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17835:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"17835:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17835:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17807:101:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"quoteBalanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"17922:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"quoteBalanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"17942:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1711,"name":"_loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"17963:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17942:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17922:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1717,"nodeType":"IfStatement","src":"17918:90:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1714,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"17989:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17989:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"RevertStatement","src":"17982:26:0"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"colBalanceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"18025:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"colBalanceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"18044:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1720,"name":"_neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"18063:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18044:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18043:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18025:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1626,"id":1724,"nodeType":"Return","src":"18018:69:0"}]},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"_liquidateCollateral","nameLocation":"16963:20:0","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"_pos","nameLocation":"17031:4:0","nodeType":"VariableDeclaration","scope":1726,"src":"16993:42:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":1615,"nodeType":"UserDefinedTypeName","pathNode":{"id":1614,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"16993:30:0"},"referencedDeclaration":3475,"src":"16993:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"_neededCollateralAmount","nameLocation":"17053:23:0","nodeType":"VariableDeclaration","scope":1726,"src":"17045:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"17045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"_loss","nameLocation":"17094:5:0","nodeType":"VariableDeclaration","scope":1726,"src":"17086:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"17086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"_data","nameLocation":"17124:5:0","nodeType":"VariableDeclaration","scope":1726,"src":"17109:20:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"17109:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16983:152:0"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1726,"src":"17154:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"17154:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17153:9:0"},"scope":2664,"src":"16954:1175:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3366],"body":{"id":2032,"nodeType":"Block","src":"18260:3572:0","statements":[{"assignments":[1739],"declarations":[{"constant":false,"id":1739,"mutability":"mutable","name":"_factory","nameLocation":"18279:8:0","nodeType":"VariableDeclaration","scope":2032,"src":"18270:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"},"typeName":{"id":1738,"nodeType":"UserDefinedTypeName","pathNode":{"id":1737,"name":"IFactory","nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"18270:8:0"},"referencedDeclaration":3156,"src":"18270:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"visibility":"internal"}],"id":1743,"initialValue":{"arguments":[{"id":1741,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"18299:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1740,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"18290:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$3156_$","typeString":"type(contract IFactory)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18290:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"nodeType":"VariableDeclarationStatement","src":"18270:37:0"},{"assignments":[1746],"declarations":[{"constant":false,"id":1746,"mutability":"mutable","name":"_positionStorage","nameLocation":"18334:16:0","nodeType":"VariableDeclaration","scope":2032,"src":"18317:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":1745,"nodeType":"UserDefinedTypeName","pathNode":{"id":1744,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"18317:16:0"},"referencedDeclaration":3715,"src":"18317:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":1750,"initialValue":{"arguments":[{"id":1748,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"18370:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1747,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"18353:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18353:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"18317:69:0"},{"assignments":[1752],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"needLiquidate","nameLocation":"18402:13:0","nodeType":"VariableDeclaration","scope":2032,"src":"18397:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"18397:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1760,"initialValue":{"arguments":[{"expression":{"id":1755,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18461:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams calldata"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"18461:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1757,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18494:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams calldata"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"closer","nodeType":"MemberAccess","referencedDeclaration":3504,"src":"18494:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1753,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"18418:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateStatus","nodeType":"MemberAccess","referencedDeclaration":3657,"src":"18418:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) external returns (bool)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18418:100:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"18397:121:0"},{"assignments":[1765],"declarations":[{"constant":false,"id":1765,"mutability":"mutable","name":"pos","nameLocation":"18566:3:0","nodeType":"VariableDeclaration","scope":2032,"src":"18528:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":1764,"nodeType":"UserDefinedTypeName","pathNode":{"id":1763,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"18528:30:0"},"referencedDeclaration":3475,"src":"18528:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":1771,"initialValue":{"arguments":[{"expression":{"id":1768,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18611:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams calldata"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3498,"src":"18611:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1766,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"18572:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"position","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"18572:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (bytes32) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18572:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"18528:112:0"},{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"baseValue","nameLocation":"18658:9:0","nodeType":"VariableDeclaration","scope":2032,"src":"18650:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"18650:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1779,"initialValue":{"arguments":[{"id":1775,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"18690:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},{"expression":{"id":1776,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18695:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams calldata"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data0","nodeType":"MemberAccess","referencedDeclaration":3500,"src":"18695:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1774,"name":"_liquidateBaseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"18670:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_TradePosition_$3475_memory_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (struct IPositionStorage.TradePosition memory,bytes calldata) returns (uint256)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18670:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18650:59:0"},{"assignments":[1781],"declarations":[{"constant":false,"id":1781,"mutability":"mutable","name":"liquidationFee","nameLocation":"18727:14:0","nodeType":"VariableDeclaration","scope":2032,"src":"18719:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"18719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1782,"nodeType":"VariableDeclarationStatement","src":"18719:22:0"},{"assignments":[1784],"declarations":[{"constant":false,"id":1784,"mutability":"mutable","name":"quoteAmount","nameLocation":"18759:11:0","nodeType":"VariableDeclaration","scope":2032,"src":"18751:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"18751:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1788,"initialValue":{"expression":{"expression":{"id":1785,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"18773:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"18773:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"18773:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18751:43:0"},{"condition":{"id":1789,"name":"needLiquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"18808:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"18804:218:0","trueBody":{"id":1809,"nodeType":"Block","src":"18823:199:0","statements":[{"assignments":[1791],"declarations":[{"constant":false,"id":1791,"mutability":"mutable","name":"liquidationFeeRate","nameLocation":"18845:18:0","nodeType":"VariableDeclaration","scope":1809,"src":"18837:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"18837:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1795,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1792,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"18866:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"liquidationFeeRate","nodeType":"MemberAccess","referencedDeclaration":3042,"src":"18866:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18866:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18837:58:0"},{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"18909:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"18927:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1798,"name":"liquidationFeeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"18941:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18927:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18926:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18963:5:0","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"18926:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18909:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"18909:59:0"},{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1805,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"18982:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1806,"name":"liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"18997:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18982:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1808,"nodeType":"ExpressionStatement","src":"18982:29:0"}]}},{"assignments":[1812],"declarations":[{"constant":false,"id":1812,"mutability":"mutable","name":"loss","nameLocation":"19039:4:0","nodeType":"VariableDeclaration","scope":2032,"src":"19031:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"19031:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1813,"nodeType":"VariableDeclarationStatement","src":"19031:12:0"},{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"remainingCollateralAmount","nameLocation":"19061:25:0","nodeType":"VariableDeclaration","scope":2032,"src":"19053:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"19053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1816,"nodeType":"VariableDeclarationStatement","src":"19053:33:0"},{"id":1904,"nodeType":"Block","src":"19128:1280:0","statements":[{"assignments":[1818],"declarations":[{"constant":false,"id":1818,"mutability":"mutable","name":"neededCollateralAmount","nameLocation":"19150:22:0","nodeType":"VariableDeclaration","scope":1904,"src":"19142:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"19142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1819,"nodeType":"VariableDeclarationStatement","src":"19142:30:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"19190:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1821,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"19202:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19190:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"nodeType":"IfStatement","src":"19186:1104:0","trueBody":{"id":1893,"nodeType":"Block","src":"19215:1075:0","statements":[{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1823,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"19233:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"19240:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1825,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"19254:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19240:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19233:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ExpressionStatement","src":"19233:30:0"},{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"19281:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1830,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"19306:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19281:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"19281:29:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1833,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"19332:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"19332:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"19332:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1836,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"19353:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"19353:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"19353:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19332:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"19328:691:0","trueBody":{"id":1877,"nodeType":"Block","src":"19372:647:0","statements":[{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"dexAggregator","nameLocation":"19409:13:0","nodeType":"VariableDeclaration","scope":1877,"src":"19394:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDEXAggregator_$2905","typeString":"contract IDEXAggregator"},"typeName":{"id":1841,"nodeType":"UserDefinedTypeName","pathNode":{"id":1840,"name":"IDEXAggregator","nodeType":"IdentifierPath","referencedDeclaration":2905,"src":"19394:14:0"},"referencedDeclaration":2905,"src":"19394:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IDEXAggregator_$2905","typeString":"contract IDEXAggregator"}},"visibility":"internal"}],"id":1848,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1844,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"19465:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"dexAggregator","nodeType":"MemberAccess","referencedDeclaration":3027,"src":"19465:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19465:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1843,"name":"IDEXAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"19425:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDEXAggregator_$2905_$","typeString":"type(contract IDEXAggregator)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19425:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IDEXAggregator_$2905","typeString":"contract IDEXAggregator"}},"nodeType":"VariableDeclarationStatement","src":"19394:117:0"},{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1849,"name":"neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"19534:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":1850,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"19533:26:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19621:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19613:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"19613:7:0","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19613:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1857,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"19649:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"19649:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"19649:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1860,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"19692:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"19692:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"19692:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1863,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"19735:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1851,"name":"dexAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"19562:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IDEXAggregator_$2905","typeString":"contract IDEXAggregator"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmountIn","nodeType":"MemberAccess","referencedDeclaration":2872,"src":"19562:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (address,address,address,uint256) view external returns (uint256,address)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19562:199:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"src":"19533:228:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"19533:228:0"},{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1867,"name":"remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"19783:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1869,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"19858:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},{"id":1870,"name":"neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"19887:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1871,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"19935:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1872,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"19965:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams calldata"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data1","nodeType":"MemberAccess","referencedDeclaration":3502,"src":"19965:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1868,"name":"_liquidateCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"19812:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_TradePosition_$3475_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_uint256_$","typeString":"function (struct IPositionStorage.TradePosition memory,uint256,uint256,bytes calldata) returns (uint256)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19812:188:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19783:217:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1876,"nodeType":"ExpressionStatement","src":"19783:217:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"20041:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":1880,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20066:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"20066:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"20066:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20041:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"IfStatement","src":"20037:239:0","trueBody":{"id":1891,"nodeType":"Block","src":"20089:187:0","statements":[{"errorCall":{"arguments":[{"expression":{"expression":{"id":1885,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20166:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"20166:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"20166:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1888,"name":"neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"20213:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1884,"name":"InsufficientCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"20118:22:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20118:139:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"RevertStatement","src":"20111:146:0"}]}}]}},{"expression":{"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1895,"name":"remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"20304:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1896,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20334:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"20334:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"20334:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1899,"name":"neededCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"20374:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20334:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20333:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20304:93:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1903,"nodeType":"ExpressionStatement","src":"20304:93:0"}]},{"expression":{"arguments":[{"expression":{"id":1908,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20466:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"20466:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1910,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"20495:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1911,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"20518:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1912,"name":"remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"20536:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1905,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"20418:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateCloseValues","nodeType":"MemberAccess","referencedDeclaration":3690,"src":"20418:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256) external"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20418:153:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"ExpressionStatement","src":"20418:153:0"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1915,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"20582:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":1916,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20597:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"20597:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"20597:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20582:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"20582:36:0"},{"expression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1921,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"20628:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":1922,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20652:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"20652:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"20652:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20628:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1926,"nodeType":"ExpressionStatement","src":"20628:45:0"},{"expression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1927,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"20683:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1931,"indexExpression":{"expression":{"expression":{"id":1928,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20695:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"20695:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"20695:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20683:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":1932,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20716:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"20716:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":1934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"20716:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20683:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1936,"nodeType":"ExpressionStatement","src":"20683:53:0"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1937,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"20746:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1941,"indexExpression":{"expression":{"expression":{"id":1938,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20764:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"20764:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"20764:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20746:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":1942,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20786:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"20786:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"20786:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20746:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"20746:61:0"},{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"openInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"20817:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":1948,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"20833:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"20833:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"20833:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20817:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"20817:37:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"20869:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20886:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20869:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"20865:259:0","trueBody":{"id":1972,"nodeType":"Block","src":"20889:235:0","statements":[{"assignments":[1957],"declarations":[{"constant":false,"id":1957,"mutability":"mutable","name":"liquidationFeeTo","nameLocation":"20911:16:0","nodeType":"VariableDeclaration","scope":1972,"src":"20903:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"20903:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1961,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1958,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"20930:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"liquidationFeeTo","nodeType":"MemberAccess","referencedDeclaration":3047,"src":"20930:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20930:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20903:54:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":1965,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21016:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"21016:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"21016:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1968,"name":"liquidationFeeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"21051:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1969,"name":"liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"21085:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1962,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"20971:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"20971:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20971:142:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"ExpressionStatement","src":"20971:142:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"21137:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21145:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21137:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"nodeType":"IfStatement","src":"21133:285:0","trueBody":{"id":1999,"nodeType":"Block","src":"21148:270:0","statements":[{"assignments":[1978],"declarations":[{"constant":false,"id":1978,"mutability":"mutable","name":"profit","nameLocation":"21170:6:0","nodeType":"VariableDeclaration","scope":1999,"src":"21162:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"21162:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1982,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"21179:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1980,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"21191:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21179:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21162:40:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1983,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"21220:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21229:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21220:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1998,"nodeType":"IfStatement","src":"21216:192:0","trueBody":{"id":1997,"nodeType":"Block","src":"21232:176:0","statements":[{"expression":{"arguments":[{"expression":{"expression":{"id":1989,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21299:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"21299:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":1991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"21299:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1992,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21338:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":1993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"21338:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1994,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"21369:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1986,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"21250:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"21250:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21250:143:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1996,"nodeType":"ExpressionStatement","src":"21250:143:0"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2001,"name":"remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"21431:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21459:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21431:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2016,"nodeType":"IfStatement","src":"21427:206:0","trueBody":{"id":2015,"nodeType":"Block","src":"21462:171:0","statements":[{"expression":{"arguments":[{"expression":{"expression":{"id":2007,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21521:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"21521:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"21521:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2010,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21556:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"21556:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"21583:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2004,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"21476:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"21476:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21476:146:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"ExpressionStatement","src":"21476:146:0"}]}},{"eventCall":{"arguments":[{"expression":{"id":2018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21667:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"21667:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2020,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21691:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"21691:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2022,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21714:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"21714:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":2024,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"21743:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"21743:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"21743:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2027,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"21773:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams calldata"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"closer","nodeType":"MemberAccess","referencedDeclaration":3504,"src":"21773:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2029,"name":"liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"21801:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2017,"name":"Close","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"21648:5:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes32,address,address,uint256)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21648:177:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2031,"nodeType":"EmitStatement","src":"21643:182:0"}]},"functionSelector":"fba0c814","id":2033,"implemented":true,"kind":"function","modifiers":[{"id":1733,"kind":"modifierInvocation","modifierName":{"id":1732,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"18242:4:0"},"nodeType":"ModifierInvocation","src":"18242:4:0"},{"id":1735,"kind":"modifierInvocation","modifierName":{"id":1734,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"18247:12:0"},"nodeType":"ModifierInvocation","src":"18247:12:0"}],"name":"close","nameLocation":"18144:5:0","nodeType":"FunctionDefinition","overrides":{"id":1731,"nodeType":"OverrideSpecifier","overrides":[],"src":"18233:8:0"},"parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"_params","nameLocation":"18210:7:0","nodeType":"VariableDeclaration","scope":2033,"src":"18159:58:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams"},"typeName":{"id":1728,"nodeType":"UserDefinedTypeName","pathNode":{"id":1727,"name":"IPositionStorage.CloseTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3505,"src":"18159:41:0"},"referencedDeclaration":3505,"src":"18159:41:0","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_storage_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams"}},"visibility":"internal"}],"src":"18149:74:0"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"18260:0:0"},"scope":2664,"src":"18135:3697:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3372],"body":{"id":2162,"nodeType":"Block","src":"21969:1154:0","statements":[{"assignments":[2046],"declarations":[{"constant":false,"id":2046,"mutability":"mutable","name":"_positionStorage","nameLocation":"21996:16:0","nodeType":"VariableDeclaration","scope":2162,"src":"21979:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":2045,"nodeType":"UserDefinedTypeName","pathNode":{"id":2044,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"21979:16:0"},"referencedDeclaration":3715,"src":"21979:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":2050,"initialValue":{"arguments":[{"id":2048,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"22032:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2047,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"22015:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22015:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"21979:69:0"},{"assignments":[2055],"declarations":[{"constant":false,"id":2055,"mutability":"mutable","name":"pos","nameLocation":"22096:3:0","nodeType":"VariableDeclaration","scope":2162,"src":"22058:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":2054,"nodeType":"UserDefinedTypeName","pathNode":{"id":2053,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"22058:30:0"},"referencedDeclaration":3475,"src":"22058:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":2061,"initialValue":{"arguments":[{"expression":{"id":2058,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"22141:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams calldata"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"22141:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2056,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"22102:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"position","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"22102:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (bytes32) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22102:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"22058:112:0"},{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"quoteAmount","nameLocation":"22188:11:0","nodeType":"VariableDeclaration","scope":2162,"src":"22180:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"22180:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2064,"name":"_unrealizeLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"22202:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22202:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22180:43:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"22237:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":2068,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22251:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"22251:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"22251:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22237:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"nodeType":"IfStatement","src":"22233:67:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2072,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"22281:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22281:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"RevertStatement","src":"22274:26:0"}},{"expression":{"arguments":[{"expression":{"id":2079,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"22337:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams calldata"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3507,"src":"22337:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2081,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"22358:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams calldata"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rollbacker","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"22358:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2076,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"22311:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rollback","nodeType":"MemberAccess","referencedDeclaration":3669,"src":"22311:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22311:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"22311:66:0"},{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"22388:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2086,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22403:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"22403:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"22403:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ExpressionStatement","src":"22388:36:0"},{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2091,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"22434:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":2092,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22458:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"22458:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"22458:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22434:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2096,"nodeType":"ExpressionStatement","src":"22434:45:0"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2097,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"22489:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2101,"indexExpression":{"expression":{"expression":{"id":2098,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22501:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"22501:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"22501:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22489:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2102,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22522:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"22522:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"22522:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22489:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"22489:53:0"},{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2107,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"22552:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2111,"indexExpression":{"expression":{"expression":{"id":2108,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22570:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"22570:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"22570:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22552:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2112,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22592:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"22592:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"22592:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22552:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"22552:61:0"},{"expression":{"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2117,"name":"openInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"22623:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2118,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22639:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"22639:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"22639:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22623:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2122,"nodeType":"ExpressionStatement","src":"22623:37:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":2126,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22712:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"22712:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"22712:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2129,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22742:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"22742:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2131,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22765:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"22765:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"22765:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2123,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"22671:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"22671:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22671:124:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"ExpressionStatement","src":"22671:124:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":2139,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22846:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"22846:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"22846:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2142,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22877:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"22877:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2144,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22900:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"22900:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"22900:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2136,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"22805:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"22805:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22805:126:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"ExpressionStatement","src":"22805:126:0"},{"eventCall":{"arguments":[{"expression":{"id":2150,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22969:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"22969:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2152,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"22993:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"22993:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2154,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"23022:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams calldata"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rollbacker","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"23022:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2156,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"23054:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams calldata"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"serviceToken","nodeType":"MemberAccess","referencedDeclaration":3511,"src":"23054:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2158,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"23088:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams calldata"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"serviceFee","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"23088:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"Rollback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"22947:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,address,address,uint256)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22947:169:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2161,"nodeType":"EmitStatement","src":"22942:174:0"}]},"functionSelector":"19972a50","id":2163,"implemented":true,"kind":"function","modifiers":[{"id":2040,"kind":"modifierInvocation","modifierName":{"id":2039,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"21951:4:0"},"nodeType":"ModifierInvocation","src":"21951:4:0"},{"id":2042,"kind":"modifierInvocation","modifierName":{"id":2041,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"21956:12:0"},"nodeType":"ModifierInvocation","src":"21956:12:0"}],"name":"rollback","nameLocation":"21847:8:0","nodeType":"FunctionDefinition","overrides":{"id":2038,"nodeType":"OverrideSpecifier","overrides":[],"src":"21942:8:0"},"parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"_params","nameLocation":"21919:7:0","nodeType":"VariableDeclaration","scope":2163,"src":"21865:61:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_calldata_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams"},"typeName":{"id":2035,"nodeType":"UserDefinedTypeName","pathNode":{"id":2034,"name":"IPositionStorage.RollbackTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"21865:44:0"},"referencedDeclaration":3514,"src":"21865:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_storage_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams"}},"visibility":"internal"}],"src":"21855:77:0"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"21969:0:0"},"scope":2664,"src":"21838:1285:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2248,"nodeType":"Block","src":"23292:817:0","statements":[{"assignments":[2176],"declarations":[{"constant":false,"id":2176,"mutability":"mutable","name":"_positionStorage","nameLocation":"23319:16:0","nodeType":"VariableDeclaration","scope":2248,"src":"23302:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":2175,"nodeType":"UserDefinedTypeName","pathNode":{"id":2174,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"23302:16:0"},"referencedDeclaration":3715,"src":"23302:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":2180,"initialValue":{"arguments":[{"id":2178,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"23355:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2177,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"23338:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23338:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"23302:69:0"},{"expression":{"arguments":[{"id":2184,"name":"_positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"23417:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2181,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"23381:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"closeManuallyStep1","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"23381:35:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32) external"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23381:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"ExpressionStatement","src":"23381:49:0"},{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"pos","nameLocation":"23479:3:0","nodeType":"VariableDeclaration","scope":2248,"src":"23441:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":2190,"nodeType":"UserDefinedTypeName","pathNode":{"id":2189,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"23441:30:0"},"referencedDeclaration":3475,"src":"23441:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"id":2194,"name":"_positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"23524:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2192,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"23485:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"position","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"23485:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (bytes32) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23485:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"23441:105:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":2200,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23677:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"23677:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"23677:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2203,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"23707:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2204,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23730:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"23730:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"23730:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2197,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"23636:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"23636:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23636:124:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"23636:124:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":2212,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23811:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"23811:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"23811:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"23842:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2216,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23865:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"23865:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"23865:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2209,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"23770:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"23770:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23770:126:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"ExpressionStatement","src":"23770:126:0"},{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2221,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"23907:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2225,"indexExpression":{"expression":{"expression":{"id":2222,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23919:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"23919:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"23919:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23907:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2226,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23940:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"23940:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3410,"src":"23940:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23907:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"nodeType":"ExpressionStatement","src":"23907:53:0"},{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2231,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"23970:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2235,"indexExpression":{"expression":{"expression":{"id":2232,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"23988:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"23988:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"23988:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23970:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2236,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"24010:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"24010:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"24010:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23970:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2240,"nodeType":"ExpressionStatement","src":"23970:61:0"},{"eventCall":{"arguments":[{"expression":{"id":2242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24066:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"24066:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2244,"name":"_positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"24078:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2245,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"24092:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2241,"name":"CloseManuallyStep1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"24047:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24047:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2247,"nodeType":"EmitStatement","src":"24042:60:0"}]},"functionSelector":"59129e75","id":2249,"implemented":true,"kind":"function","modifiers":[{"id":2170,"kind":"modifierInvocation","modifierName":{"id":2169,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"23274:4:0"},"nodeType":"ModifierInvocation","src":"23274:4:0"},{"id":2172,"kind":"modifierInvocation","modifierName":{"id":2171,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"23279:12:0"},"nodeType":"ModifierInvocation","src":"23279:12:0"}],"name":"closeManuallyStep1","nameLocation":"23183:18:0","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"_positionKey","nameLocation":"23219:12:0","nodeType":"VariableDeclaration","scope":2249,"src":"23211:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23211:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"_executor","nameLocation":"23249:9:0","nodeType":"VariableDeclaration","scope":2249,"src":"23241:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"23241:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23201:63:0"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"23292:0:0"},"scope":2664,"src":"23174:935:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2502,"nodeType":"Block","src":"24407:2721:0","statements":[{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"_positionStorage","nameLocation":"24434:16:0","nodeType":"VariableDeclaration","scope":2502,"src":"24417:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":2265,"nodeType":"UserDefinedTypeName","pathNode":{"id":2264,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"24417:16:0"},"referencedDeclaration":3715,"src":"24417:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":2270,"initialValue":{"arguments":[{"id":2268,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"24470:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2267,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"24453:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24453:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"24417:69:0"},{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"pos","nameLocation":"24534:3:0","nodeType":"VariableDeclaration","scope":2502,"src":"24496:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":2274,"nodeType":"UserDefinedTypeName","pathNode":{"id":2273,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"24496:30:0"},"referencedDeclaration":3475,"src":"24496:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":2280,"initialValue":{"arguments":[{"id":2278,"name":"_positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"24579:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2276,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"24540:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"position","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"24540:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (bytes32) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24540:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"24496:105:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2281,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"24616:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"24616:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"24616:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2284,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"24637:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"24637:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"24637:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24616:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2364,"nodeType":"Block","src":"24883:673:0","statements":[{"assignments":[2306],"declarations":[{"constant":false,"id":2306,"mutability":"mutable","name":"quoteAmount","nameLocation":"24905:11:0","nodeType":"VariableDeclaration","scope":2364,"src":"24897:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"24897:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2307,"name":"_unrealizeLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"24919:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24919:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24897:43:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"quoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"24958:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"24972:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2312,"name":"_liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"24985:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24972:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24958:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2318,"nodeType":"IfStatement","src":"24954:90:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2315,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"25025:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25025:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"RevertStatement","src":"25018:26:0"}},{"assignments":[2320],"declarations":[{"constant":false,"id":2320,"mutability":"mutable","name":"_collateralReserve","nameLocation":"25066:18:0","nodeType":"VariableDeclaration","scope":2364,"src":"25058:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"25058:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2326,"initialValue":{"baseExpression":{"id":2321,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"25087:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2325,"indexExpression":{"expression":{"expression":{"id":2322,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25105:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"25105:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"25105:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25087:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25058:65:0"},{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"_baseReserve","nameLocation":"25145:12:0","nodeType":"VariableDeclaration","scope":2364,"src":"25137:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"25137:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2334,"initialValue":{"baseExpression":{"id":2329,"name":"baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"25160:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2333,"indexExpression":{"expression":{"expression":{"id":2330,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25172:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"25172:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"25172:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25160:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25137:53:0"},{"assignments":[2336],"declarations":[{"constant":false,"id":2336,"mutability":"mutable","name":"collateralBalance","nameLocation":"25212:17:0","nodeType":"VariableDeclaration","scope":2364,"src":"25204:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"25204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2348,"initialValue":{"arguments":[{"arguments":[{"id":2345,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25293:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25285:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"25285:7:0","typeDescriptions":{}}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25285:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"expression":{"id":2338,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25239:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"25239:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"25239:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2337,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"25232:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2990_$","typeString":"type(contract IERC20)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25232:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2990","typeString":"contract IERC20"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2934,"src":"25232:35:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25232:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25204:108:0"},{"assignments":[2350],"declarations":[{"constant":false,"id":2350,"mutability":"mutable","name":"collateralAmount","nameLocation":"25334:16:0","nodeType":"VariableDeclaration","scope":2364,"src":"25326:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"25326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2356,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"collateralBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"25353:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2352,"name":"_collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"25389:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25353:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2354,"name":"_baseReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"25426:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25353:85:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25326:112:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"25456:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2358,"name":"_remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"25475:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25456:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"IfStatement","src":"25452:93:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2360,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"25526:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25526:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"RevertStatement","src":"25519:26:0"}}]},"id":2365,"nodeType":"IfStatement","src":"24612:944:0","trueBody":{"id":2304,"nodeType":"Block","src":"24656:221:0","statements":[{"assignments":[2289],"declarations":[{"constant":false,"id":2289,"mutability":"mutable","name":"amount","nameLocation":"24678:6:0","nodeType":"VariableDeclaration","scope":2304,"src":"24670:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"24670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2290,"name":"_unrealizeLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"24687:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24687:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24670:38:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"24743:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"24768:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2295,"name":"_remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"24781:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24768:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2297,"name":"_liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"24810:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24768:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24743:82:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2303,"nodeType":"IfStatement","src":"24722:144:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2300,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"24847:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24847:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2302,"nodeType":"RevertStatement","src":"24840:26:0"}}]}},{"expression":{"arguments":[{"id":2369,"name":"_positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"25602:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2366,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"25566:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"closeManuallyStep2","nodeType":"MemberAccess","referencedDeclaration":3679,"src":"25566:35:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32) external"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25566:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2371,"nodeType":"ExpressionStatement","src":"25566:49:0"},{"assignments":[2373],"declarations":[{"constant":false,"id":2373,"mutability":"mutable","name":"loss","nameLocation":"25634:4:0","nodeType":"VariableDeclaration","scope":2502,"src":"25626:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"25626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2374,"nodeType":"VariableDeclarationStatement","src":"25626:12:0"},{"assignments":[2376],"declarations":[{"constant":false,"id":2376,"mutability":"mutable","name":"neededQuoteAmount","nameLocation":"25656:17:0","nodeType":"VariableDeclaration","scope":2502,"src":"25648:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"25648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2382,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2377,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25676:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"25676:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"25676:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2380,"name":"_liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"25700:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25676:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25648:67:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"25729:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2384,"name":"neededQuoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"25742:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25729:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2393,"nodeType":"IfStatement","src":"25725:98:0","trueBody":{"id":2392,"nodeType":"Block","src":"25761:62:0","statements":[{"expression":{"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2386,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"25775:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"neededQuoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"25782:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2388,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"25802:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25782:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25775:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2391,"nodeType":"ExpressionStatement","src":"25775:37:0"}]}},{"expression":{"arguments":[{"expression":{"id":2397,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25880:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3444,"src":"25880:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2399,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"25909:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2400,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"25933:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2401,"name":"_remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"25951:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2394,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"25832:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateCloseValues","nodeType":"MemberAccess","referencedDeclaration":3690,"src":"25832:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256) external"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25832:155:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2403,"nodeType":"ExpressionStatement","src":"25832:155:0"},{"expression":{"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"25998:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2405,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26013:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"26013:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"26013:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25998:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2409,"nodeType":"ExpressionStatement","src":"25998:36:0"},{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2410,"name":"withdrawingLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"26044:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"expression":{"id":2411,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26068:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"26068:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"26068:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26044:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"nodeType":"ExpressionStatement","src":"26044:45:0"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2416,"name":"openInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"26099:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"expression":{"id":2417,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26115:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"26115:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"26115:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26099:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"26099:37:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2422,"name":"_liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"26151:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26169:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26151:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2444,"nodeType":"IfStatement","src":"26147:270:0","trueBody":{"id":2443,"nodeType":"Block","src":"26172:245:0","statements":[{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"liquidationFeeTo","nameLocation":"26194:16:0","nodeType":"VariableDeclaration","scope":2443,"src":"26186:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"26186:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2428,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"26222:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2427,"name":"IFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"26213:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFactory_$3156_$","typeString":"type(contract IFactory)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26213:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFactory_$3156","typeString":"contract IFactory"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"liquidationFeeTo","nodeType":"MemberAccess","referencedDeclaration":3047,"src":"26213:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26213:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"26186:63:0"},{"expression":{"arguments":[{"expression":{"expression":{"id":2436,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26308:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"26308:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"26308:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2439,"name":"liquidationFeeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"26343:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2440,"name":"_liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"26377:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2433,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"26263:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"26263:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26263:143:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2442,"nodeType":"ExpressionStatement","src":"26263:143:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"loss","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"26430:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26438:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26430:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2471,"nodeType":"IfStatement","src":"26426:292:0","trueBody":{"id":2470,"nodeType":"Block","src":"26441:277:0","statements":[{"assignments":[2449],"declarations":[{"constant":false,"id":2449,"mutability":"mutable","name":"profit","nameLocation":"26463:6:0","nodeType":"VariableDeclaration","scope":2470,"src":"26455:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"26455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"_baseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"26472:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2451,"name":"neededQuoteAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"26485:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26472:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26455:47:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2454,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"26520:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26529:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26520:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"26516:192:0","trueBody":{"id":2468,"nodeType":"Block","src":"26532:176:0","statements":[{"expression":{"arguments":[{"expression":{"expression":{"id":2460,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26599:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"26599:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"26599:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2463,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26638:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"26638:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2465,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"26669:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2457,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"26550:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"26550:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26550:143:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"26550:143:0"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"_remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"26731:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26760:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26731:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2487,"nodeType":"IfStatement","src":"26727:208:0","trueBody":{"id":2486,"nodeType":"Block","src":"26763:172:0","statements":[{"expression":{"arguments":[{"expression":{"expression":{"id":2478,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26822:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"26822:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"26822:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2481,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26857:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"26857:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2483,"name":"_remainingCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"26884:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2475,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"26777:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$3970_$","typeString":"type(library TransferHelper)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"26777:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26777:147:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2485,"nodeType":"ExpressionStatement","src":"26777:147:0"}]}},{"eventCall":{"arguments":[{"expression":{"id":2489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26969:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"26969:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2491,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"26993:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3446,"src":"26993:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2493,"name":"_positionKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"27016:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":2494,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"27042:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"27042:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"27042:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27072:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27072:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2499,"name":"_liquidationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"27096:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2488,"name":"Close","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"26950:5:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes32,address,address,uint256)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26950:171:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2501,"nodeType":"EmitStatement","src":"26945:176:0"}]},"functionSelector":"d8f2cab7","id":2503,"implemented":true,"kind":"function","modifiers":[{"id":2260,"kind":"modifierInvocation","modifierName":{"id":2259,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"24389:4:0"},"nodeType":"ModifierInvocation","src":"24389:4:0"},{"id":2262,"kind":"modifierInvocation","modifierName":{"id":2261,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"24394:12:0"},"nodeType":"ModifierInvocation","src":"24394:12:0"}],"name":"closeManuallyStep2","nameLocation":"24220:18:0","nodeType":"FunctionDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"_positionKey","nameLocation":"24256:12:0","nodeType":"VariableDeclaration","scope":2503,"src":"24248:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"_baseValue","nameLocation":"24286:10:0","nodeType":"VariableDeclaration","scope":2503,"src":"24278:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"24278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"_remainingCollateralAmount","nameLocation":"24314:26:0","nodeType":"VariableDeclaration","scope":2503,"src":"24306:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"24306:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"_liquidationFee","nameLocation":"24358:15:0","nodeType":"VariableDeclaration","scope":2503,"src":"24350:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"24350:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24238:141:0"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[],"src":"24407:0:0"},"scope":2664,"src":"24211:2917:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3380],"body":{"id":2582,"nodeType":"Block","src":"27315:770:0","statements":[{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"_positionStorage","nameLocation":"27342:16:0","nodeType":"VariableDeclaration","scope":2582,"src":"27325:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":2517,"nodeType":"UserDefinedTypeName","pathNode":{"id":2516,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"27325:16:0"},"referencedDeclaration":3715,"src":"27325:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":2522,"initialValue":{"arguments":[{"id":2520,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"27378:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2519,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"27361:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27361:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"27325:69:0"},{"assignments":[2527],"declarations":[{"constant":false,"id":2527,"mutability":"mutable","name":"pos","nameLocation":"27442:3:0","nodeType":"VariableDeclaration","scope":2582,"src":"27404:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":2526,"nodeType":"UserDefinedTypeName","pathNode":{"id":2525,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"27404:30:0"},"referencedDeclaration":3475,"src":"27404:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":2533,"initialValue":{"arguments":[{"expression":{"id":2530,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27487:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3529,"src":"27487:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2528,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"27448:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"position","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"27448:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (bytes32) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27448:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"27404:112:0"},{"assignments":[2535],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"addedCollateralAmount","nameLocation":"27534:21:0","nodeType":"VariableDeclaration","scope":2582,"src":"27526:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"27526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2541,"initialValue":{"arguments":[{"expression":{"expression":{"id":2537,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"27575:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"27575:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"27575:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2536,"name":"_unrealizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"27558:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27558:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27526:67:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"addedCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"27607:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2543,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27631:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3531,"src":"27631:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27607:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"27603:70:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2546,"name":"InsufficientInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"27654:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27654:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2548,"nodeType":"RevertStatement","src":"27647:26:0"}},{"expression":{"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2550,"name":"collateralLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"27684:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2553,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27745:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}],"expression":{"id":2551,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"27705:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateCollateralAmount","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"27705:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPositionStorage.UpdateCollateralAmountParams memory) external returns (uint256)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27705:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27684:69:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ExpressionStatement","src":"27684:69:0"},{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2557,"name":"collateralReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"27764:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2561,"indexExpression":{"expression":{"expression":{"id":2558,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"27782:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"27782:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_memory_ptr","typeString":"struct IPositionStorage.Collateral memory"}},"id":2560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3424,"src":"27782:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27764:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2562,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27804:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3531,"src":"27804:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27764:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"27764:54:0"},{"eventCall":{"arguments":[{"expression":{"id":2567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27870:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27870:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2569,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27894:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3529,"src":"27894:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2571,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27927:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3531,"src":"27927:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2573,"name":"collateralLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"27955:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2574,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"27987:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updater","nodeType":"MemberAccess","referencedDeclaration":3533,"src":"27987:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2576,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"28016:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"serviceToken","nodeType":"MemberAccess","referencedDeclaration":3535,"src":"28016:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2578,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"28050:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams memory"}},"id":2579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"serviceFee","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"28050:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2566,"name":"UpdateCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"27834:22:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,address,address,uint256)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27834:244:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2581,"nodeType":"EmitStatement","src":"27829:249:0"}]},"functionSelector":"c6f61b01","id":2583,"implemented":true,"kind":"function","modifiers":[{"id":2510,"kind":"modifierInvocation","modifierName":{"id":2509,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"27260:4:0"},"nodeType":"ModifierInvocation","src":"27260:4:0"},{"id":2512,"kind":"modifierInvocation","modifierName":{"id":2511,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"27265:12:0"},"nodeType":"ModifierInvocation","src":"27265:12:0"}],"name":"updateCollateralAmount","nameLocation":"27143:22:0","nodeType":"FunctionDefinition","overrides":{"id":2508,"nodeType":"OverrideSpecifier","overrides":[],"src":"27251:8:0"},"parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"_params","nameLocation":"27228:7:0","nodeType":"VariableDeclaration","scope":2583,"src":"27175:60:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"},"typeName":{"id":2505,"nodeType":"UserDefinedTypeName","pathNode":{"id":2504,"name":"IPositionStorage.UpdateCollateralAmountParams","nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"27175:45:0"},"referencedDeclaration":3538,"src":"27175:45:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_storage_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"}},"visibility":"internal"}],"src":"27165:76:0"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"collateralLiqPrice","nameLocation":"27295:18:0","nodeType":"VariableDeclaration","scope":2583,"src":"27287:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"27287:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27286:28:0"},"scope":2664,"src":"27134:951:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3386],"body":{"id":2662,"nodeType":"Block","src":"28219:775:0","statements":[{"assignments":[2596],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"_positionStorage","nameLocation":"28246:16:0","nodeType":"VariableDeclaration","scope":2662,"src":"28229:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"},"typeName":{"id":2595,"nodeType":"UserDefinedTypeName","pathNode":{"id":2594,"name":"IPositionStorage","nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"28229:16:0"},"referencedDeclaration":3715,"src":"28229:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"id":2598,"name":"positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"28282:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2597,"name":"IPositionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"28265:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPositionStorage_$3715_$","typeString":"type(contract IPositionStorage)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28265:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"nodeType":"VariableDeclarationStatement","src":"28229:69:0"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"pos","nameLocation":"28346:3:0","nodeType":"VariableDeclaration","scope":2662,"src":"28308:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":2604,"nodeType":"UserDefinedTypeName","pathNode":{"id":2603,"name":"IPositionStorage.TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"28308:30:0"},"referencedDeclaration":3475,"src":"28308:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"id":2611,"initialValue":{"arguments":[{"expression":{"id":2608,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28391:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}},"id":2609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"28391:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2606,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"28352:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"position","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"28352:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_TradePosition_$3475_memory_ptr_$","typeString":"function (bytes32) view external returns (struct IPositionStorage.TradePosition memory)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28352:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"nodeType":"VariableDeclarationStatement","src":"28308:112:0"},{"assignments":[2613,2615],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"fee","nameLocation":"28439:3:0","nodeType":"VariableDeclaration","scope":2662,"src":"28431:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"28431:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"protocolFee","nameLocation":"28452:11:0","nodeType":"VariableDeclaration","scope":2662,"src":"28444:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"28444:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2620,"initialValue":{"arguments":[{"id":2618,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28512:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}],"expression":{"id":2616,"name":"_positionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"28467:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPositionStorage_$3715","typeString":"contract IPositionStorage"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"updateDeadline","nodeType":"MemberAccess","referencedDeclaration":3714,"src":"28467:31:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_UpdateDeadlineParams_$3549_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct IPositionStorage.UpdateDeadlineParams memory) external returns (uint256,uint256)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28467:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"28430:99:0"},{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"quoteInDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"28540:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2622,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"28555:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28540:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ExpressionStatement","src":"28540:18:0"},{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2625,"name":"accProtocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"28568:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2626,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"28586:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28568:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"28568:29:0"},{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"openInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"28607:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2630,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"28623:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28607:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"28607:19:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"28644:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2635,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"28650:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28644:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"_addFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"28636:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28636:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"ExpressionStatement","src":"28636:26:0"},{"eventCall":{"arguments":[{"expression":{"id":2640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28706:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"28706:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2642,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28730:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}},"id":2643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"positionKey","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"28730:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":2644,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"28763:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"baseToken","nodeType":"MemberAccess","referencedDeclaration":3451,"src":"28763:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_memory_ptr","typeString":"struct IPositionStorage.BaseToken memory"}},"id":2646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3408,"src":"28763:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":2647,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"28793:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition memory"}},"id":2648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"quoteToken","nodeType":"MemberAccess","referencedDeclaration":3454,"src":"28793:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_memory_ptr","typeString":"struct IPositionStorage.QuoteToken memory"}},"id":2649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"28793:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2650,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28824:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}},"id":2651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"28824:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2652,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"28854:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2653,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"28871:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2654,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28896:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"updater","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"28896:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2656,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28925:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}},"id":2657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"serviceToken","nodeType":"MemberAccess","referencedDeclaration":3546,"src":"28925:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2658,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"28959:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams memory"}},"id":2659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"serviceFee","nodeType":"MemberAccess","referencedDeclaration":3548,"src":"28959:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2639,"name":"UpdateDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"28678:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,address,address,uint256,uint256,uint256,address,address,uint256)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28678:309:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"EmitStatement","src":"28673:314:0"}]},"functionSelector":"5330e353","id":2663,"implemented":true,"kind":"function","modifiers":[{"id":2590,"kind":"modifierInvocation","modifierName":{"id":2589,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2803,"src":"28201:4:0"},"nodeType":"ModifierInvocation","src":"28201:4:0"},{"id":2592,"kind":"modifierInvocation","modifierName":{"id":2591,"name":"onlyOperator","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"28206:12:0"},"nodeType":"ModifierInvocation","src":"28206:12:0"}],"name":"updateDeadline","nameLocation":"28100:14:0","nodeType":"FunctionDefinition","overrides":{"id":2588,"nodeType":"OverrideSpecifier","overrides":[],"src":"28192:8:0"},"parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"_params","nameLocation":"28169:7:0","nodeType":"VariableDeclaration","scope":2663,"src":"28124:52:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"},"typeName":{"id":2585,"nodeType":"UserDefinedTypeName","pathNode":{"id":2584,"name":"IPositionStorage.UpdateDeadlineParams","nodeType":"IdentifierPath","referencedDeclaration":3549,"src":"28124:37:0"},"referencedDeclaration":3549,"src":"28124:37:0","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_storage_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"}},"visibility":"internal"}],"src":"28114:68:0"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[],"src":"28219:0:0"},"scope":2664,"src":"28091:903:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2665,"src":"460:28536:0","usedErrors":[80,84,90,96,104,106,108,110,114,116,118,124,2784]}],"src":"45:28952:0"}},"contracts/PoolDeployer.sol":{"id":1,"ast":{"absolutePath":"contracts/PoolDeployer.sol","exportedSymbols":{"ICloseCallback":[2818],"IDEXAggregator":[2905],"IERC20":[2990],"IFactory":[3156],"IMintCallback":[3168],"IPool":[3387],"IPoolDeployer":[3404],"IPositionStorage":[3715],"IWETH9":[3810],"IWithdrawalMonitor":[3796],"Lockable":[2804],"Pool":[2664],"PoolDeployer":[2777],"TransferHelper":[3970]},"id":2778,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2666,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:1"},{"absolutePath":"contracts/interfaces/IPoolDeployer.sol","file":"./interfaces/IPoolDeployer.sol","id":2667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2778,"sourceUnit":3405,"src":"71:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Pool.sol","file":"./Pool.sol","id":2668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2778,"sourceUnit":2665,"src":"112:20:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2669,"name":"IPoolDeployer","nodeType":"IdentifierPath","referencedDeclaration":3404,"src":"159:13:1"},"id":2670,"nodeType":"InheritanceSpecifier","src":"159:13:1"}],"canonicalName":"PoolDeployer","contractDependencies":[2664],"contractKind":"contract","fullyImplemented":true,"id":2777,"linearizedBaseContracts":[2777,3404],"name":"PoolDeployer","nameLocation":"143:12:1","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3394],"constant":false,"functionSelector":"c45a0155","id":2673,"mutability":"mutable","name":"factory","nameLocation":"203:7:1","nodeType":"VariableDeclaration","overrides":{"id":2672,"nodeType":"OverrideSpecifier","overrides":[],"src":"194:8:1"},"scope":2777,"src":"179:31:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"179:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"errorSelector":"a59d7f4d","id":2677,"name":"Forbidden","nameLocation":"223:9:1","nodeType":"ErrorDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"sender","nameLocation":"241:6:1","nodeType":"VariableDeclaration","scope":2677,"src":"233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"232:16:1"},"src":"217:32:1"},{"errorSelector":"e7d06772","id":2679,"name":"InitializedAlready","nameLocation":"260:18:1","nodeType":"ErrorDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[],"src":"278:2:1"},"src":"254:27:1"},{"anonymous":false,"eventSelector":"1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b9","id":2683,"name":"SetFactory","nameLocation":"293:10:1","nodeType":"EventDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"indexed":true,"mutability":"mutable","name":"factory","nameLocation":"320:7:1","nodeType":"VariableDeclaration","scope":2683,"src":"304:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"304:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"303:25:1"},"src":"287:42:1"},{"body":{"id":2696,"nodeType":"Block","src":"358:83:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"372:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"372:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2687,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"386:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"372:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"nodeType":"IfStatement","src":"368:55:1","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"412:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"412:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2689,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"402:9:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"402:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"RevertStatement","src":"395:28:1"}},{"id":2695,"nodeType":"PlaceholderStatement","src":"433:1:1"}]},"id":2697,"name":"onlyFactory","nameLocation":"344:11:1","nodeType":"ModifierDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"355:2:1"},"src":"335:106:1","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"494:135:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"508:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"527:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"519:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2703,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:1","typeDescriptions":{}}},"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"519:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"508:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2711,"nodeType":"IfStatement","src":"504:54:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2708,"name":"InitializedAlready","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"538:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"538:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2710,"nodeType":"RevertStatement","src":"531:27:1"}},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"568:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2713,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"578:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"568:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"nodeType":"ExpressionStatement","src":"568:18:1"},{"eventCall":{"arguments":[{"id":2717,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"613:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2716,"name":"SetFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"602:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"602:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2719,"nodeType":"EmitStatement","src":"597:25:1"}]},"functionSelector":"5bb47808","id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"setFactory","nameLocation":"456:10:1","nodeType":"FunctionDefinition","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"_factory","nameLocation":"475:8:1","nodeType":"VariableDeclaration","scope":2721,"src":"467:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"466:18:1"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[],"src":"494:0:1"},"scope":2777,"src":"447:182:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2733,"nodeType":"Block","src":"695:58:1","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":2728,"name":"Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"727:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pool_$2664_$","typeString":"type(contract Pool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_Pool_$2664_$","typeString":"type(contract Pool)"}],"id":2727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"722:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_Pool_$2664","typeString":"type(contract Pool)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"creationCode","nodeType":"MemberAccess","src":"722:23:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2726,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"712:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"712:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2725,"id":2732,"nodeType":"Return","src":"705:41:1"}]},"functionSelector":"d64efe91","id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"poolInitCodeHash","nameLocation":"644:16:1","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"660:2:1"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"686:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"686:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"685:9:1"},"scope":2777,"src":"635:118:1","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[3403],"body":{"id":2775,"nodeType":"Block","src":"902:212:1","statements":[{"expression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"944:4:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"980:8:1","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$2664_$","typeString":"function () returns (contract Pool)"},"typeName":{"id":2752,"nodeType":"UserDefinedTypeName","pathNode":{"id":2751,"name":"Pool","nodeType":"IdentifierPath","referencedDeclaration":2664,"src":"984:4:1"},"referencedDeclaration":2664,"src":"984:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["salt"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"arguments":[{"id":2757,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"1016:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2755,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1005:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1005:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1005:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2754,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"995:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"995:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"src":"980:50:1","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$2664_$salt","typeString":"function () returns (contract Pool)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"980:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"972:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:1","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"972:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"951:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"951:8:1","stateMutability":"payable","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"951:92:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"944:99:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2765,"nodeType":"ExpressionStatement","src":"944:99:1"},{"expression":{"arguments":[{"id":2770,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"1075:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2771,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"1084:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2772,"name":"_interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"1097:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2767,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1058:4:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2766,"name":"Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1053:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pool_$2664_$","typeString":"type(contract Pool)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1053:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$2664","typeString":"contract Pool"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":348,"src":"1053:21:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1053:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2774,"nodeType":"ExpressionStatement","src":"1053:54:1"}]},"functionSelector":"27c74f7f","id":2776,"implemented":true,"kind":"function","modifiers":[{"id":2742,"kind":"modifierInvocation","modifierName":{"id":2741,"name":"onlyFactory","nodeType":"IdentifierPath","referencedDeclaration":2697,"src":"859:11:1"},"nodeType":"ModifierInvocation","src":"859:11:1"}],"name":"deployPool","nameLocation":"768:10:1","nodeType":"FunctionDefinition","overrides":{"id":2740,"nodeType":"OverrideSpecifier","overrides":[],"src":"850:8:1"},"parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"_quoteToken","nameLocation":"796:11:1","nodeType":"VariableDeclaration","scope":2776,"src":"788:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2735,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"_interest","nameLocation":"825:9:1","nodeType":"VariableDeclaration","scope":2776,"src":"817:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"778:62:1"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"pool","nameLocation":"896:4:1","nodeType":"VariableDeclaration","scope":2776,"src":"880:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"880:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"879:22:1"},"scope":2777,"src":"759:355:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2778,"src":"134:982:1","usedErrors":[2677,2679]}],"src":"45:1072:1"}},"contracts/base/Lockable.sol":{"id":2,"ast":{"absolutePath":"contracts/base/Lockable.sol","exportedSymbols":{"Lockable":[2804]},"id":2805,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2779,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Lockable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2804,"linearizedBaseContracts":[2804],"name":"Lockable","nameLocation":"80:8:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2782,"mutability":"mutable","name":"unlocked","nameLocation":"111:8:2","nodeType":"VariableDeclaration","scope":2804,"src":"95:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"95:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"errorSelector":"0f2e5b6c","id":2784,"name":"Locked","nameLocation":"136:6:2","nodeType":"ErrorDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[],"src":"142:2:2"},"src":"130:15:2"},{"body":{"id":2802,"nodeType":"Block","src":"167:106:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"181:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"181:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2792,"nodeType":"IfStatement","src":"177:34:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2789,"name":"Locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"203:6:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"203:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2791,"nodeType":"RevertStatement","src":"196:15:2"}},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2793,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"221:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"221:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"221:12:2"},{"id":2797,"nodeType":"PlaceholderStatement","src":"243:1:2"},{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2798,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"254:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"265:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"254:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"254:12:2"}]},"id":2803,"name":"lock","nameLocation":"160:4:2","nodeType":"ModifierDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[],"src":"164:2:2"},"src":"151:122:2","virtual":false,"visibility":"internal"}],"scope":2805,"src":"71:204:2","usedErrors":[2784]}],"src":"45:231:2"}},"contracts/interfaces/ICloseCallback.sol":{"id":3,"ast":{"absolutePath":"contracts/interfaces/ICloseCallback.sol","exportedSymbols":{"ICloseCallback":[2818]},"id":2819,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2806,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ICloseCallback","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2818,"linearizedBaseContracts":[2818],"name":"ICloseCallback","nameLocation":"81:14:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e761f9dc","id":2817,"implemented":false,"kind":"function","modifiers":[],"name":"closeCallback","nameLocation":"111:13:3","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"_tokenIn","nameLocation":"142:8:3","nodeType":"VariableDeclaration","scope":2817,"src":"134:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"134:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"_tokenOut","nameLocation":"168:9:3","nodeType":"VariableDeclaration","scope":2817,"src":"160:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"160:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"_amountOut","nameLocation":"195:10:3","nodeType":"VariableDeclaration","scope":2817,"src":"187:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"187:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"_data","nameLocation":"230:5:3","nodeType":"VariableDeclaration","scope":2817,"src":"215:20:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2813,"name":"bytes","nodeType":"ElementaryTypeName","src":"215:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"124:117:3"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[],"src":"250:0:3"},"scope":2818,"src":"102:149:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2819,"src":"71:182:3","usedErrors":[]}],"src":"45:209:3"}},"contracts/interfaces/IDEXAggregator.sol":{"id":4,"ast":{"absolutePath":"contracts/interfaces/IDEXAggregator.sol","exportedSymbols":{"IDEXAggregator":[2905]},"id":2906,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2820,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IDEXAggregator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2905,"linearizedBaseContracts":[2905],"name":"IDEXAggregator","nameLocation":"81:14:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6338a7c0","id":2827,"implemented":false,"kind":"function","modifiers":[],"name":"dexes","nameLocation":"111:5:4","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"117:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:9:4"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"149:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"149:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"148:9:4"},"scope":2905,"src":"102:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"88a02f23","id":2834,"implemented":false,"kind":"function","modifiers":[],"name":"dexNames","nameLocation":"173:8:4","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"182:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"182:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"181:9:4"},"returnParameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"214:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2831,"name":"string","nodeType":"ElementaryTypeName","src":"214:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"213:15:4"},"scope":2905,"src":"164:65:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f54d1ce","id":2841,"implemented":false,"kind":"function","modifiers":[],"name":"dexIndex","nameLocation":"244:8:4","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"253:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"252:9:4"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"285:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"284:9:4"},"scope":2905,"src":"235:59:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"52041b5f","id":2846,"implemented":false,"kind":"function","modifiers":[],"name":"dexLength","nameLocation":"309:9:4","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[],"src":"318:2:4"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"344:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"343:9:4"},"scope":2905,"src":"300:53:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"af0d9479","id":2857,"implemented":false,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"368:12:4","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"_dex","nameLocation":"398:4:4","nodeType":"VariableDeclaration","scope":2857,"src":"390:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"_tokenIn","nameLocation":"420:8:4","nodeType":"VariableDeclaration","scope":2857,"src":"412:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"412:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"_tokenOut","nameLocation":"446:9:4","nodeType":"VariableDeclaration","scope":2857,"src":"438:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"380:81:4"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2857,"src":"485:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2854,"name":"bool","nodeType":"ElementaryTypeName","src":"485:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"484:6:4"},"scope":2905,"src":"359:132:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ec278309","id":2872,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"506:11:4","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"_dex","nameLocation":"535:4:4","nodeType":"VariableDeclaration","scope":2872,"src":"527:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"_tokenIn","nameLocation":"557:8:4","nodeType":"VariableDeclaration","scope":2872,"src":"549:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"_tokenOut","nameLocation":"583:9:4","nodeType":"VariableDeclaration","scope":2872,"src":"575:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"575:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"_amountOut","nameLocation":"610:10:4","nodeType":"VariableDeclaration","scope":2872,"src":"602:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:109:4"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"amountIn","nameLocation":"658:8:4","nodeType":"VariableDeclaration","scope":2872,"src":"650:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"650:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"dex","nameLocation":"676:3:4","nodeType":"VariableDeclaration","scope":2872,"src":"668:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"649:31:4"},"scope":2905,"src":"497:184:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d7176ca9","id":2887,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"696:12:4","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"_dex","nameLocation":"726:4:4","nodeType":"VariableDeclaration","scope":2887,"src":"718:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"_tokenIn","nameLocation":"748:8:4","nodeType":"VariableDeclaration","scope":2887,"src":"740:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"_tokenOut","nameLocation":"774:9:4","nodeType":"VariableDeclaration","scope":2887,"src":"766:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"_amountIn","nameLocation":"801:9:4","nodeType":"VariableDeclaration","scope":2887,"src":"793:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"708:108:4"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"amountOut","nameLocation":"848:9:4","nodeType":"VariableDeclaration","scope":2887,"src":"840:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"dex","nameLocation":"867:3:4","nodeType":"VariableDeclaration","scope":2887,"src":"859:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"839:32:4"},"scope":2905,"src":"687:185:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"677fdac8","id":2904,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"887:4:4","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"_dex","nameLocation":"909:4:4","nodeType":"VariableDeclaration","scope":2904,"src":"901:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"_tokenIn","nameLocation":"931:8:4","nodeType":"VariableDeclaration","scope":2904,"src":"923:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"923:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"_tokenOut","nameLocation":"957:9:4","nodeType":"VariableDeclaration","scope":2904,"src":"949:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"_minAmountOut","nameLocation":"984:13:4","nodeType":"VariableDeclaration","scope":2904,"src":"976:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"_to","nameLocation":"1015:3:4","nodeType":"VariableDeclaration","scope":2904,"src":"1007:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"891:133:4"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"amountOut","nameLocation":"1051:9:4","nodeType":"VariableDeclaration","scope":2904,"src":"1043:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"dex","nameLocation":"1070:3:4","nodeType":"VariableDeclaration","scope":2904,"src":"1062:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1042:32:4"},"scope":2905,"src":"878:197:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2906,"src":"71:1006:4","usedErrors":[]}],"src":"45:1033:4"}},"contracts/interfaces/IERC20.sol":{"id":5,"ast":{"absolutePath":"contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2990]},"id":2991,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2907,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2990,"linearizedBaseContracts":[2990],"name":"IERC20","nameLocation":"81:6:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":2912,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"103:4:5","nodeType":"FunctionDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[],"src":"107:2:5"},"returnParameters":{"id":2911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2912,"src":"133:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2909,"name":"string","nodeType":"ElementaryTypeName","src":"133:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"132:15:5"},"scope":2990,"src":"94:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":2917,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"163:6:5","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[],"src":"169:2:5"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2917,"src":"195:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2914,"name":"string","nodeType":"ElementaryTypeName","src":"195:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"194:15:5"},"scope":2990,"src":"154:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":2922,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"225:8:5","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[],"src":"233:2:5"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2922,"src":"259:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2919,"name":"uint8","nodeType":"ElementaryTypeName","src":"259:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"258:7:5"},"scope":2990,"src":"216:50:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":2927,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"281:11:5","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[],"src":"292:2:5"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2927,"src":"318:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:5"},"scope":2990,"src":"272:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":2934,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"342:9:5","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"352:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"351:9:5"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"384:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"383:9:5"},"scope":2990,"src":"333:60:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":2943,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"408:9:5","nodeType":"FunctionDefinition","parameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"_owner","nameLocation":"435:6:5","nodeType":"VariableDeclaration","scope":2943,"src":"427:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"_spender","nameLocation":"459:8:5","nodeType":"VariableDeclaration","scope":2943,"src":"451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:56:5"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2943,"src":"497:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:5"},"scope":2990,"src":"399:107:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":2952,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"521:7:5","nodeType":"FunctionDefinition","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"_spender","nameLocation":"537:8:5","nodeType":"VariableDeclaration","scope":2952,"src":"529:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2947,"mutability":"mutable","name":"_value","nameLocation":"555:6:5","nodeType":"VariableDeclaration","scope":2952,"src":"547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:34:5"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"581:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2949,"name":"bool","nodeType":"ElementaryTypeName","src":"581:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"580:6:5"},"scope":2990,"src":"512:75:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":2961,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"602:8:5","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"_to","nameLocation":"619:3:5","nodeType":"VariableDeclaration","scope":2961,"src":"611:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"_value","nameLocation":"632:6:5","nodeType":"VariableDeclaration","scope":2961,"src":"624:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:29:5"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"658:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2958,"name":"bool","nodeType":"ElementaryTypeName","src":"658:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"657:6:5"},"scope":2990,"src":"593:71:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":2972,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"679:12:5","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"_from","nameLocation":"709:5:5","nodeType":"VariableDeclaration","scope":2972,"src":"701:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"_to","nameLocation":"732:3:5","nodeType":"VariableDeclaration","scope":2972,"src":"724:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"_value","nameLocation":"753:6:5","nodeType":"VariableDeclaration","scope":2972,"src":"745:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:74:5"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2972,"src":"784:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2969,"name":"bool","nodeType":"ElementaryTypeName","src":"784:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"783:6:5"},"scope":2990,"src":"670:120:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":2989,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"805:6:5","nodeType":"FunctionDefinition","parameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"_owner","nameLocation":"829:6:5","nodeType":"VariableDeclaration","scope":2989,"src":"821:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"_spender","nameLocation":"853:8:5","nodeType":"VariableDeclaration","scope":2989,"src":"845:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"_value","nameLocation":"879:6:5","nodeType":"VariableDeclaration","scope":2989,"src":"871:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"_deadline","nameLocation":"903:9:5","nodeType":"VariableDeclaration","scope":2989,"src":"895:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"_v","nameLocation":"928:2:5","nodeType":"VariableDeclaration","scope":2989,"src":"922:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2981,"name":"uint8","nodeType":"ElementaryTypeName","src":"922:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"_r","nameLocation":"948:2:5","nodeType":"VariableDeclaration","scope":2989,"src":"940:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"_s","nameLocation":"968:2:5","nodeType":"VariableDeclaration","scope":2989,"src":"960:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"960:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:165:5"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[],"src":"985:0:5"},"scope":2990,"src":"796:190:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2991,"src":"71:917:5","usedErrors":[]}],"src":"45:944:5"}},"contracts/interfaces/IFactory.sol":{"id":6,"ast":{"absolutePath":"contracts/interfaces/IFactory.sol","exportedSymbols":{"IFactory":[3156]},"id":3157,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2992,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3156,"linearizedBaseContracts":[3156],"name":"IFactory","nameLocation":"81:8:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"481c6a75","id":2997,"implemented":false,"kind":"function","modifiers":[],"name":"manager","nameLocation":"105:7:6","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[],"src":"112:2:6"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"138:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"138:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"137:9:6"},"scope":3156,"src":"96:51:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3119049a","id":3002,"implemented":false,"kind":"function","modifiers":[],"name":"poolDeployer","nameLocation":"162:12:6","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[],"src":"174:2:6"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3002,"src":"200:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"199:9:6"},"scope":3156,"src":"153:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8cd47415","id":3007,"implemented":false,"kind":"function","modifiers":[],"name":"positionStorage","nameLocation":"224:15:6","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[],"src":"239:2:6"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"265:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3004,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"264:9:6"},"scope":3156,"src":"215:59:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a4fbc0d7","id":3012,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawalMonitor","nameLocation":"289:17:6","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[],"src":"306:2:6"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"332:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"331:9:6"},"scope":3156,"src":"280:61:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"75e58079","id":3017,"implemented":false,"kind":"function","modifiers":[],"name":"userStorage","nameLocation":"356:11:6","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[],"src":"367:2:6"},"returnParameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"393:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3014,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"392:9:6"},"scope":3156,"src":"347:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"741bef1a","id":3022,"implemented":false,"kind":"function","modifiers":[],"name":"priceFeed","nameLocation":"417:9:6","nodeType":"FunctionDefinition","parameters":{"id":3018,"nodeType":"ParameterList","parameters":[],"src":"426:2:6"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3022,"src":"452:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"452:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"451:9:6"},"scope":3156,"src":"408:53:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c21d5e0","id":3027,"implemented":false,"kind":"function","modifiers":[],"name":"dexAggregator","nameLocation":"476:13:6","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[],"src":"489:2:6"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"515:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3024,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:9:6"},"scope":3156,"src":"467:57:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"58f85880","id":3032,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFeeRate","nameLocation":"539:15:6","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[],"src":"554:2:6"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3032,"src":"580:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:9:6"},"scope":3156,"src":"530:59:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ef369252","id":3037,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFeeTo","nameLocation":"604:13:6","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[],"src":"617:2:6"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3037,"src":"643:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3034,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"642:9:6"},"scope":3156,"src":"595:57:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5fb3b1b5","id":3042,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationFeeRate","nameLocation":"667:18:6","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[],"src":"685:2:6"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3042,"src":"711:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"710:9:6"},"scope":3156,"src":"658:62:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bd2bae9d","id":3047,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationFeeTo","nameLocation":"735:16:6","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[],"src":"751:2:6"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"777:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:9:6"},"scope":3156,"src":"726:60:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b7692968","id":3052,"implemented":false,"kind":"function","modifiers":[],"name":"serviceToken","nameLocation":"801:12:6","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[],"src":"813:2:6"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"839:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:9:6"},"scope":3156,"src":"792:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e9a4e7a2","id":3057,"implemented":false,"kind":"function","modifiers":[],"name":"serviceFeeTo","nameLocation":"863:12:6","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[],"src":"875:2:6"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"901:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3054,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"900:9:6"},"scope":3156,"src":"854:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3c093037","id":3062,"implemented":false,"kind":"function","modifiers":[],"name":"rollbackFee","nameLocation":"925:11:6","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[],"src":"936:2:6"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3062,"src":"962:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"961:9:6"},"scope":3156,"src":"916:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b6a9b90d","id":3067,"implemented":false,"kind":"function","modifiers":[],"name":"updateTPnSLFee","nameLocation":"986:14:6","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[],"src":"1000:2:6"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"1026:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1025:9:6"},"scope":3156,"src":"977:58:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2a5025b7","id":3072,"implemented":false,"kind":"function","modifiers":[],"name":"updateCollateralAmountFee","nameLocation":"1050:25:6","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[],"src":"1075:2:6"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3072,"src":"1101:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1100:9:6"},"scope":3156,"src":"1041:69:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c7900584","id":3077,"implemented":false,"kind":"function","modifiers":[],"name":"updateDeadlineFee","nameLocation":"1125:17:6","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[],"src":"1142:2:6"},"returnParameters":{"id":3076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3077,"src":"1168:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1167:9:6"},"scope":3156,"src":"1116:61:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6d274553","id":3082,"implemented":false,"kind":"function","modifiers":[],"name":"minQuoteRate","nameLocation":"1192:12:6","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[],"src":"1204:2:6"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3082,"src":"1230:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:6"},"scope":3156,"src":"1183:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eddf82bb","id":3087,"implemented":false,"kind":"function","modifiers":[],"name":"manualExpiration","nameLocation":"1254:16:6","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[],"src":"1270:2:6"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"1296:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:9:6"},"scope":3156,"src":"1245:60:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a307391","id":3094,"implemented":false,"kind":"function","modifiers":[],"name":"operator","nameLocation":"1320:8:6","nodeType":"FunctionDefinition","parameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"1329:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1328:9:6"},"returnParameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"1361:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3091,"name":"bool","nodeType":"ElementaryTypeName","src":"1361:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1360:6:6"},"scope":3156,"src":"1311:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ac4afa38","id":3101,"implemented":false,"kind":"function","modifiers":[],"name":"pools","nameLocation":"1382:5:6","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3101,"src":"1388:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:9:6"},"returnParameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3101,"src":"1420:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1419:9:6"},"scope":3156,"src":"1373:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"081e3eda","id":3106,"implemented":false,"kind":"function","modifiers":[],"name":"poolLength","nameLocation":"1444:10:6","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[],"src":"1454:2:6"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3106,"src":"1480:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1479:9:6"},"scope":3156,"src":"1435:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b42754a5","id":3113,"implemented":false,"kind":"function","modifiers":[],"name":"poolIndex","nameLocation":"1504:9:6","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3113,"src":"1514:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1513:9:6"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3113,"src":"1546:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1546:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1545:9:6"},"scope":3156,"src":"1495:60:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4d83bc33","id":3120,"implemented":false,"kind":"function","modifiers":[],"name":"poolByQuoteToken","nameLocation":"1570:16:6","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3120,"src":"1587:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1586:9:6"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3120,"src":"1619:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"1619:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1618:9:6"},"scope":3156,"src":"1561:67:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b745db56","id":3127,"implemented":false,"kind":"function","modifiers":[],"name":"baseTokenMUT","nameLocation":"1643:12:6","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"1656:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3121,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1655:9:6"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"1688:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1687:9:6"},"scope":3156,"src":"1634:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095bf1bb","id":3134,"implemented":false,"kind":"function","modifiers":[],"name":"collateralMUT","nameLocation":"1712:13:6","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"1726:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3128,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1725:9:6"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"1758:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1757:9:6"},"scope":3156,"src":"1703:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d0e175","id":3141,"implemented":false,"kind":"function","modifiers":[],"name":"baseTokenLT","nameLocation":"1782:11:6","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3141,"src":"1794:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1793:9:6"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3141,"src":"1826:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1825:9:6"},"scope":3156,"src":"1773:62:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5fde0ec0","id":3148,"implemented":false,"kind":"function","modifiers":[],"name":"collateralLT","nameLocation":"1850:12:6","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"1863:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1862:9:6"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3148,"src":"1895:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1894:9:6"},"scope":3156,"src":"1841:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ac436bdf","id":3155,"implemented":false,"kind":"function","modifiers":[],"name":"interest","nameLocation":"1919:8:6","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"_quoteToken","nameLocation":"1936:11:6","nodeType":"VariableDeclaration","scope":3155,"src":"1928:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3149,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1927:21:6"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"1972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:6"},"scope":3156,"src":"1910:71:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3157,"src":"71:1912:6","usedErrors":[]}],"src":"45:1939:6"}},"contracts/interfaces/IMintCallback.sol":{"id":7,"ast":{"absolutePath":"contracts/interfaces/IMintCallback.sol","exportedSymbols":{"IMintCallback":[3168]},"id":3169,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3158,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IMintCallback","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3168,"linearizedBaseContracts":[3168],"name":"IMintCallback","nameLocation":"81:13:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"03a3bcd7","id":3167,"implemented":false,"kind":"function","modifiers":[],"name":"mintCallback","nameLocation":"110:12:7","nodeType":"FunctionDefinition","parameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"_token","nameLocation":"140:6:7","nodeType":"VariableDeclaration","scope":3167,"src":"132:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"132:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"_liquidity","nameLocation":"164:10:7","nodeType":"VariableDeclaration","scope":3167,"src":"156:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"_data","nameLocation":"199:5:7","nodeType":"VariableDeclaration","scope":3167,"src":"184:20:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"184:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"122:88:7"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[],"src":"219:0:7"},"scope":3168,"src":"101:119:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3169,"src":"71:151:7","usedErrors":[]}],"src":"45:178:7"}},"contracts/interfaces/IPool.sol":{"id":8,"ast":{"absolutePath":"contracts/interfaces/IPool.sol","exportedSymbols":{"IPool":[3387],"IPositionStorage":[3715],"IWithdrawalMonitor":[3796]},"id":3388,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3170,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:8"},{"absolutePath":"contracts/interfaces/IPositionStorage.sol","file":"./IPositionStorage.sol","id":3171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3388,"sourceUnit":3716,"src":"71:32:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IWithdrawalMonitor.sol","file":"./IWithdrawalMonitor.sol","id":3172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3388,"sourceUnit":3797,"src":"104:34:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3387,"linearizedBaseContracts":[3387],"name":"IPool","nameLocation":"150:5:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPool.LiquidityPosition","id":3181,"members":[{"constant":false,"id":3174,"mutability":"mutable","name":"liquidity","nameLocation":"205:9:8","nodeType":"VariableDeclaration","scope":3181,"src":"197:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"feeDebt","nameLocation":"232:7:8","nodeType":"VariableDeclaration","scope":3181,"src":"224:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"pendingFee","nameLocation":"257:10:8","nodeType":"VariableDeclaration","scope":3181,"src":"249:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"withdrawingLiquidity","nameLocation":"285:20:8","nodeType":"VariableDeclaration","scope":3181,"src":"277:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"LiquidityPosition","nameLocation":"169:17:8","nodeType":"StructDefinition","scope":3387,"src":"162:150:8","visibility":"public"},{"functionSelector":"c45a0155","id":3186,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"327:7:8","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[],"src":"334:2:8"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3186,"src":"360:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"360:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"359:9:8"},"scope":3387,"src":"318:51:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8cd47415","id":3191,"implemented":false,"kind":"function","modifiers":[],"name":"positionStorage","nameLocation":"384:15:8","nodeType":"FunctionDefinition","parameters":{"id":3187,"nodeType":"ParameterList","parameters":[],"src":"399:2:8"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"425:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:9:8"},"scope":3387,"src":"375:59:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a4fbc0d7","id":3196,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawalMonitor","nameLocation":"449:17:8","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[],"src":"466:2:8"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3196,"src":"492:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"492:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"491:9:8"},"scope":3387,"src":"440:61:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"217a4b70","id":3201,"implemented":false,"kind":"function","modifiers":[],"name":"quoteToken","nameLocation":"516:10:8","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"526:2:8"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3201,"src":"552:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"551:9:8"},"scope":3387,"src":"507:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d3b5dc3b","id":3206,"implemented":false,"kind":"function","modifiers":[],"name":"precision","nameLocation":"576:9:8","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[],"src":"585:2:8"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"611:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:9:8"},"scope":3387,"src":"567:53:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c392f766","id":3211,"implemented":false,"kind":"function","modifiers":[],"name":"interest","nameLocation":"635:8:8","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[],"src":"643:2:8"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3211,"src":"669:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"668:9:8"},"scope":3387,"src":"626:52:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dc6638f4","id":3216,"implemented":false,"kind":"function","modifiers":[],"name":"maxOpenInterest","nameLocation":"693:15:8","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[],"src":"708:2:8"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"734:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:9:8"},"scope":3387,"src":"684:59:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fa5a2e62","id":3221,"implemented":false,"kind":"function","modifiers":[],"name":"openInterest","nameLocation":"758:12:8","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[],"src":"770:2:8"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"796:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:9:8"},"scope":3387,"src":"749:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9da771f4","id":3226,"implemented":false,"kind":"function","modifiers":[],"name":"quoteReserve","nameLocation":"820:12:8","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[],"src":"832:2:8"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3226,"src":"858:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"857:9:8"},"scope":3387,"src":"811:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"685b61d0","id":3231,"implemented":false,"kind":"function","modifiers":[],"name":"quoteInDebt","nameLocation":"882:11:8","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[],"src":"893:2:8"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3231,"src":"919:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"918:9:8"},"scope":3387,"src":"873:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0121c777","id":3236,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawingLiquidity","nameLocation":"943:20:8","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"963:2:8"},"returnParameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3236,"src":"989:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:9:8"},"scope":3387,"src":"934:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ada3112f","id":3241,"implemented":false,"kind":"function","modifiers":[],"name":"accFee","nameLocation":"1013:6:8","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[],"src":"1019:2:8"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"1045:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1044:9:8"},"scope":3387,"src":"1004:50:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"27014e33","id":3246,"implemented":false,"kind":"function","modifiers":[],"name":"accProtocolFee","nameLocation":"1069:14:8","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[],"src":"1083:2:8"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"1109:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1108:9:8"},"scope":3387,"src":"1060:58:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd3b829a","id":3251,"implemented":false,"kind":"function","modifiers":[],"name":"accFeePerShare","nameLocation":"1133:14:8","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[],"src":"1147:2:8"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"1173:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1172:9:8"},"scope":3387,"src":"1124:58:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0adcf0f5","id":3258,"implemented":false,"kind":"function","modifiers":[],"name":"tradeableBaseToken","nameLocation":"1197:18:8","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"1216:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1215:9:8"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"1248:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3255,"name":"bool","nodeType":"ElementaryTypeName","src":"1248:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1247:6:8"},"scope":3387,"src":"1188:66:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ffc9dcbb","id":3265,"implemented":false,"kind":"function","modifiers":[],"name":"baseReserve","nameLocation":"1269:11:8","nodeType":"FunctionDefinition","parameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"1281:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1280:9:8"},"returnParameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"1313:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1312:9:8"},"scope":3387,"src":"1260:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8b6e00fa","id":3272,"implemented":false,"kind":"function","modifiers":[],"name":"collateralReserve","nameLocation":"1337:17:8","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"1355:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"1355:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1354:9:8"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"1387:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1386:9:8"},"scope":3387,"src":"1328:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"74375359","id":3277,"implemented":false,"kind":"function","modifiers":[],"name":"availableLiquidity","nameLocation":"1411:18:8","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[],"src":"1429:2:8"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"1455:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1454:9:8"},"scope":3387,"src":"1402:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d4fd6905","id":3290,"implemented":false,"kind":"function","modifiers":[],"name":"liquidityPosition","nameLocation":"1479:17:8","nodeType":"FunctionDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"1506:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3278,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1496:23:8"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"liquidity","nameLocation":"1588:9:8","nodeType":"VariableDeclaration","scope":3290,"src":"1580:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"feeDebt","nameLocation":"1619:7:8","nodeType":"VariableDeclaration","scope":3290,"src":"1611:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"pendingFee","nameLocation":"1648:10:8","nodeType":"VariableDeclaration","scope":3290,"src":"1640:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"withdrawingLiquidity","nameLocation":"1680:20:8","nodeType":"VariableDeclaration","scope":3290,"src":"1672:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1566:144:8"},"scope":3387,"src":"1470:241:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a1c59afc","id":3297,"implemented":false,"kind":"function","modifiers":[],"name":"claimableFee","nameLocation":"1726:12:8","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3297,"src":"1739:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"1739:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1738:9:8"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3297,"src":"1771:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1770:9:8"},"scope":3387,"src":"1717:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1d086720","id":3302,"implemented":false,"kind":"function","modifiers":[],"name":"setInterest","nameLocation":"1795:11:8","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"1807:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1806:9:8"},"returnParameters":{"id":3301,"nodeType":"ParameterList","parameters":[],"src":"1824:0:8"},"scope":3387,"src":"1786:39:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40650eef","id":3307,"implemented":false,"kind":"function","modifiers":[],"name":"setMaxOpenInterest","nameLocation":"1840:18:8","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"1859:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1858:9:8"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[],"src":"1876:0:8"},"scope":3387,"src":"1831:46:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"32196a01","id":3316,"implemented":false,"kind":"function","modifiers":[],"name":"setBaseTokens","nameLocation":"1892:13:8","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"_baseTokens","nameLocation":"1932:11:8","nodeType":"VariableDeclaration","scope":3316,"src":"1915:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"1915:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3309,"nodeType":"ArrayTypeName","src":"1915:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"_tradeables","nameLocation":"1967:11:8","nodeType":"VariableDeclaration","scope":3316,"src":"1953:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3311,"name":"bool","nodeType":"ElementaryTypeName","src":"1953:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3312,"nodeType":"ArrayTypeName","src":"1953:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"1905:79:8"},"returnParameters":{"id":3315,"nodeType":"ParameterList","parameters":[],"src":"1993:0:8"},"scope":3387,"src":"1883:111:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ba343922","id":3319,"implemented":false,"kind":"function","modifiers":[],"name":"availLiquidity","nameLocation":"2009:14:8","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"2023:2:8"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[],"src":"2034:0:8"},"scope":3387,"src":"2000:35:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"94d008ef","id":3328,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2050:4:8","nodeType":"FunctionDefinition","parameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"_to","nameLocation":"2072:3:8","nodeType":"VariableDeclaration","scope":3328,"src":"2064:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"2064:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"_liquidity","nameLocation":"2093:10:8","nodeType":"VariableDeclaration","scope":3328,"src":"2085:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"_data","nameLocation":"2128:5:8","nodeType":"VariableDeclaration","scope":3328,"src":"2113:20:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3324,"name":"bytes","nodeType":"ElementaryTypeName","src":"2113:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2054:85:8"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"2148:0:8"},"scope":3387,"src":"2041:108:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b8357ac","id":3335,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"2164:7:8","nodeType":"FunctionDefinition","parameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"_to","nameLocation":"2180:3:8","nodeType":"VariableDeclaration","scope":3335,"src":"2172:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"_amount","nameLocation":"2193:7:8","nodeType":"VariableDeclaration","scope":3335,"src":"2185:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2171:30:8"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[],"src":"2210:0:8"},"scope":3387,"src":"2155:56:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"653741ff","id":3346,"implemented":false,"kind":"function","modifiers":[],"name":"addBurnRequest","nameLocation":"2226:14:8","nodeType":"FunctionDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"_liquidity","nameLocation":"2258:10:8","nodeType":"VariableDeclaration","scope":3346,"src":"2250:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"_to","nameLocation":"2286:3:8","nodeType":"VariableDeclaration","scope":3346,"src":"2278:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"_data","nameLocation":"2314:5:8","nodeType":"VariableDeclaration","scope":3346,"src":"2299:20:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3340,"name":"bytes","nodeType":"ElementaryTypeName","src":"2299:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2240:85:8"},"returnParameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"2344:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:9:8"},"scope":3387,"src":"2217:136:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fb2b74b2","id":3352,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2368:4:8","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3352,"src":"2373:43:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_memory_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest"},"typeName":{"id":3348,"nodeType":"UserDefinedTypeName","pathNode":{"id":3347,"name":"IWithdrawalMonitor.WithdrawalRequest","nodeType":"IdentifierPath","referencedDeclaration":3730,"src":"2373:36:8"},"referencedDeclaration":3730,"src":"2373:36:8","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalRequest_$3730_storage_ptr","typeString":"struct IWithdrawalMonitor.WithdrawalRequest"}},"visibility":"internal"}],"src":"2372:45:8"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"2426:0:8"},"scope":3387,"src":"2359:68:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"122f7e8b","id":3360,"implemented":false,"kind":"function","modifiers":[],"name":"open","nameLocation":"2442:4:8","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3360,"src":"2456:47:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"},"typeName":{"id":3354,"nodeType":"UserDefinedTypeName","pathNode":{"id":3353,"name":"IPositionStorage.OpenTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"2456:40:8"},"referencedDeclaration":3496,"src":"2456:40:8","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_storage_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"}},"visibility":"internal"}],"src":"2446:63:8"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3360,"src":"2528:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2528:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2527:9:8"},"scope":3387,"src":"2433:104:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fba0c814","id":3366,"implemented":false,"kind":"function","modifiers":[],"name":"close","nameLocation":"2552:5:8","nodeType":"FunctionDefinition","parameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3366,"src":"2558:50:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_calldata_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams"},"typeName":{"id":3362,"nodeType":"UserDefinedTypeName","pathNode":{"id":3361,"name":"IPositionStorage.CloseTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3505,"src":"2558:41:8"},"referencedDeclaration":3505,"src":"2558:41:8","typeDescriptions":{"typeIdentifier":"t_struct$_CloseTradePositionParams_$3505_storage_ptr","typeString":"struct IPositionStorage.CloseTradePositionParams"}},"visibility":"internal"}],"src":"2557:52:8"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[],"src":"2618:0:8"},"scope":3387,"src":"2543:76:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"19972a50","id":3372,"implemented":false,"kind":"function","modifiers":[],"name":"rollback","nameLocation":"2634:8:8","nodeType":"FunctionDefinition","parameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3372,"src":"2652:51:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_memory_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams"},"typeName":{"id":3368,"nodeType":"UserDefinedTypeName","pathNode":{"id":3367,"name":"IPositionStorage.RollbackTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3514,"src":"2652:44:8"},"referencedDeclaration":3514,"src":"2652:44:8","typeDescriptions":{"typeIdentifier":"t_struct$_RollbackTradePositionParams_$3514_storage_ptr","typeString":"struct IPositionStorage.RollbackTradePositionParams"}},"visibility":"internal"}],"src":"2642:67:8"},"returnParameters":{"id":3371,"nodeType":"ParameterList","parameters":[],"src":"2718:0:8"},"scope":3387,"src":"2625:94:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c6f61b01","id":3380,"implemented":false,"kind":"function","modifiers":[],"name":"updateCollateralAmount","nameLocation":"2734:22:8","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3380,"src":"2766:52:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"},"typeName":{"id":3374,"nodeType":"UserDefinedTypeName","pathNode":{"id":3373,"name":"IPositionStorage.UpdateCollateralAmountParams","nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"2766:45:8"},"referencedDeclaration":3538,"src":"2766:45:8","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_storage_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"}},"visibility":"internal"}],"src":"2756:68:8"},"returnParameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"collateralLiqPrice","nameLocation":"2851:18:8","nodeType":"VariableDeclaration","scope":3380,"src":"2843:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2843:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2842:28:8"},"scope":3387,"src":"2725:146:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5330e353","id":3386,"implemented":false,"kind":"function","modifiers":[],"name":"updateDeadline","nameLocation":"2886:14:8","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3386,"src":"2910:44:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"},"typeName":{"id":3382,"nodeType":"UserDefinedTypeName","pathNode":{"id":3381,"name":"IPositionStorage.UpdateDeadlineParams","nodeType":"IdentifierPath","referencedDeclaration":3549,"src":"2910:37:8"},"referencedDeclaration":3549,"src":"2910:37:8","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_storage_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"}},"visibility":"internal"}],"src":"2900:60:8"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[],"src":"2969:0:8"},"scope":3387,"src":"2877:93:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3388,"src":"140:2832:8","usedErrors":[]}],"src":"45:2928:8"}},"contracts/interfaces/IPoolDeployer.sol":{"id":9,"ast":{"absolutePath":"contracts/interfaces/IPoolDeployer.sol","exportedSymbols":{"IPoolDeployer":[3404]},"id":3405,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3389,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolDeployer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3404,"linearizedBaseContracts":[3404],"name":"IPoolDeployer","nameLocation":"81:13:9","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":3394,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"110:7:9","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[],"src":"117:2:9"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"143:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3391,"name":"address","nodeType":"ElementaryTypeName","src":"143:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"142:9:9"},"scope":3404,"src":"101:51:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"27c74f7f","id":3403,"implemented":false,"kind":"function","modifiers":[],"name":"deployPool","nameLocation":"167:10:9","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"_quoteToken","nameLocation":"195:11:9","nodeType":"VariableDeclaration","scope":3403,"src":"187:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3395,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"_interest","nameLocation":"224:9:9","nodeType":"VariableDeclaration","scope":3403,"src":"216:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"216:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177:62:9"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"pool","nameLocation":"274:4:9","nodeType":"VariableDeclaration","scope":3403,"src":"258:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"258:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"257:22:9"},"scope":3404,"src":"158:122:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3405,"src":"71:211:9","usedErrors":[]}],"src":"45:238:9"}},"contracts/interfaces/IPositionStorage.sol":{"id":10,"ast":{"absolutePath":"contracts/interfaces/IPositionStorage.sol","exportedSymbols":{"IPositionStorage":[3715]},"id":3716,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3406,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IPositionStorage","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3715,"linearizedBaseContracts":[3715],"name":"IPositionStorage","nameLocation":"81:16:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPositionStorage.BaseToken","id":3417,"members":[{"constant":false,"id":3408,"mutability":"mutable","name":"id","nameLocation":"139:2:10","nodeType":"VariableDeclaration","scope":3417,"src":"131:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3407,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"amount","nameLocation":"159:6:10","nodeType":"VariableDeclaration","scope":3417,"src":"151:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"151:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"entryPrice","nameLocation":"183:10:10","nodeType":"VariableDeclaration","scope":3417,"src":"175:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"liqPrice","nameLocation":"211:8:10","nodeType":"VariableDeclaration","scope":3417,"src":"203:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"closePrice","nameLocation":"237:10:10","nodeType":"VariableDeclaration","scope":3417,"src":"229:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"229:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BaseToken","nameLocation":"111:9:10","nodeType":"StructDefinition","scope":3715,"src":"104:150:10","visibility":"public"},{"canonicalName":"IPositionStorage.QuoteToken","id":3422,"members":[{"constant":false,"id":3419,"mutability":"mutable","name":"id","nameLocation":"295:2:10","nodeType":"VariableDeclaration","scope":3422,"src":"287:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3418,"name":"address","nodeType":"ElementaryTypeName","src":"287:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"amount","nameLocation":"315:6:10","nodeType":"VariableDeclaration","scope":3422,"src":"307:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"QuoteToken","nameLocation":"266:10:10","nodeType":"StructDefinition","scope":3715,"src":"259:69:10","visibility":"public"},{"canonicalName":"IPositionStorage.Collateral","id":3433,"members":[{"constant":false,"id":3424,"mutability":"mutable","name":"id","nameLocation":"369:2:10","nodeType":"VariableDeclaration","scope":3433,"src":"361:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"amount","nameLocation":"389:6:10","nodeType":"VariableDeclaration","scope":3433,"src":"381:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"entryPrice","nameLocation":"413:10:10","nodeType":"VariableDeclaration","scope":3433,"src":"405:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"liqPrice","nameLocation":"441:8:10","nodeType":"VariableDeclaration","scope":3433,"src":"433:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"closePrice","nameLocation":"467:10:10","nodeType":"VariableDeclaration","scope":3433,"src":"459:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Collateral","nameLocation":"340:10:10","nodeType":"StructDefinition","scope":3715,"src":"333:151:10","visibility":"public"},{"canonicalName":"IPositionStorage.Status","id":3442,"members":[{"constant":false,"id":3435,"mutability":"mutable","name":"isClosed","nameLocation":"518:8:10","nodeType":"VariableDeclaration","scope":3442,"src":"513:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3434,"name":"bool","nodeType":"ElementaryTypeName","src":"513:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"isRollbacked","nameLocation":"541:12:10","nodeType":"VariableDeclaration","scope":3442,"src":"536:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3436,"name":"bool","nodeType":"ElementaryTypeName","src":"536:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"isClosedManuallyStep1","nameLocation":"568:21:10","nodeType":"VariableDeclaration","scope":3442,"src":"563:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3438,"name":"bool","nodeType":"ElementaryTypeName","src":"563:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"isClosedManuallyStep2","nameLocation":"604:21:10","nodeType":"VariableDeclaration","scope":3442,"src":"599:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3440,"name":"bool","nodeType":"ElementaryTypeName","src":"599:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Status","nameLocation":"496:6:10","nodeType":"StructDefinition","scope":3715,"src":"489:143:10","visibility":"public"},{"canonicalName":"IPositionStorage.TradePosition","id":3475,"members":[{"constant":false,"id":3444,"mutability":"mutable","name":"positionKey","nameLocation":"676:11:10","nodeType":"VariableDeclaration","scope":3475,"src":"668:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"668:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"owner","nameLocation":"705:5:10","nodeType":"VariableDeclaration","scope":3475,"src":"697:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3445,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"pool","nameLocation":"728:4:10","nodeType":"VariableDeclaration","scope":3475,"src":"720:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3451,"mutability":"mutable","name":"baseToken","nameLocation":"752:9:10","nodeType":"VariableDeclaration","scope":3475,"src":"742:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_storage_ptr","typeString":"struct IPositionStorage.BaseToken"},"typeName":{"id":3450,"nodeType":"UserDefinedTypeName","pathNode":{"id":3449,"name":"BaseToken","nodeType":"IdentifierPath","referencedDeclaration":3417,"src":"742:9:10"},"referencedDeclaration":3417,"src":"742:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BaseToken_$3417_storage_ptr","typeString":"struct IPositionStorage.BaseToken"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"quoteToken","nameLocation":"782:10:10","nodeType":"VariableDeclaration","scope":3475,"src":"771:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_storage_ptr","typeString":"struct IPositionStorage.QuoteToken"},"typeName":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"QuoteToken","nodeType":"IdentifierPath","referencedDeclaration":3422,"src":"771:10:10"},"referencedDeclaration":3422,"src":"771:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteToken_$3422_storage_ptr","typeString":"struct IPositionStorage.QuoteToken"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"collateral","nameLocation":"813:10:10","nodeType":"VariableDeclaration","scope":3475,"src":"802:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_storage_ptr","typeString":"struct IPositionStorage.Collateral"},"typeName":{"id":3456,"nodeType":"UserDefinedTypeName","pathNode":{"id":3455,"name":"Collateral","nodeType":"IdentifierPath","referencedDeclaration":3433,"src":"802:10:10"},"referencedDeclaration":3433,"src":"802:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Collateral_$3433_storage_ptr","typeString":"struct IPositionStorage.Collateral"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"deadline","nameLocation":"841:8:10","nodeType":"VariableDeclaration","scope":3475,"src":"833:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"stoplossPrice","nameLocation":"867:13:10","nodeType":"VariableDeclaration","scope":3475,"src":"859:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3463,"mutability":"mutable","name":"takeProfitPrice","nameLocation":"898:15:10","nodeType":"VariableDeclaration","scope":3475,"src":"890:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"fee","nameLocation":"931:3:10","nodeType":"VariableDeclaration","scope":3475,"src":"923:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3467,"mutability":"mutable","name":"protocolFee","nameLocation":"952:11:10","nodeType":"VariableDeclaration","scope":3475,"src":"944:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3466,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"status","nameLocation":"980:6:10","nodeType":"VariableDeclaration","scope":3475,"src":"973:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Status_$3442_storage_ptr","typeString":"struct IPositionStorage.Status"},"typeName":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"Status","nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"973:6:10"},"referencedDeclaration":3442,"src":"973:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Status_$3442_storage_ptr","typeString":"struct IPositionStorage.Status"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"closer","nameLocation":"1004:6:10","nodeType":"VariableDeclaration","scope":3475,"src":"996:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"liquidationMarkTime","nameLocation":"1028:19:10","nodeType":"VariableDeclaration","scope":3475,"src":"1020:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1020:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TradePosition","nameLocation":"644:13:10","nodeType":"StructDefinition","scope":3715,"src":"637:417:10","visibility":"public"},{"canonicalName":"IPositionStorage.OpenTradePositionParams","id":3496,"members":[{"constant":false,"id":3477,"mutability":"mutable","name":"owner","nameLocation":"1108:5:10","nodeType":"VariableDeclaration","scope":3496,"src":"1100:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3476,"name":"address","nodeType":"ElementaryTypeName","src":"1100:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"baseToken","nameLocation":"1131:9:10","nodeType":"VariableDeclaration","scope":3496,"src":"1123:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"quoteToken","nameLocation":"1158:10:10","nodeType":"VariableDeclaration","scope":3496,"src":"1150:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"1150:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3483,"mutability":"mutable","name":"collateral","nameLocation":"1186:10:10","nodeType":"VariableDeclaration","scope":3496,"src":"1178:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"baseAmount","nameLocation":"1214:10:10","nodeType":"VariableDeclaration","scope":3496,"src":"1206:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"quoteAmount","nameLocation":"1242:11:10","nodeType":"VariableDeclaration","scope":3496,"src":"1234:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"collateralAmount","nameLocation":"1271:16:10","nodeType":"VariableDeclaration","scope":3496,"src":"1263:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"deadline","nameLocation":"1305:8:10","nodeType":"VariableDeclaration","scope":3496,"src":"1297:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"stoplossPrice","nameLocation":"1331:13:10","nodeType":"VariableDeclaration","scope":3496,"src":"1323:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3495,"mutability":"mutable","name":"takeProfitPrice","nameLocation":"1362:15:10","nodeType":"VariableDeclaration","scope":3496,"src":"1354:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"OpenTradePositionParams","nameLocation":"1066:23:10","nodeType":"StructDefinition","scope":3715,"src":"1059:325:10","visibility":"public"},{"canonicalName":"IPositionStorage.CloseTradePositionParams","id":3505,"members":[{"constant":false,"id":3498,"mutability":"mutable","name":"positionKey","nameLocation":"1439:11:10","nodeType":"VariableDeclaration","scope":3505,"src":"1431:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1431:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"data0","nameLocation":"1466:5:10","nodeType":"VariableDeclaration","scope":3505,"src":"1460:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3499,"name":"bytes","nodeType":"ElementaryTypeName","src":"1460:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"data1","nameLocation":"1487:5:10","nodeType":"VariableDeclaration","scope":3505,"src":"1481:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3501,"name":"bytes","nodeType":"ElementaryTypeName","src":"1481:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"closer","nameLocation":"1510:6:10","nodeType":"VariableDeclaration","scope":3505,"src":"1502:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3503,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CloseTradePositionParams","nameLocation":"1396:24:10","nodeType":"StructDefinition","scope":3715,"src":"1389:134:10","visibility":"public"},{"canonicalName":"IPositionStorage.RollbackTradePositionParams","id":3514,"members":[{"constant":false,"id":3507,"mutability":"mutable","name":"positionKey","nameLocation":"1581:11:10","nodeType":"VariableDeclaration","scope":3514,"src":"1573:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1573:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"rollbacker","nameLocation":"1610:10:10","nodeType":"VariableDeclaration","scope":3514,"src":"1602:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3508,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"serviceToken","nameLocation":"1638:12:10","nodeType":"VariableDeclaration","scope":3514,"src":"1630:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3510,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"serviceFee","nameLocation":"1668:10:10","nodeType":"VariableDeclaration","scope":3514,"src":"1660:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RollbackTradePositionParams","nameLocation":"1535:27:10","nodeType":"StructDefinition","scope":3715,"src":"1528:157:10","visibility":"public"},{"canonicalName":"IPositionStorage.UpdateTPnSLParams","id":3527,"members":[{"constant":false,"id":3516,"mutability":"mutable","name":"positionKey","nameLocation":"1733:11:10","nodeType":"VariableDeclaration","scope":3527,"src":"1725:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1725:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"takeProfitPrice","nameLocation":"1762:15:10","nodeType":"VariableDeclaration","scope":3527,"src":"1754:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"stoplossPrice","nameLocation":"1795:13:10","nodeType":"VariableDeclaration","scope":3527,"src":"1787:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"updater","nameLocation":"1826:7:10","nodeType":"VariableDeclaration","scope":3527,"src":"1818:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"1818:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"serviceToken","nameLocation":"1851:12:10","nodeType":"VariableDeclaration","scope":3527,"src":"1843:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"1843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"serviceFee","nameLocation":"1881:10:10","nodeType":"VariableDeclaration","scope":3527,"src":"1873:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UpdateTPnSLParams","nameLocation":"1697:17:10","nodeType":"StructDefinition","scope":3715,"src":"1690:208:10","visibility":"public"},{"canonicalName":"IPositionStorage.UpdateCollateralAmountParams","id":3538,"members":[{"constant":false,"id":3529,"mutability":"mutable","name":"positionKey","nameLocation":"1957:11:10","nodeType":"VariableDeclaration","scope":3538,"src":"1949:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1949:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"amount","nameLocation":"1986:6:10","nodeType":"VariableDeclaration","scope":3538,"src":"1978:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1978:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"updater","nameLocation":"2010:7:10","nodeType":"VariableDeclaration","scope":3538,"src":"2002:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3532,"name":"address","nodeType":"ElementaryTypeName","src":"2002:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"serviceToken","nameLocation":"2035:12:10","nodeType":"VariableDeclaration","scope":3538,"src":"2027:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3534,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3537,"mutability":"mutable","name":"serviceFee","nameLocation":"2065:10:10","nodeType":"VariableDeclaration","scope":3538,"src":"2057:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2057:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UpdateCollateralAmountParams","nameLocation":"1910:28:10","nodeType":"StructDefinition","scope":3715,"src":"1903:179:10","visibility":"public"},{"canonicalName":"IPositionStorage.UpdateDeadlineParams","id":3549,"members":[{"constant":false,"id":3540,"mutability":"mutable","name":"positionKey","nameLocation":"2133:11:10","nodeType":"VariableDeclaration","scope":3549,"src":"2125:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2125:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"deadline","nameLocation":"2162:8:10","nodeType":"VariableDeclaration","scope":3549,"src":"2154:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"updater","nameLocation":"2188:7:10","nodeType":"VariableDeclaration","scope":3549,"src":"2180:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"serviceToken","nameLocation":"2213:12:10","nodeType":"VariableDeclaration","scope":3549,"src":"2205:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"2205:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"serviceFee","nameLocation":"2243:10:10","nodeType":"VariableDeclaration","scope":3549,"src":"2235:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UpdateDeadlineParams","nameLocation":"2094:20:10","nodeType":"StructDefinition","scope":3715,"src":"2087:173:10","visibility":"public"},{"functionSelector":"c45a0155","id":3554,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"2275:7:10","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[],"src":"2282:2:10"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3554,"src":"2308:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3551,"name":"address","nodeType":"ElementaryTypeName","src":"2308:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2307:9:10"},"scope":3715,"src":"2266:51:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"957d1fe1","id":3562,"implemented":false,"kind":"function","modifiers":[],"name":"position","nameLocation":"2332:8:10","nodeType":"FunctionDefinition","parameters":{"id":3557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3562,"src":"2341:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2341:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2340:9:10"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3562,"src":"2373:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":3559,"nodeType":"UserDefinedTypeName","pathNode":{"id":3558,"name":"TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"2373:13:10"},"referencedDeclaration":3475,"src":"2373:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"src":"2372:22:10"},"scope":3715,"src":"2323:72:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2895a2b3","id":3569,"implemented":false,"kind":"function","modifiers":[],"name":"positionKeys","nameLocation":"2410:12:10","nodeType":"FunctionDefinition","parameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3569,"src":"2423:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2422:9:10"},"returnParameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3569,"src":"2455:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2455:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2454:9:10"},"scope":3715,"src":"2401:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"caa1a44f","id":3576,"implemented":false,"kind":"function","modifiers":[],"name":"positionKeyToIndex","nameLocation":"2479:18:10","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3576,"src":"2498:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2498:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2497:9:10"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3576,"src":"2530:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2529:9:10"},"scope":3715,"src":"2470:69:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"539826a6","id":3581,"implemented":false,"kind":"function","modifiers":[],"name":"positionLength","nameLocation":"2554:14:10","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[],"src":"2568:2:10"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3581,"src":"2594:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2593:9:10"},"scope":3715,"src":"2545:58:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71e64bca","id":3589,"implemented":false,"kind":"function","modifiers":[],"name":"getMinCollateralAmount","nameLocation":"2618:22:10","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3589,"src":"2650:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"},"typeName":{"id":3583,"nodeType":"UserDefinedTypeName","pathNode":{"id":3582,"name":"OpenTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"2650:23:10"},"referencedDeclaration":3496,"src":"2650:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_storage_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"}},"visibility":"internal"}],"src":"2640:46:10"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3589,"src":"2710:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2709:9:10"},"scope":3715,"src":"2609:110:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"abe06a4d","id":3599,"implemented":false,"kind":"function","modifiers":[],"name":"getQuoteAmountRange","nameLocation":"2734:19:10","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"2763:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"},"typeName":{"id":3591,"nodeType":"UserDefinedTypeName","pathNode":{"id":3590,"name":"OpenTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"2763:23:10"},"referencedDeclaration":3496,"src":"2763:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_storage_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"}},"visibility":"internal"}],"src":"2753:46:10"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"minQuoteAmount","nameLocation":"2831:14:10","nodeType":"VariableDeclaration","scope":3599,"src":"2823:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"maxQuoteAmount","nameLocation":"2855:14:10","nodeType":"VariableDeclaration","scope":3599,"src":"2847:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2847:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2822:48:10"},"scope":3715,"src":"2725:146:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"be9f3fec","id":3608,"implemented":false,"kind":"function","modifiers":[],"name":"previewTradePosition","nameLocation":"2886:20:10","nodeType":"FunctionDefinition","parameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"2916:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_memory_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"},"typeName":{"id":3601,"nodeType":"UserDefinedTypeName","pathNode":{"id":3600,"name":"OpenTradePositionParams","nodeType":"IdentifierPath","referencedDeclaration":3496,"src":"2916:23:10"},"referencedDeclaration":3496,"src":"2916:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_OpenTradePositionParams_$3496_storage_ptr","typeString":"struct IPositionStorage.OpenTradePositionParams"}},"visibility":"internal"}],"src":"2906:46:10"},"returnParameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3608,"src":"2976:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":3605,"nodeType":"UserDefinedTypeName","pathNode":{"id":3604,"name":"TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"2976:13:10"},"referencedDeclaration":3475,"src":"2976:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"src":"2975:22:10"},"scope":3715,"src":"2877:121:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6680fda8","id":3616,"implemented":false,"kind":"function","modifiers":[],"name":"previewUpdateCollateralAmount","nameLocation":"3013:29:10","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3616,"src":"3052:35:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"},"typeName":{"id":3610,"nodeType":"UserDefinedTypeName","pathNode":{"id":3609,"name":"UpdateCollateralAmountParams","nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"3052:28:10"},"referencedDeclaration":3538,"src":"3052:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_storage_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"}},"visibility":"internal"}],"src":"3042:51:10"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"collateralLiqPrice","nameLocation":"3125:18:10","nodeType":"VariableDeclaration","scope":3616,"src":"3117:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3116:28:10"},"scope":3715,"src":"3004:141:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a55a3092","id":3626,"implemented":false,"kind":"function","modifiers":[],"name":"previewUpdateDeadline","nameLocation":"3160:21:10","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3626,"src":"3191:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"},"typeName":{"id":3618,"nodeType":"UserDefinedTypeName","pathNode":{"id":3617,"name":"UpdateDeadlineParams","nodeType":"IdentifierPath","referencedDeclaration":3549,"src":"3191:20:10"},"referencedDeclaration":3549,"src":"3191:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_storage_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"}},"visibility":"internal"}],"src":"3181:43:10"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"fee","nameLocation":"3256:3:10","nodeType":"VariableDeclaration","scope":3626,"src":"3248:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"protocolFee","nameLocation":"3269:11:10","nodeType":"VariableDeclaration","scope":3626,"src":"3261:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3247:34:10"},"scope":3715,"src":"3151:131:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61ba1508","id":3633,"implemented":false,"kind":"function","modifiers":[],"name":"canLiquidate","nameLocation":"3297:12:10","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"3310:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3310:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3309:9:10"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3633,"src":"3342:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3630,"name":"bool","nodeType":"ElementaryTypeName","src":"3342:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3341:6:10"},"scope":3715,"src":"3288:60:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e5944f01","id":3640,"implemented":false,"kind":"function","modifiers":[],"name":"canLiquidationMark","nameLocation":"3363:18:10","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3640,"src":"3382:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3382:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3381:9:10"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3640,"src":"3414:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3637,"name":"bool","nodeType":"ElementaryTypeName","src":"3414:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3413:6:10"},"scope":3715,"src":"3354:66:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f76e91fd","id":3648,"implemented":false,"kind":"function","modifiers":[],"name":"openTradePosition","nameLocation":"3435:17:10","nodeType":"FunctionDefinition","parameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3648,"src":"3462:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_memory_ptr","typeString":"struct IPositionStorage.TradePosition"},"typeName":{"id":3642,"nodeType":"UserDefinedTypeName","pathNode":{"id":3641,"name":"TradePosition","nodeType":"IdentifierPath","referencedDeclaration":3475,"src":"3462:13:10"},"referencedDeclaration":3475,"src":"3462:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_TradePosition_$3475_storage_ptr","typeString":"struct IPositionStorage.TradePosition"}},"visibility":"internal"}],"src":"3452:36:10"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"positionKey","nameLocation":"3515:11:10","nodeType":"VariableDeclaration","scope":3648,"src":"3507:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3507:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3506:21:10"},"scope":3715,"src":"3426:102:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ac00b674","id":3657,"implemented":false,"kind":"function","modifiers":[],"name":"updateStatus","nameLocation":"3543:12:10","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"_positionKey","nameLocation":"3573:12:10","nodeType":"VariableDeclaration","scope":3657,"src":"3565:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3565:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"_updater","nameLocation":"3603:8:10","nodeType":"VariableDeclaration","scope":3657,"src":"3595:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3651,"name":"address","nodeType":"ElementaryTypeName","src":"3595:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3555:62:10"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"needLiquidate","nameLocation":"3641:13:10","nodeType":"VariableDeclaration","scope":3657,"src":"3636:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3654,"name":"bool","nodeType":"ElementaryTypeName","src":"3636:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3635:20:10"},"scope":3715,"src":"3534:122:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"49a4d1d1","id":3662,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationMark","nameLocation":"3671:15:10","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"3687:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3687:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3686:9:10"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[],"src":"3704:0:10"},"scope":3715,"src":"3662:43:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9a102341","id":3669,"implemented":false,"kind":"function","modifiers":[],"name":"rollback","nameLocation":"3720:8:10","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"_positionKey","nameLocation":"3737:12:10","nodeType":"VariableDeclaration","scope":3669,"src":"3729:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3729:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"_updater","nameLocation":"3759:8:10","nodeType":"VariableDeclaration","scope":3669,"src":"3751:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3665,"name":"address","nodeType":"ElementaryTypeName","src":"3751:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3728:40:10"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[],"src":"3777:0:10"},"scope":3715,"src":"3711:67:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b008c058","id":3674,"implemented":false,"kind":"function","modifiers":[],"name":"closeManuallyStep1","nameLocation":"3793:18:10","nodeType":"FunctionDefinition","parameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"3812:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3812:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3811:9:10"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[],"src":"3829:0:10"},"scope":3715,"src":"3784:46:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f71139f7","id":3679,"implemented":false,"kind":"function","modifiers":[],"name":"closeManuallyStep2","nameLocation":"3845:18:10","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3679,"src":"3864:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3863:9:10"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[],"src":"3881:0:10"},"scope":3715,"src":"3836:46:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8b029d61","id":3690,"implemented":false,"kind":"function","modifiers":[],"name":"updateCloseValues","nameLocation":"3897:17:10","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"_positionKey","nameLocation":"3932:12:10","nodeType":"VariableDeclaration","scope":3690,"src":"3924:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3683,"mutability":"mutable","name":"_baseValue","nameLocation":"3962:10:10","nodeType":"VariableDeclaration","scope":3690,"src":"3954:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"_loss","nameLocation":"3990:5:10","nodeType":"VariableDeclaration","scope":3690,"src":"3982:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"_remainingCollateralAmount","nameLocation":"4013:26:10","nodeType":"VariableDeclaration","scope":3690,"src":"4005:34:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3914:131:10"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"4054:0:10"},"scope":3715,"src":"3888:167:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6f51535e","id":3696,"implemented":false,"kind":"function","modifiers":[],"name":"updateTPnSL","nameLocation":"4070:11:10","nodeType":"FunctionDefinition","parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"4082:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateTPnSLParams_$3527_memory_ptr","typeString":"struct IPositionStorage.UpdateTPnSLParams"},"typeName":{"id":3692,"nodeType":"UserDefinedTypeName","pathNode":{"id":3691,"name":"UpdateTPnSLParams","nodeType":"IdentifierPath","referencedDeclaration":3527,"src":"4082:17:10"},"referencedDeclaration":3527,"src":"4082:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateTPnSLParams_$3527_storage_ptr","typeString":"struct IPositionStorage.UpdateTPnSLParams"}},"visibility":"internal"}],"src":"4081:26:10"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[],"src":"4116:0:10"},"scope":3715,"src":"4061:56:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c6f61b01","id":3704,"implemented":false,"kind":"function","modifiers":[],"name":"updateCollateralAmount","nameLocation":"4132:22:10","nodeType":"FunctionDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3704,"src":"4164:35:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_memory_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"},"typeName":{"id":3698,"nodeType":"UserDefinedTypeName","pathNode":{"id":3697,"name":"UpdateCollateralAmountParams","nodeType":"IdentifierPath","referencedDeclaration":3538,"src":"4164:28:10"},"referencedDeclaration":3538,"src":"4164:28:10","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateCollateralAmountParams_$3538_storage_ptr","typeString":"struct IPositionStorage.UpdateCollateralAmountParams"}},"visibility":"internal"}],"src":"4154:51:10"},"returnParameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"collateralLiqPrice","nameLocation":"4232:18:10","nodeType":"VariableDeclaration","scope":3704,"src":"4224:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4223:28:10"},"scope":3715,"src":"4123:129:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5330e353","id":3714,"implemented":false,"kind":"function","modifiers":[],"name":"updateDeadline","nameLocation":"4267:14:10","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3714,"src":"4291:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_memory_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"},"typeName":{"id":3706,"nodeType":"UserDefinedTypeName","pathNode":{"id":3705,"name":"UpdateDeadlineParams","nodeType":"IdentifierPath","referencedDeclaration":3549,"src":"4291:20:10"},"referencedDeclaration":3549,"src":"4291:20:10","typeDescriptions":{"typeIdentifier":"t_struct$_UpdateDeadlineParams_$3549_storage_ptr","typeString":"struct IPositionStorage.UpdateDeadlineParams"}},"visibility":"internal"}],"src":"4281:43:10"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"fee","nameLocation":"4351:3:10","nodeType":"VariableDeclaration","scope":3714,"src":"4343:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"4343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"protocolFee","nameLocation":"4364:11:10","nodeType":"VariableDeclaration","scope":3714,"src":"4356:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4342:34:10"},"scope":3715,"src":"4258:119:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3716,"src":"71:4308:10","usedErrors":[]}],"src":"45:4335:10"}},"contracts/interfaces/IWithdrawalMonitor.sol":{"id":11,"ast":{"absolutePath":"contracts/interfaces/IWithdrawalMonitor.sol","exportedSymbols":{"IWithdrawalMonitor":[3796]},"id":3797,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3717,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IWithdrawalMonitor","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3796,"linearizedBaseContracts":[3796],"name":"IWithdrawalMonitor","nameLocation":"81:18:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IWithdrawalMonitor.WithdrawalRequest","id":3730,"members":[{"constant":false,"id":3719,"mutability":"mutable","name":"index","nameLocation":"149:5:11","nodeType":"VariableDeclaration","scope":3730,"src":"141:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"141:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"owner","nameLocation":"172:5:11","nodeType":"VariableDeclaration","scope":3730,"src":"164:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3720,"name":"address","nodeType":"ElementaryTypeName","src":"164:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"quoteToken","nameLocation":"195:10:11","nodeType":"VariableDeclaration","scope":3730,"src":"187:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"liquidity","nameLocation":"223:9:11","nodeType":"VariableDeclaration","scope":3730,"src":"215:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"to","nameLocation":"250:2:11","nodeType":"VariableDeclaration","scope":3730,"src":"242:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3726,"name":"address","nodeType":"ElementaryTypeName","src":"242:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"data","nameLocation":"268:4:11","nodeType":"VariableDeclaration","scope":3730,"src":"262:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3728,"name":"bytes","nodeType":"ElementaryTypeName","src":"262:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"WithdrawalRequest","nameLocation":"113:17:11","nodeType":"StructDefinition","scope":3796,"src":"106:173:11","visibility":"public"},{"functionSelector":"c45a0155","id":3735,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"294:7:11","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[],"src":"301:2:11"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3735,"src":"327:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3732,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"326:9:11"},"scope":3796,"src":"285:51:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"939124f7","id":3742,"implemented":false,"kind":"function","modifiers":[],"name":"requestLength","nameLocation":"351:13:11","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"365:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3736,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:9:11"},"returnParameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"397:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"396:9:11"},"scope":3796,"src":"342:64:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b9418fd","id":3749,"implemented":false,"kind":"function","modifiers":[],"name":"currentIndex","nameLocation":"421:12:11","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"434:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3743,"name":"address","nodeType":"ElementaryTypeName","src":"434:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"433:9:11"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"466:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"465:9:11"},"scope":3796,"src":"412:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c8c01a55","id":3768,"implemented":false,"kind":"function","modifiers":[],"name":"request","nameLocation":"490:7:11","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"_pool","nameLocation":"515:5:11","nodeType":"VariableDeclaration","scope":3768,"src":"507:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3750,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"_index","nameLocation":"538:6:11","nodeType":"VariableDeclaration","scope":3768,"src":"530:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:53:11"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"index","nameLocation":"619:5:11","nodeType":"VariableDeclaration","scope":3768,"src":"611:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"owner","nameLocation":"646:5:11","nodeType":"VariableDeclaration","scope":3768,"src":"638:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"quoteToken","nameLocation":"673:10:11","nodeType":"VariableDeclaration","scope":3768,"src":"665:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3759,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"liquidity","nameLocation":"705:9:11","nodeType":"VariableDeclaration","scope":3768,"src":"697:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"to","nameLocation":"736:2:11","nodeType":"VariableDeclaration","scope":3768,"src":"728:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3763,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"data","nameLocation":"767:4:11","nodeType":"VariableDeclaration","scope":3768,"src":"752:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3765,"name":"bytes","nodeType":"ElementaryTypeName","src":"752:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"597:184:11"},"scope":3796,"src":"481:301:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"987037e8","id":3783,"implemented":false,"kind":"function","modifiers":[],"name":"addRequest","nameLocation":"797:10:11","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"_owner","nameLocation":"825:6:11","nodeType":"VariableDeclaration","scope":3783,"src":"817:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3769,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"_quoteToken","nameLocation":"849:11:11","nodeType":"VariableDeclaration","scope":3783,"src":"841:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"841:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"_liquidity","nameLocation":"878:10:11","nodeType":"VariableDeclaration","scope":3783,"src":"870:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"870:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"_to","nameLocation":"906:3:11","nodeType":"VariableDeclaration","scope":3783,"src":"898:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"_data","nameLocation":"934:5:11","nodeType":"VariableDeclaration","scope":3783,"src":"919:20:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3777,"name":"bytes","nodeType":"ElementaryTypeName","src":"919:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:138:11"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3783,"src":"964:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"963:9:11"},"scope":3796,"src":"788:185:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4d4a6fbb","id":3790,"implemented":false,"kind":"function","modifiers":[],"name":"updateCallbackResult","nameLocation":"988:20:11","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"_index","nameLocation":"1026:6:11","nodeType":"VariableDeclaration","scope":3790,"src":"1018:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"_result","nameLocation":"1056:7:11","nodeType":"VariableDeclaration","scope":3790,"src":"1042:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3786,"name":"string","nodeType":"ElementaryTypeName","src":"1042:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1008:61:11"},"returnParameters":{"id":3789,"nodeType":"ParameterList","parameters":[],"src":"1078:0:11"},"scope":3796,"src":"979:100:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4b64e492","id":3795,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1094:7:11","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3795,"src":"1102:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:9:11"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"1119:0:11"},"scope":3796,"src":"1085:35:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3797,"src":"71:1051:11","usedErrors":[]}],"src":"45:1078:11"}},"contracts/interfaces/external/IWETH9.sol":{"id":12,"ast":{"absolutePath":"contracts/interfaces/external/IWETH9.sol","exportedSymbols":{"IWETH9":[3810]},"id":3811,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3798,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH9","contractDependencies":[],"contractKind":"interface","documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"71:31:12","text":"@title Interface for WETH9"},"fullyImplemented":false,"id":3810,"linearizedBaseContracts":[3810],"name":"IWETH9","nameLocation":"112:6:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"125:46:12","text":"@notice Deposit ether to get wrapped ether"},"functionSelector":"d0e30db0","id":3803,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"185:7:12","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[],"src":"192:2:12"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[],"src":"211:0:12"},"scope":3810,"src":"176:36:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"218:47:12","text":"@notice Withdraw wrapped ether to get ether"},"functionSelector":"2e1a7d4d","id":3809,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"279:8:12","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3809,"src":"288:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"287:9:12"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[],"src":"305:0:12"},"scope":3810,"src":"270:36:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3811,"src":"102:206:12","usedErrors":[]}],"src":"45:264:12"}},"contracts/libraries/TransferHelper.sol":{"id":13,"ast":{"absolutePath":"contracts/libraries/TransferHelper.sol","exportedSymbols":{"TransferHelper":[3970]},"id":3971,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3812,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"TransferHelper","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3970,"linearizedBaseContracts":[3970],"name":"TransferHelper","nameLocation":"190:14:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3854,"nodeType":"Block","src":"286:357:13","statements":[{"assignments":[3822,3824],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"success","nameLocation":"367:7:13","nodeType":"VariableDeclaration","scope":3854,"src":"362:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3821,"name":"bool","nodeType":"ElementaryTypeName","src":"362:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"data","nameLocation":"389:4:13","nodeType":"VariableDeclaration","scope":3854,"src":"376:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3823,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3834,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783039356561376233","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"445:10:13","typeDescriptions":{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},"value":"0x095ea7b3"},{"id":3830,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"457:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3831,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"462:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3827,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"422:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"422:22:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"422:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3825,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"397:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"397:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"397:82:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"361:118:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"510:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3837,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"522:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"522:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"522:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3843,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"553:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"560:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3844,"name":"bool","nodeType":"ElementaryTypeName","src":"560:4:13","typeDescriptions":{}}}],"id":3846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"559:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3841,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"542:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"542:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"542:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"522:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"521:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"510:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:45:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""},"value":"TransferHelper::safeApprove: approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""}],"id":3835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"489:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"489:147:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3853,"nodeType":"ExpressionStatement","src":"489:147:13"}]},"id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"220:11:13","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"_token","nameLocation":"240:6:13","nodeType":"VariableDeclaration","scope":3855,"src":"232:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"_to","nameLocation":"256:3:13","nodeType":"VariableDeclaration","scope":3855,"src":"248:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3815,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"_value","nameLocation":"269:6:13","nodeType":"VariableDeclaration","scope":3855,"src":"261:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"231:45:13"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[],"src":"286:0:13"},"scope":3970,"src":"211:432:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"755:360:13","statements":[{"assignments":[3865,3867],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"success","nameLocation":"837:7:13","nodeType":"VariableDeclaration","scope":3897,"src":"832:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3864,"name":"bool","nodeType":"ElementaryTypeName","src":"832:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"data","nameLocation":"859:4:13","nodeType":"VariableDeclaration","scope":3897,"src":"846:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3866,"name":"bytes","nodeType":"ElementaryTypeName","src":"846:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3877,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30786139303539636262","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:10:13","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":3873,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"927:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3874,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"932:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3870,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"892:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"892:22:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3868,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"867:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"867:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:82:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"831:118:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"980:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3880,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"992:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"992:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"992:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3886,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1023:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1030:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3887,"name":"bool","nodeType":"ElementaryTypeName","src":"1030:4:13","typeDescriptions":{}}}],"id":3889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1029:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3884,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1012:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"992:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"991:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"980:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1051:47:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""},"value":"TransferHelper::safeTransfer: transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""}],"id":3878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"959:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:149:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3896,"nodeType":"ExpressionStatement","src":"959:149:13"}]},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"658:12:13","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"_token","nameLocation":"688:6:13","nodeType":"VariableDeclaration","scope":3898,"src":"680:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"_to","nameLocation":"712:3:13","nodeType":"VariableDeclaration","scope":3898,"src":"704:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3858,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"_value","nameLocation":"733:6:13","nodeType":"VariableDeclaration","scope":3898,"src":"725:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:75:13"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[],"src":"755:0:13"},"scope":3970,"src":"649:466:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3943,"nodeType":"Block","src":"1254:383:13","statements":[{"assignments":[3910,3912],"declarations":[{"constant":false,"id":3910,"mutability":"mutable","name":"success","nameLocation":"1348:7:13","nodeType":"VariableDeclaration","scope":3943,"src":"1343:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3909,"name":"bool","nodeType":"ElementaryTypeName","src":"1343:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"data","nameLocation":"1370:4:13","nodeType":"VariableDeclaration","scope":3943,"src":"1357:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3911,"name":"bytes","nodeType":"ElementaryTypeName","src":"1357:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3923,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783233623837326464","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1426:10:13","typeDescriptions":{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},"value":"0x23b872dd"},{"id":3918,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"1438:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3919,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"1445:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3920,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"1450:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3915,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1403:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1403:22:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3913,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"1378:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1378:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:89:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1342:125:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"1498:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"1510:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1510:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1510:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3932,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"1541:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1548:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3933,"name":"bool","nodeType":"ElementaryTypeName","src":"1548:4:13","typeDescriptions":{}}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1547:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3930,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1530:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1530:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1510:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1509:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1498:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1569:51:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""},"value":"TransferHelper::transferFrom: transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""}],"id":3924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1477:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:153:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3942,"nodeType":"ExpressionStatement","src":"1477:153:13"}]},"id":3944,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1130:16:13","nodeType":"FunctionDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"_token","nameLocation":"1164:6:13","nodeType":"VariableDeclaration","scope":3944,"src":"1156:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"_from","nameLocation":"1188:5:13","nodeType":"VariableDeclaration","scope":3944,"src":"1180:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3901,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"_to","nameLocation":"1211:3:13","nodeType":"VariableDeclaration","scope":3944,"src":"1203:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3903,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"_value","nameLocation":"1232:6:13","nodeType":"VariableDeclaration","scope":3944,"src":"1224:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1146:98:13"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[],"src":"1254:0:13"},"scope":3970,"src":"1121:516:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3968,"nodeType":"Block","src":"1706:189:13","statements":[{"assignments":[3952,null],"declarations":[{"constant":false,"id":3952,"mutability":"mutable","name":"success","nameLocation":"1722:7:13","nodeType":"VariableDeclaration","scope":3968,"src":"1717:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3951,"name":"bool","nodeType":"ElementaryTypeName","src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3962,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1759:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3957,"name":"bytes","nodeType":"ElementaryTypeName","src":"1763:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3953,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"1735:3:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1735:8:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3955,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"1751:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1735:23:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1735:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1716:56:13"},{"expression":{"arguments":[{"id":3964,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"1803:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1824:54:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""},"value":"TransferHelper::safeTransferETH: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""}],"id":3963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1782:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3967,"nodeType":"ExpressionStatement","src":"1782:106:13"}]},"id":3969,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"1652:15:13","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"_to","nameLocation":"1676:3:13","nodeType":"VariableDeclaration","scope":3969,"src":"1668:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"_value","nameLocation":"1689:6:13","nodeType":"VariableDeclaration","scope":3969,"src":"1681:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1667:29:13"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[],"src":"1706:0:13"},"scope":3970,"src":"1643:252:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3971,"src":"182:1715:13","usedErrors":[]}],"src":"45:1853:13"}}},"contracts":{"contracts/Pool.sol":{"Pool":{"abi":[{"inputs":[{"internalType":"uint256","name":"length0","type":"uint256"},{"internalType":"uint256","name":"length1","type":"uint256"}],"name":"BadLengths","type":"error"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"EthTransferFailed","type":"error"},{"inputs":[],"name":"ExceedMaxOpenInterest","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"Forbidden","type":"error"},{"inputs":[],"name":"InitializedAlready","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"neededAmount","type":"uint256"}],"name":"InsufficientCollateral","type":"error"},{"inputs":[],"name":"InsufficientInput","type":"error"},{"inputs":[],"name":"InsufficientOutput","type":"error"},{"inputs":[],"name":"InvalidParameters","type":"error"},{"inputs":[],"name":"Locked","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferFailed","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"UntradeableBaseToken","type":"error"},{"inputs":[],"name":"ZeroValue","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"indexed":false,"internalType":"address","name":"baseToken","type":"address"},{"indexed":false,"internalType":"address","name":"closer","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidationFee","type":"uint256"}],"name":"Close","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"indexed":true,"internalType":"address","name":"executor","type":"address"}],"name":"CloseManuallyStep1","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"indexed":false,"internalType":"address","name":"baseToken","type":"address"},{"indexed":false,"internalType":"address","name":"quoteToken","type":"address"},{"indexed":false,"internalType":"address","name":"collateral","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"}],"name":"Open","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"indexed":false,"internalType":"address","name":"rollbacker","type":"address"},{"indexed":false,"internalType":"address","name":"serviceToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"serviceFee","type":"uint256"}],"name":"Rollback","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"baseToken","type":"address"},{"indexed":false,"internalType":"address","name":"quoteToken","type":"address"},{"indexed":false,"internalType":"bool","name":"tradeable","type":"bool"}],"name":"SetBaseToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newInterest","type":"uint256"}],"name":"SetInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newMaxOpenInterest","type":"uint256"}],"name":"SetMaxOpenInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"baseToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"newReserve","type":"uint256"}],"name":"UpdateBaseReserve","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newCollateralLiqPrice","type":"uint256"},{"indexed":false,"internalType":"address","name":"updater","type":"address"},{"indexed":false,"internalType":"address","name":"serviceToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"serviceFee","type":"uint256"}],"name":"UpdateCollateralAmount","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"collateral","type":"address"},{"indexed":false,"internalType":"uint256","name":"newReserve","type":"uint256"}],"name":"UpdateCollateralReserve","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"indexed":false,"internalType":"address","name":"baseToken","type":"address"},{"indexed":false,"internalType":"address","name":"quoteToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"newDeadline","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"protocolFee","type":"uint256"},{"indexed":false,"internalType":"address","name":"updater","type":"address"},{"indexed":false,"internalType":"address","name":"serviceToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"serviceFee","type":"uint256"}],"name":"UpdateDeadline","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"UpdateFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newProtocolFee","type":"uint256"}],"name":"UpdateProtocolFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newQuoteInDebt","type":"uint256"}],"name":"UpdateQuoteInDebt","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newQuoteReserve","type":"uint256"}],"name":"UpdateQuoteReserve","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newWithdrawingLiquidity","type":"uint256"}],"name":"UpdateWithdrawingLiquidity","type":"event"},{"inputs":[],"name":"accFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accFeePerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accProtocolFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_liquidity","type":"uint256"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"addBurnRequest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"availLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"availableLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"baseReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IWithdrawalMonitor.WithdrawalRequest","name":"_request","type":"tuple"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"claimableFee","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"bytes","name":"data0","type":"bytes"},{"internalType":"bytes","name":"data1","type":"bytes"},{"internalType":"address","name":"closer","type":"address"}],"internalType":"struct IPositionStorage.CloseTradePositionParams","name":"_params","type":"tuple"}],"name":"close","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_positionKey","type":"bytes32"},{"internalType":"address","name":"_executor","type":"address"}],"name":"closeManuallyStep1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_positionKey","type":"bytes32"},{"internalType":"uint256","name":"_baseValue","type":"uint256"},{"internalType":"uint256","name":"_remainingCollateralAmount","type":"uint256"},{"internalType":"uint256","name":"_liquidationFee","type":"uint256"}],"name":"closeManuallyStep2","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"collateralReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"collect","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"},{"internalType":"uint256","name":"_interest","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"interest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"liquidityPosition","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"feeDebt","type":"uint256"},{"internalType":"uint256","name":"pendingFee","type":"uint256"},{"internalType":"uint256","name":"withdrawingLiquidity","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxOpenInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_liquidity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"address","name":"collateral","type":"address"},{"internalType":"uint256","name":"baseAmount","type":"uint256"},{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"}],"internalType":"struct IPositionStorage.OpenTradePositionParams","name":"_params","type":"tuple"}],"name":"open","outputs":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"openInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionStorage","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precision","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteInDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"address","name":"rollbacker","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.RollbackTradePositionParams","name":"_params","type":"tuple"}],"name":"rollback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_baseTokens","type":"address[]"},{"internalType":"bool[]","name":"_tradeables","type":"bool[]"}],"name":"setBaseTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_interest","type":"uint256"}],"name":"setInterest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxOpenInterest","type":"uint256"}],"name":"setMaxOpenInterest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tradeableBaseToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateCollateralAmountParams","name":"_params","type":"tuple"}],"name":"updateCollateralAmount","outputs":[{"internalType":"uint256","name":"collateralLiqPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateDeadlineParams","name":"_params","type":"tuple"}],"name":"updateDeadline","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawalMonitor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawingLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length1\",\"type\":\"uint256\"}],\"name\":\"BadLengths\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"EthTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedMaxOpenInterest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializedAlready\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededAmount\",\"type\":\"uint256\"}],\"name\":\"InsufficientCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"UntradeableBaseToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationFee\",\"type\":\"uint256\"}],\"name\":\"Close\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"CloseManuallyStep1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"Open\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rollbacker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"name\":\"Rollback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"tradeable\",\"type\":\"bool\"}],\"name\":\"SetBaseToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInterest\",\"type\":\"uint256\"}],\"name\":\"SetInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxOpenInterest\",\"type\":\"uint256\"}],\"name\":\"SetMaxOpenInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserve\",\"type\":\"uint256\"}],\"name\":\"UpdateBaseReserve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCollateralLiqPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"name\":\"UpdateCollateralAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserve\",\"type\":\"uint256\"}],\"name\":\"UpdateCollateralReserve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"name\":\"UpdateDeadline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"UpdateFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"UpdateProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuoteInDebt\",\"type\":\"uint256\"}],\"name\":\"UpdateQuoteInDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuoteReserve\",\"type\":\"uint256\"}],\"name\":\"UpdateQuoteReserve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawingLiquidity\",\"type\":\"uint256\"}],\"name\":\"UpdateWithdrawingLiquidity\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accFeePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"addBurnRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"baseReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IWithdrawalMonitor.WithdrawalRequest\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"claimableFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data0\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"}],\"internalType\":\"struct IPositionStorage.CloseTradePositionParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"closeManuallyStep1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_remainingCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFee\",\"type\":\"uint256\"}],\"name\":\"closeManuallyStep2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_interest\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawingLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxOpenInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.OpenTradePositionParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"open\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteInDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"rollbacker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.RollbackTradePositionParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"rollback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_baseTokens\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_tradeables\",\"type\":\"bool[]\"}],\"name\":\"setBaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interest\",\"type\":\"uint256\"}],\"name\":\"setInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxOpenInterest\",\"type\":\"uint256\"}],\"name\":\"setMaxOpenInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradeableBaseToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateCollateralAmountParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"updateCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralLiqPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateDeadlineParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"updateDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalMonitor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawingLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Pool.sol\":{\"keccak256\":\"0xc61ec5a21da8ff6ee91e38bba24b5d5fdc139c9640303d4c60331927d9ad2a50\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5a969a00c69f4a24822c13af9954b6e17bec8badc887f29046b0c239ca04259\",\"dweb:/ipfs/QmfRGJEwjpb84dUTbUc1D7yzgaEdAzDiGUQhiGiBFy1duc\"]},\"contracts/base/Lockable.sol\":{\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4af8261e270ee279b561618e7eb68593b7af51c9cb365927302bcdcbf7263f60\",\"dweb:/ipfs/QmTy94DQYqyxcCPYK8CrgRmwdfckVi4v4dKy76VyPs2eri\"]},\"contracts/interfaces/ICloseCallback.sol\":{\"keccak256\":\"0x018443b6be91235a8e0843503b318ad8c424103637b7be17bd57ca4098c42b83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e418b690cbe19033f682c7fb228d81fa0d6db7804cd582ad448a2e68d6e70a8\",\"dweb:/ipfs/Qmf5godhuJXTxjZegaLgECSEC4eW8x8wpYwPLFkV6WwjWY\"]},\"contracts/interfaces/IDEXAggregator.sol\":{\"keccak256\":\"0x050436409ad725de56a178bc04f3af194c092e8819b68a74d3cff79c0e80b53b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f22c550e270aa714d692d8cc0c1e3d6316c087912b91244536275e520c722f18\",\"dweb:/ipfs/QmTZLbGDAC6NRzyvjRew7wKt9rj11hwb9YerHY63oJhYyN\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d783bcfa47faaa1ed36eb4ce8c1612372cd4118fc11b347d8ecea2ab3d4a1284\",\"dweb:/ipfs/QmbyCFzoezQpCkD6uMEHXeEsMRmNbnwTbqMP74MC3TMgfi\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x8c18d9f7d476a1cb444761ff88f5f7df0bb1f605c4821b7eac11b66bb2dcc540\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bd4ef80a309ad13ac57af819b211cd226257047d5aded698b5f1cc3633fabe7e\",\"dweb:/ipfs/QmVicyyJSjDKaGJzwsxYzG9mZ8yXGTrkkLr8CgrgxgSEpG\"]},\"contracts/interfaces/IMintCallback.sol\":{\"keccak256\":\"0x9d5d83eabb0f9f91852dc984da6032d3f34abfed0d73810b2658ba0a95e4da29\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e055ac0adde86038e3d8b005592916224ccf19cfe0dbf5bc50dcb828a80979bb\",\"dweb:/ipfs/QmeweMXsfsamgk1Hq6Sfk4ZwTLaoC2ZTDyPv37oghcMXhh\"]},\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x0df40413291993de9306d0f1fd006f4057eb73713ab3a55e501f5c19544163c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cdd815390201d8154835657457a1b7b54b621685f361eb492a4bce904b1c9dc9\",\"dweb:/ipfs/QmZuULKjAbdfSabtC2A7o5U8CjvANRdYwKeUdoFBZoAt7Z\"]},\"contracts/interfaces/IPositionStorage.sol\":{\"keccak256\":\"0x59c96dbc599d853167cf4954037f3df32a645c28bd675bb18689a5c1d4750827\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67aa7fb58f85dacf0fe4243d8a99f714981b8c86d201a896afed88651fe7976a\",\"dweb:/ipfs/QmT2f6Wkr44vm82UuBqwLkAqz3mFUCXfdkbWgJFVeTa8ph\"]},\"contracts/interfaces/IWithdrawalMonitor.sol\":{\"keccak256\":\"0xb744b52875c32378810f80f1b49f034e676ea3a7413d97ed022cf28cc09f26d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://461161a473261ca4400e2315ade9b72276b9ccbf8e8384c9847bb7de0b453c84\",\"dweb:/ipfs/QmeoZSgXKF8DiizUAsb5LxpWAeEMQ6ipmvegoWViaDgz8q\"]},\"contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0x8b10c75fabc065dad2edca967243c55972451facbcee902fb871a1741406e82d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b398f2dd3202ac7a4a3e133412f1c2db65290320ff82c4665deacd13c9827bc\",\"dweb:/ipfs/QmbmegXRKW84nKmcS91uj8GwK2FFnaDFaj5inSbYUYUk6F\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4974ccca392242612b24dc99f2aa88d3f2eaf3d0b3b307519f0a6a425a4e85c1\",\"dweb:/ipfs/QmXdMCaLvTfJwNJ6byE8fiYz57PpMXxQenHXMHpVKKBSAp\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.5.0"},"evm":{"assembly":"\t.text\n\t.file\t\"Pool.sol:Pool\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[31 + r0]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.le\t@.BB0_8\n\tsub.s!\t@CPI0_42[0], r2, r4\n\tjump.le\t@.BB0_14\n\tsub.s!\t@CPI0_43[0], r2, r4\n\tjump.eq\t@.BB0_468\n\tsub.s!\t@CPI0_44[0], r2, r4\n\tjump.eq\t@.BB0_471\n\tsub.s!\t@CPI0_45[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_55[0], r5, r4\n\tjump.gt\t@.BB0_66\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r6\n\tand\t@CPI0_125[0], r6, r6\n\tsub.s!\t@CPI0_65[0], r6, r7\n\tjump.gt\t@.BB0_66\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r5\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_484\n\tadd\t160, r0, r5\n.BB0_482:\n\tptr.add\tr1, r2, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r6, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r6\n\tjump.lt\t@.BB0_482\n.BB0_484:\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\t@CPI0_66[0], r0, r5\n\tand\t@CPI0_66[0], r4, r4\n\tsub!\tr4, r0, r6\n\tadd\tr0, r0, r6\n\tadd.lt\t@CPI0_66[0], r0, r6\n\tsub.s!\t@CPI0_66[0], r4, r4\n\tadd.ne\tr5, r0, r6\n\tsub!\tr6, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_55[0], r5, r4\n\tjump.gt\t@.BB0_66\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r6\n\tand\t@CPI0_125[0], r6, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[23]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_55[0], r6, r8\n\tjump.gt\t@.BB0_66\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r6\n\tadd\tstack-[23], r0, r6\n\tst.1.inc\tr6, r5, r6\n\tadd\tr6, r0, stack-[19]\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r3\n\tjump.eq\t@.BB0_494\n\tadd\tstack-[23], r0, r3\n.BB0_492:\n\tptr.add\tr1, r2, r5\n\tld\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tadd\t32, r3, r3\n\tst.1\tr3, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB0_492\n.BB0_494:\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_53[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_495\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_53[0], r1, stack-[18]\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r2\n\tld.1\t128, r1\n\tsub!\tr1, r2, r3\n\tjump.ne\t@.BB0_500\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_466\n\tadd\tr0, r0, r3\n.BB0_502:\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_503\n\tshl.s\t5, r3, r1\n\tadd\tstack-[19], r1, r2\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[20]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr2, r0, stack-[21]\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[24]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[24], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_149[0], r2, r2\n\tsub!\tstack-[22], r0, r3\n\tor.ne\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t128, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_503\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r4, r1\n\tjump.le\t@.BB0_503\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[21], r0, r2\n\tld.1\tr2, r2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tadd\tstack-[18], r0, r5\n\tst.1\tr4, r5\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t64, r3, r4\n\tst.1\tr4, r2\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_85[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_128[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[24], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r3, r3\n\tld.1\t128, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB0_502\n\tjump\t@.BB0_466\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_44\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.le\t@.BB0_33\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.le\t@.BB0_39\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_931\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.eq\t@.BB0_933\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t164, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t288, r0, r2\n\tst.1\t64, r2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tst.1\t128, r2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tst.1\t160, r2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t192, r2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t224, r2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tst.1\t256, r1\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_517\n\tsstore\tr0, r0\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t288, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r4\n\tst.1\t292, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr4, r0, stack-[23]\n\tjump.ne\t@.BB0_942\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_953\n.BB0_19:\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.le\t@.BB0_20\n\tsub.s!\t@CPI0_30[0], r2, r4\n\tjump.le\t@.BB0_26\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.eq\t@.BB0_790\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_792\n\tsub.s!\t@CPI0_33[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tjump\t@.BB0_470\n.BB0_44:\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.le\t@.BB0_45\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.le\t@.BB0_51\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.eq\t@.BB0_1296\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_1456\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tjump\t@.BB0_796\n.BB0_8:\n\tsub.s!\t@CPI0_48[0], r2, r4\n\tjump.gt\t@.BB0_11\n\tsub.s!\t@CPI0_51[0], r2, r4\n\tjump.eq\t@.BB0_56\n\tsub.s!\t@CPI0_52[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_33:\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.gt\t@.BB0_36\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_799\n\tsub.s!\t@CPI0_27[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t9, r0, r1\n\tjump\t@.BB0_58\n.BB0_20:\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.gt\t@.BB0_23\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.eq\t@.BB0_508\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t164, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t288, r0, r2\n\tst.1\t64, r2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tst.1\t128, r2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tst.1\t160, r2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t192, r2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t224, r2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tst.1\t256, r1\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_517\n\tsstore\tr0, r0\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t288, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tst.1\t292, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_520\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_531\n.BB0_45:\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_1059\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t3, r1, r2\n\tsload\tr2, r2\n\tadd\t2, r1, r3\n\tsload\tr3, r3\n\tadd\t1, r1, r4\n\tsload\tr4, r4\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tst.1\t160, r4\n\tst.1\t192, r3\n\tst.1\t224, r2\n\tadd\t@CPI0_98[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub.s!\t@CPI0_49[0], r2, r4\n\tjump.eq\t@.BB0_64\n\tsub.s!\t@CPI0_50[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tand!\t@CPI0_53[0], r1, r2\n\tjump.ne\t@.BB0_269\n\tand\t@CPI0_134[0], r1, r1\n\tadd\tstack-[24], r0, r2\n\tor\tr1, r2, r1\n\tsstore\tr3, r1\n\tadd\t@CPI0_135[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_273\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_284\n.BB0_36:\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.eq\t@.BB0_911\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tjump\t@.BB0_470\n.BB0_23:\n\tsub.s!\t@CPI0_37[0], r2, r4\n\tjump.eq\t@.BB0_597\n\tsub.s!\t@CPI0_38[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r2, stack-[21]\n\tptr.add.s\tstack-[21], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[22], r2, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr1, r0, stack-[20]\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r5\n\tadd\t3, r5, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\txor\tr2, r3, r4\n\tsub!\tstack-[24], r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[24], r2, r4\n\tsload\tr5, r5\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB0_721\n\txor\tstack-[24], r3, r3\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_78\n\tsstore\tr1, r4\n\tadd\t11, r0, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[24], r0, r6\n\tadd\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t3, r0, r1\n\tsload\tr1, r2\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r5\n\tadd\t132, r5, r3\n\tadd\t160, r0, r4\n\tst.1\tr3, r4\n\tadd\t100, r5, r3\n\tadd\tstack-[23], r0, r4\n\tst.1\tr3, r4\n\tadd\t68, r5, r3\n\tst.1\tr3, r6\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t36, r5, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_109[0], r0, r1\n\tst.1.inc\tr5, r1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\t4, r5, r1\n\tadd\tstack-[20], r0, r3\n\tst.1\tr1, r3\n\tadd\t164, r5, r1\n\tadd\tstack-[22], r0, r6\n\tst.1\tr1, r6\n\tand\t31, r6, r3\n\tadd\tr5, r0, stack-[24]\n\tadd\t196, r5, r1\n\tand\t@CPI0_53[0], r2, r2\n\tadd\tstack-[21], r0, r4\n\tadd\t32, r4, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r6, r5\n\tjump.eq\t@.BB0_727\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r6\n\tptr.add\tr4, r0, r7\n\tadd\tr1, r0, r8\n.BB0_726:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_726\n.BB0_727:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_729\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr1, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_729:\n\tadd\tstack-[22], r1, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_731\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_742\n.BB0_48:\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.eq\t@.BB0_1065\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tjump\t@.BB0_58\n.BB0_14:\n\tsub.s!\t@CPI0_46[0], r2, r4\n\tjump.eq\t@.BB0_321\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_53[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_464\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t6, r0, r2\n\tsstore\tr2, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_123[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_129[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_466\n.BB0_39:\n\tsub.s!\t@CPI0_21[0], r2, r1\n\tjump.eq\t@.BB0_925\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_53[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_929\n\tadd\t11, r0, r1\n\tsstore\tr1, r0\n\tadd\t@CPI0_104[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_26:\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.eq\t@.BB0_746\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_754\n\tadd\t128, r0, r1\n.BB0_756:\n\tadd\t1, r0, r2\n\tsstore\tr0, r2\n\tjump\t@.BB0_467\n.BB0_51:\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.eq\t@.BB0_1292\n\tsub.s!\t@CPI0_10[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tjump\t@.BB0_58\n.BB0_56:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t11, r0, r1\n\tjump\t@.BB0_58\n.BB0_799:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r2, stack-[21]\n\tptr.add.s\tstack-[21], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[22], r2, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\tstack-[24], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[20], r0, r3\n\tand\t@CPI0_53[0], r3, stack-[20]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tadd\t14, r0, r3\n\tsload\tr3, r3\n\tld\tr1, r1\n\tsload\tr1, r4\n\tsub!\tr4, r0, r5\n\tjump.ne\t@.BB0_809\n.BB0_815:\n\tsub.s\t1, r0, r5\n\txor\tstack-[23], r5, stack-[19]\n\tsub.s!\tstack-[19], r4, r6\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[23], r4, r4\n\tsstore\tr1, r4\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_818\n\tdiv\tr5, r3, r5, r6\n\tsub!\tr5, r4, r5\n\tjump.lt\t@.BB0_78\n.BB0_818:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_238\n\tmul\tr4, r3, r3, r4\n\tdiv\tr3, r2, r2, r3\n\tadd\t1, r1, r1\n\tsstore\tr1, r2\n\tadd\t9, r0, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[19], r2, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[23], r2, r2\n\tsstore\tr1, r2\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_821\n.BB0_858:\n\tld.1\t64, r3\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[17]\n\tcontext.this\tr1\n\tand\t@CPI0_53[0], r1, r2\n\tadd\tr3, r0, stack-[18]\n\tadd\t4, r3, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[20], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_860\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_871\n.BB0_508:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_53[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_464\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t7, r0, r2\n\tsstore\tr2, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_123[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_124[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_466:\n\tld.1\t64, r1\n.BB0_467:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1059:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tjump\t@.BB0_58\n.BB0_64:\n\tsub.s!\t324, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t448, r0, r2\n\tst.1\t64, r2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t128, r2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t160, r2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t192, r2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\t224, r2\n\tptr.add.s\t132, r1, r2\n\tld\tr2, r2\n\tst.1\t256, r2\n\tptr.add.s\t164, r1, r2\n\tld\tr2, r2\n\tst.1\t288, r2\n\tptr.add.s\t196, r1, r2\n\tld\tr2, r2\n\tst.1\t320, r2\n\tptr.add.s\t228, r1, r2\n\tld\tr2, r2\n\tst.1\t352, r2\n\tptr.add.s\t260, r1, r2\n\tld\tr2, r2\n\tst.1\t384, r2\n\tptr.add.s\t292, r1, r1\n\tld\tr1, r1\n\tst.1\t416, r1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[24]\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_73\n\tsstore\tr0, r0\n\tadd\t160, r0, stack-[31]\n\tld.1\t160, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t15, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_77\n\tld.1\t160, r1\n\tld.1\t64, r2\n\tadd\t@CPI0_148[0], r0, r3\n\tst.1\tr2, r3\n\tand\t@CPI0_53[0], r1, r1\n.BB0_496:\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_911:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_65[0], r4, r2\n\tjump.le\t@.BB0_916\n.BB0_66:\n\tadd\t@CPI0_127[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_62[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_597:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[22]\n\tsload\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_603\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_614\n.BB0_1065:\n\tsub.s!\t132, r3, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[21]\n\tsload\tr1, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1070\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1081\n.BB0_321:\n\tsub.s!\t132, r3, r1\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tadd\t1, r0, r4\n\tsload\tr4, r2\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t128, r1\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r5\n\tst.1\t132, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr4, r0, stack-[21]\n\tadd\tr5, r0, stack-[23]\n\tjump.ne\t@.BB0_327\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_338\n.BB0_925:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tjump\t@.BB0_58\n.BB0_746:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r1\n\tjump\t@.BB0_58\n.BB0_1292:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r1\n\tjump\t@.BB0_58\n.BB0_471:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n\tjump\t@.BB0_58\n.BB0_933:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_470\n.BB0_792:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n.BB0_796:\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_58\n.BB0_1456:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[24], r0, r2\n\tadd\t4, r2, stack-[23]\n\tsub.s\tstack-[23], r3, r2\n\tsub.s!\t@CPI0_56[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tsload\tr0, r2\n\tsub.s!\t1, r2, r2\n\tjump.ne\t@.BB0_324\n\tsstore\tr0, r0\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[20]\n\tsload\tr2, r2\n\tadd\t@CPI0_57[0], r0, r4\n\tst.1\t128, r4\n\tcontext.caller\tr4\n\tand\t@CPI0_53[0], r4, r4\n\tadd\tr4, r0, stack-[22]\n\tst.1\t132, r4\n\tcontext.gas_left\tr4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1464\n\tptr.add\tr1, r3, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r2\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1475\n.BB0_468:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n.BB0_470:\n\tsload\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_931:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n.BB0_58:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_790:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_availableLiquidity, @DEFAULT_UNWIND\n.BB0_922:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_103[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1296:\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_55[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tsub\tr3, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t196, r2, r2\n\tjump.lt\t@.BB0_2\n\tadd\t320, r0, r2\n\tst.1\t64, r2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tst.1\t128, r5\n\tadd\t36, r4, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1\t160, r6\n\tadd\t32, r5, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1\t192, r6\n\tadd\t32, r5, r6\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\t224, r6\n\tadd\t64, r5, r5\n\tptr.add\tr1, r5, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1\t256, r6\n\tadd\t32, r5, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_55[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r4, r5\n\tadd\t35, r5, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_55[0], r4, r7\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r7\n\tand\t@CPI0_150[0], r7, r7\n\tadd\t63, r7, r7\n\tand\t@CPI0_150[0], r7, r7\n\tsub.s!\t@CPI0_89[0], r7, r8\n\tjump.gt\t@.BB0_66\n\tadd\t320, r7, r7\n\tst.1\t64, r7\n\tst.1\t320, r4\n\tadd\tr5, r4, r5\n\tadd\t36, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1312\n\tadd\t352, r0, r6\n\tshl.s\t5, r5, r7\n\tadd\t352, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_1311:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr6, r9, r6\n\tsub!\tr6, r7, r9\n\tjump.ne\t@.BB0_1311\n.BB0_1312:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1314\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r3, r3\n\tadd\t352, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1314:\n\tadd\t352, r4, r1\n\tst.1\tr1, r0\n\tst.1\t288, r2\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_73\n\tsstore\tr0, r0\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_1316\n\tld.1\t160, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\t3, r2, r4\n\tsload\tr4, r3\n\tld.1\t224, r1\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB0_721\n\tadd\t11, r0, r3\n\tsload\tr3, r5\n\tsub!\tr5, r1, r5\n\tadd.lt\tr0, r0, r5\n\tsstore\tr3, r5\n\tadd\t5, r0, r3\n\tsload\tr3, r3\n\tadd\t14, r0, r5\n\tsload\tr5, r5\n\tsload\tr2, r6\n\tsub!\tr6, r0, r7\n\tjump.ne\t@.BB0_1320\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB0_78\n.BB0_1327:\n\tsub\tr6, r1, r6\n\tsstore\tr2, r6\n\tsload\tr4, r7\n\tsub!\tr7, r1, r8\n\tjump.lt\t@.BB0_78\n\tsub\tr7, r1, r7\n\tsstore\tr4, r7\n\tsub!\tr5, r0, r4\n\tjump.eq\t@.BB0_1330\n\tdiv\t@CPI0_151[0], r5, r4, r7\n\tsub!\tr4, r6, r4\n\tjump.lt\t@.BB0_78\n.BB0_1330:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_238\n\tmul\tr6, r5, r4, r5\n\tdiv\tr4, r3, r3, r4\n\tadd\t1, r2, r2\n\tsstore\tr2, r3\n\tadd\t9, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1333\n.BB0_1370:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\t288, r3\n\tld.1.inc\tr3, r1, r2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1371\n.BB0_1379:\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[23], r0, r5\n\tadd\t68, r5, r1\n\tld.1\t256, r3\n\tld.1\t224, r4\n\tst.1\tr1, r4\n\tadd\t32, r5, r1\n\tadd\t@CPI0_68[0], r0, r4\n\tst.1\tr1, r4\n\tand\t@CPI0_53[0], r3, r3\n\tadd\t36, r5, r4\n\tst.1\tr4, r3\n\tadd\t68, r0, r3\n\tst.1\tr5, r3\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r5, r3\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[23], r0, r4\n\tadd\t128, r4, r3\n\tst.1\t64, r3\n\tld.1\tr4, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1381\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_1383\n.BB0_324:\n\tadd\t@CPI0_117[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_130[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_464:\n\tadd\t@CPI0_88[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r2\n\tadd\t@CPI0_58[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_929:\n\tadd\t@CPI0_88[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1070:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1073\n\tadd\t128, r0, r7\n\tptr.add\tr1, r0, r8\n.BB0_1072:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr7, r9, r7\n\tsub.s!\t160, r7, r9\n\tjump.ne\t@.BB0_1072\n.BB0_1073:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1075\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1075:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1076\n.BB0_1081:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r0, stack-[22]\n\tor\t128, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tor\t132, r1, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_341\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[16]\n\tptr.add.s\t68, r2, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[17]\n\tptr.add.s\t100, r2, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[18]\n\tadd\t2, r0, r4\n\tsload\tr4, r4\n\tptr.add.s\t4, r2, r2\n\tld\tr2, r5\n\tadd\t@CPI0_61[0], r0, r2\n\tadd\tstack-[24], r0, r6\n\tst.1\tr6, r2\n\tadd\tr5, r0, stack-[19]\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r4, r2\n\tsub.s!\t4, r2, r4\n\tadd\tr2, r0, stack-[15]\n\tjump.ne\t@.BB0_1086\n\tsub.s!\t832, r3, r1\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1097\n.BB0_327:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_330\n\tadd\t128, r0, r7\n\tptr.add\tr1, r0, r8\n.BB0_329:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr7, r9, r7\n\tsub.s!\t160, r7, r9\n\tjump.ne\t@.BB0_329\n.BB0_330:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_332\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_332:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_333\n.BB0_338:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r0, stack-[22]\n\tor\t128, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tor\t132, r1, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_343\n.BB0_341:\n\tadd\t@CPI0_88[0], r0, r2\n\tadd\tstack-[24], r0, r3\n\tst.1\tr3, r2\n\tadd\tstack-[23], r0, r2\n.BB0_342:\n\tst.1\tr1, r2\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_517:\n\tadd\t@CPI0_117[0], r0, r1\n\tst.1\t288, r1\n\tadd\t@CPI0_118[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_916:\n\tld\tr1, r5\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tsload\tr5, r3\n\tst.1.inc\tr4, r3, r2\n\tadd\t1, r5, r1\n\tsload\tr1, r1\n\tst.1\tr2, r1\n\tadd\t2, r5, r2\n\tsload\tr2, r2\n\tadd\t64, r4, r6\n\tst.1\tr6, r2\n\tadd\t96, r4, r4\n\tadd\t3, r5, r5\n\tsload\tr5, r5\n\tst.1\tr4, r5\n\tadd\t14, r0, r4\n\tsload\tr4, r4\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_918\n\tdiv\t@CPI0_151[0], r4, r5, r6\n\tsub!\tr5, r3, r5\n\tjump.lt\t@.BB0_78\n.BB0_918:\n\tadd\t5, r0, r5\n\tsload\tr5, r5\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_238\n\tmul\tr4, r3, r3, r4\n\tdiv\tr3, r5, r3, r4\n\txor\t@CPI0_151[0], r3, r4\n\tsub!\tr2, r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r1, r1\n\tadd\t12, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_922\n.BB0_603:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_606\n\tadd\t128, r0, r7\n\tptr.add\tr1, r0, r8\n.BB0_605:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr7, r9, r7\n\tsub.s!\t160, r7, r9\n\tjump.ne\t@.BB0_605\n.BB0_606:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_608\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_608:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_609\n.BB0_614:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r3\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub!\tr3, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_619\n\tadd\t@CPI0_88[0], r0, r3\n\tst.1\tr1, r3\n\tor\t132, r2, r2\n\tadd\tstack-[23], r0, r3\n\tst.1\tr2, r3\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1076:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1079\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1078:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1078\n.BB0_1079:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n.BB0_147:\n\tshl.s\t5, r5, r5\n\tjump\t@.BB0_96\n.BB0_269:\n\tadd\t@CPI0_133[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_130[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_333:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_336\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_335:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_335\n.BB0_336:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_754:\n\tadd\tr2, r0, stack-[23]\n\tcontext.caller\tr1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t5, r0, r2\n\tsload\tr2, r2\n\tadd\t14, r0, r3\n\tsload\tr3, r3\n\tld\tr1, r1\n\tsload\tr1, r4\n\tsub!\tr4, r0, r5\n\tjump.ne\t@.BB0_757\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_765\n.BB0_764:\n\tdiv\t@CPI0_151[0], r3, r5, r6\n\tsub!\tr5, r4, r5\n\tjump.lt\t@.BB0_78\n.BB0_765:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_238\n\tmul\tr4, r3, r3, r4\n\tdiv\tr3, r2, r2, r3\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[23], r2, r3\n\tjump.lt\t@.BB0_721\n\tadd\t12, r0, r3\n\tsload\tr3, r3\n\tsub!\tstack-[23], r3, r3\n\tjump.le\t@.BB0_768\n.BB0_721:\n\tld.1\t64, r1\n\tadd\t@CPI0_112[0], r0, r2\n\tjump\t@.BB0_907\n.BB0_609:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_612\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_611:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_611\n.BB0_612:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_520:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\t288, r0, r9\n\tjump.eq\t@.BB0_523\n\tptr.add\tr1, r0, r7\n.BB0_522:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr9, r8, r9\n\tsub.s!\t320, r9, r8\n\tjump.ne\t@.BB0_522\n.BB0_523:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_525\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t288, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_525:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_526\n.BB0_531:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t288, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t288, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tadd\t292, r1, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_341\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tld.1\t128, r4\n\tadd\t@CPI0_61[0], r0, r5\n\tadd\tstack-[24], r0, r6\n\tst.1\tr6, r5\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_536\n\tsub.s!\t832, r3, r1\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_547\n.BB0_273:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_130[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_276\n\tadd\t128, r0, r7\n\tptr.add\tr1, r0, r8\n.BB0_275:\n\tld.inc\tr8, r9, r8\n\tst.1.inc\tr7, r9, r7\n\tsub.s!\t160, r7, r9\n\tjump.ne\t@.BB0_275\n.BB0_276:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_278\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_278:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_279\n.BB0_284:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[22]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t2, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_134[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t@CPI0_136[0], r0, r2\n\tadd\tstack-[22], r0, r4\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[21]\n\tcontext.gas_left\tr2\n\tadd\tstack-[24], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_288\n\tadd\tr4, r1, r2\n\tadd\tr2, r0, stack-[24]\n\tst.1\t64, r2\n.BB0_300:\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_134[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tadd\t4, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_134[0], r3, r3\n\tadd\tstack-[23], r0, r4\n\tor\tr3, r4, r3\n\tsstore\tr2, r3\n\tadd\t@CPI0_137[0], r0, r2\n\tadd\tstack-[24], r0, r3\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[22]\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r4, r3\n\tjump.ne\t@.BB0_303\n\tadd\tstack-[24], r1, r1\n\tst.1\t64, r1\n.BB0_315:\n\tadd\tstack-[24], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t255, r2, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t77, r2, r3\n\tjump.gt\t@.BB0_78\n\tsub!\tr2, r0, r3\n\tadd\t1, r0, r6\n\tjump.eq\t@.BB0_320\n\tadd\t10, r0, r3\n.BB0_319:\n\tand!\t1, r2, r4\n\tmul\tr3, r3, r4, r5\n\tadd.eq\t1, r0, r3\n\tmul\tr3, r6, r6, r3\n\tsub.s!\t1, r2, r3\n\tshr.s\t1, r2, r2\n\tadd\tr4, r0, r3\n\tjump.gt\t@.BB0_319\n.BB0_320:\n\tadd\t5, r0, r2\n\tsstore\tr2, r6\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t6, r0, r3\n\tsstore\tr3, r2\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1464:\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r1\n\tor\t@CPI0_58[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t128, r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1467\n\tptr.add\tr1, r0, r7\n.BB0_1466:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr9, r8, r9\n\tsub.s!\t160, r9, r8\n\tjump.ne\t@.BB0_1466\n.BB0_1467:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1469\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1469:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1470\n.BB0_1475:\n\tadd\t31, r4, r2\n\tand\t96, r2, r2\n\tor\t128, r2, r4\n\tadd\tr4, r0, stack-[21]\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_1479\n\tadd\t@CPI0_88[0], r0, r1\n\tadd\tstack-[21], r0, r3\n\tst.1\tr3, r1\n\tor\t132, r2, r1\n\tadd\tstack-[22], r0, r2\n\tjump\t@.BB0_342\n.BB0_942:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\t288, r0, r9\n\tjump.eq\t@.BB0_945\n\tptr.add\tr1, r0, r7\n.BB0_944:\n\tld.inc\tr7, r8, r7\n\tst.1.inc\tr9, r8, r9\n\tsub.s!\t320, r9, r8\n\tjump.ne\t@.BB0_944\n.BB0_945:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_947\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t288, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_947:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_948\n.BB0_953:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t288, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t288, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tadd\t292, r1, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_341\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tld.1\t128, r4\n\tadd\t@CPI0_61[0], r0, r5\n\tadd\tstack-[24], r0, r6\n\tst.1\tr6, r5\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tadd\tr2, r0, stack-[23]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_958\n\tsub.s!\t832, r3, r1\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_969\n.BB0_343:\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tadd\t4, r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r5\n\tadd\t@CPI0_61[0], r0, r4\n\tadd\tstack-[24], r0, r6\n\tst.1\tr6, r4\n\tadd\tr5, r0, stack-[19]\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tadd\tr2, r0, stack-[20]\n\tjump.ne\t@.BB0_345\n\tsub.s!\t832, r3, r1\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_356\n.BB0_73:\n\tld.1\t64, r1\n\tadd\t@CPI0_117[0], r0, r2\n.BB0_907:\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_526:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_529\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_528:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_528\n.BB0_529:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_279:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_282\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_281:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_281\n.BB0_282:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1470:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1473\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1472:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1472\n.BB0_1473:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_757:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_759\n\tdiv\t@CPI0_151[0], r3, r5, r6\n\tsub!\tr5, r4, r5\n\tjump.lt\t@.BB0_78\n.BB0_759:\n\tsub!\tr2, r0, r5\n\tjump.ne\t@.BB0_760\n.BB0_238:\n\tadd\t@CPI0_127[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_62[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_948:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_951\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_950:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_950\n.BB0_951:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1086:\n\tadd\tstack-[24], r0, r3\n\tshl.s\t64, r3, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r4, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tshl.s\t5, r6, r6\n\tjump.eq\t@.BB0_1089\n\tadd\tstack-[24], r0, r9\n\tadd\tr9, r6, r7\n\tptr.add\tr1, r0, r8\n.BB0_1088:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1088\n.BB0_1089:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1091\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1091:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1092\n.BB0_1097:\n\tadd\t31, r4, r1\n\tand\t2016, r1, r1\n\tadd\tstack-[24], r1, r1\n\tadd\tr1, r0, stack-[20]\n\tst.1\t64, r1\n\tsub.s!\t832, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[20], r0, r2\n\tadd\t448, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[24], r0, r1\n\tld.1\tr1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[22], r0, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tadd\t192, r1, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_53[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[24], r4, r1\n\tadd\tstack-[20], r0, r4\n\tadd\t64, r4, r4\n\tst.1\tr4, r2\n\tadd\tstack-[22], r0, r2\n\tadd\t224, r2, r4\n\tsub\tr1, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_63[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t160, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[22], r0, r6\n\tor\t256, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t288, r6, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\t320, r6, r4\n\tld.1\tr4, r4\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t352, r6, r4\n\tld.1\tr4, r4\n\tadd\t128, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[20], r0, r4\n\tadd\t96, r4, r4\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r2\n\tor\t384, r6, r2\n\tsub\tr1, r2, r4\n\tsub.s!\t@CPI0_56[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_64[0], r4, r5\n\tjump.gt\t@.BB0_66\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r2, r2\n\tadd\tstack-[22], r0, r6\n\tadd\t416, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr2, r5\n\tadd\tstack-[20], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r4\n\tadd\t448, r6, r4\n\tsub\tr1, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_63[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t160, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[22], r0, r6\n\tadd\t480, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tor\t512, r6, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\t544, r6, r4\n\tld.1\tr4, r4\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t576, r6, r4\n\tld.1\tr4, r4\n\tadd\t128, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[20], r0, r5\n\tadd\t160, r5, r4\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r2\n\tadd\t608, r6, r2\n\tld.1\tr2, r2\n\tadd\t192, r5, r4\n\tst.1\tr4, r2\n\tor\t640, r6, r2\n\tld.1\tr2, r2\n\tadd\t224, r5, r4\n\tst.1\tr4, r2\n\tadd\t672, r6, r2\n\tld.1\tr2, r2\n\tadd\t256, r5, r4\n\tst.1\tr4, r2\n\tadd\t704, r6, r2\n\tld.1\tr2, r2\n\tadd\t288, r5, r4\n\tst.1\tr4, r2\n\tadd\t320, r5, r2\n\tadd\t736, r6, r4\n\tld.1\tr4, r4\n\tst.1\tr2, r4\n\tor\t768, r6, r2\n\tsub\tr1, r2, r1\n\tsub.s!\t@CPI0_56[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_65[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r1, r4\n\tst.1\t64, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[22], r0, r4\n\tadd\t800, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\tr2, r4\n\tadd\tstack-[22], r0, r2\n\tadd\t832, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[22], r0, r2\n\tadd\t864, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t96, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[20], r0, r2\n\tadd\t352, r2, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tor\t896, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[20], r0, r4\n\tadd\t384, r4, r2\n\tst.1\tr2, r1\n\tadd\t416, r4, r1\n\tadd\tstack-[22], r0, r2\n\tadd\t928, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\tstack-[11], r0, r4\n\tld.1\tr4, r4\n\tld.1\tr4, r4\n\tld.1\t64, r6\n\tadd\t@CPI0_67[0], r0, r5\n\tst.1.inc\tr6, r5, r5\n\tadd\tr5, r0, stack-[24]\n\tadd\tr6, r0, stack-[22]\n\tadd\t4, r6, r5\n\tcontext.this\tr6\n\tst.1\tr5, r6\n\txor\tr2, r4, r2\n\tand\t@CPI0_53[0], r1, stack-[10]\n\tand!\t@CPI0_53[0], r2, r1\n\tjump.ne\t@.BB0_1123\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1168\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1179\n.BB0_619:\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t@CPI0_113[0], r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tr2, r0, stack-[20]\n\tadd\t4, r2, r2\n\tadd\tstack-[21], r0, r1\n\tadd\tr2, r0, stack-[19]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[23], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_622\n\tadd\tstack-[20], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[20], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t832, r3, r1\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n.BB0_642:\n\tadd\t31, r4, r1\n\tand\t2016, r1, r1\n\tadd\tstack-[20], r1, r1\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.gt\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t832, r3, r2\n\tjump.lt\t@.BB0_2\n\tsub.s!\t@CPI0_114[0], r1, r2\n\tjump.gt\t@.BB0_66\n\tadd\t448, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[20], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[18], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1\tr2, r5\n\tadd\tstack-[20], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI0_53[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[20], r0, r6\n\tadd\tr4, r6, r2\n\tadd\t64, r1, r4\n\tst.1\tr4, r5\n\tadd\t96, r6, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[20], r0, r7\n\tadd\t128, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t160, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t192, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t224, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\t96, r1, r5\n\tadd\tr5, r0, stack-[23]\n\tst.1\tr5, r4\n\tadd\t256, r7, r4\n\tsub\tr2, r4, r5\n\tsub.s!\t@CPI0_56[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r5, r5\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_64[0], r5, r6\n\tjump.gt\t@.BB0_66\n\tadd\t64, r5, r6\n\tst.1\t64, r6\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r4, r4\n\tadd\tstack-[20], r0, r7\n\tadd\t288, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr4, r6\n\tadd\t128, r1, r4\n\tst.1\tr4, r5\n\tadd\t320, r7, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[20], r0, r7\n\tadd\t352, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t384, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t416, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t448, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\t160, r1, r5\n\tadd\tr5, r0, stack-[19]\n\tst.1\tr5, r4\n\tadd\t480, r7, r4\n\tld.1\tr4, r4\n\tadd\t192, r1, r5\n\tst.1\tr5, r4\n\tadd\t512, r7, r4\n\tld.1\tr4, r4\n\tadd\t224, r1, r5\n\tst.1\tr5, r4\n\tadd\t544, r7, r4\n\tld.1\tr4, r4\n\tadd\t256, r1, r5\n\tst.1\tr5, r4\n\tadd\t576, r7, r4\n\tld.1\tr4, r4\n\tadd\t288, r1, r5\n\tst.1\tr5, r4\n\tadd\t320, r1, r4\n\tadd\t608, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t640, r7, r4\n\tsub\tr2, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_65[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t128, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[20], r0, r5\n\tadd\t672, r5, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tst.1\tr4, r5\n\tadd\tstack-[20], r0, r4\n\tadd\t704, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[20], r0, r4\n\tadd\t736, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t352, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[20], r0, r2\n\tadd\t768, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t384, r1, r4\n\tst.1\tr4, r2\n\tadd\t416, r1, r1\n\tadd\tstack-[20], r0, r2\n\tadd\t800, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r2, r1\n\tld.1\tr1, r1\n\tld.1\t64, r5\n\tadd\t68, r5, r4\n\tst.1\tr4, r1\n\tadd\t32, r5, r1\n\tadd\t@CPI0_68[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r5, r4\n\tadd\tstack-[24], r0, r6\n\tst.1\tr4, r6\n\tadd\t68, r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r5, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r5, r4\n\tst.1\t64, r4\n\tld.1\tr5, r6\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB0_669\n\tsub.s!\t@CPI0_55[0], r3, r1\n\tjump.gt\t@.BB0_66\n\tadd\t1, r0, r2\n\tjump\t@.BB0_674\n.BB0_345:\n\tadd\tstack-[24], r0, r3\n\tshl.s\t64, r3, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r4, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_348\n\tshl.s\t5, r6, r7\n\tadd\tstack-[24], r0, r9\n\tadd\tr9, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_347:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_347\n.BB0_348:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_350\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_350:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_351\n.BB0_356:\n\tadd\t31, r4, r1\n\tand\t2016, r1, r1\n\tadd\tstack-[24], r1, r1\n\tadd\tr1, r0, stack-[23]\n\tst.1\t64, r1\n\tsub.s!\t832, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r2\n\tadd\t448, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[24], r0, r1\n\tld.1\tr1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tstack-[22], r0, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[18], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tadd\t192, r1, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_53[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[24], r4, r1\n\tadd\tstack-[23], r0, r4\n\tadd\t64, r4, r4\n\tst.1\tr4, r2\n\tadd\tstack-[22], r0, r2\n\tadd\t224, r2, r4\n\tsub\tr1, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_63[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t160, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[22], r0, r6\n\tor\t256, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t288, r6, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\t320, r6, r4\n\tld.1\tr4, r4\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t352, r6, r4\n\tld.1\tr4, r4\n\tadd\t128, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[23], r0, r4\n\tadd\t96, r4, r4\n\tadd\tr4, r0, stack-[17]\n\tst.1\tr4, r2\n\tor\t384, r6, r2\n\tsub\tr1, r2, r4\n\tsub.s!\t@CPI0_56[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_64[0], r4, r5\n\tjump.gt\t@.BB0_66\n\tadd\t64, r4, r5\n\tst.1\t64, r5\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r2, r2\n\tadd\tstack-[22], r0, r6\n\tadd\t416, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr2, r5\n\tadd\tstack-[23], r0, r2\n\tadd\t128, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r4\n\tadd\t448, r6, r4\n\tsub\tr1, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_63[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t160, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[22], r0, r6\n\tadd\t480, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tor\t512, r6, r4\n\tld.1\tr4, r4\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\t544, r6, r4\n\tld.1\tr4, r4\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t576, r6, r4\n\tld.1\tr4, r4\n\tadd\t128, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[23], r0, r5\n\tadd\t160, r5, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\tr4, r2\n\tadd\t608, r6, r2\n\tld.1\tr2, r2\n\tadd\t192, r5, r4\n\tst.1\tr4, r2\n\tor\t640, r6, r2\n\tld.1\tr2, r2\n\tadd\t224, r5, r4\n\tst.1\tr4, r2\n\tadd\t672, r6, r2\n\tld.1\tr2, r2\n\tadd\t256, r5, r4\n\tst.1\tr4, r2\n\tadd\t704, r6, r2\n\tld.1\tr2, r2\n\tadd\t288, r5, r4\n\tst.1\tr4, r2\n\tadd\t320, r5, r2\n\tadd\t736, r6, r4\n\tld.1\tr4, r4\n\tst.1\tr2, r4\n\tor\t768, r6, r2\n\tsub\tr1, r2, r1\n\tsub.s!\t@CPI0_56[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_65[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r1, r4\n\tst.1\t64, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[22], r0, r4\n\tadd\t800, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1\tr2, r4\n\tadd\tstack-[22], r0, r2\n\tadd\t832, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[22], r0, r2\n\tadd\t864, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t96, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[23], r0, r2\n\tadd\t352, r2, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tor\t896, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[23], r0, r4\n\tadd\t384, r4, r2\n\tst.1\tr2, r1\n\tadd\t416, r4, r1\n\tadd\tstack-[22], r0, r2\n\tadd\t928, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r4\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tr4, r0, stack-[22]\n\tadd\t4, r4, r1\n\tcontext.this\tr4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_381\n\tadd\t32, r0, r4\n\tjump\t@.BB0_392\n.BB0_1092:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1095\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1094:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1094\n.BB0_1095:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_288:\n\tshl.s\t64, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[24], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[21], r0, r10\n\tjump.eq\t@.BB0_291\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_290:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_290\n.BB0_291:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_293\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_293:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_294\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[22], r1, r2\n\tadd\tr2, r0, stack-[24]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_300\n.BB0_351:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_354\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_353:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_353\n.BB0_354:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1479:\n\tadd\tstack-[23], r0, r6\n\tptr.add\tstack[@ptr_calldata], r6, r5\n\tadd\t96, r6, r6\n\tptr.add\tstack[@ptr_calldata], r6, r4\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[18]\n\tadd\t2, r0, r5\n\tsload\tr5, r5\n\tand\t@CPI0_53[0], r5, stack-[19]\n\tadd\t1, r0, r5\n\tsload\tr5, r5\n\tand\t@CPI0_53[0], r5, stack-[17]\n\tld\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_59[0], r0, r5\n\tadd\tstack-[21], r0, r6\n\tst.1.inc\tr6, r5, r5\n\tadd\tr5, r0, stack-[16]\n\tor\t132, r2, r5\n\tadd\tstack-[18], r0, r6\n\tst.1\tr5, r6\n\tadd\t164, r2, r5\n\tst.1\tr5, r4\n\tcontext.gas_left\tr4\n\tadd\tstack-[19], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB0_1482\n\tadd\tstack-[21], r2, r2\n\tadd\tr2, r0, stack-[16]\n\tst.1\t64, r2\n.BB0_1494:\n\tadd\tstack-[21], r0, r2\n\tld.1\tr2, r4\n\tsub!\tr4, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tr4, r0, stack-[21]\n\tsub!\tr4, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_61[0], r0, r2\n\tadd\tstack-[16], r0, r4\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tor\t4, r4, r2\n\tadd\tstack-[18], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[19], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.ne\t@.BB0_1497\n\tsub.s!\t832, r3, r2\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1508\n.BB0_760:\n\tmul\tr4, r3, r5, r6\n\tdiv\tr5, r2, r5, r6\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tsub!\tr5, r6, r7\n\tjump.lt\t@.BB0_78\n\tsub\tr5, r6, r5\n\txor\t@CPI0_151[0], r5, r8\n\tadd\t2, r1, r6\n\tsload\tr6, r7\n\tsub!\tr7, r8, r8\n\tjump.gt\t@.BB0_78\n\tadd\tr7, r5, r5\n\tsstore\tr6, r5\n\tsub!\tr3, r0, r5\n\tjump.ne\t@.BB0_764\n\tjump\t@.BB0_765\n.BB0_77:\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tadd\t288, r0, stack-[30]\n\tld.1\t288, r2\n\txor\t@CPI0_151[0], r2, r3\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tr2, r1, r1\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_81\n\tld.1\t64, r1\n\tadd\t@CPI0_147[0], r0, r2\n\tjump\t@.BB0_907\n.BB0_809:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_811\n\tdiv\t@CPI0_151[0], r3, r5, r6\n\tsub!\tr5, r4, r5\n\tjump.lt\t@.BB0_78\n.BB0_811:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_238\n\tmul\tr4, r3, r5, r6\n\tdiv\tr5, r2, r5, r6\n\tadd\t1, r1, r6\n\tsload\tr6, r6\n\tsub!\tr5, r6, r7\n\tjump.lt\t@.BB0_78\n\tsub\tr5, r6, r5\n\txor\t@CPI0_151[0], r5, r8\n\tadd\t2, r1, r6\n\tsload\tr6, r7\n\tsub!\tr7, r8, r8\n\tjump.le\t@.BB0_814\n.BB0_78:\n\tadd\t@CPI0_127[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_62[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_536:\n\tadd\tstack-[24], r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tshl.s\t5, r6, r6\n\tjump.eq\t@.BB0_539\n\tadd\tstack-[24], r0, r9\n\tadd\tr9, r6, r7\n\tptr.add\tr1, r0, r8\n.BB0_538:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_538\n.BB0_539:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_541\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_541:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_542\n.BB0_547:\n\tadd\t31, r4, r1\n\tand\t2016, r1, r1\n\tadd\tstack-[24], r1, r1\n\tst.1\t64, r1\n\tsub.s!\t832, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\t448, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[24], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[22], r0, r5\n\tadd\t320, r5, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1\tr2, r5\n\tadd\tstack-[22], r0, r2\n\tadd\t352, r2, r2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI0_53[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[24], r4, r2\n\tadd\t64, r1, r4\n\tst.1\tr4, r5\n\tadd\tstack-[22], r0, r4\n\tor\t384, r4, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[22], r0, r7\n\tadd\t416, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t448, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t480, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tor\t512, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\t96, r1, r5\n\tadd\tr5, r0, stack-[24]\n\tst.1\tr5, r4\n\tadd\t544, r7, r4\n\tsub\tr2, r4, r5\n\tsub.s!\t@CPI0_56[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r5, r5\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_64[0], r5, r6\n\tjump.gt\t@.BB0_66\n\tadd\t64, r5, r6\n\tst.1\t64, r6\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r4, r4\n\tadd\tstack-[22], r0, r7\n\tadd\t576, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr4, r6\n\tadd\t128, r1, r4\n\tadd\tr4, r0, stack-[21]\n\tst.1\tr4, r5\n\tadd\t608, r7, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[22], r0, r7\n\tor\t640, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t672, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t704, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t736, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\t160, r1, r5\n\tst.1\tr5, r4\n\tor\t768, r7, r4\n\tld.1\tr4, r4\n\tadd\t192, r1, r5\n\tst.1\tr5, r4\n\tadd\t800, r7, r4\n\tld.1\tr4, r4\n\tadd\t224, r1, r5\n\tst.1\tr5, r4\n\tadd\t832, r7, r4\n\tld.1\tr4, r4\n\tadd\t256, r1, r5\n\tst.1\tr5, r4\n\tadd\t864, r7, r4\n\tld.1\tr4, r4\n\tadd\t288, r1, r5\n\tst.1\tr5, r4\n\tadd\t320, r1, r4\n\tor\t896, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t928, r7, r4\n\tsub\tr2, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_65[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t128, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[22], r0, r5\n\tadd\t960, r5, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tst.1\tr4, r5\n\tadd\tstack-[22], r0, r4\n\tadd\t992, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[22], r0, r4\n\tor\t1024, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t352, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[22], r0, r2\n\tadd\t1056, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t384, r1, r4\n\tst.1\tr4, r2\n\tadd\t416, r1, r1\n\tadd\tstack-[22], r0, r2\n\tadd\t1088, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_119[0], r0, r1\n\tld.1\t64, r4\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[20]\n\tadd\t4, r4, r1\n\tld.1\t128, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tld.1\t160, r2\n\tst.1\tr1, r2\n\tld.1\t192, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t100, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[22]\n\tadd\t132, r4, r1\n\tld.1\t256, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[23], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_572\n\tadd\t64, r0, r4\n\tjump\t@.BB0_583\n.BB0_294:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_297\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_296:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_296\n.BB0_297:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_958:\n\tadd\tstack-[24], r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_961\n\tshl.s\t5, r6, r7\n\tadd\tstack-[24], r0, r9\n\tadd\tr9, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_960:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_960\n.BB0_961:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_963\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_963:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_964\n.BB0_969:\n\tadd\t31, r4, r1\n\tand\t2016, r1, r1\n\tadd\tstack-[24], r1, r1\n\tst.1\t64, r1\n\tsub.s!\t832, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\t448, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[24], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[22], r0, r5\n\tadd\t320, r5, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1\tr2, r5\n\tadd\tstack-[22], r0, r2\n\tadd\t352, r2, r2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI0_53[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[24], r4, r2\n\tadd\t64, r1, r4\n\tst.1\tr4, r5\n\tadd\tstack-[22], r0, r4\n\tor\t384, r4, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[22], r0, r7\n\tadd\t416, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t448, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t480, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tor\t512, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\t96, r1, r5\n\tst.1\tr5, r4\n\tadd\t544, r7, r4\n\tsub\tr2, r4, r5\n\tsub.s!\t@CPI0_56[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r5, r5\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_64[0], r5, r6\n\tjump.gt\t@.BB0_66\n\tadd\t64, r5, r6\n\tst.1\t64, r6\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r4, r4\n\tadd\tstack-[22], r0, r7\n\tadd\t576, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr4, r6\n\tadd\t128, r1, r4\n\tst.1\tr4, r5\n\tadd\t608, r7, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[22], r0, r7\n\tor\t640, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t672, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t704, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t736, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\t160, r1, r5\n\tadd\tr5, r0, stack-[21]\n\tst.1\tr5, r4\n\tor\t768, r7, r4\n\tld.1\tr4, r4\n\tadd\t192, r1, r5\n\tst.1\tr5, r4\n\tadd\t800, r7, r4\n\tld.1\tr4, r4\n\tadd\t224, r1, r5\n\tst.1\tr5, r4\n\tadd\t832, r7, r4\n\tld.1\tr4, r4\n\tadd\t256, r1, r5\n\tst.1\tr5, r4\n\tadd\t864, r7, r4\n\tld.1\tr4, r4\n\tadd\t288, r1, r5\n\tst.1\tr5, r4\n\tadd\t320, r1, r4\n\tor\t896, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t928, r7, r4\n\tsub\tr2, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_65[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t128, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[22], r0, r5\n\tadd\t960, r5, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tst.1\tr4, r5\n\tadd\tstack-[22], r0, r4\n\tadd\t992, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[22], r0, r4\n\tor\t1024, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t352, r1, r4\n\tst.1\tr4, r2\n\tadd\tstack-[22], r0, r2\n\tadd\t1056, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t384, r1, r4\n\tst.1\tr4, r2\n\tadd\t416, r1, r1\n\tadd\tstack-[22], r0, r2\n\tadd\t1088, r2, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[21], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tld.1\t64, r5\n\tadd\t@CPI0_67[0], r0, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\tr4, r0, stack-[24]\n\tadd\tr5, r0, stack-[22]\n\tadd\t4, r5, r4\n\tcontext.this\tr5\n\tst.1\tr4, r5\n\tand\t@CPI0_53[0], r2, stack-[20]\n\tand\t@CPI0_53[0], r1, r1\n\tsub!\tstack-[20], r1, r1\n\tjump.ne\t@.BB0_1014\n\tcontext.gas_left\tr1\n\tadd\tstack-[20], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_995\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1006\n.BB0_303:\n\tadd\tstack-[24], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[22], r0, r10\n\tjump.eq\t@.BB0_306\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[24], r0, r8\n.BB0_305:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_305\n.BB0_306:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_308\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_308:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_309\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[24], r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_315\n.BB0_768:\n\tadd\tstack-[23], r0, r4\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tst.1\tr1, r4\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t36, r3, r4\n\tadd\tstack-[24], r0, r5\n\tst.1\tr4, r5\n\tadd\t68, r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_770\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_772\n.BB0_622:\n\tadd\tstack-[20], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, stack-[17]\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[17], r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_623\n\tadd\tstack-[20], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[20], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[17], r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tshl.s\t5, r6, r6\n\tjump.eq\t@.BB0_634\n\tadd\tstack-[20], r0, r9\n\tadd\tr9, r6, r7\n\tptr.add\tr1, r0, r8\n.BB0_633:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_633\n.BB0_634:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_636\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[20], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_636:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_642\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_640\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_639:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_639\n.BB0_640:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_542:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_545\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_544:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_544\n.BB0_545:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1482:\n\tadd\tstack-[21], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[16], r0, r10\n\tjump.eq\t@.BB0_1485\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[21], r0, r8\n.BB0_1484:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_1484\n.BB0_1485:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1487\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[21], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1487:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1488\n\tadd\t31, r4, r2\n\tand\t96, r2, r2\n\tadd\tstack-[21], r2, r2\n\tadd\tr2, r0, stack-[16]\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB0_1494\n\tjump\t@.BB0_2\n.BB0_964:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_967\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_966:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_966\n.BB0_967:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_81:\n\tadd\t4, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_53[0], r1, stack-[29]\n\tadd\t64, r0, stack-[28]\n\tadd\t192, r0, stack-[27]\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t192, r1\n\tld.1\t160, r2\n\tadd\t@CPI0_53[0], r0, stack-[26]\n\tand\t@CPI0_53[0], r2, r2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_83\n.BB0_82:\n\tld.1\t64, r1\n\tadd\t@CPI0_146[0], r0, r2\n\tjump\t@.BB0_907\n.BB0_309:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_312\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_311:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_311\n.BB0_312:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_623:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_626\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_625:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_625\n.BB0_626:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n.BB0_96:\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_97:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1488:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1491\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1490:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1490\n.BB0_1491:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_495:\n\tld.1\t64, r2\n\tadd\t@CPI0_88[0], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_496\n.BB0_83:\n\tld.1\t224, r1\n\tld.1\t64, r5\n\tadd\t@CPI0_67[0], r0, r3\n\tst.1.inc\tr5, r3, r3\n\tadd\tr3, r0, stack-[22]\n\tcontext.this\tr3\n\tand\t@CPI0_53[0], r3, r4\n\tadd\tr5, r0, stack-[23]\n\tadd\t4, r5, r3\n\tadd\tr4, r0, stack-[21]\n\tst.1\tr3, r4\n\tand\t@CPI0_53[0], r1, r3\n\tsub!\tr3, r2, r1\n\tjump.ne\t@.BB0_108\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_86\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_98\n.BB0_1497:\n\tadd\tstack-[16], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1500\n\tshl.s\t5, r6, r7\n\tadd\tstack-[16], r0, r9\n\tadd\tr9, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_1499:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1499\n.BB0_1500:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1502\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1502:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1503\n.BB0_1508:\n\tadd\t31, r4, r2\n\tand\t2016, r2, r2\n\tadd\tstack-[16], r2, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\t64, r2\n\tsub.s!\t832, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[18], r0, r5\n\tadd\t448, r5, r2\n\tst.1\t64, r2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr5, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[14], r0, r5\n\tst.1\tr5, r2\n\tadd\tstack-[16], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r5\n\tsub.s!\t@CPI0_53[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[16], r0, r6\n\tadd\tr4, r6, r2\n\tadd\tstack-[18], r0, r4\n\tadd\t64, r4, r4\n\tst.1\tr4, r5\n\tadd\t96, r6, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[16], r0, r7\n\tadd\t128, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t160, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t192, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t224, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\tstack-[18], r0, r5\n\tadd\t96, r5, r5\n\tadd\tr5, r0, stack-[15]\n\tst.1\tr5, r4\n\tadd\t256, r7, r4\n\tsub\tr2, r4, r5\n\tsub.s!\t@CPI0_56[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r5, r5\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_64[0], r5, r6\n\tjump.gt\t@.BB0_66\n\tadd\t64, r5, r6\n\tst.1\t64, r6\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r4, r4\n\tadd\tstack-[16], r0, r7\n\tadd\t288, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr4, r6\n\tadd\tstack-[18], r0, r4\n\tadd\t128, r4, r4\n\tadd\tr4, r0, stack-[13]\n\tst.1\tr4, r5\n\tadd\t320, r7, r5\n\tsub\tr2, r5, r4\n\tsub.s!\t@CPI0_56[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r4, r4\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_63[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r4, r6\n\tst.1\t64, r6\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr4, r5, r5\n\tadd\tstack-[16], r0, r7\n\tadd\t352, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t384, r7, r5\n\tld.1\tr5, r5\n\tadd\t64, r4, r6\n\tst.1\tr6, r5\n\tadd\t416, r7, r5\n\tld.1\tr5, r5\n\tadd\t96, r4, r6\n\tst.1\tr6, r5\n\tadd\t448, r7, r5\n\tld.1\tr5, r5\n\tadd\t128, r4, r6\n\tst.1\tr6, r5\n\tadd\tstack-[18], r0, r6\n\tadd\t160, r6, r5\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr5, r4\n\tadd\t480, r7, r4\n\tld.1\tr4, r4\n\tadd\t192, r6, r5\n\tst.1\tr5, r4\n\tor\t512, r7, r4\n\tld.1\tr4, r4\n\tadd\t224, r6, r5\n\tst.1\tr5, r4\n\tadd\t544, r7, r4\n\tld.1\tr4, r4\n\tadd\t256, r6, r5\n\tst.1\tr5, r4\n\tadd\t576, r7, r4\n\tld.1\tr4, r4\n\tadd\t288, r6, r5\n\tst.1\tr5, r4\n\tadd\t320, r6, r4\n\tadd\t608, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t640, r7, r4\n\tsub\tr2, r4, r2\n\tsub.s!\t@CPI0_56[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_65[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tadd\t128, r2, r5\n\tst.1\t64, r5\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[16], r0, r5\n\tadd\t672, r5, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_2\n\tst.1\tr4, r5\n\tadd\tstack-[16], r0, r4\n\tadd\t704, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t64, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[16], r0, r4\n\tadd\t736, r4, r4\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\tstack-[18], r0, r4\n\tadd\t352, r4, r4\n\tst.1\tr4, r2\n\tadd\tstack-[16], r0, r2\n\tadd\t768, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[18], r0, r5\n\tadd\t384, r5, r4\n\tst.1\tr4, r2\n\tadd\t416, r5, r2\n\tadd\tstack-[16], r0, r4\n\tadd\t800, r4, r4\n\tld.1\tr4, r4\n\tst.1\tr2, r4\n\tadd\tstack-[24], r0, r6\n\tadd\t36, r6, r2\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r2, r2\n\tld\tr2, r5\n\tadd\tstack[@calldatasize], r0, r2\n\tsub\tr2, r6, r6\n\tsub.s\t35, r6, r6\n\tand\t@CPI0_66[0], r6, r7\n\tand\t@CPI0_66[0], r5, r8\n\txor\tr8, r7, r9\n\tsub!\tr8, r7, r7\n\tadd\tr0, r0, r7\n\tadd.lt\t@CPI0_66[0], r0, r7\n\tsub!\tr5, r6, r6\n\tadd\tr0, r0, r6\n\tadd.ge\t@CPI0_66[0], r0, r6\n\tsub.s!\t@CPI0_66[0], r9, r8\n\tadd.ne\tr6, r0, r7\n\tsub!\tr7, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[23], r5, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[11]\n\tsub.s!\t@CPI0_55[0], r4, r4\n\tjump.gt\t@.BB0_2\n\tsub.s\tstack-[11], r2, r2\n\tadd\t32, r5, r7\n\tand\t@CPI0_66[0], r2, r4\n\tand\t@CPI0_66[0], r7, r5\n\txor\tr5, r4, r6\n\tsub!\tr5, r4, r4\n\tadd\tr0, r0, r4\n\tadd.lt\t@CPI0_66[0], r0, r4\n\tadd\tr7, r0, stack-[9]\n\tsub!\tr7, r2, r2\n\tadd\tr0, r0, r2\n\tadd.gt\t@CPI0_66[0], r0, r2\n\tsub.s!\t@CPI0_66[0], r6, r5\n\tadd.ne\tr2, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tld.1\t64, r6\n\tadd\t@CPI0_67[0], r0, r4\n\tst.1.inc\tr6, r4, r4\n\tadd\tr4, r0, stack-[16]\n\tcontext.this\tr4\n\tand\t@CPI0_53[0], r4, r5\n\tadd\tr6, r0, stack-[10]\n\tadd\t4, r6, r4\n\tadd\tr5, r0, stack-[8]\n\tst.1\tr4, r5\n\tcontext.gas_left\tr4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1536\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1547\n.BB0_770:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_772:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_774\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n.BB0_782:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_783\n.BB0_261:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_143[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_144[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_145[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_80[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_774:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_780\n\tshl.s\t5, r4, r7\n\tadd\tr3, r7, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_779:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_779\n.BB0_780:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_782\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n\tjump\t@.BB0_782\n.BB0_814:\n\tadd\tr7, r5, r5\n\tsstore\tr6, r5\n\tjump\t@.BB0_815\n.BB0_500:\n\tld.1\t64, r3\n\tadd\t36, r3, r4\n\tst.1\tr4, r2\n\tadd\t@CPI0_126[0], r0, r2\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_783:\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_785\n.BB0_788:\n\tld.1\t64, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_108[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tstack-[24], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tjump\t@.BB0_756\n.BB0_108:\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r3, r2\n\tjump.ne\t@.BB0_110\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_121\n.BB0_1316:\n\tld.1\t64, r1\n\tadd\t@CPI0_88[0], r0, r2\n\tst.1\tr1, r2\n\tcontext.caller\tr2\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_731:\n\tadd\tstack-[22], r0, r3\n\tadd\t31, r3, r3\n\tand\t@CPI0_150[0], r3, r3\n\tsub.s!\t@CPI0_110[0], r3, r4\n\tadd.ge\t@CPI0_110[0], r0, r3\n\tshl.s\t96, r3, r3\n\tadd\tstack-[24], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr3, r4, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr3, r1, r1\n\tadd\t@CPI0_111[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[23], r0, r10\n\tjump.eq\t@.BB0_734\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[24], r0, r8\n.BB0_733:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_733\n.BB0_734:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_736\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_736:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_737\n.BB0_742:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[24], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[24], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r0, r3\n\tsstore\tr0, r3\n.BB0_1058:\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_103[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1503:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1506\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1505:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1505\n.BB0_1506:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_821:\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_90[0], r0, r1\n\tadd\tr3, r0, stack-[18]\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_823\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_834\n.BB0_785:\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n\tjump\t@.BB0_788\n.BB0_86:\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[22], r0, r10\n\tjump.eq\t@.BB0_89\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[23], r0, r8\n.BB0_88:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_88\n.BB0_89:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_91\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_91:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_92\n.BB0_98:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\txor\t@CPI0_151[0], r1, r2\n\tsub!\tstack-[22], r2, r2\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[22], r1, r1\n\tsub!\tstack-[23], r1, r2\n\tjump.lt\t@.BB0_78\n\tld.1\t256, r2\n\txor\t@CPI0_151[0], r2, r4\n\tld.1\t320, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tr2, r3, r2\n\tsub\tstack-[23], r1, r1\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB0_156\n.BB0_157:\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t@CPI0_138[0], r0, r2\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[21]\n\tld.1\t128, r2\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t4, r4, r3\n\tst.1\tr3, r2\n\tld.1\t160, r2\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t36, r4, r3\n\tst.1\tr3, r2\n\tld.1\t192, r2\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t68, r4, r3\n\tst.1\tr3, r2\n\tld.1\t224, r2\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t100, r4, r3\n\tst.1\tr3, r2\n\tadd\t132, r4, r2\n\tld.1\t256, r3\n\tst.1\tr2, r3\n\tadd\t164, r4, r2\n\tld.1\t288, r3\n\tst.1\tr2, r3\n\tadd\t196, r4, r2\n\tld.1\t320, r3\n\tst.1\tr2, r3\n\tadd\t228, r4, r2\n\tld.1\t352, r3\n\tst.1\tr2, r3\n\tadd\t260, r4, r2\n\tld.1\t384, r3\n\tst.1\tr2, r3\n\tadd\tr4, r0, stack-[23]\n\tadd\t292, r4, r2\n\tld.1\t416, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr1, r0, stack-[22]\n\tsub.s!\t4, r1, r1\n\tjump.ne\t@.BB0_159\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t832, r3, r1\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_170\n.BB0_110:\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[22], r0, r10\n\tjump.eq\t@.BB0_113\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[23], r0, r8\n.BB0_112:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_112\n.BB0_113:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_115\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_115:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_116\n.BB0_121:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\txor\t@CPI0_151[0], r1, r2\n\tsub!\tstack-[22], r2, r2\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[22], r1, r1\n\tsub!\tstack-[23], r1, r2\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[23], r1, r1\n\tld.1\t224, r2\n\tld.1\t192, r3\n\txor\tr3, r2, r2\n\tand!\t@CPI0_53[0], r2, r2\n\tjump.ne\t@.BB0_134\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tadd\t9, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr3, r2, r2\n\tadd\t12, r0, r3\n\tsload\tr3, r3\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r3, r2\n\tadd\t13, r0, r3\n\tsload\tr3, r3\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r3, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_78\n\tsub\tr1, r2, r1\n.BB0_134:\n\tld.1\t320, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_135\n.BB0_156:\n\tld.1\t64, r1\n.BB0_906:\n\tadd\t@CPI0_81[0], r0, r2\n\tjump\t@.BB0_907\n.BB0_737:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_740\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_739:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_739\n.BB0_740:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_860:\n\tadd\tstack-[18], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[17], r0, r10\n\tjump.eq\t@.BB0_863\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[18], r0, r8\n.BB0_862:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_862\n.BB0_863:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_865\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[18], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_865:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_866\n.BB0_871:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[18], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.caller\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_105[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t100, r3, r1\n\tadd\tstack-[22], r0, r4\n\tst.1\tr1, r4\n\tadd\t4, r3, r2\n\tadd\tstack-[20], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tand\t31, r4, r2\n\tadd\tr3, r0, stack-[17]\n\tadd\t132, r3, r1\n\tadd\tstack-[21], r0, r3\n\tadd\t32, r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_879\n\tadd\tr1, r4, r5\n\tptr.add\tr3, r0, r6\n\tadd\tr1, r0, r7\n.BB0_878:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_878\n.BB0_879:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_881\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_881:\n\tadd\tstack-[22], r1, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tcontext.caller\tr2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_888\n\tadd\tstack-[22], r0, r2\n\tadd\t31, r2, r2\n\tand\t@CPI0_150[0], r2, r2\n\tsub.s!\t@CPI0_106[0], r2, r3\n\tadd.ge\t@CPI0_106[0], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr2, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_80[0], r1, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_883\n.BB0_888:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[20], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_891\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_902\n.BB0_823:\n\tadd\tstack-[18], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_77[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[16], r0, r10\n\tjump.eq\t@.BB0_826\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[18], r0, r8\n.BB0_825:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_825\n.BB0_826:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_828\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[18], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_828:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_829\n.BB0_834:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[18], r1, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_55[0], r4, r2\n\tjump.gt\t@.BB0_66\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.le\t@.BB0_838\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_503:\n\tadd\t@CPI0_127[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_62[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_92:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_95\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_94:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_94\n.BB0_95:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_96\n\tjump\t@.BB0_97\n.BB0_116:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_119\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_118:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_118\n.BB0_119:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_866:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_869\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_868:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_868\n.BB0_869:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_829:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_832\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_831:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_831\n.BB0_832:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1320:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1322\n\tdiv\t@CPI0_151[0], r5, r7, r8\n\tsub!\tr7, r6, r7\n\tjump.lt\t@.BB0_78\n.BB0_1322:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_238\n\tmul\tr6, r5, r7, r8\n\tdiv\tr7, r3, r7, r8\n\tadd\t1, r2, r8\n\tsload\tr8, r8\n\tsub!\tr7, r8, r9\n\tjump.lt\t@.BB0_78\n\tsub\tr7, r8, r7\n\txor\t@CPI0_151[0], r7, r10\n\tadd\t2, r2, r8\n\tsload\tr8, r9\n\tsub!\tr9, r10, r10\n\tjump.gt\t@.BB0_78\n\tadd\tr9, r7, r7\n\tsstore\tr8, r7\n\tsub!\tr6, r1, r7\n\tjump.ge\t@.BB0_1327\n\tjump\t@.BB0_78\n.BB0_838:\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_858\n\tadd\t13, r0, r2\n\tsstore\tr2, r0\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tadd\t68, r4, r5\n\tadd\tstack-[17], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r5\n\tadd\t@CPI0_68[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t36, r4, r6\n\tst.1\tr6, r1\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tld.1\tr4, r6\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB0_841\n\tsub.s!\t@CPI0_55[0], r3, r2\n\tjump.le\t@.BB0_845\n\tjump\t@.BB0_66\n.BB0_883:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_886\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_885:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_885\n.BB0_886:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_841:\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t64, r5, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[15]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.ne\t@.BB0_843\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n\tjump\t@.BB0_852\n.BB0_891:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[14], r0, r10\n\tjump.eq\t@.BB0_894\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[17], r0, r8\n.BB0_893:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_893\n.BB0_894:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_896\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_896:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_897\n.BB0_902:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.gt\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[18], r0, r3\n\tsub.s!\tstack-[19], r3, r2\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[18], r0, r3\n\tadd\tstack-[23], r3, r2\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r2, r2\n\tjump.lt\t@.BB0_906\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_107[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tstack-[24], r0, r6\n.BB0_1401:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_460:\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tjump\t@.BB0_466\n.BB0_843:\n\tld.1\t64, r1\n.BB0_845:\n\tadd\t31, r3, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_70[0], r2, r4\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_55[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_850\n\tshl.s\t5, r3, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_849:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_849\n.BB0_850:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_852\n\tshl.s\t5, r3, r3\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_852:\n\tsub!\tstack-[15], r0, r3\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_858\n\tsub.s!\t@CPI0_56[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_858\n\tjump\t@.BB0_261\n.BB0_897:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_900\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_899:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_899\n.BB0_900:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1333:\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[21]\n\tsload\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_90[0], r0, r1\n\tadd\tr3, r0, stack-[24]\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[22]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1335\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1346\n.BB0_135:\n\tld.1\t160, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\tr3, r0, stack-[23]\n\tadd\t4, r3, r1\n\tadd\tstack-[21], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_137\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_148\n.BB0_1371:\n\tadd\tstack-[23], r0, r6\n\tadd\t68, r6, r1\n\tld.1\t224, r4\n\tadd\t64, r0, r5\n\tst.1\tr1, r5\n\tadd\t32, r6, r1\n\tadd\t@CPI0_91[0], r0, r5\n\tst.1\tr1, r5\n\tadd\t36, r6, r5\n\tst.1\tr5, r4\n\tadd\t100, r6, r4\n\tld.1\tr3, r3\n\tst.1\tr4, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_1376\n\tadd\tstack-[23], r0, r4\n\tadd\t132, r4, r4\n\tadd\tr0, r0, r5\n.BB0_1373:\n\tadd\tr5, r4, r6\n\tadd\tr2, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_1373\n\tsub!\tr5, r3, r2\n\tjump.le\t@.BB0_1376\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n.BB0_1376:\n\tadd\t31, r3, r2\n\tadd\t@CPI0_150[0], r0, r4\n\tand\tr2, r4, r2\n\tadd\t100, r2, r3\n\tadd\tstack-[23], r0, r5\n\tst.1\tr5, r3\n\tadd\t163, r2, r2\n\tand\tr2, r4, r3\n\tadd\tr3, r5, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r2\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r4\n\tld.1\t160, r2\n\tcontext.gas_left\tr3\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1402\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_1404\n.BB0_1335:\n\tadd\tstack-[24], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_77[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[22], r0, r10\n\tjump.eq\t@.BB0_1338\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[24], r0, r8\n.BB0_1337:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_1337\n.BB0_1338:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1340\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[24], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1340:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1341\n.BB0_1346:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[24], r1, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_55[0], r4, r2\n\tjump.gt\t@.BB0_66\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[24], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1370\n\tadd\t13, r0, r2\n\tsstore\tr2, r0\n\tadd\t4, r0, r2\n\tsload\tr2, r2\n\tadd\t68, r4, r5\n\tadd\tstack-[23], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r5\n\tadd\t@CPI0_68[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t36, r4, r6\n\tst.1\tr6, r1\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tld.1\tr4, r6\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB0_1353\n\tsub.s!\t@CPI0_55[0], r3, r2\n\tjump.le\t@.BB0_1357\n\tjump\t@.BB0_66\n.BB0_137:\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[22], r0, r10\n\tjump.eq\t@.BB0_140\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[23], r0, r8\n.BB0_139:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r10, r9\n\tjump.ne\t@.BB0_139\n.BB0_140:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_142\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_142:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_143\n.BB0_148:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tld.1\t160, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tld.1\t160, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\txor\t@CPI0_151[0], r1, r2\n\tsub!\tstack-[22], r2, r2\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[22], r1, r1\n\tsub!\tstack-[23], r1, r2\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[23], r1, r1\n\tld.1\t256, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_157\n\tjump\t@.BB0_156\n.BB0_159:\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r1\n\tadd\tstack-[23], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_139[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t832, r3, r4\n\tadd\t832, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_162\n\tshl.s\t5, r6, r7\n\tadd\tstack-[23], r0, r9\n\tadd\tr9, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_161:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_161\n.BB0_162:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_164\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[23], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_164:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_165\n.BB0_170:\n\tadd\t31, r4, r1\n\tand\t2016, r1, r2\n\tadd\tstack-[23], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r5\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t832, r3, r2\n\tjump.lt\t@.BB0_2\n\tsub.s!\t@CPI0_114[0], r1, r2\n\tjump.gt\t@.BB0_66\n\tadd\t448, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[23], r0, r2\n\tld.1\tr2, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[21], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_53[0], r3, r5\n\tjump.gt\t@.BB0_2\n\tst.1\tr2, r3\n\tadd\tstack-[23], r0, r3\n\tadd\t64, r3, r3\n\tld.1\tr3, r5\n\tsub.s!\t@CPI0_53[0], r5, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[23], r0, r6\n\tadd\tr4, r6, r9\n\tadd\t64, r1, r3\n\tst.1\tr3, r5\n\tadd\t96, r6, r4\n\tsub\tr9, r4, r5\n\tsub.s!\t@CPI0_56[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r5, r5\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_63[0], r5, r6\n\tjump.gt\t@.BB0_66\n\tadd\t160, r5, r6\n\tst.1\t64, r6\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_53[0], r4, r6\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r4, r4\n\tadd\tstack-[23], r0, r7\n\tadd\t128, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr4, r6\n\tadd\t160, r7, r4\n\tld.1\tr4, r4\n\tadd\t64, r5, r6\n\tst.1\tr6, r4\n\tadd\t192, r7, r4\n\tld.1\tr4, r4\n\tadd\t96, r5, r6\n\tst.1\tr6, r4\n\tadd\t224, r7, r4\n\tld.1\tr4, r4\n\tadd\t128, r5, r6\n\tst.1\tr6, r4\n\tadd\t96, r1, r4\n\tst.1\tr4, r5\n\tadd\t256, r7, r5\n\tsub\tr9, r5, r6\n\tsub.s!\t@CPI0_56[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t64, r6, r6\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_64[0], r6, r7\n\tjump.gt\t@.BB0_66\n\tadd\t64, r6, r7\n\tst.1\t64, r7\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_53[0], r5, r7\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr6, r5, r5\n\tadd\tstack-[23], r0, r8\n\tadd\t288, r8, r7\n\tld.1\tr7, r7\n\tst.1\tr5, r7\n\tadd\t128, r1, r5\n\tadd\tr5, r0, stack-[21]\n\tst.1\tr5, r6\n\tadd\t320, r8, r6\n\tsub\tr9, r6, r5\n\tsub.s!\t@CPI0_56[0], r5, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t160, r5, r5\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_63[0], r5, r7\n\tjump.gt\t@.BB0_66\n\tadd\t160, r5, r7\n\tst.1\t64, r7\n\tld.1\tr6, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r6, r6\n\tadd\tstack-[23], r0, r12\n\tadd\t352, r12, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t384, r12, r6\n\tld.1\tr6, r6\n\tadd\t64, r5, r7\n\tst.1\tr7, r6\n\tadd\t416, r12, r6\n\tld.1\tr6, r6\n\tadd\t96, r5, r7\n\tst.1\tr7, r6\n\tadd\t448, r12, r6\n\tld.1\tr6, r6\n\tadd\t128, r5, r7\n\tst.1\tr7, r6\n\tadd\t160, r1, r8\n\tst.1\tr8, r5\n\tadd\t480, r12, r5\n\tld.1\tr5, r6\n\tadd\t192, r1, r5\n\tst.1\tr5, r6\n\tadd\t512, r12, r6\n\tld.1\tr6, r7\n\tadd\t224, r1, r6\n\tst.1\tr6, r7\n\tadd\t544, r12, r7\n\tld.1\tr7, r10\n\tadd\t256, r1, r7\n\tst.1\tr7, r10\n\tadd\t576, r12, r10\n\tld.1\tr10, r10\n\tadd\t288, r1, r11\n\tadd\tr11, r0, stack-[20]\n\tst.1\tr11, r10\n\tadd\t320, r1, r11\n\tadd\t608, r12, r10\n\tld.1\tr10, r10\n\tadd\tr11, r0, stack-[19]\n\tst.1\tr11, r10\n\tadd\t640, r12, r10\n\tsub\tr9, r10, r9\n\tsub.s!\t@CPI0_56[0], r9, r11\n\tjump.gt\t@.BB0_2\n\tsub.s!\t128, r9, r9\n\tjump.lt\t@.BB0_2\n\tld.1\t64, r9\n\tsub.s!\t@CPI0_65[0], r9, r11\n\tjump.gt\t@.BB0_66\n\tadd\t128, r9, r11\n\tst.1\t64, r11\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r11\n\tadd\t0, r0, r11\n\tadd.ne\t1, r0, r11\n\tsub!\tr10, r11, r11\n\tjump.ne\t@.BB0_2\n\tst.1.inc\tr9, r10, r10\n\tadd\tstack-[23], r0, r11\n\tadd\t672, r11, r11\n\tld.1\tr11, r11\n\tsub!\tr11, r0, r12\n\tadd\t0, r0, r12\n\tadd.ne\t1, r0, r12\n\tsub!\tr11, r12, r12\n\tjump.ne\t@.BB0_2\n\tst.1\tr10, r11\n\tadd\tstack-[23], r0, r10\n\tadd\t704, r10, r10\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r11\n\tadd\t0, r0, r11\n\tadd.ne\t1, r0, r11\n\tsub!\tr10, r11, r11\n\tjump.ne\t@.BB0_2\n\tadd\t64, r9, r11\n\tst.1\tr11, r10\n\tadd\tstack-[23], r0, r10\n\tadd\t736, r10, r10\n\tld.1\tr10, r10\n\tsub!\tr10, r0, r11\n\tadd\t0, r0, r11\n\tadd.ne\t1, r0, r11\n\tsub!\tr10, r11, r11\n\tjump.ne\t@.BB0_2\n\tadd\t96, r9, r11\n\tst.1\tr11, r10\n\tadd\t352, r1, r11\n\tst.1\tr11, r9\n\tadd\tstack-[23], r0, r9\n\tadd\t768, r9, r9\n\tld.1\tr9, r9\n\tsub.s!\t@CPI0_53[0], r9, r10\n\tjump.gt\t@.BB0_2\n\tadd\t384, r1, r10\n\tadd\tr10, r0, stack-[17]\n\tst.1\tr10, r9\n\tadd\t416, r1, r10\n\tadd\tstack-[23], r0, r9\n\tadd\t800, r9, r9\n\tld.1\tr9, r9\n\tadd\tr10, r0, stack-[18]\n\tst.1\tr10, r9\n\tld.1\tr2, r9\n\tand!\t@CPI0_53[0], r9, r9\n\tjump.eq\t@.BB0_82\n\tadd\tstack-[21], r0, r9\n\tld.1\tr9, r9\n\tadd\t32, r9, r9\n\tld.1\tr9, r10\n\tadd\tstack-[20], r0, r9\n\tadd\tr9, r0, stack-[25]\n\tld.1\tr9, r9\n\tadd\tr10, r0, stack-[23]\n\tadd\tr9, r0, stack-[16]\n\tsub!\tr10, r9, r9\n\tjump.lt\t@.BB0_78\n\tadd\t9, r0, r9\n\tsload\tr9, r14\n\tadd\t10, r0, r9\n\tsload\tr9, r15\n\txor\t@CPI0_66[0], r15, r9\n\tsub.s!\t@CPI0_56[0], r15, r10\n\tjump.gt\t@.BB0_200\n\tsub!\tr9, r14, r10\n\tadd\tr0, r0, r10\n\tadd.gt\t@CPI0_66[0], r0, r10\n\tand\t@CPI0_66[0], r14, r12\n\tand\t@CPI0_66[0], r9, r9\n\txor\tr9, r12, r13\n\tsub!\tr9, r12, r9\n\tadd\tr0, r0, r9\n\tadd.lt\t@CPI0_66[0], r0, r9\n\tsub.s!\t@CPI0_66[0], r13, r12\n\tadd.ne\tr10, r0, r9\n\tsub!\tr9, r0, r9\n\tjump.ne\t@.BB0_78\n.BB0_200:\n\tadd\t@CPI0_56[0], r15, r9\n\tsub.s!\t@CPI0_66[0], r15, r10\n\tjump.lt\t@.BB0_202\n\tsub!\tr9, r14, r10\n\tadd\tr0, r0, r10\n\tadd.lt\t@CPI0_66[0], r0, r10\n\tand\t@CPI0_66[0], r14, r12\n\tand\t@CPI0_66[0], r9, r9\n\txor\tr9, r12, r13\n\tsub!\tr9, r12, r9\n\tadd\tr0, r0, r9\n\tadd.gt\t@CPI0_66[0], r0, r9\n\tsub.s!\t@CPI0_66[0], r13, r12\n\tadd.ne\tr10, r0, r9\n\tsub!\tr9, r0, r9\n\tjump.ne\t@.BB0_78\n.BB0_202:\n\tsub\tr14, r15, r14\n\tadd\t11, r0, r9\n\tsload\tr9, r15\n\txor\t@CPI0_66[0], r15, r9\n\tsub.s!\t@CPI0_56[0], r15, r10\n\tjump.gt\t@.BB0_204\n\tsub!\tr9, r14, r10\n\tadd\tr0, r0, r10\n\tadd.gt\t@CPI0_66[0], r0, r10\n\tand\t@CPI0_66[0], r14, r12\n\tand\t@CPI0_66[0], r9, r9\n\txor\tr9, r12, r13\n\tsub!\tr9, r12, r9\n\tadd\tr0, r0, r9\n\tadd.lt\t@CPI0_66[0], r0, r9\n\tsub.s!\t@CPI0_66[0], r13, r12\n\tadd.ne\tr10, r0, r9\n\tsub!\tr9, r0, r9\n\tjump.ne\t@.BB0_78\n.BB0_204:\n\tadd\t@CPI0_56[0], r15, r9\n\tsub.s!\t@CPI0_66[0], r15, r10\n\tjump.lt\t@.BB0_206\n\tsub!\tr9, r14, r10\n\tadd\tr0, r0, r10\n\tadd.lt\t@CPI0_66[0], r0, r10\n\tand\t@CPI0_66[0], r14, r12\n\tand\t@CPI0_66[0], r9, r9\n\txor\tr9, r12, r13\n\tsub!\tr9, r12, r9\n\tadd\tr0, r0, r9\n\tadd.gt\t@CPI0_66[0], r0, r9\n\tsub.s!\t@CPI0_66[0], r13, r12\n\tadd.ne\tr10, r0, r9\n\tsub!\tr9, r0, r9\n\tjump.ne\t@.BB0_78\n.BB0_206:\n\tadd\tstack-[16], r0, r10\n\tsub\tstack-[23], r10, stack-[15]\n\tsub\tr14, r15, r9\n\tsub!\tr9, r0, r10\n\tadd\tr0, r0, r10\n\tadd.gt\t@CPI0_66[0], r0, r10\n\tand\t@CPI0_66[0], r9, r12\n\tsub!\tr12, r0, r13\n\tadd\tr0, r0, r13\n\tadd.lt\t@CPI0_66[0], r0, r13\n\tsub.s!\t@CPI0_66[0], r12, r12\n\tadd.ne\tr10, r0, r13\n\tsub!\tr13, r0, r10\n\tadd.eq\tr0, r0, r9\n\tld.1\t64, r10\n\tadd\tr10, r0, stack-[16]\n\tsub!\tstack-[15], r9, r9\n\tjump.le\t@.BB0_210\n\tadd\t@CPI0_112[0], r0, r1\n\tjump\t@.BB0_208\n.BB0_1341:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1344\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1343:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1343\n.BB0_1344:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_143:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_146\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_145:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_145\n.BB0_146:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_147\n\tjump\t@.BB0_97\n.BB0_165:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_168\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_167:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_167\n.BB0_168:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1381:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_1383:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_1385\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n.BB0_1393:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1396\n.BB0_1399:\n\tld.1\t64, r1\n\tld.1\t224, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_96[0], r0, r4\n.BB0_1400:\n\tcontext.caller\tr5\n\tjump\t@.BB0_1401\n.BB0_1385:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_1391\n\tshl.s\t5, r4, r7\n\tadd\tr3, r7, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_1390:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1390\n.BB0_1391:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1393\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n\tjump\t@.BB0_1393\n.BB0_1402:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\txor\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_1404:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_1406\n\tadd\t96, r0, r1\n.BB0_1414:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1415\n\tld.1\t128, r2\n\tadd\tr2, r0, stack-[22]\n\tld.1\tr1, r2\n\tsub.s!\t68, r2, r2\n\tjump.lt\t@.BB0_1446\n\tadd\t4, r1, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_56[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_2\n\tadd\t36, r1, r1\n\tld.1\tr1, r4\n\tsub.s!\t@CPI0_55[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r1, r3\n\tadd\tr4, r1, r1\n\tadd\t31, r1, r2\n\tsub!\tr2, r3, r4\n\tadd\tr0, r0, r4\n\tadd.ge\t@CPI0_66[0], r0, r4\n\tand\t@CPI0_66[0], r2, r2\n\tand\t@CPI0_66[0], r3, r5\n\txor\tr2, r5, r6\n\tsub!\tr2, r5, r2\n\tadd\tr0, r0, r2\n\tadd.lt\t@CPI0_66[0], r0, r2\n\tsub.s!\t@CPI0_66[0], r6, r5\n\tadd.ne\tr4, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tadd\t31, r1, r4\n\tand\t@CPI0_150[0], r4, r4\n\tadd\t63, r4, r4\n\tand\t@CPI0_150[0], r4, r4\n\tld.1\t64, r5\n\tadd\tr5, r4, r4\n\tadd\tr5, r0, stack-[23]\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tadd\tstack-[23], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[24]\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_1430\n\tadd\tr0, r0, r3\n.BB0_1427:\n\tadd\tstack-[24], r3, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_1427\n\tsub!\tr3, r1, r2\n\tjump.le\t@.BB0_1430\n\tadd\tstack-[24], r1, r1\n\tst.1\tr1, r0\n.BB0_1430:\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.caller\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_94[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\tr3, r0, stack-[23]\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1437\n\tadd\tstack-[23], r0, r2\n\tadd\t100, r2, r2\n\tadd\tr0, r0, r3\n.BB0_1434:\n\tadd\tr3, r2, r4\n\tadd\tstack-[24], r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_1434\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB0_1437\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB0_1437:\n\tcontext.gas_left\tr2\n\tcontext.caller\tr3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_1444\n\tadd\t31, r1, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t96, r1, r1\n\tadd\tstack-[23], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1444\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1442\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1441:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1441\n.BB0_1442:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1406:\n\tsub.s!\t@CPI0_55[0], r3, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r3, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r5\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_1412\n\tshl.s\t5, r3, r7\n\tadd\tr5, r7, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr5, r0, r9\n.BB0_1411:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1411\n.BB0_1412:\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_1414\n\tshl.s\t5, r3, r3\n\tptr.add\tr6, r3, r6\n\tadd\tr5, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r5, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_1414\n.BB0_1415:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[23]\n\tjump\t@.BB0_1379\n.BB0_1396:\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n\tjump\t@.BB0_1399\n.BB0_1446:\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.caller\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t132, r3, r1\n\tadd\t@CPI0_92[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r3, r1\n\tadd\t@CPI0_93[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\t36, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_94[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[23]\n\tadd\t4, r3, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tcontext.caller\tr2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1455\n\tadd\tstack-[23], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1450\n.BB0_1455:\n.BB0_1444:\n\tadd\tstack-[23], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[23], r0, r1\n\tst.1\t64, r1\n\tjump\t@.BB0_1379\n.BB0_1123:\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1125\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1136\n.BB0_381:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_384\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_383:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_383\n.BB0_384:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_386\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_386:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_387\n.BB0_392:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[24], r1, r2\n\tjump.lt\t@.BB0_78\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tadd\t9, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[24], r1, r1\n\tsub\tr3, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_78\n\tsub\tr1, r2, r1\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB0_156\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[20], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t36, r2, r1\n\tadd\tstack-[24], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_131[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[24]\n\tadd\t4, r2, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[20], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_411\n\tadd\tstack-[24], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_406\n.BB0_411:\n\tadd\tstack-[24], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[24], r0, r1\n\tst.1\t64, r1\n\tadd\t10, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r1, r2\n\tadd\t10, r0, r3\n\tsstore\tr3, r2\n\txor\t@CPI0_151[0], r1, r4\n\tadd\t11, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[24], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[24], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[24], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[24], r2, r2\n\tsstore\tr1, r2\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r4, r1\n\tld.1\tr1, r1\n\tld.1\t64, r3\n\tadd\t68, r3, r5\n\tst.1\tr5, r1\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t36, r3, r5\n\tst.1\tr5, r2\n\tadd\t68, r0, r2\n\tst.1\tr3, r2\n\tand\t@CPI0_53[0], r4, r2\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_421\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_423\n.BB0_1353:\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t64, r5, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[21]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.ne\t@.BB0_1355\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n\tjump\t@.BB0_1364\n.BB0_1168:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1171\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1170:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_1170\n.BB0_1171:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1173\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1173:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1174\n.BB0_1179:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[24], r1, r2\n\tjump.lt\t@.BB0_78\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tadd\t9, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[24], r1, r1\n\tsub\tr3, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\t1, r0, r4\n\txor\tstack-[17], r4, r3\n\tsub!\tstack-[16], r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[17], r5, r3\n\txor\tstack-[18], r4, r4\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB0_78\n\tsub\tr1, r2, r1\n\tadd\tstack-[18], r3, r2\n\tsub!\tr1, r2, r1\n\tjump.lt\t@.BB0_156\n.BB0_1121:\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t@CPI0_97[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[24]\n\tadd\t4, r2, r1\n\tadd\tstack-[19], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1196\n\tadd\tstack-[24], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1191\n.BB0_1196:\n\tadd\tstack-[24], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[24], r0, r1\n\tst.1\t64, r1\n\tsub.s\t1, r0, r2\n\txor\tstack-[18], r2, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\t32, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[24]\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[24], r0, r4\n\tadd\tstack-[18], r4, r4\n\tadd\tr4, r0, stack-[20]\n\tsub.s!\tstack-[16], r4, r3\n\tadd.lt\tr0, r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t100, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tst.1\tr1, r3\n\tadd\t36, r4, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tr4, r0, stack-[10]\n\tadd\t4, r4, r1\n\tadd\tstack-[22], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[15], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1207\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1202\n.BB0_1207:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[10], r0, r1\n\tst.1\t64, r1\n\tadd\t10, r0, r2\n\tsload\tr2, r3\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr3, r1, r3\n\tsstore\tr2, r3\n\txor\t@CPI0_151[0], r1, r4\n\tadd\t11, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tr3, r1, r3\n\tsstore\tr2, r3\n\tadd\t8, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr3, r1, r1\n\tsstore\tr2, r1\n\tsub!\tstack-[18], r0, r1\n\tjump.eq\t@.BB0_1214\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_84[0], r0, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1215\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1226\n.BB0_1125:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1128\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1127:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_1127\n.BB0_1128:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1130\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1130:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1131\n.BB0_1136:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[24], r1, r2\n\tjump.lt\t@.BB0_78\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tadd\t9, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[24], r1, r1\n\tsub\tr3, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\t1, r0, r3\n\txor\tstack-[18], r3, r3\n\tsub!\tstack-[16], r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[16], r0, r4\n\tadd\tstack-[18], r4, r3\n\tsub\tr1, r2, r1\n\tsub!\tr1, r3, r1\n\tjump.lt\t@.BB0_156\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tld.1\t64, r3\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tcontext.this\tr1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\tr3, r0, stack-[22]\n\tadd\t4, r3, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1149\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1160\n.BB0_387:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_390\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_389:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_389\n.BB0_390:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1355:\n\tld.1\t64, r1\n.BB0_1357:\n\tadd\t31, r3, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_70[0], r2, r4\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_55[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_1362\n\tadd\tr2, r3, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1361:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1361\n.BB0_1362:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1364\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_1364:\n\tsub!\tstack-[21], r0, r3\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_1370\n\tsub.s!\t@CPI0_56[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1370\n\tjump\t@.BB0_261\n.BB0_572:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t64, r3, r4\n\tadd\t64, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_575\n\tshl.s\t5, r6, r7\n\tadd\tstack-[22], r0, r9\n\tadd\tr9, r7, r7\n\tptr.add\tr1, r0, r8\n.BB0_574:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_574\n.BB0_575:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_577\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_577:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_578\n.BB0_583:\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t64, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r3\n\tadd\tr3, r0, stack-[23]\n\txor\t@CPI0_151[0], r3, r3\n\tadd\t10, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r3, r6\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[20], r0, r6\n\tld.1\tr6, r7\n\tadd\tstack-[23], r5, r5\n\tsstore\tr4, r5\n\tadd\tr7, r0, stack-[22]\n\txor\t@CPI0_151[0], r7, r6\n\tadd\t13, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r6, r6\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[22], r5, r5\n\tsstore\tr4, r5\n\tadd\t8, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[23], r5, r3\n\tsstore\tr4, r3\n\tadd\tstack-[22], r0, r3\n\tsub!\tstack-[23], r3, r3\n\tjump.lt\t@.BB0_78\n\tadd\tstack-[22], r0, r4\n\tsub\tstack-[23], r4, r4\n\txor\t@CPI0_151[0], r4, r6\n\tadd\t12, r0, r5\n\tsload\tr5, r3\n\tsub!\tr3, r6, r6\n\tjump.gt\t@.BB0_78\n\tadd\tr3, r4, r3\n\tsstore\tr5, r3\n\tadd\t5, r0, r5\n\tsload\tr5, r5\n\tadd\tstack-[22], r0, r7\n\tsub!\tstack-[23], r7, r6\n\tjump.eq\t@.BB0_593\n\tdiv\t@CPI0_151[0], r4, r6, r7\n\tsub!\tr6, r5, r6\n\tjump.lt\t@.BB0_78\n.BB0_593:\n\tadd\t9, r0, r6\n\tsload\tr6, r6\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_238\n\tmul\tr5, r4, r4, r5\n\tdiv\tr4, r6, r4, r5\n\txor\t@CPI0_151[0], r4, r6\n\tadd\t14, r0, r2\n\tsload\tr2, r5\n\tsub!\tr5, r6, r6\n\tjump.gt\t@.BB0_78\n\tadd\tr5, r4, r4\n\tsstore\tr2, r4\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_120[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[24], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tld.1\tr1, r1\n\tld.1\t64, r3\n\tadd\t224, r3, r4\n\tld.1\t128, r6\n\tld.1\t160, r5\n\tld.1\t192, r7\n\tld.1\t224, r8\n\tld.1\t256, r9\n\tst.1\tr4, r9\n\tand\t@CPI0_53[0], r8, r4\n\tadd\t192, r3, r8\n\tst.1\tr8, r4\n\tand\t@CPI0_53[0], r7, r4\n\tadd\t160, r3, r7\n\tst.1\tr7, r4\n\tadd\t128, r3, r4\n\tadd\tstack-[22], r0, r7\n\tst.1\tr4, r7\n\tadd\t96, r3, r4\n\tadd\tstack-[23], r0, r7\n\tst.1\tr4, r7\n\tadd\t64, r3, r4\n\tst.1\tr4, r5\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tand\t@CPI0_53[0], r2, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_121[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_122[0], r0, r4\n\tjump\t@.BB0_1400\n.BB0_1014:\n\tcontext.gas_left\tr1\n\tadd\tstack-[20], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1016\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1027\n.BB0_1174:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1177\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1176:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1176\n.BB0_1177:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1131:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1134\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1133:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1133\n.BB0_1134:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_995:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_998\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_997:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_997\n.BB0_998:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1000\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1000:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1001\n.BB0_1006:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[24], r1, r2\n\tjump.lt\t@.BB0_78\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tadd\t9, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[24], r1, r1\n\tsub\tr3, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_78\n\tsub\tr1, r2, r1\n\tjump\t@.BB0_1035\n.BB0_578:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_581\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_580:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_580\n.BB0_581:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1016:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tadd\tstack-[20], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1019\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1018:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_1018\n.BB0_1019:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1021\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1021:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1022\n.BB0_1027:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[22]\n\tsub!\tstack-[24], r2, r1\n\tjump.lt\t@.BB0_78\n\tadd\tstack-[20], r0, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[22], r0, r3\n\tsub\tstack-[24], r3, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r1, r1\n.BB0_1035:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[22]\n\tld.1\t160, r2\n\tsub!\tr1, r2, r1\n\tjump.ge\t@.BB0_1037\n\tadd\t@CPI0_81[0], r0, r1\n\tadd\tstack-[22], r0, r2\n.BB0_209:\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1450:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1453\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1452:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1452\n.BB0_1453:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1001:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1004\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1003:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1003\n.BB0_1004:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1022:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1025\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1024:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1024\n.BB0_1025:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_669:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r3, r3\n\tjump.ne\t@.BB0_671\n\tadd\t96, r0, r4\n\tadd\t128, r0, r5\n\tadd\tr0, r0, r3\n\tjump\t@.BB0_681\n.BB0_1536:\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1539\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[10], r0, r8\n.BB0_1538:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[16], r8, r9\n\tjump.ne\t@.BB0_1538\n.BB0_1539:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1541\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1541:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1542\n.BB0_1547:\n\tadd\t31, r4, r2\n\tand\t96, r2, r2\n\tadd\tstack-[10], r2, r5\n\tsub!\tr5, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r5, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r5\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tld.1.inc\tr2, r2, r4\n\tld.1\tr4, r4\n\tadd\t68, r5, r6\n\tst.1\tr6, r4\n\tadd\t32, r5, r6\n\tadd\t@CPI0_68[0], r0, r4\n\tst.1\tr6, r4\n\tadd\t36, r5, r4\n\tadd\tstack-[22], r0, r7\n\tst.1\tr4, r7\n\tadd\t68, r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r5, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r5, r4\n\tst.1\t64, r4\n\tld.1\tr5, r7\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r8\n\tjump.ne\t@.BB0_1552\n\tsub.s!\t@CPI0_55[0], r3, r2\n\tjump.gt\t@.BB0_66\n\tadd\t1, r0, r2\n\tjump\t@.BB0_1557\n.BB0_671:\n\tld.1\t64, r4\n.BB0_674:\n\tadd\t31, r3, r1\n\tand\t@CPI0_69[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_70[0], r1, r5\n\tadd\tr5, r4, r1\n\tsub!\tr1, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r1, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tand\t31, r3, r6\n\tst.1.inc\tr4, r3, r5\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_679\n\tshl.s\t5, r7, r8\n\tadd\tr5, r8, r8\n\tptr.add\tr1, r0, r9\n\tadd\tr5, r0, r10\n.BB0_678:\n\tld.inc\tr9, r11, r9\n\tst.1.inc\tr10, r11, r10\n\tsub!\tr10, r8, r11\n\tjump.ne\t@.BB0_678\n.BB0_679:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_681\n\tshl.s\t5, r7, r7\n\tptr.add\tr1, r7, r8\n\tadd\tr5, r7, r7\n\tshl.s\t3, r6, r6\n\tld.1\tr7, r9\n\tshl\tr9, r6, r9\n\tshr\tr9, r6, r9\n\tld\tr8, r8\n\tsub\t256, r6, r6\n\tshr\tr8, r6, r8\n\tshl\tr8, r6, r6\n\tor\tr6, r9, r6\n\tst.1\tr7, r6\n.BB0_681:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr4, r2\n\tsub!\tr2, r0, r4\n\tjump.ne\t@.BB0_684\n.BB0_687:\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tld.1.inc\tr2, r2, r4\n\tld.1\tr4, r4\n\tld.1\t64, r5\n\tadd\t68, r5, r6\n\tst.1\tr6, r4\n\tadd\t32, r5, r4\n\tadd\t@CPI0_68[0], r0, r6\n\tst.1\tr4, r6\n\tadd\t36, r5, r6\n\tadd\tstack-[24], r0, r7\n\tst.1\tr6, r7\n\tadd\t68, r0, r6\n\tst.1\tr5, r6\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r5, r6\n\tjump.gt\t@.BB0_66\n\tadd\t128, r5, r6\n\tst.1\t64, r6\n\tld.1\tr5, r6\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r7\n\tjump.eq\t@.BB0_690\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[22]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r3\n.BB0_690:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_692\n\tadd\t96, r0, r2\n\tadd\t128, r0, r4\n.BB0_699:\n\tsub!\tstack-[22], r0, r1\n\tjump.eq\t@.BB0_261\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_702\n.BB0_705:\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[23], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[23], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[23], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[23], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_115[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_116[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tstack-[21], r0, r6\n\tadd\tstack-[24], r0, r7\n\tjump\t@.BB0_1401\n.BB0_1037:\n\tadd\t@CPI0_100[0], r0, r1\n\tadd\tstack-[22], r0, r3\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[24]\n\tadd\t4, r3, r1\n\tld.1\t128, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tld.1\t160, r2\n\tst.1\tr1, r2\n\tld.1\t192, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t68, r3, r2\n\tst.1\tr2, r1\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t100, r3, r2\n\tst.1\tr2, r1\n\tadd\t132, r3, r1\n\tld.1\t256, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[23], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1039\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1050\n.BB0_1542:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1545\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1544:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1544\n.BB0_1545:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_684:\n\tsub.s!\t@CPI0_56[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr5, r2\n\tsub!\tr2, r0, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tsub!\tr2, r4, r4\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tjump\t@.BB0_687\n.BB0_1039:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\tstack-[23], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1042\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1041:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_1041\n.BB0_1042:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1044\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1044:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1045\n.BB0_1050:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tld.1\t160, r2\n\tadd\tr2, r0, stack-[24]\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t1, r0, r2\n\txor\tstack-[24], r2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[24], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r2\n\tld.1\t128, r6\n\tld.1\t160, r3\n\tld.1\t192, r4\n\tld.1\t224, r5\n\tld.1\t256, r7\n\tst.1\tr2, r7\n\tand\t@CPI0_53[0], r5, r2\n\tadd\t96, r1, r5\n\tst.1\tr5, r2\n\tand\t@CPI0_53[0], r4, r2\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tadd\t32, r1, r2\n\tadd\tstack-[23], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_101[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_102[0], r0, r4\n\tcontext.caller\tr5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n.BB0_1057:\n\tld.1\t64, r1\n\tadd\tstack-[23], r0, r2\n\tjump\t@.BB0_1058\n.BB0_1149:\n\tadd\tstack-[22], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1152\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1151:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_1151\n.BB0_1152:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1154\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1154:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1155\n.BB0_1160:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[22], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[10], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[10], r2, r2\n\tsub.s!\tstack-[9], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[9], r2, r2\n\tsub.s!\tstack-[17], r2, r2\n\tjump.lt\t@.BB0_906\n\tjump\t@.BB0_1121\n.BB0_1045:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1048\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1047:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1047\n.BB0_1048:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1552:\n\tsub.s!\t@CPI0_0[0], r6, r1\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t64, r6, r1\n\tsub.s!\t@CPI0_0[0], r7, r3\n\tadd.ge\t@CPI0_0[0], r0, r7\n\tshl.s\t96, r7, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r3, r3\n\tjump.ne\t@.BB0_1554\n\tadd\t96, r0, r4\n\tadd\t128, r0, r5\n\tjump\t@.BB0_1564\n.BB0_692:\n\tadd\t31, r3, r2\n\tand\t@CPI0_150[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_150[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tand\t31, r3, r5\n\tst.1.inc\tr2, r3, r4\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_697\n\tadd\tr4, r3, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr4, r0, r8\n.BB0_696:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_696\n.BB0_697:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_699\n\tptr.add\tr1, r3, r1\n\tadd\tr4, r3, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr3, r1\n\tjump\t@.BB0_699\n.BB0_406:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_409\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_408:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_408\n.BB0_409:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1155:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1158\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1157:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1157\n.BB0_1158:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1554:\n\tld.1\t64, r4\n.BB0_1557:\n\tadd\t31, r3, r5\n\tand\t@CPI0_69[0], r5, r5\n\tadd\t63, r5, r5\n\tand\t@CPI0_70[0], r5, r6\n\tadd\tr6, r4, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_55[0], r5, r7\n\tjump.gt\t@.BB0_66\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r5\n\tand\t31, r3, r6\n\tst.1.inc\tr4, r3, r5\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_1562\n\tadd\tr5, r3, r7\n\tptr.add\tr1, r0, r8\n\tadd\tr5, r0, r9\n.BB0_1561:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1561\n.BB0_1562:\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_1564\n\tptr.add\tr1, r3, r1\n\tadd\tr5, r3, r3\n\tshl.s\t3, r6, r6\n\tld.1\tr3, r7\n\tshl\tr7, r6, r7\n\tshr\tr7, r6, r7\n\tld\tr1, r1\n\tsub\t256, r6, r6\n\tshr\tr1, r6, r1\n\tshl\tr1, r6, r1\n\tor\tr1, r7, r1\n\tst.1\tr3, r1\n.BB0_1564:\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_261\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1567\n.BB0_1570:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.caller\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI0_53[0], r3, r4\n\tadd\tstack-[16], r0, r3\n\tand\t@CPI0_53[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tadd\t100, r5, r1\n\tadd\t128, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr1, r2\n\tadd\t36, r5, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1.inc\tr5, r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t132, r5, r1\n\tadd\tstack-[11], r0, r4\n\tst.1\tr1, r4\n\tadd\t4, r5, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\tr1, r3\n\tadd\t68, r5, r1\n\tst.1\tr1, r0\n\tand\t31, r4, r2\n\tadd\tr5, r0, stack-[7]\n\tadd\t164, r5, r1\n\tadd\tstack-[9], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_1575\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r5\n\tptr.add\tr3, r0, r6\n\tadd\tr1, r0, r7\n.BB0_1574:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_1574\n.BB0_1575:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1577\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_1577:\n\tadd\tstack-[11], r1, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tcontext.caller\tr2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1584\n\tadd\tstack-[11], r0, r2\n\tadd\t31, r2, r2\n\tand\t@CPI0_150[0], r2, r2\n\tsub.s!\t@CPI0_74[0], r2, r3\n\tadd.ge\t@CPI0_74[0], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr2, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_75[0], r1, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1579\n.BB0_1584:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[7], r0, r3\n\tst.1\t64, r3\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[6], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1587\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1598\n.BB0_702:\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n\tjump\t@.BB0_705\n.BB0_1567:\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n\tjump\t@.BB0_1570\n.BB0_1191:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1194\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1193:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1193\n.BB0_1194:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1579:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1582\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1581:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1581\n.BB0_1582:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_147\n.BB0_1587:\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1590\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[7], r0, r8\n.BB0_1589:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[16], r8, r9\n\tjump.ne\t@.BB0_1589\n.BB0_1590:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1592\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[7], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1592:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1593\n.BB0_1598:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[7], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\tstack-[10], r2, r1\n\tjump.ge\t@.BB0_1602\n\tadd\t@CPI0_81[0], r0, r1\n.BB0_208:\n\tadd\tstack-[16], r0, r2\n\tjump\t@.BB0_209\n.BB0_1202:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1205\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1204:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1204\n.BB0_1205:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1593:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1596\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1595:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1595\n.BB0_1596:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_421:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_423:\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_425\n\tadd\t96, r0, r3\n\tadd\t128, r0, r4\n.BB0_433:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_439\n\tsub.s!\t@CPI0_56[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr4, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n.BB0_439:\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tld.1.inc\tr3, r5, r3\n\tld.1\tr3, r3\n\tld.1\t64, r4\n\tadd\t68, r4, r6\n\tst.1\tr6, r3\n\tadd\t32, r4, r3\n\tadd\t@CPI0_68[0], r0, r6\n\tst.1\tr3, r6\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t36, r4, r6\n\tst.1\tr6, r2\n\tadd\t68, r0, r2\n\tst.1\tr4, r2\n\tand\t@CPI0_53[0], r5, r2\n\tsub.s!\t@CPI0_65[0], r4, r5\n\tjump.gt\t@.BB0_66\n\tadd\t128, r4, r5\n\tst.1\t64, r5\n\tld.1\tr4, r5\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r6\n\tjump.eq\t@.BB0_442\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t96, r5, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[21]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_442:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_444\n\tadd\t96, r0, r2\n\tadd\t128, r0, r3\n\tjump\t@.BB0_451\n.BB0_1602:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tstack-[21], r0, r1\n\tjump.ne\t@.BB0_1604\n\tadd\tr0, r0, stack-[6]\n\tadd\tstack-[16], r0, stack-[9]\n\tjump\t@.BB0_1606\n.BB0_425:\n\tsub.s!\t@CPI0_55[0], r1, r3\n\tjump.gt\t@.BB0_66\n\tadd\t31, r1, r3\n\tand\t@CPI0_150[0], r3, r3\n\tadd\t63, r3, r3\n\tand\t@CPI0_150[0], r3, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tand\t31, r1, r5\n\tst.1.inc\tr3, r1, r4\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r1, r7\n\tshl.s\t5, r7, r7\n\tjump.eq\t@.BB0_431\n\tadd\tr4, r7, r8\n\tptr.add\tr6, r0, r9\n\tadd\tr4, r0, r10\n.BB0_430:\n\tld.inc\tr9, r11, r9\n\tst.1.inc\tr10, r11, r10\n\tsub!\tr10, r8, r11\n\tjump.ne\t@.BB0_430\n.BB0_431:\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB0_433\n\tptr.add\tr6, r7, r6\n\tadd\tr4, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n\tjump\t@.BB0_433\n.BB0_1604:\n\tadd\t@CPI0_76[0], r0, r1\n\tadd\tstack-[16], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[21]\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1608\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1619\n.BB0_210:\n\tadd\t@CPI0_140[0], r0, r9\n\tadd\tstack-[16], r0, r10\n\tst.1.inc\tr10, r9, r9\n\tadd\tr9, r0, stack-[23]\n\tld.1\tr1, r1\n\tadd\t4, r10, r9\n\tst.1\tr9, r1\n\tld.1\tr2, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t36, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t68, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr4, r1\n\tld.1.inc\tr1, r2, r3\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t100, r10, r4\n\tst.1\tr4, r2\n\tld.1\tr3, r2\n\tadd\t132, r10, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\t164, r10, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\t196, r10, r3\n\tst.1\tr3, r2\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tadd\t228, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tld.1.inc\tr1, r1, r2\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t260, r10, r3\n\tst.1\tr3, r1\n\tld.1\tr2, r1\n\tadd\t292, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr8, r1\n\tld.1.inc\tr1, r2, r3\n\tand\t@CPI0_53[0], r2, r2\n\tadd\t324, r10, r4\n\tst.1\tr4, r2\n\tld.1\tr3, r2\n\tadd\t356, r10, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\t388, r10, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\t420, r10, r3\n\tst.1\tr3, r2\n\tadd\t128, r1, r1\n\tld.1\tr1, r1\n\tadd\t452, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr5, r1\n\tadd\t484, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr6, r1\n\tadd\t516, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr7, r1\n\tadd\t548, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r1\n\tadd\t580, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tadd\t612, r10, r2\n\tst.1\tr2, r1\n\tld.1\tr11, r1\n\tld.1.inc\tr1, r2, r3\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t644, r10, r4\n\tst.1\tr4, r2\n\tld.1\tr3, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t676, r10, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\t708, r10, r3\n\tst.1\tr3, r2\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\t740, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t772, r10, r2\n\tst.1\tr2, r1\n\tadd\t804, r10, r1\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[22], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_212\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_223\n.BB0_1215:\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_77[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1218\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[10], r0, r8\n.BB0_1217:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[24], r8, r9\n\tjump.ne\t@.BB0_1217\n.BB0_1218:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1220\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1220:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1221\n.BB0_1226:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[10], r1, r4\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\t68, r4, r5\n\tadd\tstack-[18], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r5\n\tadd\t@CPI0_68[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t36, r4, r6\n\tst.1\tr6, r1\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tld.1\tr4, r6\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB0_1231\n\tsub.s!\t@CPI0_55[0], r3, r2\n\tjump.le\t@.BB0_1235\n\tjump\t@.BB0_66\n.BB0_444:\n\tadd\t31, r1, r2\n\tand\t@CPI0_150[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_150[0], r2, r3\n\tld.1\t64, r2\n\tadd\tr2, r3, r3\n\tsub!\tr3, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_55[0], r3, r5\n\tjump.gt\t@.BB0_66\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r1, r4\n\tst.1.inc\tr2, r1, r3\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r1, r1\n\tshl.s\t5, r1, r1\n\tjump.eq\t@.BB0_449\n\tadd\tr3, r1, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr3, r0, r8\n.BB0_448:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_448\n.BB0_449:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_451\n\tptr.add\tr5, r1, r5\n\tadd\tr3, r1, r1\n\tshl.s\t3, r4, r4\n\tld.1\tr1, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr1, r4\n.BB0_451:\n\tsub!\tstack-[21], r0, r1\n\tjump.eq\t@.BB0_261\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_457\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_457:\n\tadd\tstack-[23], r0, r1\n\tld.1\tr1, r6\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_53[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r2, r2\n\tld\tr2, r2\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r2\n\tadd\t32, r4, r2\n\tst.1\tr2, r3\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_85[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_132[0], r0, r4\n\tcontext.caller\tr5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_460\n.BB0_1608:\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1611\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[16], r0, r8\n.BB0_1610:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[21], r8, r9\n\tjump.ne\t@.BB0_1610\n.BB0_1611:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1613\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1613:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1614\n.BB0_1619:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[16], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[11], r0, r2\n\tsub.s\t1, r0, r2\n\tjump.eq\t@.BB0_1623\n\tdiv.s\tstack-[11], r2, r4, r5\n\tsub!\tr4, r1, r4\n\tjump.lt\t@.BB0_78\n.BB0_1623:\n\tmul\tstack-[11], r1, r1, r4\n\tdiv.s\t10000, r1, stack-[6], r1\n\txor\tstack-[6], r2, r1\n\tsub!\tstack-[11], r1, r1\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[6], r2, stack-[11]\n.BB0_1606:\n\tadd\tstack-[7], r0, r2\n\tsub.s\tstack-[10], r2, r4\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\tr4, r0, stack-[7]\n\tsub.s!\tstack-[11], r4, r2\n\tjump.ge\t@.BB0_1607\n\tadd\tstack-[7], r0, r4\n\tsub\tstack-[11], r4, stack-[16]\n\tld.1\tr1, r2\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tld.1\tr4, r4\n\txor\tr4, r2, r2\n\tand!\t@CPI0_53[0], r2, r2\n\tjump.ne\t@.BB0_1630\n\tadd\tr0, r0, stack-[23]\n\tadd\tstack-[16], r0, stack-[21]\n\tjump\t@.BB0_1632\n.BB0_212:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_141[0], r1, r1\n\tadd\tstack-[22], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_215\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[16], r0, r8\n.BB0_214:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[23], r8, r9\n\tjump.ne\t@.BB0_214\n.BB0_215:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_217\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_217:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_218\n.BB0_223:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[16], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_55[0], r1, r3\n\tjump.gt\t@.BB0_66\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[30], r0, r1\n\tadd\tr1, r0, stack-[18]\n\tld.1\tr1, r1\n\txor\t@CPI0_151[0], r1, r3\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[16], r0, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[23]\n\tadd\tr2, r1, r1\n\tadd\t10, r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\txor\t@CPI0_151[0], r1, r4\n\tadd\t13, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[31], r0, r1\n\tadd\tr1, r0, stack-[17]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tld.1\t256, r2\n\tadd\tr2, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t1, r0, r2\n\txor\tstack-[22], r2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[22], r2, r2\n\tsstore\tr1, r2\n\tld.1\t224, r1\n\tand\t@CPI0_53[0], r1, r1\n\tld.1\t320, r2\n\tadd\tr2, r0, stack-[22]\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t1, r0, r2\n\txor\tstack-[22], r2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[22], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[21], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\txor\t@CPI0_151[0], r1, r3\n\tadd\t8, r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r3, r3\n\tjump.gt\t@.BB0_78\n\tadd\tr2, r1, r1\n\tadd\t8, r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[20], r0, r1\n\tld.1\tr1, r4\n\tsub!\tr4, r3, r1\n\tjump.lt\t@.BB0_78\n\tsub\tr4, r3, r2\n\txor\t@CPI0_151[0], r2, r6\n\tadd\t12, r0, r5\n\tsload\tr5, r1\n\tsub!\tr1, r6, r6\n\tjump.gt\t@.BB0_78\n\tadd\tr1, r2, r1\n\tsstore\tr5, r1\n\tadd\t5, r0, r5\n\tsload\tr5, r5\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB0_237\n\tdiv\t@CPI0_151[0], r2, r3, r4\n\tsub!\tr3, r5, r3\n\tjump.lt\t@.BB0_78\n.BB0_237:\n\tadd\t9, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_238\n\tmul\tr5, r2, r2, r4\n\tdiv\tr2, r3, r2, r3\n\txor\t@CPI0_151[0], r2, r5\n\tadd\t14, r0, r3\n\tsload\tr3, r4\n\tsub!\tr4, r5, r5\n\tjump.gt\t@.BB0_78\n\tadd\tr4, r2, r2\n\tsstore\tr3, r2\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_95[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_120[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[29], r0, r2\n\tld.1\t128, r4\n\tadd\tstack-[15], r0, r5\n\tst.1\tr1, r5\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t36, r3, r5\n\tst.1\tr5, r4\n\tadd\t68, r0, r4\n\tst.1\tr3, r4\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_243\n\tadd\tstack[@returndatasize], r0, r4\n\tadd\t1, r0, r2\n\tjump\t@.BB0_245\n.BB0_1221:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1224\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1223:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1223\n.BB0_1224:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1231:\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t64, r5, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[21]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.ne\t@.BB0_1233\n\tadd\t96, r0, r1\n\tadd\t128, r0, r2\n\tjump\t@.BB0_1242\n.BB0_1614:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1617\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1616:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1616\n.BB0_1617:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1607:\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\tr0, r0, stack-[16]\n\tadd\tr0, r0, stack-[23]\n\tjump\t@.BB0_1628\n.BB0_1630:\n\tadd\t@CPI0_78[0], r0, r1\n\tadd\tstack-[9], r0, r2\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[21]\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1633\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1644\n.BB0_218:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_221\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_220:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_220\n.BB0_221:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_243:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_245:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_247\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n\tjump\t@.BB0_255\n.BB0_1233:\n\tld.1\t64, r1\n.BB0_1235:\n\tadd\t31, r3, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_70[0], r2, r4\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_55[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r2\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r2\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_1240\n\tadd\tr2, r3, r6\n\tptr.add\tr5, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1239:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1239\n.BB0_1240:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1242\n\tptr.add\tr5, r3, r5\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_1242:\n\tsub!\tstack-[21], r0, r3\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_1214\n\tsub.s!\t@CPI0_56[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1214:\n\tadd\tstack-[20], r0, r2\n\tsub!\tstack-[16], r2, r1\n\tjump.le\t@.BB0_1248\n\tadd\tstack-[20], r0, r2\n\tsub\tstack-[16], r2, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r4\n\tld.1\t64, r3\n\tadd\t68, r3, r5\n\tst.1\tr5, r1\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t36, r3, r5\n\tst.1\tr5, r4\n\tadd\t68, r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1251\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_1253\n.BB0_1633:\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1636\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_1635:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[21], r8, r9\n\tjump.ne\t@.BB0_1635\n.BB0_1636:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1638\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1638:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1639\n.BB0_1644:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[9], r1, r1\n\tadd\tr1, r0, stack-[21]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[21], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_53[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tld.1\tr4, r4\n\tadd\tstack-[21], r0, r7\n\tadd\t100, r7, r5\n\tadd\tstack-[16], r0, r6\n\tst.1\tr5, r6\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t68, r7, r5\n\tst.1\tr5, r4\n\tand\t@CPI0_53[0], r1, r1\n\tadd\t36, r7, r4\n\tst.1\tr4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tst.1.inc\tr7, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t4, r7, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1649\n\tsub.s!\t64, r3, r1\n\tadd\t64, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1660\n.BB0_247:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_253\n\tadd\tr3, r4, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_252:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_252\n.BB0_253:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_255\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_255:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_262\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_262:\n\tld.1\t128, r1\n\tand\tstack-[26], r1, r2\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[27], r0, r3\n\tld.1\tr3, r3\n\tadd\tstack-[18], r0, r4\n\tld.1\tr4, r4\n\tadd\tstack-[25], r0, r5\n\tld.1\tr5, r5\n\tadd\tstack-[19], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[28], r0, r7\n\tld.1\tr7, r7\n\tadd\t224, r7, r8\n\tld.1\t224, r9\n\tld.1\t256, r10\n\tld.1\t320, r11\n\tst.1\tr8, r6\n\tadd\t192, r7, r6\n\tst.1\tr6, r5\n\tadd\t160, r7, r5\n\tst.1\tr5, r11\n\tadd\t128, r7, r5\n\tst.1\tr5, r4\n\tadd\t96, r7, r4\n\tst.1\tr4, r10\n\tand\t@CPI0_53[0], r9, r4\n\tadd\t64, r7, r5\n\tst.1\tr5, r4\n\tand\t@CPI0_53[0], r3, r3\n\tadd\t32, r7, r4\n\tst.1\tr4, r3\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\tr7, r1\n\tsub.s!\t@CPI0_0[0], r7, r1\n\tadd.ge\t@CPI0_0[0], r0, r7\n\tshl.s\t64, r7, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_121[0], r1, r1\n\tand\t@CPI0_53[0], r2, r6\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tcontext.caller\tr5\n\tadd\t@CPI0_142[0], r0, r4\n\tadd\tstack-[23], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tcontext.sp\tr1\n\tsub\tstack-[24], r1, r1\n\tnop\tstack+=[0 + r1]\n\tjump\t@.BB0_1057\n.BB0_1251:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_1253:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_1255\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n\tjump\t@.BB0_1263\n.BB0_1639:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1642\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1641:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1641\n.BB0_1642:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1649:\n\tadd\tstack-[21], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_80[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t64, r3, r4\n\tadd\t64, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tshl.s\t5, r6, r6\n\tjump.eq\t@.BB0_1652\n\tadd\tstack-[21], r0, r9\n\tadd\tr9, r6, r7\n\tptr.add\tr1, r0, r8\n.BB0_1651:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1651\n.BB0_1652:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1654\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[21], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1654:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1655\n.BB0_1660:\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tstack-[21], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[10], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[24], r0, r5\n\tadd\t68, r5, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r1, r1\n\tld\tr1, r4\n\tadd\tstack[@calldatasize], r0, r1\n\tsub\tr1, r5, r5\n\tsub.s\t35, r5, r5\n\tand\t@CPI0_66[0], r5, r6\n\tand\t@CPI0_66[0], r4, r7\n\txor\tr7, r6, r8\n\tsub!\tr7, r6, r6\n\tadd\tr0, r0, r6\n\tadd.lt\t@CPI0_66[0], r0, r6\n\tsub!\tr4, r5, r5\n\tadd\tr0, r0, r5\n\tadd.ge\t@CPI0_66[0], r0, r5\n\tsub.s!\t@CPI0_66[0], r8, r7\n\tadd.ne\tr5, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[21], r0, r5\n\tld.1\tr5, r5\n\tadd\tr5, r0, stack-[21]\n\tadd\tstack-[23], r4, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsub.s\tstack-[4], r1, r1\n\tadd\t32, r4, r6\n\tand\t@CPI0_66[0], r1, r2\n\tand\t@CPI0_66[0], r6, r4\n\txor\tr4, r2, r5\n\tsub!\tr4, r2, r2\n\tadd\tr0, r0, r2\n\tadd.lt\t@CPI0_66[0], r0, r2\n\tadd\tr6, r0, stack-[1]\n\tsub!\tr6, r1, r1\n\tadd\tr0, r0, r1\n\tadd.gt\t@CPI0_66[0], r0, r1\n\tsub.s!\t@CPI0_66[0], r5, r4\n\tadd.ne\tr1, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tadd\tstack-[10], r0, r4\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\t4, r4, r1\n\tadd\tstack-[8], r0, r4\n\tst.1\tr1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1668\n\tadd\t32, r0, r4\n\tjump\t@.BB0_1679\n.BB0_1255:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_1261\n\tadd\tr3, r4, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_1260:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1260\n.BB0_1261:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1263\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_1263:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1248\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1248:\n\tsub!\tstack-[17], r0, r1\n\tjump.eq\t@.BB0_1289\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r4\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[17], r0, r5\n\tst.1\tr1, r5\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t36, r3, r5\n\tst.1\tr5, r4\n\tadd\t68, r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1271\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_1273\n.BB0_1655:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1658\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1657:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1657\n.BB0_1658:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1668:\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1671\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[10], r0, r8\n.BB0_1670:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[23], r8, r9\n\tjump.ne\t@.BB0_1670\n.BB0_1671:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1673\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1673:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1674\n.BB0_1679:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[10], r1, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[9], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\t@CPI0_67[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr5, r4, r4\n\tadd\tr4, r0, stack-[23]\n\tadd\t4, r5, r4\n\tadd\tstack-[8], r0, r5\n\tst.1\tr4, r5\n\tcontext.gas_left\tr4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB0_1694\n\tadd\tstack-[9], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1685\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_1684:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[23], r8, r9\n\tjump.ne\t@.BB0_1684\n.BB0_1685:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1687\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[9], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1687:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1689\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_1694:\n\tadd\tstack-[9], r1, r4\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\t68, r4, r2\n\tadd\tstack-[21], r0, r5\n\tst.1\tr2, r5\n\tadd\t32, r4, r5\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\tr5, r2\n\tadd\t36, r4, r2\n\tadd\tstack-[22], r0, r6\n\tst.1\tr2, r6\n\tadd\t68, r0, r2\n\tst.1\tr4, r2\n\tand\t@CPI0_53[0], r1, r2\n\tsub.s!\t@CPI0_65[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tld.1\tr4, r6\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB0_1698\n\tsub.s!\t@CPI0_55[0], r3, r2\n\tjump.gt\t@.BB0_66\n\tadd\t1, r0, r2\n\tjump\t@.BB0_1703\n.BB0_1271:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_1273:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_1275\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n\tjump\t@.BB0_1283\n.BB0_1674:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1677\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1676:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1676\n.BB0_1677:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1689:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1692\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1691:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1691\n.BB0_1692:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1698:\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t64, r5, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.ne\t@.BB0_1700\n\tadd\t96, r0, r1\n\tadd\t128, r0, r4\n\tjump\t@.BB0_1710\n.BB0_1275:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_1281\n\tadd\tr3, r4, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_1280:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1280\n.BB0_1281:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1283\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_1283:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1289\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1289:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tld.1\t64, r3\n\tadd\t64, r3, r4\n\tadd\tstack-[18], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r4\n\tadd\tstack-[23], r0, r5\n\tst.1\tr4, r5\n\tand\t@CPI0_53[0], r2, r2\n\tst.1\tr3, r2\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r2, r2\n\tand\t@CPI0_53[0], r1, r6\n\tor\t@CPI0_85[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_86[0], r0, r4\n\tcontext.caller\tr5\n\tadd\tstack-[19], r0, r7\n\tjump\t@.BB0_1401\n.BB0_1700:\n\tld.1\t64, r1\n.BB0_1703:\n\tadd\t31, r3, r4\n\tand\t@CPI0_69[0], r4, r4\n\tadd\t63, r4, r4\n\tand\t@CPI0_70[0], r4, r5\n\tadd\tr5, r1, r4\n\tsub!\tr4, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tand\t31, r3, r5\n\tst.1.inc\tr1, r3, r4\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_1708\n\tadd\tr4, r3, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr4, r0, r9\n.BB0_1707:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1707\n.BB0_1708:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1710\n\tptr.add\tr6, r3, r6\n\tadd\tr4, r3, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr3, r5\n.BB0_1710:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1716\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1716:\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tcontext.caller\tr1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[22], r0, r3\n\tand\t@CPI0_53[0], r3, r4\n\tadd\tstack-[23], r0, r3\n\tand\t@CPI0_53[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tadd\t100, r5, r1\n\tadd\t128, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r5, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r5, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1.inc\tr5, r1, r1\n\tadd\tr1, r0, stack-[23]\n\tadd\t132, r5, r1\n\tadd\tstack-[4], r0, r4\n\tst.1\tr1, r4\n\tadd\t4, r5, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\tr1, r3\n\tand\t31, r4, r2\n\tadd\tr5, r0, stack-[22]\n\tadd\t164, r5, r1\n\tadd\tstack-[1], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_1721\n\tadd\tr1, r4, r5\n\tptr.add\tr3, r0, r6\n\tadd\tr1, r0, r7\n.BB0_1720:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_1720\n.BB0_1721:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1723\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_1723:\n\tadd\tstack-[4], r1, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tcontext.caller\tr2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1730\n\tadd\tstack-[4], r0, r2\n\tadd\t31, r2, r2\n\tand\t@CPI0_150[0], r2, r2\n\tsub.s!\t@CPI0_74[0], r2, r3\n\tadd.ge\t@CPI0_74[0], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\tstack-[22], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr2, r3, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_75[0], r1, r1\n\tcontext.caller\tr2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1725\n.BB0_1730:\n\tadd\tstack-[22], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[22], r0, r3\n\tst.1\t64, r3\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\t@CPI0_67[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1733\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1744\n.BB0_1725:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1728\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1727:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1727\n.BB0_1728:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1733:\n\tadd\tstack-[22], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1736\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1735:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[23], r8, r9\n\tjump.ne\t@.BB0_1735\n.BB0_1736:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1738\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1738:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1739\n.BB0_1744:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[22], r1, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_55[0], r2, r2\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[10], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[22]\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\t@CPI0_67[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tst.1.inc\tr5, r4, r4\n\tadd\tr4, r0, stack-[23]\n\tadd\t4, r5, r4\n\tadd\tstack-[8], r0, r5\n\tst.1\tr4, r5\n\tcontext.gas_left\tr4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB0_1759\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1750\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[10], r0, r8\n.BB0_1749:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[23], r8, r9\n\tjump.ne\t@.BB0_1749\n.BB0_1750:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1752\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1752:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1754\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_1759:\n\tadd\tstack-[10], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tsub.s\t1, r0, r1\n\txor\tstack-[16], r1, r1\n\tsub!\tstack-[2], r1, r1\n\tjump.gt\t@.BB0_78\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[16], r2, r1\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_1764\n\tadd\t@CPI0_81[0], r0, r1\n\tadd\tstack-[9], r0, r2\n\tjump\t@.BB0_209\n.BB0_1739:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1742\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1741:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1741\n.BB0_1742:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1754:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1757\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1756:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1756\n.BB0_1757:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1764:\n\tadd\tstack-[3], r0, r2\n\tsub.s!\tstack-[21], r2, r1\n\tjump.lt\t@.BB0_78\n\tadd\tstack-[3], r0, r2\n\tsub.s\tstack-[21], r2, r1\n\tsub!\tstack-[22], r1, r2\n\tjump.lt\t@.BB0_78\n\tsub\tstack-[22], r1, stack-[23]\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n.BB0_1632:\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\tstack-[21], r1, r2\n\tjump.ge\t@.BB0_1627\n\tadd\tstack-[9], r0, r4\n\tadd\t36, r4, r2\n\tadd\tstack-[21], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_87[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_60[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1627:\n\tsub.s\tstack-[21], r1, stack-[22]\n\tsub.s\t1, r0, r1\n\txor\tstack-[22], r1, r1\n\tsub!\tstack-[23], r1, r1\n\tjump.gt\t@.BB0_78\n.BB0_1628:\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_71[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[19], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_72[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_402\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[22], r0, r2\n\tadd\tstack-[23], r2, r2\n\tld.1\t64, r3\n\tadd\t100, r3, r1\n\tadd\tr2, r0, stack-[21]\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[23]\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[19], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1775\n\tadd\tstack-[23], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\tstack-[19], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1770\n.BB0_1775:\n\tadd\tstack-[23], r0, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_66\n\tadd\tstack-[23], r0, r1\n\tst.1\t64, r1\n\tadd\t10, r0, r2\n\tsload\tr2, r3\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr3, r1, r3\n\tsstore\tr2, r3\n\txor\t@CPI0_151[0], r1, r4\n\tadd\t11, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r4, r4\n\tjump.gt\t@.BB0_78\n\tadd\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t16, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[23], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[23], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[23]\n\tld.1\tr1, r1\n\tand\t@CPI0_53[0], r1, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[23], r2, r3\n\tjump.lt\t@.BB0_78\n\tsub.s\tstack-[23], r2, r2\n\tsstore\tr1, r2\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[13], r0, r3\n\tld.1\tr3, r3\n\tadd\t32, r3, r3\n\tld.1\tr3, r3\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_78\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[6], r0, r1\n\tjump.eq\t@.BB0_1786\n\tld.1\t64, r2\n\tadd\t@CPI0_84[0], r0, r1\n\tadd\tr2, r0, stack-[22]\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[23]\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1787\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_1798\n.BB0_402:\n\trevert\n.BB0_1770:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1773\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1772:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1772\n.BB0_1773:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1787:\n\tadd\tstack-[22], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1790\n\tptr.add\tr1, r0, r7\n\tadd\tstack-[22], r0, r8\n.BB0_1789:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub.s!\tstack-[23], r8, r9\n\tjump.ne\t@.BB0_1789\n.BB0_1790:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1792\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[22], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1792:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1793\n.BB0_1798:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[22], r1, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_55[0], r4, r2\n\tjump.gt\t@.BB0_66\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\t68, r4, r5\n\tadd\tstack-[6], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r5\n\tadd\t@CPI0_68[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t36, r4, r6\n\tst.1\tr6, r1\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t128, r4, r1\n\tst.1\t64, r1\n\tld.1\tr4, r6\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r7\n\tjump.ne\t@.BB0_1804\n\tsub.s!\t@CPI0_55[0], r3, r2\n\tjump.le\t@.BB0_1808\n\tjump\t@.BB0_66\n.BB0_1793:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tshl.s\t5, r5, r5\n\tjump.eq\t@.BB0_1796\n\tadd\tr2, r5, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_1795:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_1795\n.BB0_1796:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_97\n\tjump\t@.BB0_96\n.BB0_1804:\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd.ge\t@CPI0_0[0], r0, r5\n\tshl.s\t64, r5, r1\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd.ge\t@CPI0_0[0], r0, r6\n\tshl.s\t96, r6, r3\n\tor\tr3, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[20]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.ne\t@.BB0_1806\n\tadd\t96, r0, r1\n\tjump\t@.BB0_1815\n.BB0_1806:\n\tld.1\t64, r1\n.BB0_1808:\n\tadd\t31, r3, r2\n\tand\t@CPI0_69[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_70[0], r2, r4\n\tadd\tr4, r1, r2\n\tsub!\tr2, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_55[0], r2, r5\n\tjump.gt\t@.BB0_66\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tst.1.inc\tr1, r3, r4\n\tadd\tr4, r0, stack-[5]\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r3, r3\n\tshl.s\t5, r3, r3\n\tjump.eq\t@.BB0_1813\n\tadd\tstack-[5], r0, r7\n\tadd\tr7, r3, r5\n\tptr.add\tr4, r0, r6\n.BB0_1812:\n\tld.inc\tr6, r8, r6\n\tst.1.inc\tr7, r8, r7\n\tsub!\tr7, r5, r8\n\tjump.ne\t@.BB0_1812\n.BB0_1813:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1815\n\tptr.add\tr4, r3, r4\n\tadd\tstack-[5], r3, r3\n\tshl.s\t3, r2, r2\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_1815:\n\tsub!\tstack-[20], r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1786\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1786:\n\tsub!\tstack-[16], r0, r1\n\tjump.ne\t@.BB0_1823\n\tadd\tstack-[7], r0, r2\n\tsub.s!\tstack-[11], r2, r1\n\tjump.lt\t@.BB0_78\n\tadd\tstack-[7], r0, r2\n\tsub.s!\tstack-[11], r2, r1\n\tjump.eq\t@.BB0_1823\n\tadd\tstack-[7], r0, r2\n\tsub.s\tstack-[11], r2, r1\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tld.1\tr2, r2\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r4\n\tld.1\t64, r3\n\tadd\t68, r3, r5\n\tst.1\tr5, r1\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t36, r3, r5\n\tst.1\tr5, r4\n\tadd\t68, r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1826\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_1828\n.BB0_1826:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_1828:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_1830\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n\tjump\t@.BB0_1838\n.BB0_1830:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_1836\n\tadd\tr3, r4, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_1835:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1835\n.BB0_1836:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1838\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_1838:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1823\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1823:\n\tsub!\tstack-[21], r0, r1\n\tjump.eq\t@.BB0_1864\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r4\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[21], r0, r5\n\tst.1\tr1, r5\n\tadd\t32, r3, r1\n\tadd\t@CPI0_68[0], r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_53[0], r4, r4\n\tadd\t36, r3, r5\n\tst.1\tr5, r4\n\tadd\t68, r0, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_53[0], r2, r2\n\tsub.s!\t@CPI0_65[0], r3, r4\n\tjump.gt\t@.BB0_66\n\tadd\t128, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_1846\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_1848\n.BB0_1846:\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_1848:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_1850\n\tadd\t96, r0, r1\n\tadd\t128, r0, r3\n\tjump\t@.BB0_1858\n.BB0_1850:\n\tsub.s!\t@CPI0_55[0], r4, r1\n\tjump.gt\t@.BB0_66\n\tadd\t31, r4, r1\n\tand\t@CPI0_150[0], r1, r1\n\tadd\t63, r1, r1\n\tand\t@CPI0_150[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_55[0], r3, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tst.1\t64, r3\n\tand\t31, r4, r5\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tshl.s\t5, r4, r4\n\tjump.eq\t@.BB0_1856\n\tadd\tr3, r4, r7\n\tptr.add\tr6, r0, r8\n\tadd\tr3, r0, r9\n.BB0_1855:\n\tld.inc\tr8, r10, r8\n\tst.1.inc\tr9, r10, r9\n\tsub!\tr9, r7, r10\n\tjump.ne\t@.BB0_1855\n.BB0_1856:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1858\n\tptr.add\tr6, r4, r6\n\tadd\tr3, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_1858:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_261\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_1864\n\tsub.s!\t@CPI0_56[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_261\n.BB0_1864:\n\tadd\tstack-[24], r0, r1\n\tadd\t100, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_53[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r7\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tld.1\tr3, r3\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tadd\tstack-[6], r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r5\n\tst.1\tr5, r1\n\tand\t@CPI0_53[0], r3, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tand\t@CPI0_53[0], r2, r6\n\tor\t@CPI0_85[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_86[0], r0, r4\n\tjump\t@.BB0_1400\n.func_end0:\n\nfun_availableLiquidity:\n.func_begin1:\n\tadd\t9, r0, r1\n\tsload\tr1, r1\n\tadd\t10, r0, r2\n\tsload\tr2, r2\n\txor\t@CPI1_0[0], r2, r3\n\tsub.s!\t@CPI1_1[0], r2, r4\n\tjump.gt\t@.BB1_3\n\tsub!\tr3, r1, r4\n\tadd\tr0, r0, r4\n\tadd.le\t@CPI1_0[0], r0, r4\n\tand\t@CPI1_0[0], r1, r5\n\tand\t@CPI1_0[0], r3, r3\n\txor\tr3, r5, r6\n\tsub!\tr3, r5, r3\n\tadd\tr0, r0, r3\n\tadd.gt\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r6, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB1_2\n.BB1_3:\n\tadd\t@CPI1_1[0], r2, r3\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tjump.lt\t@.BB1_5\n\tsub!\tr3, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\t@CPI1_0[0], r0, r4\n\tand\t@CPI1_0[0], r1, r5\n\tand\t@CPI1_0[0], r3, r3\n\txor\tr3, r5, r6\n\tsub!\tr3, r5, r3\n\tadd\tr0, r0, r3\n\tadd.gt\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r6, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB1_2\n.BB1_5:\n\tsub\tr1, r2, r1\n\tadd\t11, r0, r2\n\tsload\tr2, r2\n\txor\t@CPI1_0[0], r2, r3\n\tsub.s!\t@CPI1_1[0], r2, r4\n\tjump.gt\t@.BB1_7\n\tsub!\tr3, r1, r4\n\tadd\tr0, r0, r4\n\tadd.gt\t@CPI1_0[0], r0, r4\n\tand\t@CPI1_0[0], r1, r5\n\tand\t@CPI1_0[0], r3, r3\n\txor\tr3, r5, r6\n\tsub!\tr3, r5, r3\n\tadd\tr0, r0, r3\n\tadd.lt\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r6, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB1_2\n.BB1_7:\n\tadd\t@CPI1_1[0], r2, r3\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tjump.lt\t@.BB1_9\n\tsub!\tr3, r1, r4\n\tadd\tr0, r0, r4\n\tadd.lt\t@CPI1_0[0], r0, r4\n\tand\t@CPI1_0[0], r1, r5\n\tand\t@CPI1_0[0], r3, r3\n\txor\tr3, r5, r6\n\tsub!\tr3, r5, r3\n\tadd\tr0, r0, r3\n\tadd.gt\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r6, r5\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB1_2\n.BB1_9:\n\tsub\tr1, r2, r1\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tadd.gt\t@CPI1_0[0], r0, r2\n\tand\t@CPI1_0[0], r1, r3\n\tsub!\tr3, r0, r4\n\tadd\tr0, r0, r4\n\tadd.lt\t@CPI1_0[0], r0, r4\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd.ne\tr2, r0, r4\n\tsub!\tr4, r0, r2\n\tadd.eq\tr0, r0, r1\n\tret\n.BB1_2:\n\tadd\t@CPI1_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__sha3:\n.func_begin3:\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\t@CPI3_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_2\n\tld\tr1, r1\n\tret\n.BB3_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell\t2496661742\nCPI0_3:\n\t.cell\t3551910970\nCPI0_4:\n\t.cell\t3711664793\nCPI0_5:\n\t.cell\t4213929137\nCPI0_6:\n\t.cell\t4213929138\nCPI0_7:\n\t.cell\t4221618196\nCPI0_8:\n\t.cell\t4291419323\nCPI0_9:\n\t.cell\t3711664794\nCPI0_10:\n\t.cell\t4200214114\nCPI0_11:\n\t.cell\t3639790262\nCPI0_12:\n\t.cell\t3639790263\nCPI0_13:\n\t.cell\t3697686772\nCPI0_14:\n\t.cell\t3551910971\nCPI0_15:\n\t.cell\t3573377285\nCPI0_16:\n\t.cell\t2913145134\nCPI0_17:\n\t.cell\t3281188709\nCPI0_18:\n\t.cell\t3281188710\nCPI0_19:\n\t.cell\t3294232917\nCPI0_20:\n\t.cell\t3338017537\nCPI0_21:\n\t.cell\t2913145135\nCPI0_22:\n\t.cell\t3123984674\nCPI0_23:\n\t.cell\t2714082043\nCPI0_24:\n\t.cell\t2714082044\nCPI0_25:\n\t.cell\t2767962327\nCPI0_26:\n\t.cell\t2496661743\nCPI0_27:\n\t.cell\t2644996596\nCPI0_28:\n\t.cell\t1080364782\nCPI0_29:\n\t.cell\t1750819279\nCPI0_30:\n\t.cell\t1949782872\nCPI0_31:\n\t.cell\t1949782873\nCPI0_32:\n\t.cell\t2339242234\nCPI0_33:\n\t.cell\t2362733589\nCPI0_34:\n\t.cell\t1750819280\nCPI0_35:\n\t.cell\t1803769772\nCPI0_36:\n\t.cell\t1494392436\nCPI0_37:\n\t.cell\t1494392437\nCPI0_38:\n\t.cell\t1698120191\nCPI0_39:\n\t.cell\t1080364783\nCPI0_40:\n\t.cell\t1395712851\nCPI0_41:\n\t.cell\t429337167\nCPI0_42:\n\t.cell\t561662831\nCPI0_43:\n\t.cell\t561662832\nCPI0_44:\n\t.cell\t654396979\nCPI0_45:\n\t.cell\t840526337\nCPI0_46:\n\t.cell\t429337168\nCPI0_47:\n\t.cell\t487089952\nCPI0_48:\n\t.cell\t305102474\nCPI0_49:\n\t.cell\t305102475\nCPI0_50:\n\t.cell\t395623228\nCPI0_51:\n\t.cell\t18990967\nCPI0_52:\n\t.cell\t182251765\nCPI0_53:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_54:\n\t.cell\t2535301202817642044428229017600\nCPI0_55:\n\t.cell\t18446744073709551615\nCPI0_56:\nCPI1_1:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI0_57:\n\t.cell\t-46050304286361661514580740835722078720754060733248391661644690580181618786304\nCPI0_58:\n\t.cell\t2852213852874699394802404818944\nCPI0_59:\n\t.cell\t-37993020035805447351275700149035035251444709474671622050387572365168975282176\nCPI0_60:\n\t.cell\t5387515050969974956360988622848\nCPI0_61:\n\t.cell\t-48176398895187454898376408675247034003862075863371869777489818004082619580416\nCPI0_62:\nCPI1_3:\n\t.cell\t2852213850513516153367582212096\nCPI0_63:\n\t.cell\t18446744073709551455\nCPI0_64:\n\t.cell\t18446744073709551551\nCPI0_65:\n\t.cell\t18446744073709551487\nCPI0_66:\nCPI1_0:\n\t.cell\t-57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_67:\n\t.cell\t50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_68:\n\t.cell\t-39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_69:\n\t.cell\t36893488147419103200\nCPI0_70:\n\t.cell\t73786976294838206432\nCPI0_71:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_72:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_73:\n\t.cell\t-11134712583269538805839698066229589281604222475701182907862302575421401595904\nCPI0_74:\n\t.cell\t4294967131\nCPI0_75:\n\t.cell\t12993418652339351365341207855104\nCPI0_76:\n\t.cell\t43287212728859366374517384257218114503315763764167003493285113172008959475712\nCPI0_77:\n\t.cell\t316912650057057350374175801344\nCPI0_78:\n\t.cell\t56146575288462638672998482289517766176268598771947966573654765643343943696384\nCPI0_79:\n\t.cell\t-8976445564728021210400822496253674905408498522015365802712002488161991131136\nCPI0_80:\n\t.cell\t10458117451882892562347801444352\nCPI0_81:\n\t.cell\t-3300943922389123762950872646841805461417783703079726984007935931135861719040\nCPI0_82:\n\t.cell\t-52915983400821337838893072807879568615132932544513148058617414545360631627776\nCPI0_83:\nCPI3_1:\n\t.cell\t904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_84:\n\t.cell\t-30227781294717409194091175529969188022781679737652132768372082685433681543168\nCPI0_85:\n\t.cell\t904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_86:\n\t.cell\t-37449841069752091454809893060761901613019415191541874008294342823249986781224\nCPI0_87:\n\t.cell\t-35961992669315227239549578924790532070803300588696683402848211735873169915904\nCPI0_88:\n\t.cell\t-40882195634205099230027652466335720654988126728905360897259259206155517296640\nCPI0_89:\n\t.cell\t18446744073709551295\nCPI0_90:\n\t.cell\t-7592898818735237719883584021141934199700752688615630757242666274122964664320\nCPI0_91:\n\t.cell\t-52310033445846886757961003219473726226427519220160802461750486035341139509248\nCPI0_92:\n\t.cell\t49960116254432595409413778239348715401662110897918471189003764713903127265280\nCPI0_93:\n\t.cell\t30477093331002712562486141341770319426824375975044577779266297258434244471909\nCPI0_94:\n\t.cell\t34959607159059632854885171210331919776658754426822914633388777305339733213184\nCPI0_95:\n\t.cell\t904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_96:\n\t.cell\t-23479700639809614513350973650737293202897849395893626491911281734745980306267\nCPI0_97:\n\t.cell\t-4040379178499571113413088320362178361397889570568454477669066285883733311488\nCPI0_98:\n\t.cell\t10141204804187018453408448249856\nCPI0_99:\n\t.cell\t2852213855826178446595933077504\nCPI0_100:\n\t.cell\t-25799314465782657968202409572772799601406073008598395003514131882017181138944\nCPI0_101:\n\t.cell\t904625697166532776746648320380374280103671767876822908840556390028853379072\nCPI0_102:\n\t.cell\t38801152555835589001924667730609473404188738920176275271189248303194718230927\nCPI0_103:\n\t.cell\t2535301200456458802993406410752\nCPI0_104:\n\t.cell\t2361183241434822606848\nCPI0_105:\n\t.cell\t1646237942010405874221643560702008928241043148464020128906669365233706860544\nCPI0_106:\n\t.cell\t4294967163\nCPI0_107:\n\t.cell\t-38211263486823683659365759804132907449130555001079181911608097270931587544584\nCPI0_108:\n\t.cell\t8631027668968658619115570441308526385473493021466619504082713626804378999703\nCPI0_109:\n\t.cell\t-46842263530647825085955642065376330266664051979155434417046674053800048721920\nCPI0_110:\n\t.cell\t4294967099\nCPI0_111:\n\t.cell\t15528719852795810168334614265856\nCPI0_112:\n\t.cell\t-31138099908142070834238145326589367542137658059543002187296599861042947817472\nCPI0_113:\n\t.cell\t-36169565602369193497725777031386143009405880443846305412876552611093840658432\nCPI0_114:\n\t.cell\t18446744073709551167\nCPI0_115:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_116:\n\t.cell\t13017413649135223464570472661624531968311157489992288488694906091302490395004\nCPI0_117:\n\t.cell\t6866598664320599498334448474708077959941888226986720410818909447117393100800\nCPI0_118:\n\t.cell\t316912655369719643602526666752\nCPI0_119:\n\t.cell\t37628344025616767514288754222764181820469149381482851080773263487326083874816\nCPI0_120:\n\t.cell\t25729114456907777582460095544089459338224456215728167450074070620338050220646\nCPI0_121:\n\t.cell\t904625697166532776746648320380374280103671775482726510209932799009072611328\nCPI0_122:\n\t.cell\t1240129069272859757966642126678806663331181338124845331426207595264059859502\nCPI0_123:\n\t.cell\t904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_124:\n\t.cell\t-49498524706635383728832243655355666945692404066846823293917675104735682029170\nCPI0_125:\n\t.cell\t57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_126:\n\t.cell\t39465310406883343928394807323036477083126775918172723137643797635407582068736\nCPI0_127:\nCPI1_2:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_128:\n\t.cell\t-8905631357851563223327984609765116173674017269396695441867986424608271958885\nCPI0_129:\n\t.cell\t-57024057905137558335974519122741258051978179970567891197507700845348406233507\nCPI0_130:\n\t.cell\t316912652418240591808998408192\nCPI0_131:\n\t.cell\t-46107397688938046430281584709576041236867190197637738902474793468849706500096\nCPI0_132:\n\t.cell\t29566903085221909945584974006261448982751977784947645229005809032645216596713\nCPI0_133:\n\t.cell\t-10939603071800116285536735752706616996144281030595234869248541012597281914880\nCPI0_134:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_135:\n\t.cell\t-52092917689190775857871165392216868558292806740459944723065016282925825523712\nCPI0_136:\n\t.cell\t-41167972524714016037985671738276943439188736836190089782749871454392160354304\nCPI0_137:\n\t.cell\t22270923681254677845691103109158760375340177724800803888364822332811285364736\nCPI0_138:\n\t.cell\t-29571278150628557271166050338899343210168254583775904048153242211556459020288\nCPI0_139:\n\t.cell\t25669924654621645380308239908864\nCPI0_140:\n\t.cell\t-3875454886036983798244708626275116039068333828746604385303467720410163838976\nCPI0_141:\n\t.cell\t66234743861924986228202742480896\nCPI0_142:\n\t.cell\t50491750818766590368198663371973728718790855939586613115399103527941516946660\nCPI0_143:\n\t.cell\t44069495951130393315745674479501592303602130607354577696534503863131112996864\nCPI0_144:\n\t.cell\t38196372293521921434392468485229502251335822328776059464859407886836540929138\nCPI0_145:\n\t.cell\t3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_146:\n\t.cell\t-12149609530774691123666815875714710210853636795372842193495905163881243213824\nCPI0_147:\n\t.cell\t-38672183958666172737220635779631048109326400225735050910696817262087022575616\nCPI0_148:\n\t.cell\t-31106826450888016093528250973089470031615130992924288390840237116464688005120\nCPI0_149:\n\t.cell\t-256\nCPI0_150:\n\t.cell\t-32\nCPI0_151:\n\t.cell\t-1\n","bytecode":{"object":"0004000000000002001f0000000000020000000003010019000000600330027000000b7c0030019d00000b7c03300197000300000031035500020000000103550000008004000039000000400040043f0000000102200190000000dc0000c13d000000040230008c000014660000413d000000000201043b000000e00220027000000b7e0420009c000000e60000213d00000b980420009c000001210000213d00000ba50420009c000001460000a13d00000ba60420009c000002870000a13d00000ba70420009c000004860000613d00000ba80420009c000004450000613d00000ba90220009c000014660000c13d000000440230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000202043b00000bb30420009c000014660000213d0000002304200039000000000434004b000014660000813d0000000404200039000000000441034f000000000504043b00000bb30450009c000003da0000213d00000005045002100000003f0640003900000bf90660019700000bbd0760009c000003da0000213d0000008006600039000000400060043f000000800050043f00000024022000390000000004240019000000000634004b000014660000213d000000000505004b000000460000613d000000a005000039000000000621034f000000000606043b00000bb10760009c000014660000213d00000000056504360000002002200039000000000642004b0000003e0000413d0000002402100370000000000202043b00000bb30420009c000014660000213d0000002304200039000000000534004b000000000500001900000bbe0500804100000bbe04400197000000000604004b000000000600001900000bbe0600404100000bbe0440009c000000000605c019000000000406004b000014660000c13d0000000404200039000000000441034f000000000504043b00000bb30450009c000003da0000213d00000005045002100000003f0640003900000bf906600197000000400700043d0000000006670019001700000007001d000000000776004b0000000007000019000000010700403900000bb30860009c000003da0000213d0000000107700190000003da0000c13d000000400060043f00000017060000290000000006560436001300000006001d00000024022000390000000004240019000000000334004b000014660000213d000000000305004b0000007f0000613d0000001703000029000000000521034f000000000505043b000000000605004b0000000006000019000000010600c039000000000665004b000014660000c13d000000200330003900000000005304350000002002200039000000000542004b000000730000413d0000000101000039000000000101041a00000bb1021001970000000001000411000000000221004b00000fe00000c13d0000000401000039000000000101041a00120bb10010019b00000017010000290000000002010433000000800100043d000000000321004b0000118e0000c13d000000000101004b000003660000613d000000000300001900000017010000290000000001010433000000000131004b000014680000a13d00000005013002100000001302100029000000a001100039001400000001001d000000000101043300000bb101100197001500000002001d0000000002020433001600000002001d00000000001004350000000f01000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c70000801002000039001800000003001d2de92de40000040f00000018040000290000000102200190000014660000613d000000000101043b000000000201041a00000c1102200197000000160300006b000000010220c1bf000000000021041b000000800100043d000000000141004b000014680000a13d00000017010000290000000001010433000000000141004b000014680000a13d0000001401000029000000000101043300000015020000290000000002020433000000400300043d000000200430003900000012050000290000000000540435000000000202004b0000000002000019000000010200c0390000004004300039000000000024043500000bb101100197000000000013043500000b7c0130009c00000b7c030080410000004001300210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bd1011001c70000800d02000039000000010300003900000bfc040000412de92ddf0000040f00000018030000290000000101200190000014660000613d0000000103300039000000800100043d000000000113004b000000900000413d000003660000013d0000000001000416000000000101004b000014660000c13d0000000101000039000000000010041b00000020010000390000010000100443000001200000044300000b7d0100004100002dea0001042e00000b7f0420009c000001300000213d00000b8c0420009c000001610000a13d00000b8d0420009c000002a70000a13d00000b8e0420009c0000048f0000613d00000b8f0420009c0000044a0000613d00000b900220009c000014660000c13d000000a40230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000012002000039000000400020043f0000000402100370000000000202043b000000800020043f0000002402100370000000000202043b000000a00020043f0000004402100370000000000202043b00000bb10320009c000014660000213d000000c00020043f0000006402100370000000000202043b00000bb10320009c000014660000213d000000e00020043f0000008401100370000000000101043b000001000010043f000000000100041a000000010110008c000006150000c13d000000000000041b0000000101000039000000000201041a00000bb501000041000001200010043f000000000100041100000bb104100197000001240040043f000000000100041400000bb102200197000000040320008c001700000004001d000007d70000c13d0000000103000031000000200130008c00000020040000390000000004034019000007fe0000013d00000b990420009c0000016c0000a13d00000b9a0420009c000002b80000a13d00000b9b0420009c000004970000613d00000b9c0420009c0000044f0000613d00000b9d0120009c000014660000c13d0000000001000416000000000101004b000014660000c13d00000002010000390000048a0000013d00000b800420009c000001a10000a13d00000b810420009c000002d20000a13d00000b820420009c000004a20000613d00000b830420009c0000045e0000613d00000b840220009c000014660000c13d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000401100370000000000101043b00000bb10210009c000014660000213d000000000010043500000010010000390000045a0000013d00000bac0420009c000001c20000213d00000baf0420009c000002db0000613d00000bb00220009c000014660000c13d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000401100370000000000101043b00000bb10210009c000014660000213d00000000001004350000000f01000039000000200010043f00000000010000192de92dce0000040f000000000101041a000000ff011001900000000001000019000000010100c039000000800010043f00000bb20100004100002dea0001042e00000b930420009c000001e70000213d00000b960420009c000002e00000613d00000b970120009c000014660000c13d0000000001000416000000000101004b000014660000c13d0000000901000039000004930000013d00000ba00420009c000001f00000213d00000ba30420009c0000034b0000613d00000ba40220009c000014660000c13d000000a40230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000012002000039000000400020043f0000000402100370000000000202043b000000800020043f0000002402100370000000000202043b000000a00020043f0000004402100370000000000202043b00000bb10320009c000014660000213d000000c00020043f0000006402100370000000000202043b00000bb10320009c000014660000213d000000e00020043f0000008401100370000000000101043b000001000010043f000000000100041a000000010110008c000006150000c13d000000000000041b0000000101000039000000000201041a00000bb501000041000001200010043f000000000100041100000bb101100197001700000001001d000001240010043f000000000100041400000bb102200197000000040320008c000006de0000c13d0000000103000031000000200130008c00000020040000390000000004034019000007050000013d00000b870420009c0000027e0000213d00000b8a0420009c0000036b0000613d00000b8b0220009c000014660000c13d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000401100370000000000101043b00000bb10210009c000014660000213d00000000001004350000001201000039000000200010043f00000000010000192de92dce0000040f0000000302100039000000000202041a0000000203100039000000000303041a0000000104100039000000000404041a000000000101041a000000800010043f000000a00040043f000000c00030043f000000e00020043f00000bde0100004100002dea0001042e00000bad0420009c000003700000613d00000bae0220009c000014660000c13d000000640230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000202043b001800000002001d00000bb10220009c000014660000213d0000002401100370000000000101043b001700000001001d00000bb10110009c000014660000213d0000000103000039000000000103041a00000bb1021001980000068f0000c13d00000c02011001970000001802000029000000000121019f000000000013041b00000c0301000041000000800010043f0000000001000414000000040320008c000007270000c13d0000000103000031000000200130008c000000200400003900000000040340190000074e0000013d00000b940420009c000003c20000613d00000b950120009c000014660000c13d0000000001000416000000000101004b000014660000c13d00000003010000390000048a0000013d00000ba10420009c000003e00000613d00000ba20220009c000014660000c13d000000640230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000202043b001800000002001d0000002402100370000000000202043b001700000002001d00000bb10220009c000014660000213d0000004402100370000000000202043b00000bb30420009c000014660000213d0000002304200039000000000434004b000014660000813d001500040020003d0000001501100360000000000101043b001600000001001d00000bb30110009c000014660000213d00000016012000290000002401100039000000000131004b000014660000213d000000000100041a000000010110008c000005710000c13d000000000000041b000000000100041100000bb101100197001400000001001d00000000001004350000001201000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000501043b0000000301500039000000000201041a000000010300008a000000000432013f000000180440006b00000c730000213d0000001804200029000000000505041a000000000554004b000006cc0000213d000000180330014f000000000232004b00000c730000213d000000000041041b0000000b01000039000000000201041a000000000332004b00000c730000213d00000018060000290000000002620019000000000021041b0000000301000039000000000201041a0000000401000039000000000101041a000000400500043d0000008403500039000000a00400003900000000004304350000006403500039000000170400002900000000004304350000004403500039000000000063043500000bb1011001970000002403500039000000000013043500000be9010000410000000001150436001700000001001d000000040150003900000014030000290000000000310435000000a401500039000000160600002900000000006104350000001f0360018f001800000005001d000000c40150003900000bb1022001970000001504000029000000200440003900000002044003670000000505600272000002650000613d00000005065002100000000006610019000000000704034f0000000008010019000000007907043c0000000008980436000000000968004b000002610000c13d000000000603004b000002740000613d0000000505500210000000000454034f00000000055100190000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f0000000000350435000000160110002900000000000104350000000001000414000000040320008c000011c70000c13d0000000103000031000000200130008c00000020040000390000000004034019000011fc0000013d00000b880120009c000004000000613d00000b890120009c000014660000c13d0000000001000416000000000101004b000014660000c13d0000000701000039000004930000013d00000baa0420009c0000041b0000613d00000bab0220009c000014660000c13d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000102000039000000000202041a00000bb1032001970000000002000411000000000332004b000005750000c13d0000000401100370000000000101043b0000000602000039000000000012041b000000800010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bf7011001c70000800d02000039000000010300003900000bfd040000412de92ddf0000040f0000000101200190000014660000613d000003660000013d00000b910120009c000004360000613d00000b920120009c000014660000c13d0000000001000416000000000101004b000014660000c13d0000000301000039000000000101041a00000bb1021001970000000001000411000000000221004b0000057a0000c13d0000000b01000039000000000001041b00000be40100004100002dea0001042e00000b9e0420009c0000043b0000613d00000b9f0220009c000014660000c13d000000440230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000202043b001800000002001d00000bb10220009c000014660000213d0000002401100370000000000201043b000000000100041a000000010110008c000005710000c13d000000000000041b000000000102004b000006a20000c13d00000080010000390000000102000039000000000020041b000003670000013d00000b850120009c000004400000613d00000b860120009c000014660000c13d0000000001000416000000000101004b000014660000c13d0000000801000039000004930000013d0000000001000416000000000101004b000014660000c13d0000000b01000039000004930000013d000000640230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000202043b001800000002001d00000bb10220009c000014660000213d0000002402100370000000000202043b001700000002001d0000004402100370000000000202043b00000bb30420009c000014660000213d0000002304200039000000000434004b000014660000813d001500040020003d0000001501100360000000000101043b001600000001001d00000bb30110009c000014660000213d00000016012000290000002401100039000000000131004b000014660000213d000000000100041a000000010110008c000005710000c13d000000000000041b0000000401000039000000000101041a001400000001001d000000180100002900000000001004350000001201000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f000000140300002900140bb10030019b0000000102200190000014660000613d0000000502000039000000000202041a0000000e03000039000000000303041a000000000101043b000000000401041a000000000504004b00000c600000c13d000000010500008a0013001700500153000000130640006c00000c730000213d0000001704400029000000000041041b000000000603004b000003270000613d00000000653500d9000000000545004b00000c730000413d000000000502004b0000086f0000613d00000000433400a900000000322300d90000000101100039000000000021041b0000000901000039000000000201041a000000130320006c00000c730000213d0000001702200029000000000021041b0000000d01000039000000000101041a001100000001001d000000000101004b000012220000c13d000000400300043d00000bbf010000410000000001130436001100000001001d000000000100041000000bb102100197001200000003001d0000000401300039001000000002001d000000000021043500000000010004140000001402000029000000040220008c000013760000c13d0000000103000031000000200130008c00000020040000390000000004034019000013a50000013d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000102000039000000000202041a00000bb1032001970000000002000411000000000332004b000005750000c13d0000000401100370000000000101043b0000000702000039000000000012041b000000800010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bf7011001c70000800d02000039000000010300003900000bf8040000412de92ddf0000040f0000000101200190000014660000613d000000400100043d00000b7c0210009c00000b7c01008041000000400110021000002dea0001042e0000000001000416000000000101004b000014660000c13d0000000501000039000004930000013d000001440230008c000014660000413d0000000002000416000000000202004b000014660000c13d000001c002000039000000400020043f0000000402100370000000000202043b00000bb10320009c000014660000213d000000800020043f0000002402100370000000000202043b00000bb10320009c000014660000213d000000a00020043f0000004402100370000000000202043b00000bb10320009c000014660000213d000000c00020043f0000006402100370000000000202043b00000bb10320009c000014660000213d000000e00020043f0000008402100370000000000202043b000001000020043f000000a402100370000000000202043b000001200020043f000000c402100370000000000202043b000001400020043f000000e402100370000000000202043b000001600020043f0000010402100370000000000202043b000001800020043f0000012401100370000000000101043b000001a00010043f0000000001000415001800000001001d000000000100041a000000010110008c000008330000c13d000000000000041b001f00a00000003d000000a00100043d00000bb10110019700000000001004350000000f01000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000000ff0110019000000c510000c13d000000a00100043d000000400200043d00000c1003000041000000000032043500000bb1011001970000000403200039000000000013043500000b7c0120009c00000b7c02008041000000400120021000000bba011001c700002deb00010430000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000401100370000000000101043b00000bb10210009c000014660000213d00000000001004350000001201000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000400400043d00000bbd0240009c000006190000a13d00000bfb0100004100000000001004350000004101000039000000040010043f00000bba0100004100002deb00010430000000440230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000002401100370000000000101043b001800000001001d00000bb10110009c000014660000213d000000000100041a000000010110008c000005710000c13d000000000000041b0000000101000039001600000001001d000000000201041a00000bb501000041000000800010043f000000000100041100000bb101100197001700000001001d000000840010043f000000000100041400000bb102200197000000040320008c000006420000c13d0000000103000031000000200130008c00000020040000390000000004034019000006690000013d000000840130008c000014660000413d0000000001000416000000000101004b000014660000c13d000000000100041a000000010110008c000005710000c13d000000000000041b0000000101000039001500000001001d000000000201041a00000bb501000041000000800010043f000000000100041100000bb101100197001700000001001d000000840010043f000000000100041400000bb102200197000000040320008c0000057f0000c13d0000000103000031000000200130008c00000020040000390000000004034019000005a60000013d000000840130008c000014660000413d0000000001000416000000000101004b000014660000c13d000000000100041a000000010110008c000005710000c13d000000000000041b0000000104000039000000000204041a00000bb501000041000000800010043f000000000100041100000bb105100197000000840050043f000000000100041400000bb102200197000000040320008c001500000004001d001700000005001d000005d40000c13d0000000103000031000000200130008c00000020040000390000000004034019000005fb0000013d0000000001000416000000000101004b000014660000c13d0000000c01000039000004930000013d0000000001000416000000000101004b000014660000c13d0000000a01000039000004930000013d0000000001000416000000000101004b000014660000c13d0000000e01000039000004930000013d0000000001000416000000000101004b000014660000c13d0000000d01000039000004930000013d0000000001000416000000000101004b000014660000c13d00000001010000390000048a0000013d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000401100370000000000101043b00000bb10210009c000014660000213d00000000001004350000001101000039000000200010043f00000000010000192de92dce0000040f000004930000013d000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000202043b001800000002001d00000bb30220009c000014660000213d0000001802000029001700040020003d000000170230006a00000bb40420009c000014660000213d000000800220008c000014660000413d000000000200041a000000010220008c000005710000c13d000000000000041b0000000102000039001400000002001d000000000202041a00000bb504000041000000800040043f000000000400041100000bb104400197001600000004001d000000840040043f000000000400041400000bb102200197000000040520008c0000079b0000c13d000000000131034f0000000103000031000000200230008c00000020040000390000000004034019000007c20000013d0000000001000416000000000101004b000014660000c13d0000000401000039000000000101041a00000bb101100197000000800010043f00000bb20100004100002dea0001042e0000000001000416000000000101004b000014660000c13d0000000601000039000000000101041a000000800010043f00000bb20100004100002dea0001042e0000000001000416000000000101004b000014660000c13d2de92d730000040f000000400200043d000000000012043500000b7c0120009c00000b7c02008041000000400120021000000be3011001c700002dea0001042e000000240230008c000014660000413d0000000002000416000000000202004b000014660000c13d0000000402100370000000000402043b00000bb30240009c000014660000213d000000000243004900000bb40520009c000014660000213d000000c40220008c000014660000413d0000014002000039000000400020043f0000000405400039000000000551034f000000000505043b000000800050043f0000002405400039000000000651034f000000000606043b00000bb10760009c000014660000213d000000a00060043f0000002005500039000000000651034f000000000606043b00000bb10760009c000014660000213d000000c00060043f0000002006500039000000000661034f000000000606043b000000e00060043f0000004005500039000000000651034f000000000606043b00000bb10760009c000014660000213d000001000060043f0000002005500039000000000551034f000000000505043b00000bb30650009c000014660000213d00000000054500190000002304500039000000000434004b000014660000813d0000000406500039000000000461034f000000000404043b00000bb30740009c000003da0000213d0000001f0740003900000c12077001970000003f0770003900000c120770019700000bd50870009c000003da0000213d0000014007700039000000400070043f000001400040043f00000000054500190000002405500039000000000335004b000014660000213d0000002003600039000000000131034f0000001f0340018f0000000505400272000004f40000613d000001600600003900000005075002100000016007700039000000000801034f000000008908043c0000000006960436000000000976004b000004f00000c13d000000000603004b000005030000613d0000000505500210000000000151034f00000003033002100000016005500039000000000605043300000000063601cf000000000636022f000000000101043b0000010003300089000000000131022f00000000013101cf000000000161019f000000000015043500000160014000390000000000010435000001200020043f000000000100041a000000010110008c000008330000c13d000000000000041b0000000301000039000000000101041a00000bb1011001970000000002000411000000000112004b000011bb0000c13d000000a00100043d00000bb10110019700000000001004350000001201000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000201043b0000000304200039000000000304041a000000e00100043d000000000331004b000006cc0000213d0000000b03000039000000000503041a000000000515004b0000000005004019000000000053041b0000000503000039000000000303041a0000000e05000039000000000505041a000000000602041a000000000706004b000014aa0000c13d000000000716004b00000c730000413d0000000006160049000000000062041b000000000704041a000000000817004b00000c730000413d0000000007170049000000000074041b000000000405004b0000053e0000613d00000c1374500129000000000464004b00000c730000413d000000000403004b0000086f0000613d00000000545600a900000000433400d90000000102200039000000000032041b0000000902000039000000000302041a000000000413004b00000c730000413d0000000001130049000000000012041b0000000d01000039000000000101041a001700000001001d000000000101004b000015a30000c13d000000400100043d001700000001001d000001200300043d0000000021030434000000000101004b000015c60000c13d0000000401000039000000000201041a00000017050000290000004401500039000001000300043d000000e00400043d0000000000410435000000200150003900000bc004000041000000000041043500000bb103300197000000240450003900000000003404350000004403000039000000000035043500000bb10220019700000bbd0350009c000003da0000213d00000017040000290000008003400039000000400030043f00000000040404330000000003000414000000040520008c000018580000c13d00000001020000390000000104000031000018690000013d00000bf101000041000000800010043f00000bfe0100004100002deb0001043000000bd401000041000000800010043f000000840020043f00000bb60100004100002deb0001043000000bd402000041000000800020043f000000840010043f00000bb60100004100002deb0001043000000b7c0310009c00000b7c01008041000000c00110021000000bb6011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000005930000613d0000008007000039000000000801034f000000008908043c0000000007970436000000a00970008c0000058f0000c13d000000000705004b000005a20000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000067f0000613d0000001f01400039000000600110018f001600000001001d00000080011001bf001800000001001d000000400010043f000000200130008c000014660000413d000000800200043d000000000102004b0000000001000019000000010100c039000000000112004b000014660000c13d000000160100002900000084011001bf000000000202004b0000060d0000613d00000002020003670000002404200370000000000404043b001000000004001d0000004404200370000000000404043b001100000004001d0000006404200370000000000404043b001200000004001d0000000204000039000000000404041a0000000402200370000000000502043b00000bb90200004100000018060000290000000000260435001300000005001d0000000000510435000000000100041400000bb102400197000000040420008c000f00000002001d000008840000c13d000003400130008c00000340040000390000000004034019000008af0000013d00000b7c0310009c00000b7c01008041000000c00110021000000bb6011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000005e80000613d0000008007000039000000000801034f000000008908043c0000000007970436000000a00970008c000005e40000c13d000000000705004b000005f70000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000006930000613d0000001f01400039000000600110018f001600000001001d00000080011001bf001800000001001d000000400010043f000000200130008c000014660000413d000000800200043d000000000102004b0000000001000019000000010100c039000000000112004b000014660000c13d000000160100002900000084011001bf000000000202004b000008200000c13d00000bd4020000410000001803000029000000000023043500000017020000290000000000210435000000400130021000000bba011001c700002deb0001043000000bf101000041000001200010043f00000bf20100004100002deb00010430000000000501043b0000008001400039000000400010043f000000000305041a00000000023404360000000101500039000000000101041a00000000001204350000000202500039000000000202041a0000004006400039000000000026043500000060044000390000000305500039000000000505041a00000000005404350000000e04000039000000000404041a000000000504004b000006300000613d00000c1365400129000000000535004b00000c730000413d0000000505000039000000000505041a000000000605004b0000086f0000613d00000000433400a900000000435300d900000c1304300167000000000442004b00000c730000213d0000000002230019000000000312004b00000c730000413d00000000011200490000000c02000039000000000202041a000000000321004b00000000010280190000049b0000013d00000b7c0310009c00000b7c01008041000000c00110021000000bb6011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000006560000613d0000008007000039000000000801034f000000008908043c0000000007970436000000a00970008c000006520000c13d000000000705004b000006650000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000006cf0000613d0000001f01400039000000600210018f00000080012001bf000000400010043f000000200330008c000014660000413d000000800300043d000000000403004b0000000004000019000000010400c039000000000443004b000014660000c13d000000000303004b000009980000c13d00000bd403000041000000000031043500000084022001bf00000017030000290000000000320435000000400110021000000bba011001c700002deb00010430000000400200043d0000001f0430018f00000005053002720000068b0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000006870000c13d000000000604004b00000fcb0000613d000000050550021000000fbf0000013d00000c0101000041000000800010043f00000bfe0100004100002deb00010430000000400200043d0000001f0430018f000000050530027200000005055002100000069f0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000069b0000c13d000000000604004b00000fcb0000613d00000fbf0000013d001700000002001d000000000100041100000bb10110019700000000001004350000001201000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d0000000502000039000000000202041a0000000e03000039000000000303041a000000000101043b000000000401041a000000000504004b000008680000c13d000000000503004b000006be0000613d00000c1365300129000000000545004b00000c730000413d000000000502004b0000086f0000613d00000000433400a900000000322300d90000000103100039000000000023041b0000000201100039000000000201041a000000170320006c000006cc0000413d0000000c03000039000000000303041a000000170330006b00000ece0000a13d000000400100043d00000bec02000041000008350000013d000000400200043d0000001f0430018f00000005053002720000000505500210000006db0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000006d70000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0310009c00000b7c01008041000000c00110021000000bdf011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f00000005064002720000012009000039000006f20000613d000000000701034f000000007807043c0000000009890436000001400890008c000006ee0000c13d000000000705004b000007010000613d0000000506600210000000000761034f00000003055002100000012006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000083b0000613d0000001f01400039000000600110018f001600000001001d0000012001100039001800000001001d000000400010043f000000200130008c000014660000413d000001200200043d000000000102004b0000000001000019000000010100c039000000000112004b000014660000c13d00000016010000290000012401100039000000000202004b0000060d0000613d0000000202000039000000000202041a000000800400043d00000bb905000041000000180600002900000000005604350000000000410435000000000100041400000bb102200197001700000002001d000000040220008c00000c790000c13d000003400130008c0000034004000039000000000403401900000ca50000013d00000b7c0310009c00000b7c01008041000000c00110021000000bfe011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f00000005064002720000073b0000613d0000008007000039000000000801034f000000008908043c0000000007970436000000a00970008c000007370000c13d000000000705004b0000074a0000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000084a0000613d0000001f01400039000000600110018f00000080021001bf001600000002001d000000400020043f000000200230008c000014660000413d000000800200043d00000bb10320009c000014660000213d0000000203000039000000000403041a00000c0204400197000000000224019f000000000023041b00000c040200004100000016040000290000000002240436001500000002001d00000000020004140000001803000029000000040330008c00000bc80000c13d0000000002140019001800000002001d000000400020043f0000001602000029000000000202043300000bb10320009c000014660000213d0000000303000039000000000403041a00000c0204400197000000000224019f000000000023041b0000000402000039000000000302041a00000c02033001970000001704000029000000000343019f000000000032041b00000c050200004100000018030000290000000002230436001600000002001d0000000002000414000000040340008c00000e9b0000c13d0000001801100029000000400010043f00000018020000290000000002020433000000ff0320008c000014660000213d0000004d0320008c00000c730000213d000000000302004b0000000106000039000007920000613d0000000a03000039000000010420019000000000543300a9000000010300603900000000366300a9000000010320008c000000010220027000000000030400190000078a0000213d0000000502000039000000000062041b00000044020000390000000202200367000000000202043b0000000603000039000000000023041b000000400110021000002dea0001042e00000b7c0140009c00000b7c04008041000000c00140021000000bb6011001c72de92de40000040f00000080090000390000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000007af0000613d000000000701034f000000007807043c0000000009890436000000a00890008c000007ab0000c13d000000000705004b000007be0000613d0000000506600210000000000761034f00000003055002100000008006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000008590000613d0000001f02400039000000600220018f00000080042001bf001500000004001d000000400040043f000000200430008c000014660000413d000000800400043d000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d000000000404004b00000c0a0000c13d00000bd4010000410000001503000029000000000013043500000084012001bf0000001602000029000006110000013d00000b7c0310009c00000b7c01008041000000c00110021000000bdf011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f00000005064002720000012009000039000007eb0000613d000000000701034f000000007807043c0000000009890436000001400890008c000007e70000c13d000000000705004b000007fa0000613d0000000506600210000000000761034f00000003055002100000012006600039000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000008750000613d0000001f01400039000000600110018f001600000001001d0000012001100039001800000001001d000000400010043f000000200130008c000014660000413d000001200200043d000000000102004b0000000001000019000000010100c039000000000112004b000014660000c13d00000016010000290000012401100039000000000202004b0000060d0000613d0000000202000039000000000202041a000000800400043d00000bb905000041000000180600002900000000005604350000000000410435000000000100041400000bb102200197001700000002001d000000040220008c00000d940000c13d000003400130008c0000034004000039000000000403401900000dc10000013d0000000202000039000000000202041a00000004040000390000000204400367000000000504043b00000bb90400004100000018060000290000000000460435001300000005001d0000000000510435000000000100041400000bb102200197000000040420008c001400000002001d00000aad0000c13d000003400130008c0000034004000039000000000403401900000ad90000013d000000400100043d00000bf102000041000000000021043500000b7c0210009c00000b7c01008041000000400110021000000bc9011001c700002deb00010430000000400200043d0000001f0430018f00000005053002720000000505500210000008470000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000008430000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000008560000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000008520000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000008650000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000008610000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000000503004b0000086d0000613d00000c1365300129000000000545004b00000c730000413d000000000502004b00000c400000c13d00000bfb0100004100000000001004350000001201000039000000040010043f00000bba0100004100002deb00010430000000400200043d0000001f0430018f0000000505300272000008810000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000087d0000c13d000000000604004b00000fcb0000613d0000068d0000013d0000001803000029000000400430021000000b7c0310009c00000b7c01008041000000c001100210000000000141019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f000000050640027200000005066002100000089d0000613d00000018090000290000000007690019000000000801034f000000008a08043c0000000009a90436000000000a79004b000008990000c13d000000000705004b000008ab0000613d000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000bb90000613d0000001f01400039000007e00110018f0000001801100029001400000001001d000000400010043f000003400130008c000014660000413d0000001402000029000001c001200039000000400010043f000000180100002900000000010104330000000001120436000e00000001001d0000001601000029000000a001100039000000000101043300000bb10210009c000014660000213d0000000e0200002900000000001204350000001601000029000000c001100039000000000201043300000bb10120009c000014660000213d00000018014000290000001404000029000000400440003900000000002404350000001602000029000000e004200039000000000241004900000bb40520009c000014660000213d000000a00220008c000014660000413d000000400200043d00000bbb0520009c000003da0000213d000000a005200039000000400050043f000000000404043300000bb10540009c000014660000213d0000000004420436000000160600002900000100056001bf0000000005050433000000000054043500000120046000390000000004040433000000400520003900000000004504350000014004600039000000000404043300000060052000390000000000450435000001600460003900000000040404330000008005200039000000000045043500000014040000290000006004400039000d00000004001d000000000024043500000180026001bf000000000421004900000bb40540009c000014660000213d000000400440008c000014660000413d000000400400043d00000bbc0540009c000003da0000213d0000004005400039000000400050043f000000000202043300000bb10520009c000014660000213d00000000022404360000001606000029000001a0056000390000000005050433000000000052043500000014020000290000008002200039000c00000002001d0000000000420435000001c004600039000000000241004900000bb40520009c000014660000213d000000a00220008c000014660000413d000000400200043d00000bbb0520009c000003da0000213d000000a005200039000000400050043f000000000404043300000bb10540009c000014660000213d00000000044204360000001606000029000001e0056000390000000005050433000000000054043500000200046001bf000000000404043300000040052000390000000000450435000002200460003900000000040404330000006005200039000000000045043500000240046000390000000004040433000000800520003900000000004504350000001405000029000000a004500039000b00000004001d000000000024043500000260026000390000000002020433000000c004500039000000000024043500000280026001bf0000000002020433000000e0045000390000000000240435000002a002600039000000000202043300000100045000390000000000240435000002c0026000390000000002020433000001200450003900000000002404350000014002500039000002e0046000390000000004040433000000000042043500000300026001bf000000000121004900000bb40410009c000014660000213d000000800110008c000014660000413d000000400100043d00000bbd0410009c000003da0000213d0000008004100039000000400040043f0000000002020433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d0000000002210436000000160400002900000320044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d0000000000420435000000160200002900000340022000390000000002020433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d00000040041000390000000000240435000000160200002900000360022000390000000002020433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d00000060041000390000000000240435000000140200002900000160022000390000000000120435000000160100002900000380011001bf000000000101043300000bb10210009c000014660000213d000000140400002900000180024000390000000000120435000001a0014000390000001602000029000003a002200039000000000202043300000000002104350000000401000039000000000101041a0000000c02000029000000000202043300000000020204330000000b0400002900000000040404330000000004040433000000400600043d00000bbf050000410000000005560436001800000005001d001600000006001d000000040560003900000000060004100000000000650435000000000242013f000a0bb10010019b00000bb101200198000019e20000c13d00000000010004140000000a02000029000000040220008c00001b040000c13d000000200400003900001b320000013d00000004010000390000000201100367000000000101043b001500000001001d0000000201000039000000000101041a00000bc302000041000000000020043900000bb101100197001700000001001d0000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400200043d00000bed010000410000000001120436001200000001001d001400000002001d00000004022000390000001501000029001300000002001d000000000012043500000000010004140000001702000029000000040220008c00000eea0000c13d000000140100002900000bb30110009c000003da0000213d0000001402000029000000400020043f00000bb90100004100000000001204350000001501000029000000130200002900000000001204350000000103000031000003400130008c000003400400003900000000040340190000001f01400039000007e00110018f000000140110002900000bb30210009c000003da0000213d000000400010043f000003400230008c000014660000413d00000bee0210009c000003da0000213d000001c002100039000000400020043f0000001402000029000000000202043300000000022104360000001205000029000000000505043300000bb10650009c000014660000213d000000000052043500000014020000290000004002200039000000000502043300000bb10250009c000014660000213d00000014060000290000000002640019000000400410003900000000005404350000006005600039000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d00000000055404360000001407000029000000800670003900000000060604330000000000650435000000a005700039000000000505043300000040064000390000000000560435000000c005700039000000000505043300000060064000390000000000560435000000e0057000390000000005050433000000800640003900000000005604350000006005100039001700000005001d00000000004504350000010004700039000000000542004900000bb40650009c000014660000213d000000400550008c000014660000413d000000400500043d00000bbc0650009c000003da0000213d0000004006500039000000400060043f000000000404043300000bb10640009c000014660000213d00000000044504360000001407000029000001200670003900000000060604330000000000640435000000800410003900000000005404350000014005700039000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d000000000554043600000014070000290000016006700039000000000606043300000000006504350000018005700039000000000505043300000040064000390000000000560435000001a005700039000000000505043300000060064000390000000000560435000001c005700039000000000505043300000080064000390000000000560435000000a005100039001300000005001d0000000000450435000001e0047000390000000004040433000000c005100039000000000045043500000200047000390000000004040433000000e00510003900000000004504350000022004700039000000000404043300000100051000390000000000450435000002400470003900000000040404330000012005100039000000000045043500000140041000390000026005700039000000000505043300000000005404350000028004700039000000000242004900000bb40520009c000014660000213d000000800220008c000014660000413d000000400200043d00000bbd0520009c000003da0000213d0000008005200039000000400050043f0000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d00000000044204360000001405000029000002a0055000390000000005050433000000000605004b0000000006000019000000010600c039000000000665004b000014660000c13d00000000005404350000001404000029000002c0044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d000000400520003900000000004504350000001404000029000002e0044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d000000600520003900000000004504350000016004100039000000000024043500000014020000290000030002200039000000000202043300000bb10420009c000014660000213d00000180041000390000000000240435000001a00110003900000014020000290000032002200039000000000202043300000000002104350000001701000029000000000101043300000000120104340000000001010433000000400500043d00000044045000390000000000140435000000200150003900000bc00400004100000000004104350000002404500039000000180600002900000000006404350000004404000039000000000045043500000bb10220019700000bbd0450009c000003da0000213d0000008004500039000000400040043f00000000060504330000000005000414000000040720008c00001eda0000c13d00000bb30130009c000003da0000213d000000010200003900001f4a0000013d0000001803000029000000400430021000000b7c0310009c00000b7c01008041000000c001100210000000000141019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f000000050640027200000ac60000613d000000050760021000000018090000290000000007790019000000000801034f000000008a08043c0000000009a90436000000000a79004b00000ac20000c13d000000000705004b00000ad50000613d0000000506600210000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000bfb0000613d0000001f01400039000007e00110018f0000001801100029001700000001001d000000400010043f000003400130008c000014660000413d0000001702000029000001c001200039000000400010043f000000180100002900000000010104330000000001120436001200000001001d0000001601000029000000a001100039000000000101043300000bb10210009c000014660000213d000000120200002900000000001204350000001601000029000000c001100039000000000201043300000bb10120009c000014660000213d00000018014000290000001704000029000000400440003900000000002404350000001602000029000000e004200039000000000241004900000bb40520009c000014660000213d000000a00220008c000014660000413d000000400200043d00000bbb0520009c000003da0000213d000000a005200039000000400050043f000000000404043300000bb10540009c000014660000213d0000000004420436000000160600002900000100056001bf0000000005050433000000000054043500000120046000390000000004040433000000400520003900000000004504350000014004600039000000000404043300000060052000390000000000450435000001600460003900000000040404330000008005200039000000000045043500000017040000290000006004400039001100000004001d000000000024043500000180026001bf000000000421004900000bb40540009c000014660000213d000000400440008c000014660000413d000000400400043d00000bbc0540009c000003da0000213d0000004005400039000000400050043f000000000202043300000bb10520009c000014660000213d00000000022404360000001606000029000001a0056000390000000005050433000000000052043500000017020000290000008002200039001000000002001d0000000000420435000001c004600039000000000241004900000bb40520009c000014660000213d000000a00220008c000014660000413d000000400200043d00000bbb0520009c000003da0000213d000000a005200039000000400050043f000000000404043300000bb10540009c000014660000213d00000000044204360000001606000029000001e0056000390000000005050433000000000054043500000200046001bf000000000404043300000040052000390000000000450435000002200460003900000000040404330000006005200039000000000045043500000240046000390000000004040433000000800520003900000000004504350000001705000029000000a004500039000f00000004001d000000000024043500000260026000390000000002020433000000c004500039000000000024043500000280026001bf0000000002020433000000e0045000390000000000240435000002a002600039000000000202043300000100045000390000000000240435000002c0026000390000000002020433000001200450003900000000002404350000014002500039000002e0046000390000000004040433000000000042043500000300026001bf000000000121004900000bb40410009c000014660000213d000000800110008c000014660000413d000000400100043d00000bbd0410009c000003da0000213d0000008004100039000000400040043f0000000002020433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d0000000002210436000000160400002900000320044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d0000000000420435000000160200002900000340022000390000000002020433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d00000040041000390000000000240435000000160200002900000360022000390000000002020433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d00000060041000390000000000240435000000170200002900000160022000390000000000120435000000160100002900000380011001bf000000000101043300000bb10210009c000014660000213d000000170400002900000180024000390000000000120435000001a0014000390000001602000029000003a002200039000000000202043300000000002104350000000401000039000000000201041a000000400400043d00000bbf010000410000000001140436001800000001001d001600000004001d000000040140003900000000040004100000000000410435000000000100041400000bb102200197000e00000002001d000000040220008c000019e80000c13d000000200400003900001a160000013d000000400200043d0000001f0430018f0000000505300272000000050550021000000bc50000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000bc10000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400140021000000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bc9011001c700000018020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000150a00002900000be00000613d000000000701034f0000001608000029000000007907043c00000000089804360000000009a8004b00000bdc0000c13d000000000705004b00000bef0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000d850000613d0000001f01400039000000600110018f0000001602100029001800000002001d000000400020043f000000200230008c000014660000413d000007680000013d000000400200043d0000001f0430018f000000050530027200000c070000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000c030000c13d000000000604004b00000fcb0000613d0000068d0000013d0000001706000029000000020560036700000060066000390000000204600367000000000505043b001200000005001d0000000205000039000000000505041a00130bb10050019b0000000105000039000000000505041a00110bb10050019b000000000404043b00000bb10540009c000014660000213d00000bb70500004100000015060000290000000005560436001000000005001d00000084052001bf00000012060000290000000000650435000000a405200039000000000045043500000000040004140000001305000029000000040550008c00000f500000c13d0000001502200029001000000002001d000000400020043f00000015020000290000000004020433000000000204004b0000000002000019000000010200c039001500000004001d000000000224004b000014660000c13d00000bb90200004100000010040000290000000002240436000f00000002001d00000004024001bf0000001204000029000000000042043500000000020004140000001304000029000000040440008c00000ffa0000c13d000003400230008c00000340040000390000000004034019000010270000013d00000000653400a900000000652500d90000000106100039000000000606041a000000000765004b00000c730000413d000000000565004900000c13085001670000000206100039000000000706041a000000000887004b00000c730000213d0000000005570019000000000056041b000000000503004b000006bb0000c13d000006be0000013d0000000801000039000000000101041a001e01200000003d000001200200043d00000c1303200167000000000331004b00000c730000213d00000000011200190000000702000039000000000202041a000000000121004b00000f930000a13d000000400100043d00000c0f02000041000008350000013d000000000503004b00000c650000613d00000c1365300129000000000545004b00000c730000413d000000000502004b0000086f0000613d00000000653400a900000000652500d90000000106100039000000000606041a000000000765004b00000c730000413d000000000565004900000c13085001670000000206100039000000000706041a000000000887004b0000118b0000a13d00000bfb0100004100000000001004350000001101000039000000040010043f00000bba0100004100002deb000104300000001802000029000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c700000017020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f0000000506400272000000050660021000000c930000613d00000018090000290000000007690019000000000801034f000000008a08043c0000000009a90436000000000a79004b00000c8f0000c13d000000000705004b00000ca10000613d000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000f410000613d0000001f01400039000007e00110018f0000001801100029000000400010043f000003400230008c000014660000413d000001c002100039000000400020043f00000018020000290000000002020433000000000221043600000016050000290000014005500039000000000505043300000bb10650009c000014660000213d000000000052043500000016020000290000016002200039000000000502043300000bb10250009c000014660000213d000000180240002900000040041000390000000000540435000000160400002900000180054001bf000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d00000000055404360000001607000029000001a00670003900000000060604330000000000650435000001c005700039000000000505043300000040064000390000000000560435000001e00570003900000000050504330000006006400039000000000056043500000200057001bf0000000005050433000000800640003900000000005604350000006005100039001800000005001d00000000004504350000022004700039000000000542004900000bb40650009c000014660000213d000000400550008c000014660000413d000000400500043d00000bbc0650009c000003da0000213d0000004006500039000000400060043f000000000404043300000bb10640009c000014660000213d000000000445043600000016070000290000024006700039000000000606043300000000006404350000008004100039001500000004001d00000000005404350000026005700039000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d0000000005540436000000160700002900000280067001bf00000000060604330000000000650435000002a005700039000000000505043300000040064000390000000000560435000002c005700039000000000505043300000060064000390000000000560435000002e005700039000000000505043300000080064000390000000000560435000000a005100039000000000045043500000300047001bf0000000004040433000000c005100039000000000045043500000320047000390000000004040433000000e005100039000000000045043500000340047000390000000004040433000001000510003900000000004504350000036004700039000000000404043300000120051000390000000000450435000001400410003900000380057001bf00000000050504330000000000540435000003a004700039000000000242004900000bb40520009c000014660000213d000000800220008c000014660000413d000000400200043d00000bbd0520009c000003da0000213d0000008005200039000000400050043f0000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d00000000044204360000001605000029000003c0055000390000000005050433000000000605004b0000000006000019000000010600c039000000000665004b000014660000c13d00000000005404350000001604000029000003e0044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d00000040052000390000000000450435000000160400002900000400044001bf0000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d000000600520003900000000004504350000016004100039000000000024043500000016020000290000042002200039000000000202043300000bb10420009c000014660000213d00000180041000390000000000240435000001a001100039000000160200002900000440022000390000000002020433000000000021043500000bf301000041000000400400043d0000000001140436001400000001001d0000000401400039000000800200043d00000000002104350000002401400039000000a00200043d0000000000210435000000c00100043d00000bb10110019700000044024000390000000000120435000000e00100043d00000bb10110019700000064024000390000000000120435001600000004001d0000008401400039000001000200043d000000000021043500000000010004140000001702000029000000040220008c00001cf80000c13d000000400400003900001d280000013d000000400200043d0000001f0430018f0000000505300272000000050550021000000d910000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000d8d0000c13d000000000604004b00000fcb0000613d00000fbf0000013d0000001802000029000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c700000017020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f000000050640027200000dae0000613d000000050760021000000018090000290000000007790019000000000801034f000000008a08043c0000000009a90436000000000a79004b00000daa0000c13d000000000705004b00000dbd0000613d0000000506600210000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000f840000613d0000001f01400039000007e00110018f0000001801100029000000400010043f000003400230008c000014660000413d000001c002100039000000400020043f00000018020000290000000002020433000000000221043600000016050000290000014005500039000000000505043300000bb10650009c000014660000213d000000000052043500000016020000290000016002200039000000000502043300000bb10250009c000014660000213d000000180240002900000040041000390000000000540435000000160400002900000180054001bf000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d00000000055404360000001607000029000001a00670003900000000060604330000000000650435000001c005700039000000000505043300000040064000390000000000560435000001e00570003900000000050504330000006006400039000000000056043500000200057001bf000000000505043300000080064000390000000000560435000000600510003900000000004504350000022004700039000000000542004900000bb40650009c000014660000213d000000400550008c000014660000413d000000400500043d00000bbc0650009c000003da0000213d0000004006500039000000400060043f000000000404043300000bb10640009c000014660000213d00000000044504360000001607000029000002400670003900000000060604330000000000640435000000800410003900000000005404350000026005700039000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d0000000005540436000000160700002900000280067001bf00000000060604330000000000650435000002a005700039000000000505043300000040064000390000000000560435000002c005700039000000000505043300000060064000390000000000560435000002e005700039000000000505043300000080064000390000000000560435000000a005100039001500000005001d000000000045043500000300047001bf0000000004040433000000c005100039000000000045043500000320047000390000000004040433000000e005100039000000000045043500000340047000390000000004040433000001000510003900000000004504350000036004700039000000000404043300000120051000390000000000450435000001400410003900000380057001bf00000000050504330000000000540435000003a004700039000000000242004900000bb40520009c000014660000213d000000800220008c000014660000413d000000400200043d00000bbd0520009c000003da0000213d0000008005200039000000400050043f0000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d00000000044204360000001605000029000003c0055000390000000005050433000000000605004b0000000006000019000000010600c039000000000665004b000014660000c13d00000000005404350000001604000029000003e0044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d00000040052000390000000000450435000000160400002900000400044001bf0000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d000000600520003900000000004504350000016004100039000000000024043500000016020000290000042002200039000000000202043300000bb10420009c000014660000213d00000180041000390000000000240435000001a00110003900000016020000290000044002200039000000000202043300000000002104350000000401000039000000000101041a000000150200002900000000020204330000000002020433000000400500043d00000bbf040000410000000004450436001800000004001d001600000005001d00000004045000390000000005000410000000000054043500140bb10020019b00000bb101100197000000140110006b00001dae0000c13d00000000010004140000001402000029000000040220008c00001dd20000c13d000000200400003900001e000000013d0000001801000029000000400110021000000b7c0320009c00000b7c02008041000000c002200210000000000121019f00000bc9011001c700000017020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000160a00002900000eb40000613d000000000701034f0000001808000029000000007907043c00000000089804360000000009a8004b00000eb00000c13d000000000705004b00000ec30000613d0000000506600210000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000fa20000613d0000001f01400039000000600110018f0000001801100029000000400010043f000000200230008c000014660000413d000007800000013d00000017040000290000000002420049000000000021041b0000000401000039000000000201041a000000400300043d00000044013000390000000000410435000000200130003900000bc00400004100000000004104350000002404300039000000180500002900000000005404350000004404000039000000000043043500000bb10220019700000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c000011330000c13d00000001020000390000000104000031000011440000013d000000140300002900000b7c0230009c00000b7c020000410000000002034019001100400020021800000b7c0210009c00000b7c01008041000000c00110021000000011011001af00000bba011001c700000017020000292de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c033001970003000000010355000000010220019000000fb10000613d000000140100002900000bb30110009c000003da0000213d0000001402000029000000400020043f00000bb9010000410000000000120435000000150100002900000013020000290000000000120435000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000011011001af00000bba011001c700000017020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f0000000506400272000000050660021000000f200000613d00000014090000290000000007690019000000000801034f000000008a08043c0000000009a90436000000000a79004b00000f1c0000c13d000000000705004b00000f2e0000613d000000000761034f00000014066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000009ca0000c13d000000400200043d0000001f0430018f0000000505300272000000050550021000000f3e0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000f3a0000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f000000050530027200000f4d0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000f490000c13d000000000604004b00000fcb0000613d0000068d0000013d0000001501000029000000400110021000000b7c0240009c00000b7c04008041000000c002400210000000000112019f00000bb8011001c700000013020000292de92ddf0000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000100a00002900000f690000613d000000000701034f0000001508000029000000007907043c00000000089804360000000009a8004b00000f650000c13d000000000705004b00000f780000613d0000000506600210000000000761034f00000015066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000000fd10000613d0000001f02400039000000600220018f0000001502200029001000000002001d000000400020043f000000200230008c00000c290000813d000014660000013d000000400200043d0000001f0430018f0000000505300272000000050550021000000f900000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000f8c0000c13d000000000604004b00000fcb0000613d00000fbf0000013d0000000401000039000000000101041a001d0bb10010019b001c00400000003d001b00c00000003d00000bb101100197000000c00010043f000000a00200043d001a0bb10000004500000bb102200197000000000112004b00000fe40000c13d000000400100043d00000c0e02000041000008350000013d000000400200043d0000001f0430018f000000050530027200000fae0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000faa0000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400200043d0000001f0430018f0000000505300272000000050550021000000fbd0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000fb90000c13d000000000604004b00000fcb0000613d000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000000600130021000000b7c0320009c00000b7c020080410000004002200210000000000112019f00002deb00010430000000400200043d0000001f0430018f000000050530027200000fdd0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00000fd90000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400200043d00000bd4030000410000000000320435000003bb0000013d000000e00100043d000000400500043d00000bbf030000410000000003350436001600000003001d000000000300041000000bb104300197001700000005001d0000000403500039001500000004001d000000000043043500000bb103100197000000000123004b000011b30000c13d0000000001000414000000040330008c000012400000c13d0000000103000031000000200130008c000000200400003900000000040340190000126e0000013d0000001001000029000000400110021000000b7c0320009c00000b7c02008041000000c002200210000000000121019f00000bba011001c700000013020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f0000000506400272000010140000613d000000050760021000000010090000290000000007790019000000000801034f000000008a08043c0000000009a90436000000000a79004b000010100000c13d000000000705004b000010230000613d0000000506600210000000000761034f00000010066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000012130000613d0000001f02400039000007e00220018f0000001002200029001200000002001d000000400020043f000003400230008c000014660000413d0000001205000029000001c002500039000000400020043f000000100200002900000000020204330000000002250436000e00000002001d0000000f02000029000000000202043300000bb10520009c000014660000213d0000000e05000029000000000025043500000010020000290000004002200039000000000502043300000bb10250009c000014660000213d000000100600002900000000026400190000001204000029000000400440003900000000005404350000006005600039000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d00000000055404360000001007000029000000800670003900000000060604330000000000650435000000a005700039000000000505043300000040064000390000000000560435000000c005700039000000000505043300000060064000390000000000560435000000e00570003900000000050504330000008006400039000000000056043500000012050000290000006005500039000f00000005001d00000000004504350000010004700039000000000542004900000bb40650009c000014660000213d000000400550008c000014660000413d000000400500043d00000bbc0650009c000003da0000213d0000004006500039000000400060043f000000000404043300000bb10640009c000014660000213d0000000004450436000000100700002900000120067000390000000006060433000000000064043500000012040000290000008004400039000d00000004001d00000000005404350000014005700039000000000452004900000bb40640009c000014660000213d000000a00440008c000014660000413d000000400400043d00000bbb0640009c000003da0000213d000000a006400039000000400060043f000000000505043300000bb10650009c000014660000213d000000000554043600000010070000290000016006700039000000000606043300000000006504350000018005700039000000000505043300000040064000390000000000560435000001a005700039000000000505043300000060064000390000000000560435000001c0057000390000000005050433000000800640003900000000005604350000001206000029000000a005600039000c00000005001d0000000000450435000001e0047000390000000004040433000000c005600039000000000045043500000200047001bf0000000004040433000000e00560003900000000004504350000022004700039000000000404043300000100056000390000000000450435000002400470003900000000040404330000012005600039000000000045043500000140046000390000026005700039000000000505043300000000005404350000028004700039000000000242004900000bb40520009c000014660000213d000000800220008c000014660000413d000000400200043d00000bbd0520009c000003da0000213d0000008005200039000000400050043f0000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d00000000044204360000001005000029000002a0055000390000000005050433000000000605004b0000000006000019000000010600c039000000000665004b000014660000c13d00000000005404350000001004000029000002c0044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d000000400520003900000000004504350000001004000029000002e0044000390000000004040433000000000504004b0000000005000019000000010500c039000000000554004b000014660000c13d0000006005200039000000000045043500000012040000290000016004400039000000000024043500000010020000290000030002200039000000000202043300000bb10420009c000014660000213d000000120500002900000180045000390000000000240435000001a0025000390000001004000029000003200440003900000000040404330000000000420435000000180600002900000024026000390000000204000367000000000224034f000000000502043b00000000020000310000000006620049000000230660008a00000bbe0760019700000bbe08500197000000000978013f000000000778004b000000000700001900000bbe07004041000000000665004b000000000600001900000bbe0600804100000bbe0890009c000000000706c019000000000607004b000014660000c13d0000001705500029000000000454034f000000000404043b000b00000004001d00000bb30440009c000014660000213d0000000b0220006a000000200750003900000bbe0420019700000bbe05700197000000000645013f000000000445004b000000000400001900000bbe04004041000900000007001d000000000227004b000000000200001900000bbe0200204100000bbe0560009c000000000402c019000000000204004b000014660000c13d0000000d0200002900000000020204330000000002020433000000400600043d00000bbf040000410000000004460436001000000004001d000000000400041000000bb105400197000a00000006001d0000000404600039000800000005001d0000000000540435000000000400041400000bb102200197000000040520008c00001ef10000c13d000000200400003900001f1e0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b0000115e0000c13d00000060010000390000008003000039000000000202004b0000119a0000c13d000000400100043d000000640210003900000c0b030000410000000000320435000000440210003900000c0c03000041000000000032043500000024021000390000002d03000039000000000032043500000c0d02000041000000000021043500000004021000390000002003000039000000000032043500000b7c0210009c00000b7c01008041000000400110021000000bcc011001c700002deb0001043000000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f0000000003410436000000030600036700000005044002720000117b0000613d00000005074002100000000007730019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b000011770000c13d000000000705004b000011480000613d0000000504400210000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000011480000013d0000000005570019000000000056041b0000031c0000013d000000400300043d0000002404300039000000000024043500000bfa0200004100000000002304350000000402300039000000000012043500000b7c0130009c00000b7c03008041000000400130021000000bb8011001c700002deb000104300000000001010433000000000201004b000012330000c13d000000400100043d0000001702000029000000000021043500000b7c0210009c00000b7c010080410000004001100210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bdb011001c70000800d02000039000000030300003900000be804000041000000000500041100000018060000292de92ddf0000040f0000000101200190000014660000613d000000400100043d000002cf0000013d0000000001000414000000040230008c000012e10000c13d0000000103000031000000200130008c00000020040000390000000004034019000013100000013d000000400100043d00000bd4020000410000000000210435000000000200041100000bb1022001970000000403100039000000000023043500000b7c0210009c00000b7c01008041000000400110021000000bba011001c700002deb0001043000000016030000290000001f0330003900000c120330019700000bea0430009c00000bea030080410000006003300210000000180500002900000b7c0450009c00000b7c0400004100000000040540190000004004400210000000000343019f00000b7c0410009c00000b7c01008041000000c001100210000000000113019f00000beb011000412de92ddf0000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000170a000029000011e90000613d000000000701034f0000001808000029000000007907043c00000000089804360000000009a8004b000011e50000c13d000000000705004b000011f80000613d0000000506600210000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000013670000613d0000001f01400039000000600210018f0000001801200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200230008c000014660000413d000000180200002900000000020204330000000103000039000000000030041b000000000021043500000b7c0210009c00000b7c01008041000000400110021000000be3011001c700002dea0001042e000000400200043d0000001f0430018f00000005053002720000121f0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000121b0000c13d000000000604004b00000fcb0000613d0000068d0000013d0000000101000039000f00000001001d000000000201041a000000400300043d00000bd601000041001200000003001d0000000001130436001000000001001d000000000100041400000bb102200197000000040320008c000014270000c13d0000000103000031000000200130008c00000020040000390000000004034019000014550000013d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d0000119d0000013d000000170400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000160a0000290000125b0000613d000000000701034f0000001708000029000000007907043c00000000089804360000000009a8004b000012570000c13d000000000705004b0000126a0000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000146e0000613d0000001f01400039000000600210018f0000001701200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000017010000290000000001010433001700000001001d000000e00100043d00000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a001600000001001d000000e00100043d00000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a00000c1302100167000000160220006b00000c730000213d0000001601100029000000170210006b00000c730000413d000001000200043d00000c1304200167000001400300043d000000000443004b00000c730000213d00000000023200190000001701100069000000000121004b000013640000413d0000000201000039000000000101041a000000400400043d00000c06020000410000000002240436001500000002001d000000800200043d00000bb10220019700000004034000390000000000230435000000a00200043d00000bb10220019700000024034000390000000000230435000000c00200043d00000bb10220019700000044034000390000000000230435000000e00200043d00000bb102200197000000640340003900000000002304350000008402400039000001000300043d0000000000320435000000a402400039000001200300043d0000000000320435000000c402400039000001400300043d0000000000320435000000e402400039000001600300043d00000000003204350000010402400039000001800300043d0000000000320435001700000004001d0000012402400039000001a00300043d0000000000320435000000000200041400000bb101100197001600000001001d000000040110008c000016c30000c13d0000000103000031000003400130008c00000340040000390000000004034019000016f30000013d000000170400002900000b7c0240009c00000b7c020000410000000002044019000000400220021000000b7c0410009c00000b7c01008041000000c001100210000000000121019f00000bba011001c700000000020300192de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000160a000029000012fd0000613d000000000701034f0000001708000029000000007907043c00000000089804360000000009a8004b000012f90000c13d000000000705004b0000130c0000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000147d0000613d0000001f01400039000000600210018f0000001701200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000017010000290000000001010433001700000001001d000000e00100043d00000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a001600000001001d000000e00100043d00000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a00000c1302100167000000160220006b00000c730000213d0000001601100029000000170210006b00000c730000413d0000001701100069000000e00200043d000000c00300043d000000000223013f00000bb102200198000013610000c13d0000000a02000039000000000202041a0000000903000039000000000303041a000000000423004b00000c730000413d00000000022300490000000c03000039000000000303041a000000000432004b00000c730000413d00000000023200490000000d03000039000000000303041a000000000432004b00000c730000413d0000000002320049000000000321004b00000c730000413d0000000001210049000001400200043d000000000121004b000015b40000813d000000400100043d00000bcd02000041000008350000013d000000400200043d0000001f0430018f00000005053002720000000505500210000013730000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000136f0000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000120300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c700000014020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000110a000029000013920000613d000000000701034f0000001208000029000000007907043c00000000089804360000000009a8004b0000138e0000c13d000000000705004b000013a10000613d0000000506600210000000000761034f00000012066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000148c0000613d0000001f01400039000000600210018f0000001201200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000012010000290000000001010433001200000001001d00000bc301000041000000000010043900000000010004110000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400300043d00000044013000390000006002000039000000000021043500000024013000390000001702000029000000000021043500000be5010000410000000001130436000e00000001001d00000064013000390000001604000029000000000041043500000004023000390000001401000029000f00000002001d00000000001204350000001f0240018f001100000003001d000000840130003900000015030000290000002003300039000000020330036700000005044002720000000504400210000013e60000613d0000000005410019000000000603034f0000000007010019000000006806043c0000000007870436000000000857004b000013e20000c13d000000000502004b000013f40000613d000000000343034f00000000044100190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000001601100029000000000001043500000000010004140000000002000411000000040220008c000014140000613d00000016020000290000001f0220003900000c120220019700000be60320009c00000be6020080410000006002200210000000110400002900000b7c0340009c00000b7c0300004100000000030440190000004003300210000000000232019f00000b7c0310009c00000b7c01008041000000c001100210000000000112019f00000bcc0110004100000000020004112de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c0330019700030000000103550000000102200190000014de0000613d000000110100002900000bb30110009c000003da0000213d0000001102000029000000400020043f00000bbf01000041000000000012043500000010010000290000000f02000029000000000012043500000000010004140000001402000029000000040220008c000015020000c13d0000000103000031000000200130008c00000020040000390000000004034019000015310000013d000000120400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bc9011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000100a000029000014420000613d000000000701034f0000001208000029000000007907043c00000000089804360000000009a8004b0000143e0000c13d000000000705004b000014510000613d0000000506600210000000000761034f00000012066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000149b0000613d0000001f01400039000000600110018f0000001204100029000000000114004b0000000001000019000000010100403900000bb30240009c000003da0000213d0000000101100190000003da0000c13d000000400040043f000000200130008c000014660000413d0000001201000029000000000101043300000bb10210009c000014c20000a13d000000000100001900002deb0001043000000bfb0100004100000000001004350000003201000039000000040010043f00000bba0100004100002deb00010430000000400200043d0000001f0430018f000000050530027200000005055002100000147a0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000014760000c13d000000000604004b00000fbf0000c13d00000fcb0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000014890000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000014850000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000014980000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000014940000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000014a70000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000014a30000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000000705004b000014af0000613d00000c1387500129000000000767004b00000c730000413d000000000703004b0000086f0000613d00000000875600a900000000873700d90000000108200039000000000808041a000000000987004b00000c730000413d000000000787004900000c130a7001670000000208200039000000000908041a000000000aa9004b00000c730000213d0000000007790019000000000078041b000000000716004b000005320000813d00000c730000013d000000000201004b000003380000613d0000000d02000039000000000002041b0000000402000039000000000202041a000000440540003900000011060000290000000000650435000000200540003900000bc0060000410000000000650435000000240640003900000000001604350000004401000039000000000014043500000bb10220019700000bbd0140009c000003da0000213d0000008001400039000000400010043f00000000060404330000000004000414000000040720008c000014ed0000c13d00000bb30230009c000015590000a13d000003da0000013d000000400200043d0000001f0430018f0000000505300272000014ea0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000014e60000c13d000000000604004b00000fcb0000613d0000068d0000013d00000b7c0150009c00000b7c05008041000000400150021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0340009c00000b7c04008041000000c003400210000000000131019f2de92ddf0000040f000f0001002001930003000000010355000000600110027000010b7c0010019d00000b7c03100198000015580000c13d00000060010000390000008002000039000015820000013d00000b7c0210009c00000b7c01008041000000c001100210000000110300002900000b7c0230009c00000b7c0200004100000000020340190000004002200210000000000112019f00000bba011001c700000014020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f00000005064002720000000e0a0000290000151e0000613d000000000701034f0000001108000029000000007907043c00000000089804360000000009a8004b0000151a0000c13d000000000705004b0000152d0000613d0000000506600210000000000761034f00000011066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000015940000613d0000001f01400039000000600110018f000000110110002900000bb30210009c000003da0000213d000000400010043f000000200230008c000014660000413d0000001203000029000000130230006c00000c730000213d0000001203000029000000170230002900000011030000290000000003030433000000000223004b000013650000413d0000001702000029000000000021043500000b7c0210009c00000b7c010080410000004001100210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bdb011001c70000800d02000039000000030300003900000be704000041000000000500041100000018060000292de92ddf0000040f0000000101200190000014660000613d0000000101000039000000000010041b000003660000013d000000400100043d0000001f0230003900000bc1022001970000003f0220003900000bc2042001970000000002140019000000000442004b0000000004000019000000010400403900000bb30520009c000003da0000213d0000000104400190000003da0000c13d000000400020043f0000001f0430018f000000000231043600000003050003670000000503300272000015730000613d00000005063002100000000006620019000000000705034f0000000008020019000000007907043c0000000008980436000000000968004b0000156f0000c13d000000000604004b000015820000613d0000000503300210000000000535034f00000000033200190000000304400210000000000603043300000000064601cf000000000646022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000464019f00000000004304350000000f0300006b0000114a0000613d0000000001010433000000000301004b000003380000613d00000bb40310009c000014660000213d000000200110008c000014660000413d0000000001020433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b000003380000c13d0000114a0000013d000000400200043d0000001f0430018f0000000505300272000015a00000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000159c0000c13d000000000604004b00000fcb0000613d0000068d0000013d0000000101000039001500000001001d000000000201041a000000400300043d00000bd601000041001800000003001d0000000001130436001600000001001d000000000100041400000bb102200197000000040320008c000015fe0000c13d0000000103000031000000200130008c000000200400003900000000040340190000162c0000013d000000a00200043d000000400300043d00000bbf010000410000000001130436001600000001001d001700000003001d000000040130003900000015030000290000000000310435000000000100041400000bb102200197000000040320008c000016590000c13d0000000103000031000000200130008c00000020040000390000000004034019000016870000013d00000017060000290000004401600039000000e00400043d00000040050000390000000000510435000000200160003900000bd705000041000000000051043500000024056000390000000000450435000000640460003900000000030304330000000000340435000000000403004b000015e30000613d00000017040000290000008404400039000000000500001900000000064500190000000007520019000000000707043300000000007604350000002005500039000000000635004b000015d80000413d000000000235004b000015e30000a13d000000000243001900000000000204350000001f0230003900000c1204000041000000000242016f000000640320003900000017050000290000000000350435000000a302200039000000000342016f0000000002530019000000000332004b0000000003000019000000010300403900000bb30420009c000003da0000213d0000000103300190000003da0000c13d000000400020043f00000017020000290000000004020433000000a00200043d000000000300041400000bb102200197000000040520008c000018b00000c13d00000001030000310000000002000019000018c10000013d000000180400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bc9011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000160a000029000016190000613d000000000701034f0000001808000029000000007907043c00000000089804360000000009a8004b000016150000c13d000000000705004b000016280000613d0000000506600210000000000761034f00000018066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000182b0000613d0000001f01400039000000600110018f0000001804100029000000000114004b0000000001000019000000010100403900000bb30240009c000003da0000213d0000000101100190000003da0000c13d000000400040043f000000200130008c000014660000413d0000001801000029000000000101043300000bb10210009c000014660000213d000000000201004b0000054f0000613d0000000d02000039000000000002041b0000000402000039000000000202041a000000440540003900000017060000290000000000650435000000200540003900000bc0060000410000000000650435000000240640003900000000001604350000004401000039000000000014043500000bb10220019700000bbd0140009c000003da0000213d0000008001400039000000400010043f00000000060404330000000004000414000000040720008c00001aef0000c13d00000bb30230009c00001cbe0000a13d000003da0000013d000000170400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000000160a000029000016740000613d000000000701034f0000001708000029000000007907043c00000000089804360000000009a8004b000016700000c13d000000000705004b000016830000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000183a0000613d0000001f01400039000000600210018f0000001701200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000017010000290000000001010433001700000001001d000000a00100043d00000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a001600000001001d000000a00100043d00000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a00000c1302100167000000160220006b00000c730000213d0000001601100029000000170210006b00000c730000413d0000001701100069000001000200043d000000000121004b000012ae0000813d000013640000013d00000b7c0120009c00000b7c02008041000000c001200210000000170300002900000b7c0230009c00000b7c0200004100000000020340190000004002200210000000000112019f00000c07011001c700000016020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000003400430008c000003400400003900000000040340190000001f0540018f0000000506400272000016e00000613d000000050760021000000017090000290000000007790019000000000801034f000000008a08043c0000000009a90436000000000a79004b000016dc0000c13d000000000705004b000016ef0000613d0000000506600210000000000761034f00000017066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000018490000613d0000001f01400039000007e00210018f0000001701200029000000000221004b0000000002000019000000010200403900000bb30510009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000003400230008c000014660000413d00000bee0210009c000003da0000213d000001c002100039000000400020043f0000001702000029000000000202043300000000022104360000001503000029000000000303043300000bb10530009c000014660000213d000000000032043500000017030000290000004003300039000000000503043300000bb10350009c000014660000213d00000017060000290000000009640019000000400310003900000000005304350000006004600039000000000549004900000bb40650009c000014660000213d000000a00550008c000014660000413d000000400500043d00000bbb0650009c000003da0000213d000000a006500039000000400060043f000000000404043300000bb10640009c000014660000213d00000000044504360000001707000029000000800670003900000000060604330000000000640435000000a004700039000000000404043300000040065000390000000000460435000000c004700039000000000404043300000060065000390000000000460435000000e004700039000000000404043300000080065000390000000000460435000000600410003900000000005404350000010005700039000000000659004900000bb40760009c000014660000213d000000400660008c000014660000413d000000400600043d00000bbc0760009c000003da0000213d0000004007600039000000400070043f000000000505043300000bb10750009c000014660000213d000000000556043600000017080000290000012007800039000000000707043300000000007504350000008005100039001500000005001d00000000006504350000014006800039000000000569004900000bb40750009c000014660000213d000000a00550008c000014660000413d000000400500043d00000bbb0750009c000003da0000213d000000a007500039000000400070043f000000000606043300000bb10760009c000014660000213d0000000006650436000000170c0000290000016007c00039000000000707043300000000007604350000018006c00039000000000606043300000040075000390000000000670435000001a006c00039000000000606043300000060075000390000000000670435000001c006c00039000000000606043300000080075000390000000000670435000000a0081000390000000000580435000001e005c000390000000006050433000000c00510003900000000006504350000020006c000390000000007060433000000e00610003900000000007604350000022007c00039000000000a07043300000100071000390000000000a70435000002400ac00039000000000a0a0433000001200b10003900140000000b001d0000000000ab0435000001400b100039000002600ac00039000000000a0a043300130000000b001d0000000000ab0435000002800ac000390000000009a9004900000bb40b90009c000014660000213d000000800990008c000014660000413d000000400900043d00000bbd0b90009c000003da0000213d000000800b9000390000004000b0043f000000000a0a0433000000000b0a004b000000000b000019000000010b00c039000000000bba004b000014660000c13d000000000aa90436000000170b000029000002a00bb00039000000000b0b0433000000000c0b004b000000000c000019000000010c00c039000000000ccb004b000014660000c13d0000000000ba0435000000170a000029000002c00aa00039000000000a0a0433000000000b0a004b000000000b000019000000010b00c039000000000bba004b000014660000c13d000000400b9000390000000000ab0435000000170a000029000002e00aa00039000000000a0a0433000000000b0a004b000000000b000019000000010b00c039000000000bba004b000014660000c13d000000600b9000390000000000ab0435000001600b10003900000000009b043500000017090000290000030009900039000000000909043300000bb10a90009c000014660000213d000001800a10003900110000000a001d00000000009a0435000001a00a10003900000017090000290000032009900039000000000909043300120000000a001d00000000009a0435000000000902043300000bb10990019800000f9f0000613d000000150900002900000000090904330000002009900039000000000a0904330000001409000029001900000009001d000000000909043300170000000a001d001000000009001d00000000099a004b00000c730000413d0000000909000039000000000e09041a0000000a09000039000000000f09041a00000bbe09f0016700000bb40af0009c000017e40000213d000000000ae9004b000000000a00001900000bbe0a00204100000bbe0ce0019700000bbe09900197000000000dc9013f0000000009c9004b000000000900001900000bbe0900404100000bbe0cd0009c00000000090ac019000000000909004b00000c730000c13d00000bb409f0004100000bbe0af0009c000017f40000413d000000000ae9004b000000000a00001900000bbe0a00404100000bbe0ce0019700000bbe09900197000000000dc9013f0000000009c9004b000000000900001900000bbe0900204100000bbe0cd0009c00000000090ac019000000000909004b00000c730000c13d000000000efe00490000000b09000039000000000f09041a00000bbe09f0016700000bb40af0009c000018070000213d000000000ae9004b000000000a00001900000bbe0a00204100000bbe0ce0019700000bbe09900197000000000dc9013f0000000009c9004b000000000900001900000bbe0900404100000bbe0cd0009c00000000090ac019000000000909004b00000c730000c13d00000bb409f0004100000bbe0af0009c000018170000413d000000000ae9004b000000000a00001900000bbe0a00404100000bbe0ce0019700000bbe09900197000000000dc9013f0000000009c9004b000000000900001900000bbe0900204100000bbe0cd0009c00000000090ac019000000000909004b00000c730000c13d000000100a000029000f001700a000710000000009fe0049000000000a09004b000000000a00001900000bbe0a00204100000bbe0c900197000000000d0c004b000000000d00001900000bbe0d00404100000bbe0cc0009c000000000d0ac019000000000a0d004b0000000009006019000000400a00043d00100000000a001d0000000f0990006b000023320000a13d00000bec010000410000227c0000013d000000400200043d0000001f0430018f0000000505300272000018370000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000018330000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400200043d0000001f0430018f0000000505300272000018460000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000018420000c13d000000000604004b0000068d0000c13d00000fcb0000013d000000400200043d0000001f0430018f0000000505300272000018550000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000018510000c13d000000000604004b00000fcb0000613d0000068d0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b000018830000c13d00000060010000390000008003000039000000000202004b0000114a0000613d0000000001010433000000000201004b000019950000c13d000000400100043d000000e00200043d000000000021043500000b7c0210009c00000b7c010080410000004001100210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bdb011001c70000800d02000039000000020300003900000bdc040000410000000005000411000015520000013d00000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f000000000341043600000003060003670000000504400272000018a00000613d00000005074002100000000007730019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b0000189c0000c13d000000000705004b0000186d0000613d0000000504400210000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f00000000005404350000186d0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220015f0003000000010355000000600110027000010b7c0010019d00000b7c03100197000000000103004b000019650000c13d00000060010000390000000102200190000019920000613d000000800200043d001600000002001d0000000002010433000000440220008c000019a20000413d0000000402100039000000000202043300000bb40320009c000014660000213d000000200320008c000014660000413d0000002401100039000000000401043300000bb30340009c000014660000213d000000000312001900000000011400190000001f02100039000000000432004b000000000400001900000bbe0400804100000bbe0220019700000bbe05300197000000000652013f000000000252004b000000000200001900000bbe0200404100000bbe0560009c000000000204c019000000000202004b000014660000c13d000000002101043400000bb30410009c000003da0000213d0000001f0410003900000c12044001970000003f0440003900000c1204400197000000400500043d0000000004450019001700000005001d000000000554004b0000000005000019000000010500403900000bb30640009c000003da0000213d0000000105500190000003da0000c13d000000400040043f00000017040000290000000004140436001800000004001d0000000004210019000000000334004b000014660000213d000000000301004b0000190b0000613d000000000300001900000018043000290000000005230019000000000505043300000000005404350000002003300039000000000413004b000019000000413d000000000213004b0000190b0000a13d0000001801100029000000000001043500000bc301000041000000000010043900000000010004110000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400300043d00000024013000390000004002000039000000000021043500000bda01000041000000000013043500000004013000390000001602000029000000000021043500000017010000290000000001010433001700000003001d00000044023000390000000000120435000000000201004b000019390000613d00000017020000290000006402200039000000000300001900000000042300190000001805300029000000000505043300000000005404350000002003300039000000000413004b0000192e0000413d000000000313004b000019390000a13d0000000002210019000000000002043500000000020004140000000003000411000000040330008c000019dc0000613d0000001f0110003900000c1201100197000000640110003900000b7c0310009c00000b7c010080410000006001100210000000170400002900000b7c0340009c00000b7c0300004100000000030440190000004003300210000000000131019f00000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000000020004112de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c0330019700030000000103550000000102200190000019dc0000c13d000000400200043d0000001f0430018f0000000505300272000019620000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000195e0000c13d000000000604004b00000fcb0000613d0000068d0000013d00000bb30130009c000003da0000213d0000001f0130003900000c12011001970000003f0110003900000c1204100197000000400100043d0000000004410019000000000514004b0000000005000019000000010500403900000bb30640009c000003da0000213d0000000105500190000003da0000c13d000000400040043f0000001f0430018f000000000531043600000003060003670000000503300272000019820000613d00000005073002100000000007750019000000000806034f0000000009050019000000008a08043c0000000009a90436000000000a79004b0000197e0000c13d000000000704004b000018c40000613d0000000503300210000000000636034f00000000033500190000000304400210000000000503043300000000054501cf000000000545022f000000000606043b0000010004400089000000000646022f00000000044601cf000000000454019f0000000000430435000018c40000013d000000400100043d001700000001001d000005550000013d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000018720000013d00000bc301000041000000000010043900000000010004110000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400300043d000000840130003900000bd8020000410000000000210435000000640130003900000bd902000041000000000021043500000044013000390000002402000039000000000021043500000024013000390000004002000039000000000021043500000bda010000410000000000130435001700000003001d00000004013000390000001602000029000000000021043500000000010004140000000002000411000000040220008c000019dc0000613d000000170300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bc7011001c700000000020004112de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c033001970003000000010355000000010220019000001ead0000613d000000170100002900000bb30110009c000003da0000213d0000001701000029000000400010043f000005550000013d00000000010004140000000a02000029000000040220008c00001c110000c13d000000200400003900001c3f0000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c70000000e020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200001a030000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c000019ff0000c13d000000000705004b00001a120000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000001cae0000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000016010000290000000001010433001800000001001d0000000e0100002900000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000000180210006b00000c730000413d0000000a02000039000000000202041a0000000903000039000000000303041a000000000423004b00000c730000413d00000018011000690000000002230049000000000321004b00000c730000413d00000000012100490000001002000029000000000202043300000020022000390000000002020433000000000121004b000013640000413d00000024010000390000000201100367000000000101043b001800000001001d00000bb10110009c000014660000213d00000bc301000041000000000010043900000014010000290000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400200043d00000024012000390000001803000029000000000031043500000bff010000410000000000120435001800000002001d00000004012000390000001302000029000000000021043500000000010004140000001402000029000000040220008c00001a7f0000613d000000180300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bb8011001c700000014020000292de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c03300197000300000001035500000001022001900000213a0000613d000000180100002900000bb30110009c000003da0000213d0000001801000029000000400010043f0000000a01000039000000000201041a0000001001000029000000000101043300000020011000390000000001010433000000000312004b00000c730000413d00000000021200490000000a03000039000000000023041b00000c13041001670000000b02000039000000000302041a000000000443004b00000c730000213d0000000001130019000000000012041b0000001101000029000000000101043300000020021000390000000002020433001800000002001d000000000101043300000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a000000180320006c00000c730000413d000000180220006a000000000021041b0000000f01000029000000000101043300000020021000390000000002020433001800000002001d000000000101043300000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a000000180320006c00000c730000413d000000180220006a000000000021041b0000000801000039000000000201041a0000001003000029000000000303043300000020033000390000000003030433000000000432004b00000c730000413d0000000002320049000000000021041b000000120100002900000000020104330000001101000029000000000101043300000000140104340000000001010433000000400300043d00000044053000390000000000150435000000200130003900000bc005000041000000000051043500000bb102200197000000240530003900000000002504350000004402000039000000000023043500000bb10240019700000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c0000229c0000c13d00000001020000390000000101000031000022ad0000013d00000b7c0150009c00000b7c05008041000000400150021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0340009c00000b7c04008041000000c003400210000000000131019f2de92ddf0000040f00150001002001930003000000010355000000600110027000010b7c0010019d00000b7c0310019800001cbd0000c13d0000006001000039000000800200003900001ce60000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c70000000a020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200001b1f0000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c00001b1b0000c13d000000000705004b00001b2e0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000001db40000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000016010000290000000001010433001800000001001d0000000a0100002900000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000000180210006b00000c730000413d0000000a02000039000000000202041a0000000903000039000000000303041a000000000423004b00000c730000413d00000018011000690000000002230049000000000321004b00000c730000413d000000010400008a000000110340014f000000100330006b00000c730000213d00000010050000290000001103500029000000120440014f000000000443004b00000c730000213d00000000012100490000001202300029000000000121004b000013640000413d00000bc30100004100000000001004390000000f010000290000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400200043d00000bdd010000410000000000120435001800000002001d00000004012000390000001302000029000000000021043500000000010004140000000f02000029000000040220008c00001b980000613d000000180300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c70000000f020000292de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c0330019700030000000103550000000102200190000022210000613d000000180100002900000bb30110009c000003da0000213d0000001801000029000000400010043f000000010200008a000000120120014f0000000c02000029000000000202043300000020022000390000000002020433001800000002001d000000000112004b00000c730000213d00000014010000290000000001010433001600000001001d00000bc30100004100000000001004390000000f010000290000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f00000018040000290000001204400029001400000004001d000000100340006c0000000003004019000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400400043d0000006401400039000000110200002900000000002104350000004401400039000000000031043500000024014000390000001002000029000000000021043500000bce010000410000000001140436001800000001001d000a00000004001d00000004014000390000001602000029000000000021043500000000010004140000000f02000029000000040220008c00001be50000613d0000000a0300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bcc011001c70000000f020000292de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c03300197000300000001035500000001022001900000227e0000613d0000000a0100002900000bb30110009c000003da0000213d0000000a01000029000000400010043f0000000a02000039000000000302041a0000000c01000029000000000101043300000020011000390000000001010433000000000413004b00000c730000413d0000000003130049000000000032041b00000c13041001670000000b02000039000000000302041a000000000443004b00000c730000213d0000000003130019000000000032041b0000000802000039000000000302041a000000000413004b00000c730000413d0000000001130049000000000012041b000000120100006b000026370000613d0000000101000039000000000201041a00000bd0010000410000000a030000290000000000130435000000000100041400000bb102200197000000040320008c000023af0000c13d0000000103000031000000200130008c00000020040000390000000004034019000023dc0000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c70000000a020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200001c2c0000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c00001c280000c13d000000000705004b00001c3b0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000001dc30000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000016010000290000000001010433001800000001001d0000000a0100002900000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000000180210006b00000c730000413d0000000a02000039000000000202041a0000000903000039000000000303041a000000000423004b00000c730000413d00000018011000690000000002230049000000000321004b00000c730000413d000000010300008a000000120330014f000000100330006b00000c730000213d000000100400002900000012034000290000000001210049000000000131004b000013640000413d0000000b010000290000000001010433000000000101043300000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000a00000001001d0000000b010000290000000001010433000000000101043300000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000900000001001d0000000b0100002900000000010104330000000002010433000000400300043d00000bbf010000410000000001130436001800000001001d000000000100041000000bb101100197001600000003001d00000004033000390000000000130435000000000100041400000bb102200197000000040320008c000020a70000c13d0000000103000031000000200130008c00000020040000390000000004034019000020d40000013d000000400200043d0000001f0430018f000000050530027200001cba0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001cb60000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400100043d0000001f0230003900000bc1022001970000003f0220003900000bc2042001970000000002140019000000000442004b0000000004000019000000010400403900000bb30520009c000003da0000213d0000000104400190000003da0000c13d000000400020043f0000001f0430018f000000000231043600000003050003670000000503300272000000050330021000001cd80000613d0000000006320019000000000705034f0000000008020019000000007907043c0000000008980436000000000968004b00001cd40000c13d000000000604004b00001ce60000613d000000000535034f00000000033200190000000304400210000000000603043300000000064601cf000000000646022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000464019f0000000000430435000000150300006b0000114a0000613d0000000001010433000000000301004b0000054f0000613d00000bb40310009c000014660000213d000000200110008c000014660000413d0000000001020433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000054f0000c13d0000114a0000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bc7011001c700000017020000292de92ddf0000040f0000000003010019000000600330027000000b7c03300197000000400430008c000000400400003900000000040340190000001f0540018f000000050640027200001d150000613d000000050760021000000016090000290000000007790019000000000801034f000000008a08043c0000000009a90436000000000a79004b00001d110000c13d000000000705004b00001d240000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000001e2d0000613d0000001f01400039000000e00210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000400230008c000014660000413d00000016020000290000000003020433001700000003001d00000c13033001670000000a04000039000000000504041a000000000635004b00000c730000213d000000140600002900000000070604330000001705500029000000000054041b001600000007001d00000c13067001670000000d04000039000000000504041a000000000665004b00000c730000213d0000001605500029000000000054041b0000000804000039000000000504041a000000000335004b00000c730000213d0000001703500029000000000034041b0000001603000029000000170330006b00000c730000413d0000001604000029000000170440006900000c13064001670000000c05000039000000000305041a000000000663004b00000c730000213d0000000003430019000000000035041b0000000505000039000000000505041a0000001607000029000000170670006b00001d630000613d00000c1376400129000000000656004b00000c730000413d0000000906000039000000000606041a000000000706004b0000086f0000613d00000000544500a900000000546400d900000c13064001670000000e02000039000000000502041a000000000665004b00000c730000213d0000000004450019000000000042041b000000000031043500000b7c0210009c00000b7c010080410000004001100210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bdb011001c70000800d02000039000000010300003900000bf4040000412de92ddf0000040f0000000101200190000014660000613d000000150100002900000000010104330000001802000029000000000202043300000000020204330000000001010433000000400300043d000000e004300039000000800600043d000000a00500043d000000c00700043d000000e00800043d000001000900043d000000000094043500000bb104800197000000c008300039000000000048043500000bb104700197000000a00730003900000000004704350000008004300039000000160700002900000000007404350000006004300039000000170700002900000000007404350000004004300039000000000054043500000bb1011001970000002004300039000000000014043500000bb101200197000000000013043500000b7c0130009c00000b7c030080410000004001300210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bf5011001c70000800d02000039000000030300003900000bf604000041000018810000013d00000000010004140000001402000029000000040220008c00001e3c0000c13d000000200400003900001e6a0000013d000000400200043d0000001f0430018f000000050530027200001dc00000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001dbc0000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400200043d0000001f0430018f000000050530027200001dcf0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001dcb0000c13d000000000604004b00000fcb0000613d0000068d0000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c700000014020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200001ded0000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c00001de90000c13d000000000705004b00001dfc0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000001ebc0000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000016010000290000000001010433001800000001001d000000140100002900000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000101041a000000180210006b00000c730000413d0000000a02000039000000000202041a0000000903000039000000000303041a000000000423004b00000c730000413d00000018011000690000000002230049000000000321004b00000c730000413d000000000121004900001ea00000013d000000400200043d0000001f0430018f000000050530027200001e390000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001e350000c13d000000000604004b00000fcb0000613d0000068d0000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bba011001c700000014020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200001e570000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c00001e530000c13d000000000705004b00001e660000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000001ecb0000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000016010000290000000001010433001800000001001d000000140100002900000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a001600000002001d000000180120006b00000c730000413d000000140100002900000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d00000016030000290000001802300069000000000101043b000000000101041a000000000312004b00000c730000413d0000000001120049000000400200043d001600000002001d000000a00200043d000000000121004b00001fee0000813d00000bcd010000410000001602000029000000000012043500000b7c0120009c00000b7c02008041000000400120021000000bc9011001c700002deb00010430000000400200043d0000001f0430018f000000050530027200001eb90000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001eb50000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400200043d0000001f0430018f000000050530027200001ec80000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001ec40000c13d000000000604004b00000fcb0000613d0000068d0000013d000000400200043d0000001f0430018f000000050530027200001ed70000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00001ed30000c13d000000000604004b00000fcb0000613d0000068d0000013d00000b7c0310009c00000b7c01008041000000400110021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0350009c00000b7c05008041000000c003500210000000000131019f2de92ddf0000040f000000010220018f00030000000103550000000003010019000000600330027000010b7c0030019d00000b7c0330019800001f490000c13d00000060040000390000008005000039000000000300001900001f730000013d0000000a0300002900000b7c0130009c00000b7c010000410000000001034019000000400110021000000b7c0340009c00000b7c04008041000000c003400210000000000113019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200001f0b0000613d000000000701034f0000000a08000029000000007907043c0000000008980436000000100980006c00001f070000c13d000000000705004b00001f1a0000613d0000000506600210000000000761034f0000000a066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000200c0000613d0000001f02400039000000600220018f0000000a05200029000000000225004b0000000002000019000000010200403900000bb30450009c000003da0000213d0000000102200190000003da0000c13d000000400050043f000000200230008c000014660000413d0000000a020000290000000002020433000a00000002001d0000000f0200002900000000020204330000000042020434000000000404043300000044065000390000000000460435000000200650003900000bc00400004100000000004604350000002404500039000000160700002900000000007404350000004404000039000000000045043500000bb10220019700000bbd0450009c000003da0000213d0000008004500039000000400040043f00000000070504330000000005000414000000040820008c000020fb0000c13d00000bb30230009c000003da0000213d0000000102000039000021590000013d000000400400043d0000001f0130003900000bc1011001970000003f0110003900000bc2051001970000000001450019000000000551004b0000000005000019000000010500403900000bb30610009c000003da0000213d0000000105500190000003da0000c13d000000400010043f0000001f0630018f00000000053404360000000301000367000000050730027200001f640000613d00000005087002100000000008850019000000000901034f000000000a050019000000009b09043c000000000aba0436000000000b8a004b00001f600000c13d000000000806004b00001f730000613d0000000507700210000000000871034f00000000077500190000000306600210000000000907043300000000096901cf000000000969022f000000000808043b0000010006600089000000000868022f00000000066801cf000000000696019f0000000000670435000000000202004b0000114a0000613d0000000002040433000000000402004b0000201b0000c13d0000001302000029000000000202043300000000420204340000000004040433000000400500043d00000044065000390000000000460435000000200450003900000bc00600004100000000006404350000002406500039000000180700002900000000007604350000004406000039000000000065043500000bb10220019700000bbd0650009c000003da0000213d0000008006500039000000400060043f00000000060504330000000005000414000000040720008c00001fa20000613d00000b7c0140009c00000b7c04008041000000400140021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0350009c00000b7c05008041000000c003500210000000000131019f2de92ddf0000040f001600010020019300030000000103550000000002010019000000600220027000010b7c0020019d00000b7c03200197000000000203004b000021110000c13d00000060020000390000008004000039000000160100006b0000114a0000613d0000000001020433000000000201004b000022070000c13d0000001701000029000000000101043300000020021000390000000002020433001700000002001d000000000101043300000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a000000170320006c00000c730000413d000000170220006a000000000021041b0000001301000029000000000101043300000020021000390000000002020433001700000002001d000000000101043300000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a000000170320006c00000c730000413d000000170220006a000000000021041b000000400100043d00000b7c0210009c00000b7c010080410000004001100210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bef011001c70000800d02000039000000040300003900000bf004000041000000000500041100000015060000290000001807000029000015520000013d00000be00100004100000016030000290000000001130436001800000001001d0000000401300039000000800200043d00000000002104350000002401300039000000a00200043d0000000000210435000000c00100043d00000bb10110019700000044023000390000000000120435000000e00100043d00000bb101100197000000640230003900000000001204350000008401300039000001000200043d000000000021043500000000010004140000001702000029000000040220008c000020280000c13d0000000103000031000000200130008c00000020040000390000000004034019000020560000013d000000400200043d0000001f0430018f00000005053002720000000505500210000020180000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000020140000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000bb40420009c000014660000213d000000200220008c000014660000413d0000000002050433000000000402004b0000000004000019000000010400c039000000000442004b000014660000c13d000000000202004b0000114a0000613d00001f780000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bc7011001c700000017020000292de92ddf0000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000020430000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c0000203f0000c13d000000000705004b000020520000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000020ec0000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200130008c000014660000413d00000016010000290000000001010433001700000001001d00000015010000290000000001010433000000000101043300000bb101100197000000a00200043d001800000002001d00000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000010200008a000000180320014f000000000101043b000000000201041a000000000332004b00000c730000213d0000001802200029000000000021041b000000400100043d0000008002100039000000800600043d000000a00300043d000000c00400043d000000e00500043d000001000700043d000000000072043500000bb1025001970000006005100039000000000025043500000bb10240019700000040041000390000000000240435000000200210003900000017040000290000000000420435000000000031043500000b7c0210009c00000b7c010080410000004001100210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000be1011001c70000800d02000039000000030300003900000be20400004100000000050004112de92ddf0000040f0000000101200190000014660000613d0000000101000039000000000010041b000000400100043d00000017020000290000120d0000013d000000160400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000020c10000613d000000000701034f0000001608000029000000007907043c0000000008980436000000180980006c000020bd0000c13d000000000705004b000020d00000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000021490000613d0000001f01400039000000600210018f0000001601200029000000000221004b0000000002000019000000010200403900000bb30410009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200230008c000014660000413d000000160200002900000000020204330000000a0320006c00000c730000413d0000000a0220006a000000090320006c00000c730000413d000000090220006a000000110220006c000013650000413d00001b6a0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000020f80000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000020f40000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0160009c00000b7c06008041000000400160021000000b7c0370009c00000b7c070080410000006003700210000000000113019f00000b7c0350009c00000b7c05008041000000c003500210000000000131019f2de92ddf0000040f000000010220018f00030000000103550000000003010019000000600330027000010b7c0030019d00000b7c03300198000021580000c13d00000060040000390000008005000039000021800000013d0000001f0230003900000c12022001970000003f0220003900000c1204200197000000400200043d0000000004420019000000000524004b0000000005000019000000010500403900000bb30640009c000003da0000213d0000000105500190000003da0000c13d000000400040043f0000001f0530018f0000000004320436000000050330027200000005033002100000212b0000613d0000000006340019000000000701034f0000000008040019000000007907043c0000000008980436000000000968004b000021270000c13d000000000605004b00001fa60000613d000000000131034f00000000033400190000000305500210000000000603043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f000000000013043500001fa60000013d000000400200043d0000001f0430018f00000005053002720000000505500210000021460000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000021420000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000021550000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000021510000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400400043d0000001f0530003900000bc1055001970000003f0550003900000bc2065001970000000005460019000000000665004b0000000006000019000000010600403900000bb30750009c000003da0000213d0000000106600190000003da0000c13d000000400050043f0000001f0630018f000000000534043600000005033002720000000503300210000021720000613d0000000007350019000000000801034f0000000009050019000000008a08043c0000000009a90436000000000a79004b0000216e0000c13d000000000706004b000021800000613d000000000131034f00000000033500190000000306600210000000000703043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f0000000000130435000000000102004b0000114a0000613d0000000001040433000000000201004b000022140000c13d0000000f0100002900000000010104330000000001010433001000000001001d0000000d0100002900000000010104330000000001010433000700000001001d00000bc301000041000000000010043900000000010004110000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000070300002900000bb104300197000000100300002900000bb103300197000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400500043d00000064015000390000008002000039000500000002001d00000000002104350000002401500039000000000041043500000bc5010000410000000001150436001000000001001d00000084015000390000000b0400002900000000004104350000000401500039000600000001001d0000000000310435000000440150003900000000000104350000001f0240018f000700000005001d000000a401500039000000090300002900000002033003670000000504400272000021c20000613d00000005054002100000000005510019000000000603034f0000000007010019000000006806043c0000000007870436000000000857004b000021be0000c13d000000000502004b000021d10000613d0000000504400210000000000343034f00000000044100190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000000b01100029000000000001043500000000010004140000000002000411000000040220008c000021f10000613d0000000b020000290000001f0220003900000c120220019700000bc60320009c00000bc6020080410000006002200210000000070400002900000b7c0340009c00000b7c0300004100000000030440190000004003300210000000000232019f00000b7c0310009c00000b7c01008041000000c001100210000000000112019f00000bc70110004100000000020004112de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c0330019700030000000103550000000102200190000022300000613d000000070100002900000bb30110009c000003da0000213d0000000703000029000000400030043f0000000d010000290000000001010433000000000201043300000bbf010000410000000000130435000000080100002900000006030000290000000000130435000000000100041400000bb102200197000000040320008c0000223f0000c13d0000000103000031000000200130008c000000200400003900000000040340190000226c0000013d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001040433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d00001fab0000013d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001050433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000021850000013d000000400200043d0000001f0430018f000000050530027200000005055002100000222d0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000022290000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000223c0000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000022380000c13d000000000604004b00000fcb0000613d0000068d0000013d000000070400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000022590000613d000000000701034f0000000708000029000000007907043c0000000008980436000000100980006c000022550000c13d000000000705004b000022680000613d0000000506600210000000000761034f00000007066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000228d0000613d0000001f01400039000000600110018f0000000701100029001000000001001d00000bb30110009c000003da0000213d0000001001000029000000400010043f000000200130008c000014660000413d00000007010000290000000002010433000700000002001d0000000a0120006c000022f20000813d00000bcd01000041000000100200002900001ea70000013d000000400200043d0000001f0430018f000000050530027200000005055002100000228a0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000022860000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000022990000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000022950000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c01100197000000000301004b000022fc0000c13d00000060030000390000008004000039000000000202004b0000114a0000613d0000000002030433000000000302004b000022c20000613d00000bb40320009c000014660000213d000000200220008c000014660000413d0000000002040433000000000302004b0000000003000019000000010300c039000000000332004b000014660000c13d000000000202004b0000114a0000613d000000120200002900000000020204330000000f03000029000000000303043300000000350304340000000003030433000000400400043d00000044064000390000000000360435000000200340003900000bc006000041000000000063043500000bb102200197000000240640003900000000002604350000004402000039000000000024043500000bb10250019700000bbd0540009c000003da0000213d0000008005400039000000400050043f00000000050404330000000004000414000000040620008c000022ed0000613d00000b7c0130009c00000b7c03008041000000400130021000000b7c0350009c00000b7c050080410000006003500210000000000113019f00000b7c0340009c00000b7c04008041000000c003400210000000000131019f2de92ddf0000040f00150001002001930003000000010355000000600110027000010b7c0010019d00000b7c01100197000000000201004b000024010000c13d000000600200003900000080030000390000242a0000013d0000000d01000029000000000101043300000020011000390000000001010433000b00000001001d000000150100006b000023280000c13d000600000000001d000900100000002d000024a60000013d00000bb30310009c000003da0000213d0000001f0310003900000c12033001970000003f0330003900000c1204300197000000400300043d0000000004430019000000000534004b0000000005000019000000010500403900000bb30640009c000003da0000213d0000000105500190000003da0000c13d000000400040043f0000001f0510018f0000000004130436000000030600036700000005071002720000000507700210000023190000613d0000000008740019000000000906034f000000000a040019000000009b09043c000000000aba0436000000000b8a004b000023150000c13d000000000805004b000022b10000613d000000000676034f00000000077400190000000305500210000000000807043300000000085801cf000000000858022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000585019f0000000000570435000022b10000013d00000bc80100004100000010020000290000000001120436001500000001001d00000000010004140000001102000029000000040220008c0000245f0000c13d00000020040000390000248d0000013d00000c0809000041000000100a00002900000000099a0436001700000009001d00000000010104330000000409a000390000000000190435000000000102043300000bb1011001970000002402a000390000000000120435000000000103043300000bb1011001970000004402a0003900000000001204350000000001040433000000003201043400000bb1022001970000006404a00039000000000024043500000000020304330000008403a00039000000000023043500000040021000390000000002020433000000a403a00039000000000023043500000060021000390000000002020433000000c403a00039000000000023043500000080011000390000000001010433000000e402a00039000000000012043500000015010000290000000001010433000000002101043400000bb1011001970000010403a00039000000000013043500000000010204330000012402a0003900000000001204350000000001080433000000003201043400000bb1022001970000014404a00039000000000024043500000000020304330000016403a000390000000000230435000000400210003900000000020204330000018403a00039000000000023043500000060021000390000000002020433000001a403a00039000000000023043500000080011000390000000001010433000001c402a0003900000000001204350000000001050433000001e402a00039000000000012043500000000010604330000020402a00039000000000012043500000000010704330000022402a000390000000000120435000000140100002900000000010104330000024402a000390000000000120435000000130100002900000000010104330000026402a00039000000000012043500000000010b04330000000032010434000000000202004b0000000002000019000000010200c0390000028404a0003900000000002404350000000002030433000000000202004b0000000002000019000000010200c039000002a403a00039000000000023043500000040021000390000000002020433000000000202004b0000000002000019000000010200c039000002c403a00039000000000023043500000060011000390000000001010433000000000101004b0000000001000019000000010100c039000002e402a0003900000000001204350000001101000029000000000101043300000bb1011001970000030402a0003900000000001204350000032401a0003900000012020000290000000002020433000000000021043500000000010004140000001602000029000000040220008c000024b90000c13d0000000104000031000000200140008c0000002004008039000024e70000013d0000000a0400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bc9011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000023c90000613d000000000701034f0000000a08000029000000007907043c0000000008980436000000180980006c000023c50000c13d000000000705004b000023d80000613d0000000506600210000000000761034f0000000a066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000025950000613d0000001f01400039000000600110018f0000000a0410002900000bb30140009c000003da0000213d000000400040043f000000200130008c000014660000413d0000000a01000029000000000101043300000bb10210009c000014660000213d0000000c0200002900000000020204330000000002020433000000440540003900000012060000290000000000650435000000200540003900000bc0060000410000000000650435000000240640003900000000001604350000004401000039000000000014043500000bb10220019700000bbd0140009c000003da0000213d0000008001400039000000400010043f00000000060404330000000004000414000000040720008c000025a40000c13d00000bb30230009c000025fe0000a13d000003da0000013d0000001f0210003900000c12022001970000003f0220003900000c1203200197000000400200043d0000000003320019000000000423004b0000000004000019000000010400403900000bb30530009c000003da0000213d0000000104400190000003da0000c13d000000400030043f0000001f0410018f00000000031204360000000305000367000000050110027200000005011002100000241c0000613d0000000006130019000000000705034f0000000008030019000000007907043c0000000008980436000000000968004b000024180000c13d000000000604004b0000242a0000613d000000000515034f00000000011300190000000304400210000000000601043300000000064601cf000000000646022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000464019f0000000000410435000000150100006b0000114a0000613d0000000001020433000000000201004b0000243b0000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d0000001701000029000000000601043300000002020003670000002401200370000000000101043b00000bb10310009c000014660000213d0000004403200370000000000303043b00000bb10430009c000014660000213d0000006402200370000000000202043b000000400400043d0000004005400039000000000025043500000020024000390000000000320435000000000014043500000b7c0140009c00000b7c040080410000004001400210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bd1011001c70000800d02000039000000030300003900000c000400004100000000050004112de92ddf0000040f0000000101200190000014660000613d000015550000013d000000100300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bc9011001c700000011020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f00000005064002720000247a0000613d000000000701034f0000001008000029000000007907043c0000000008980436000000150980006c000024760000c13d000000000705004b000024890000613d0000000506600210000000000761034f00000010066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000025b90000613d0000001f01400039000000600110018f0000001001100029000900000001001d00000bb30110009c000003da0000213d0000000901000029000000400010043f000000200130008c000014660000413d000000100100002900000000010104330000000b0200006b000000010200008a0000249f0000613d0000000b542000fa000000000414004b00000c730000413d0000000b411000b90006271010100122000000060120014f0000000b0110006b00000c730000213d0000000b02000029000b00060020002d00000007020000290000000a0420006a0000000c010000290000000001010433000700000004001d0000000b0240006c000025c80000813d00000007040000290010000b0040007100000000020104330000000d0400002900000000040404330000000004040433000000000224013f00000bb102200198000025ce0000c13d001700000000001d001500100000002d00002aec0000013d00000b7c0210009c00000b7c01008041000000c001100210000000100300002900000b7c0230009c00000b7c0200004100000000020340190000004002200210000000000112019f00000c09011001c700000016020000292de92ddf0000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000024d40000613d000000000701034f0000001008000029000000007907043c0000000008980436000000170980006c000024d00000c13d000000000705004b000024e30000613d0000000506600210000000000761034f00000010066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000025d80000613d0000001f01400039000000600210018f0000001001200029000000000221004b0000000002000019000000010200403900000bb30310009c000003da0000213d0000000102200190000003da0000c13d000000400010043f000000200140008c000014660000413d0000001e01000029001200000001001d000000000101043300000c13031001670000000a02000039000000000202041a000000000332004b00000c730000213d00000010030000290000000003030433001700000003001d00000000011200190000000a02000039000000000012041b0000001301000029000000000101043300000c13041001670000000d02000039000000000302041a000000000443004b00000c730000213d0000000001130019000000000012041b0000001f01000029001100000001001d000000000101043300000bb101100197000001000200043d001600000002001d00000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000010200008a000000160320014f000000000101043b000000000201041a000000000332004b00000c730000213d0000001602200029000000000021041b000000e00100043d00000bb101100197000001400200043d001600000002001d00000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000010200008a000000160320014f000000000101043b000000000201041a000000000332004b00000c730000213d0000001602200029000000000021041b000000150100002900000000010104330000002001100039000000000101043300000c13031001670000000802000039000000000202041a000000000332004b00000c730000213d00000000011200190000000802000039000000000012041b0000001301000029000000000301043300000014010000290000000004010433000000000134004b00000c730000413d000000000234004900000c13062001670000000c05000039000000000105041a000000000661004b00000c730000213d0000000001210019000000000015041b0000000505000039000000000505041a000000000334004b0000255e0000613d00000c1343200129000000000353004b00000c730000413d0000000903000039000000000303041a000000000403004b0000086f0000613d00000000422500a900000000323200d900000c13052001670000000e03000039000000000403041a000000000554004b00000c730000213d0000000002240019000000000023041b000000400200043d000000000012043500000b7c0120009c00000b7c020080410000004001200210000000000200041400000b7c0320009c00000b7c02008041000000c002200210000000000112019f00000bdb011001c70000800d02000039000000010300003900000bf4040000412de92ddf0000040f0000000101200190000014660000613d000000400300043d00000044013000390000001d02000029000000800400043d0000000f050000290000000000510435000000200130003900000bc005000041000000000051043500000bb104400197000000240530003900000000004504350000004404000039000000000043043500000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c000025e70000c13d00000001040000310000000102000039000025f80000013d000000400200043d0000001f0430018f00000005053002720000000505500210000025a10000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000259d0000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0150009c00000b7c05008041000000400150021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0340009c00000b7c04008041000000c003400210000000000131019f2de92ddf0000040f00150001002001930003000000010355000000600110027000010b7c0010019d00000b7c03100198000025fd0000c13d00000060010000390000008002000039000026260000013d000000400200043d0000001f0430018f00000005053002720000000505500210000025c50000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000025c10000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000020011000390000000001010433001600000001001d001000000000001d001700000000001d00002b020000013d00000bca0100004100000009020000290000000001120436001500000001001d00000000010004140000001102000029000000040220008c000026580000c13d0000002004000039000026860000013d000000400200043d0000001f0430018f00000005053002720000000505500210000025e40000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000025e00000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b000026b00000c13d00000060010000390000008003000039000026db0000013d000000400100043d0000001f0230003900000bc1022001970000003f0220003900000bc2042001970000000002140019000000000442004b0000000004000019000000010400403900000bb30520009c000003da0000213d0000000104400190000003da0000c13d000000400020043f0000001f0430018f0000000002310436000000030500036700000005033002720000000503300210000026180000613d0000000006320019000000000705034f0000000008020019000000007907043c0000000008980436000000000968004b000026140000c13d000000000604004b000026260000613d000000000535034f00000000033200190000000304400210000000000603043300000000064601cf000000000646022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000464019f0000000000430435000000150300006b0000114a0000613d0000000001010433000000000301004b000026370000613d00000bb40310009c000014660000213d000000200110008c000014660000413d0000000001020433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d0000001402000029000000100120006b000028020000a13d000000140200002900000010012000690000000c02000029000000000202043300000000020204330000000e030000290000000004030433000000400300043d00000044053000390000000000150435000000200130003900000bc005000041000000000051043500000bb104400197000000240530003900000000004504350000004404000039000000000043043500000bb10220019700000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c000027270000c13d00000001020000390000000104000031000027380000013d000000090300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bc9011001c700000011020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000026730000613d000000000701034f0000000908000029000000007907043c0000000008980436000000150980006c0000266f0000c13d000000000705004b000026820000613d0000000506600210000000000761034f00000009066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f000300000001035500000001022001900000273d0000613d0000001f01400039000000600110018f0000000901100029001500000001001d00000bb30110009c000003da0000213d0000001501000029000000400010043f000000200130008c000014660000413d0000000901000029000000000201043300000bb10120009c000014660000213d0000000c01000029000000000101043300000000010104330000000d0400002900000000040404330000000004040433000000150700002900000064057000390000001006000029000000000065043500000bb1044001970000004405700039000000000045043500000bb1011001970000002404700039000000000014043500000bcb010000410000000001170436000900000001001d000000040170003900000000000104350000000001000414000000040420008c0000274c0000c13d000000400130008c000000400400003900000000040340190000277a0000013d00000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f0000000003410436000000030600036700000005044002720000000504400210000026cd0000613d0000000007430019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b000026c90000c13d000000000705004b000026db0000613d000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000000000202004b0000114a0000613d0000000001010433000000000201004b000026ec0000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000000800100043d0000001a0210017f000000110100002900000000010104330000001b0300002900000000030304330000001204000029000000000404043300000019050000290000000005050433000000130600002900000000060604330000001c070000290000000007070433000000e008700039000000e00900043d000001000a00043d000001400b00043d0000000000680435000000c0067000390000000000560435000000a0057000390000000000b504350000008005700039000000000045043500000060047000390000000000a4043500000bb1049001970000004005700039000000000045043500000bb1033001970000002004700039000000000034043500000bb101100197000000000017043500000b7c0170009c00000b7c070080410000004001700210000000000300041400000b7c0430009c00000b7c03008041000000c003300210000000000113019f00000bf5011001c700000bb1062001970000800d020000390000000403000039000000000500041100000c0a0400004100000017070000292de92ddf0000040f0000000101200190000014660000613d0000000101000039000000000010041b000000000100041500000018011000690000000001000002000020a40000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b000027c60000c13d00000060010000390000008003000039000027f10000013d000000400200043d0000001f0430018f00000005053002720000000505500210000027490000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000027450000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000150400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bcc011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000400430008c000000400400003900000000040340190000001f0540018f00000005064002720000000506600210000027680000613d00000015090000290000000007690019000000000801034f000000008a08043c0000000009a90436000000000a79004b000027640000c13d000000000705004b000027760000613d000000000761034f00000015066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000028210000613d0000001f01400039000000e00110018f0000001501100029000a00000001001d00000bb30110009c000003da0000213d0000000a01000029000000400010043f000000400130008c000014660000413d0000000901000029000000000101043300000bb10110009c000014660000213d000000180500002900000044015000390000000202000367000000000112034f000000000401043b00000000010000310000000005510049000000230550008a00000bbe0650019700000bbe07400197000000000867013f000000000667004b000000000600001900000bbe06004041000000000554004b000000000500001900000bbe0500804100000bbe0780009c000000000605c019000000000506004b000014660000c13d00000015050000290000000005050433001500000005001d0000001704400029000000000242034f000000000202043b000400000002001d00000bb30220009c000014660000213d000000040110006a000000200640003900000bbe0210019700000bbe04600197000000000524013f000000000224004b000000000200001900000bbe02004041000100000006001d000000000116004b000000000100001900000bbe0100204100000bbe0450009c000000000201c019000000000102004b000014660000c13d0000000c010000290000000001010433000000000201043300000bbf010000410000000a040000290000000001140436001700000001001d000000040140003900000008040000290000000000410435000000000100041400000bb102200197000000040420008c000028300000c13d00000020040000390000285d0000013d00000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f0000000003410436000000030600036700000005044002720000000504400210000027e30000613d0000000007430019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b000027df0000c13d000000000705004b000027f10000613d000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000000000202004b0000114a0000613d0000000001010433000000000201004b000028020000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000000110100006b000029500000613d0000000b01000029000000000101043300000000020104330000000e010000290000000004010433000000400300043d000000440130003900000011050000290000000000510435000000200130003900000bc005000041000000000051043500000bb104400197000000240530003900000000004504350000004404000039000000000043043500000bb10220019700000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c000028cb0000c13d00000001020000390000000104000031000028dc0000013d000000400200043d0000001f0430018f000000050530027200000005055002100000282d0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000028290000c13d000000000604004b00000fcb0000613d00000fbf0000013d0000000a0400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f00000005064002720000284a0000613d000000000701034f0000000a08000029000000007907043c0000000008980436000000170980006c000028460000c13d000000000705004b000028590000613d0000000506600210000000000761034f0000000a066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000028e10000613d0000001f01400039000000600110018f0000000a02100029000900000002001d00000bb30220009c000003da0000213d0000000902000029000000400020043f000000200230008c000014660000413d0000000a020000290000000002020433000300000002001d0000000d020000290000000002020433000000000202043300000bbf0400004100000009050000290000000004450436001700000004001d000000040450003900000008050000290000000000540435000000000400041400000bb102200197000000040520008c000028a70000613d000000090300002900000b7c0130009c00000b7c010000410000000001034019000000400110021000000b7c0340009c00000b7c04008041000000c003400210000000000113019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f0000000506400272000028920000613d000000000701034f0000000908000029000000007907043c0000000008980436000000170980006c0000288e0000c13d000000000705004b000028a10000613d0000000506600210000000000761034f00000009066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f00030000000103550000000102200190000028f00000613d0000001f01400039000000600110018f000000090410002900000bb30140009c000003da0000213d000000400040043f000000200130008c000014660000413d00000009010000290000000001010433000200000001001d0000000c0100002900000000010104330000000001010433000000440240003900000015050000290000000000520435000000200540003900000bc00200004100000000002504350000002402400039000000160600002900000000006204350000004402000039000000000024043500000bb10210019700000bbd0140009c000003da0000213d0000008001400039000000400010043f00000000060404330000000004000414000000040720008c000028ff0000c13d00000bb30230009c000003da0000213d00000001020000390000296f0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b000029140000c13d000000600100003900000080030000390000293f0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000028ed0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000028e90000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f00000005053002720000000505500210000028fc0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b000028f80000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0150009c00000b7c05008041000000400150021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0340009c00000b7c04008041000000c003400210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c031001980000296e0000c13d00000060010000390000008004000039000029970000013d00000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f0000000003410436000000030600036700000005044002720000000504400210000029310000613d0000000007430019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b0000292d0000c13d000000000705004b0000293f0000613d000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000000000202004b0000114a0000613d0000000001010433000000000201004b000029500000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d0000000e0100002900000000010104330000000d0200002900000000020204330000000002020433000000400300043d00000040043000390000001205000029000000000054043500000020043000390000001705000029000000000054043500000bb102200197000000000023043500000b7c0230009c00000b7c030080410000004002300210000000000300041400000b7c0430009c00000b7c03008041000000c003300210000000000223019f00000bb10610019700000bd1012001c70000800d02000039000000040300003900000bd20400004100000000050004110000001307000029000015520000013d000000400100043d0000001f0430003900000bc1044001970000003f0440003900000bc2054001970000000004150019000000000554004b0000000005000019000000010500403900000bb30640009c000003da0000213d0000000105500190000003da0000c13d000000400040043f0000001f0530018f0000000004310436000000030600036700000005033002720000000503300210000029890000613d0000000007340019000000000806034f0000000009040019000000008a08043c0000000009a90436000000000a79004b000029850000c13d000000000705004b000029970000613d000000000636034f00000000033400190000000305500210000000000703043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000530435000000000202004b0000114a0000613d0000000001010433000000000201004b000029a80000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001040433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d0000000c0100002900000000010104330000000001010433001700000001001d0000000d0100002900000000010104330000000001010433001600000001001d00000bc301000041000000000010043900000000010004110000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000160300002900000bb104300197000000170300002900000bb103300197000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d000000400500043d0000006401500039000000800200003900000000002104350000004401500039000000100200002900000000002104350000002401500039000000000041043500000bc5010000410000000001150436001700000001001d0000008401500039000000040400002900000000004104350000000401500039000a00000001001d00000000003104350000001f0240018f001600000005001d000000a4015000390000000103000029000000020330036700000005044002720000000504400210000029e50000613d0000000005410019000000000603034f0000000007010019000000006806043c0000000007870436000000000857004b000029e10000c13d000000000502004b000029f30000613d000000000343034f00000000044100190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000000401100029000000000001043500000000010004140000000002000411000000040220008c00002a130000613d00000004020000290000001f0220003900000c120220019700000bc60320009c00000bc6020080410000006002200210000000160400002900000b7c0340009c00000b7c0300004100000000030440190000004003300210000000000232019f00000b7c0310009c00000b7c01008041000000c001100210000000000112019f00000bc70110004100000000020004112de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c033001970003000000010355000000010220019000002a290000613d000000160100002900000bb30110009c000003da0000213d0000001603000029000000400030043f0000000c010000290000000001010433000000000201043300000bbf01000041000000000013043500000008010000290000000a030000290000000000130435000000000100041400000bb102200197000000040320008c00002a380000c13d0000000103000031000000200130008c0000002004000039000000000403401900002a650000013d000000400200043d0000001f0430018f0000000505300272000000050550021000002a350000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00002a310000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000160400002900000b7c0340009c00000b7c030000410000000003044019000000400330021000000b7c0410009c00000b7c01008041000000c001100210000000000131019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200002a520000613d000000000701034f0000001608000029000000007907043c0000000008980436000000170980006c00002a4e0000c13d000000000705004b00002a610000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000002ac40000613d0000001f01400039000000600110018f0000001602100029000a00000002001d00000bb30220009c000003da0000213d0000000a02000029000000400020043f000000200230008c000014660000413d00000016020000290000000002020433001600000002001d0000000d020000290000000002020433000000000202043300000bbf040000410000000a050000290000000004450436001700000004001d000000040450003900000008050000290000000000540435000000000400041400000bb102200197000000040520008c00002aaf0000613d0000000a0300002900000b7c0130009c00000b7c010000410000000001034019000000400110021000000b7c0340009c00000b7c04008041000000c003400210000000000113019f00000bba011001c72de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200002a9a0000613d000000000701034f0000000a08000029000000007907043c0000000008980436000000170980006c00002a960000c13d000000000705004b00002aa90000613d0000000506600210000000000761034f0000000a066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000002ad30000613d0000001f01400039000000600110018f0000000a01100029000900000001001d00000bb30110009c000003da0000213d0000000901000029000000400010043f000000200130008c000014660000413d000000010100008a000000100110014f000000020110006b00000c730000213d000000020200002900000010012000290000000a020000290000000002020433000000000112004b00002ae20000813d00000bcd01000041000000090200002900001ea70000013d000000400200043d0000001f0430018f0000000505300272000000050550021000002ad00000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00002acc0000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000400200043d0000001f0430018f0000000505300272000000050550021000002adf0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00002adb0000c13d000000000604004b00000fcb0000613d00000fbf0000013d0000000302000029000000150120006c00000c730000413d0000000302000029000000150120006a000000160210006b00000c730000413d00170016001000710000000c01000029000000000101043300000020011000390000000001010433000000150210006c00002afd0000813d000000090400002900000024024000390000001503000029000000000032043500000bd30200004100000000002404350000000402400039000000000012043500000b7c0140009c00000b7c04008041000000400140021000000bb8011001c700002deb000104300016001500100072000000010100008a000000160110014f000000170110006b00000c730000213d00000012010000290000000001010433000a00000001001d00000bc301000041000000000010043900000013010000290000000400100443000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bc4011001c700008002020000392de92de40000040f000000010220019000002ba00000613d000000000101043b000000000101004b000014660000613d00000016020000290000001702200029000000400300043d0000006401300039001500000002001d000000000021043500000044013000390000001002000029000000000021043500000024013000390000000702000029000000000021043500000bce010000410000000000130435001700000003001d00000004013000390000000a02000029000000000021043500000000010004140000001302000029000000040220008c00002b3e0000613d000000170300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bcc011001c700000013020000292de92ddf0000040f0000000003010019000000600330027000010b7c0030019d00000b7c033001970003000000010355000000010220019000002ba10000613d000000170100002900000bb30110009c000003da0000213d0000001701000029000000400010043f0000000a02000039000000000302041a0000000d01000029000000000101043300000020011000390000000001010433000000000413004b00000c730000413d0000000003130049000000000032041b00000c13041001670000000b02000039000000000302041a000000000443004b00000c730000213d0000000001130019000000000012041b0000000f01000029000000000101043300000020021000390000000002020433001700000002001d000000000101043300000bb10110019700000000001004350000001001000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a000000170320006c00000c730000413d000000170220006a000000000021041b0000000c01000029000000000101043300000020021000390000000002020433001700000002001d000000000101043300000bb10110019700000000001004350000001101000039000000200010043f000000000100041400000b7c0210009c00000b7c01008041000000c00110021000000bcf011001c700008010020000392de92de40000040f0000000102200190000014660000613d000000000101043b000000000201041a000000170320006c00000c730000413d000000170220006a000000000021041b0000000801000039000000000201041a0000000d03000029000000000303043300000020033000390000000003030433000000000432004b00000c730000413d0000000002320049000000000021041b000000060100006b00002c670000613d000000400200043d00000bd001000041001600000002001d0000000001120436001700000001001d00000000010004140000001102000029000000040220008c00002bb00000c13d0000000103000031000000200130008c0000002004000039000000000403401900002bde0000013d000000000001042f000000400200043d0000001f0430018f0000000505300272000000050550021000002bad0000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00002ba90000c13d000000000604004b00000fcb0000613d00000fbf0000013d000000160300002900000b7c0230009c00000b7c020000410000000002034019000000400220021000000b7c0310009c00000b7c01008041000000c001100210000000000121019f00000bc9011001c700000011020000292de92de40000040f0000000003010019000000600330027000000b7c03300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200002bcb0000613d000000000701034f0000001608000029000000007907043c0000000008980436000000170980006c00002bc70000c13d000000000705004b00002bda0000613d0000000506600210000000000761034f00000016066000290000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000100000003001f0003000000010355000000010220019000002c080000613d0000001f01400039000000600110018f0000001604100029000000000114004b0000000001000019000000010100403900000bb30240009c000003da0000213d0000000101100190000003da0000c13d000000400040043f000000200130008c000014660000413d0000001601000029000000000101043300000bb10210009c000014660000213d0000000d0200002900000000020204330000000002020433000000440540003900000006060000290000000000650435000000200540003900000bc0060000410000000000650435000000240640003900000000001604350000004401000039000000000014043500000bb10220019700000bbd0140009c000003da0000213d0000008001400039000000400010043f00000000060404330000000004000414000000040720008c00002c170000c13d00000bb30230009c00002c2c0000a13d000003da0000013d000000400200043d0000001f0430018f0000000505300272000000050550021000002c140000613d0000000006520019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b00002c100000c13d000000000604004b00000fcb0000613d00000fbf0000013d00000b7c0150009c00000b7c05008041000000400150021000000b7c0360009c00000b7c060080410000006003600210000000000113019f00000b7c0340009c00000b7c04008041000000c003400210000000000131019f2de92ddf0000040f00140001002001930003000000010355000000600110027000010b7c0010019d00000b7c0310019800002c2b0000c13d000000600100003900002c550000013d000000400100043d0000001f0230003900000bc1022001970000003f0220003900000bc2042001970000000002140019000000000442004b0000000004000019000000010400403900000bb30520009c000003da0000213d0000000104400190000003da0000c13d000000400020043f0000001f0230018f0000000004310436000500000004001d00000003040003670000000503300272000000050330021000002c470000613d00000005070000290000000005370019000000000604034f000000006806043c0000000007870436000000000857004b00002c430000c13d000000000502004b00002c550000613d000000000434034f00000005033000290000000302200210000000000503043300000000052501cf000000000525022f000000000404043b0000010002200089000000000424022f00000000022401cf000000000252019f0000000000230435000000140200006b0000114a0000613d0000000001010433000000000201004b00002c670000613d00000bb40210009c000014660000213d000000200110008c000014660000413d00000005010000290000000001010433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000000100100006b00002cdf0000c13d00000007020000290000000b0120006c00000c730000413d00000007020000290000000b0120006c00002cdf0000613d00000007020000290000000b0120006a0000000d02000029000000000202043300000000020204330000000e030000290000000004030433000000400300043d00000044053000390000000000150435000000200130003900000bc005000041000000000051043500000bb104400197000000240530003900000000004504350000004404000039000000000043043500000bb10220019700000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c00002c8d0000c13d0000000102000039000000010400003100002c9e0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b00002ca30000c13d0000006001000039000000800300003900002cce0000013d00000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f000000000341043600000003060003670000000504400272000000050440021000002cc00000613d0000000007430019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b00002cbc0000c13d000000000705004b00002cce0000613d000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000000000202004b0000114a0000613d0000000001010433000000000201004b00002cdf0000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000000150100006b00002d500000613d0000000c01000029000000000101043300000000020104330000000e010000290000000004010433000000400300043d000000440130003900000015050000290000000000510435000000200130003900000bc005000041000000000051043500000bb104400197000000240530003900000000004504350000004404000039000000000043043500000bb10220019700000bbd0430009c000003da0000213d0000008004300039000000400040043f00000000040304330000000003000414000000040520008c00002cfe0000c13d0000000102000039000000010400003100002d0f0000013d00000b7c0510009c00000b7c01008041000000400110021000000b7c0540009c00000b7c040080410000006004400210000000000114019f00000b7c0430009c00000b7c03008041000000c003300210000000000131019f2de92ddf0000040f000000010220018f0003000000010355000000600110027000010b7c0010019d00000b7c04100197000000000104004b00002d140000c13d0000006001000039000000800300003900002d3f0000013d00000bb30140009c000003da0000213d0000001f0140003900000c12011001970000003f0110003900000c1203100197000000400100043d0000000003310019000000000513004b0000000005000019000000010500403900000bb30630009c000003da0000213d0000000105500190000003da0000c13d000000400030043f0000001f0540018f000000000341043600000003060003670000000504400272000000050440021000002d310000613d0000000007430019000000000806034f0000000009030019000000008a08043c0000000009a90436000000000a79004b00002d2d0000c13d000000000705004b00002d3f0000613d000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000000000202004b0000114a0000613d0000000001010433000000000201004b00002d500000613d00000bb40210009c000014660000213d000000200110008c000014660000413d0000000001030433000000000201004b0000000002000019000000010200c039000000000221004b000014660000c13d000000000101004b0000114a0000613d000000180100002900000064011000390000000201100367000000000101043b00000bb10210009c000014660000213d000000120200002900000000070204330000000e0200002900000000020204330000000f0300002900000000030304330000000003030433000000400400043d0000004005400039000000060600002900000000006504350000002005400039000000000015043500000bb101300197000000000014043500000b7c0140009c00000b7c040080410000004001400210000000000300041400000b7c0430009c00000b7c03008041000000c003300210000000000113019f00000bb10620019700000bd1011001c70000800d02000039000000040300003900000bd204000041000018810000013d0000000901000039000000000101041a0000000a02000039000000000202041a00000bbe0320016700000bb40420009c00002d870000213d000000000413004b000000000400001900000bbe0400a04100000bbe0510019700000bbe03300197000000000653013f000000000353004b000000000300001900000bbe0300204100000bbe0560009c000000000304c019000000000303004b00002dc70000613d00000bb40320004100000bbe0420009c00002d970000413d000000000413004b000000000400001900000bbe0400404100000bbe0510019700000bbe03300197000000000653013f000000000353004b000000000300001900000bbe0300204100000bbe0560009c000000000304c019000000000303004b00002dc70000c13d00000000012100490000000b02000039000000000202041a00000bbe0320016700000bb40420009c00002daa0000213d000000000413004b000000000400001900000bbe0400204100000bbe0510019700000bbe03300197000000000653013f000000000353004b000000000300001900000bbe0300404100000bbe0560009c000000000304c019000000000303004b00002dc70000c13d00000bb40320004100000bbe0420009c00002dba0000413d000000000413004b000000000400001900000bbe0400404100000bbe0510019700000bbe03300197000000000653013f000000000353004b000000000300001900000bbe0300204100000bbe0560009c000000000304c019000000000303004b00002dc70000c13d0000000001210049000000000201004b000000000200001900000bbe0200204100000bbe03100197000000000403004b000000000400001900000bbe0400404100000bbe0330009c000000000402c019000000000204004b0000000001006019000000000001042d00000bfb0100004100000000001004350000001101000039000000040010043f00000bba0100004100002deb00010430000000000001042f000000000200041400000b7c0320009c00000b7c02008041000000c00220021000000b7c0310009c00000b7c010080410000004001100210000000000121019f00000bcf011001c700008010020000392de92de40000040f000000010220019000002ddd0000613d000000000101043b000000000001042d000000000100001900002deb0001043000002de2002104210000000102000039000000000001042d0000000002000019000000000001042d00002de7002104230000000102000039000000000001042d0000000002000019000000000001042d00002de90000043200002dea0001042e00002deb00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000094d008ee00000000000000000000000000000000000000000000000000000000d3b5dc3a00000000000000000000000000000000000000000000000000000000dd3b829900000000000000000000000000000000000000000000000000000000fb2b74b100000000000000000000000000000000000000000000000000000000fb2b74b200000000000000000000000000000000000000000000000000000000fba0c81400000000000000000000000000000000000000000000000000000000ffc9dcbb00000000000000000000000000000000000000000000000000000000dd3b829a00000000000000000000000000000000000000000000000000000000fa5a2e6200000000000000000000000000000000000000000000000000000000d8f2cab600000000000000000000000000000000000000000000000000000000d8f2cab700000000000000000000000000000000000000000000000000000000dc6638f400000000000000000000000000000000000000000000000000000000d3b5dc3b00000000000000000000000000000000000000000000000000000000d4fd690500000000000000000000000000000000000000000000000000000000ada3112e00000000000000000000000000000000000000000000000000000000c392f76500000000000000000000000000000000000000000000000000000000c392f76600000000000000000000000000000000000000000000000000000000c45a015500000000000000000000000000000000000000000000000000000000c6f61b0100000000000000000000000000000000000000000000000000000000ada3112f00000000000000000000000000000000000000000000000000000000ba34392200000000000000000000000000000000000000000000000000000000a1c59afb00000000000000000000000000000000000000000000000000000000a1c59afc00000000000000000000000000000000000000000000000000000000a4fbc0d70000000000000000000000000000000000000000000000000000000094d008ef000000000000000000000000000000000000000000000000000000009da771f40000000000000000000000000000000000000000000000000000000040650eee00000000000000000000000000000000000000000000000000000000685b61cf00000000000000000000000000000000000000000000000000000000743753580000000000000000000000000000000000000000000000000000000074375359000000000000000000000000000000000000000000000000000000008b6e00fa000000000000000000000000000000000000000000000000000000008cd4741500000000000000000000000000000000000000000000000000000000685b61d0000000000000000000000000000000000000000000000000000000006b8357ac0000000000000000000000000000000000000000000000000000000059129e740000000000000000000000000000000000000000000000000000000059129e7500000000000000000000000000000000000000000000000000000000653741ff0000000000000000000000000000000000000000000000000000000040650eef000000000000000000000000000000000000000000000000000000005330e3530000000000000000000000000000000000000000000000000000000019972a4f00000000000000000000000000000000000000000000000000000000217a4b6f00000000000000000000000000000000000000000000000000000000217a4b700000000000000000000000000000000000000000000000000000000027014e330000000000000000000000000000000000000000000000000000000032196a010000000000000000000000000000000000000000000000000000000019972a50000000000000000000000000000000000000000000000000000000001d08672000000000000000000000000000000000000000000000000000000000122f7e8a00000000000000000000000000000000000000000000000000000000122f7e8b000000000000000000000000000000000000000000000000000000001794bb3c000000000000000000000000000000000000000000000000000000000121c777000000000000000000000000000000000000000000000000000000000adcf0f5000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000020000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9a307391000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000800000000000000000ac00b674000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000000000000000000000957d1fe1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff5f000000000000000000000000000000000000000000000000ffffffffffffffbf000000000000000000000000000000000000000000000000ffffffffffffff7f800000000000000000000000000000000000000000000000000000000000000070a0823100000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ffffffffffffffe0000000000000000000000000000000000000000000000003ffffffffffffffe01806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000e761f9dc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffff5b00000000000000000000000000000000000000a40000000000000000000000005fb3b1b50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000007c21d5e000000000000000000000000000000000000000000000000000000000ec278309000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000000000000000000000f8b3bb61000000000000000000000000000000000000000000000000000000008b029d61000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000040000000000000000000000000bd2bae9d000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000060000000000000000000000000ad34241f9e3b3d38652a7493d4e07da1f3e88afa819a546544b20de727f2ffd8b07e3bc400000000000000000000000000000000000000000000000000000000a59d7f4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffebfef369252000000000000000000000000000000000000000000000000000000008c5991fe000000000000000000000000000000000000000000000000000000006e746c790000000000000000000000000000000000000000000000000000000043616c6c6261636b207472616e73616374696f6e206661696c65642073696c654d4a6fbb000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000020000000000000000000000000cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5f71139f70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000008000000000000000000000000000000000000000000000000000000024000001200000000000000000c6f61b010000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000a000000000000000000000000055c8ac91237f6fa939a79c1699293ce14171d61728c7cc56a131f51758fa598f0000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000080000000000000000003a3bcd70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffff7bab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f81314fd112a381beea61539dbd21ec04afcff2662ac7d1b83273aade1f53d1b97987037e80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffff3b00000000000000000000000000000000000000c4000000000000000000000000bb2875c300000000000000000000000000000000000000000000000000000000b008c05800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffffffffffffe3f02000000000000000000000000000000000000000000000000000000000000001cc79853bbf119208b3fab3b7d33fcdb6ceaee7c8b16b89bdb389ed3b51ad17c0f2e5b6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000012000000000000000005330e3530000000000000000000000000000000000000000000000000000000038e229a7f3f9c329892d08eb37c4e91ccac6d12c798d394990ca4f56028ec266020000000000000000000000000000000000010000000000000000000000000002bde35fb6c4387120ff67d8e52f04c37f08b2a8235cd8a731848afda59f622e02000000000000000000000000000000000000200000008000000000000000009290d3ed14fa81f8d341842ac22f26e4bb4449e0d0a8566656d54dafae29198e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0574092f9000000000000000000000000000000000000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000ec4f975deac1f5c1d92fd5f7a2b08d2c4e3e60215ab50703da45f8f8e9f2fc9b81ed86e8cfa3004fc54732477c3eda4f4c606394a0b423aba78153a3e696f65d00000000000000000000000000000000000000040000008000000000000000009a10234100000000000000000000000000000000000000000000000000000000415e462bce09ff3142dc51f9a6878d89bb34d75a21bc8ffc7fc397eccce872e9e7d0677200000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000008cd4741500000000000000000000000000000000000000000000000000000000a4fbc0d700000000000000000000000000000000000000000000000000000000313ce56700000000000000000000000000000000000000000000000000000000be9f3fec000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144000000000000000000000000f76e91fd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003440000000000000000000000006fa15176f59ef643f98e48bb7bbcdc1f7ed128c889a18626d6c28f6e7e2dece4616e73666572206661696c6564000000000000000000000000000000000000005472616e7366657248656c7065723a3a736166655472616e736665723a20747208c379a000000000000000000000000000000000000000000000000000000000e523909000000000000000000000000000000000000000000000000000000000aa8051ce00000000000000000000000000000000000000000000000000000000bb3a290000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0717672136cfb91787858456206569096219fe15c8d98b30312745558e635669"},"methodIdentifiers":{"accFee()":"ada3112f","accFeePerShare()":"dd3b829a","accProtocolFee()":"27014e33","addBurnRequest(uint256,address,bytes)":"653741ff","availLiquidity()":"ba343922","availableLiquidity()":"74375359","baseReserve(address)":"ffc9dcbb","burn((uint256,address,address,uint256,address,bytes))":"fb2b74b2","claimableFee(address)":"a1c59afc","close((bytes32,bytes,bytes,address))":"fba0c814","closeManuallyStep1(bytes32,address)":"59129e75","closeManuallyStep2(bytes32,uint256,uint256,uint256)":"d8f2cab7","collateralReserve(address)":"8b6e00fa","collect(address,uint256)":"6b8357ac","factory()":"c45a0155","initialize(address,address,uint256)":"1794bb3c","interest()":"c392f766","liquidityPosition(address)":"d4fd6905","maxOpenInterest()":"dc6638f4","mint(address,uint256,bytes)":"94d008ef","open((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256))":"122f7e8b","openInterest()":"fa5a2e62","positionStorage()":"8cd47415","precision()":"d3b5dc3b","quoteInDebt()":"685b61d0","quoteReserve()":"9da771f4","quoteToken()":"217a4b70","rollback((bytes32,address,address,uint256))":"19972a50","setBaseTokens(address[],bool[])":"32196a01","setInterest(uint256)":"1d086720","setMaxOpenInterest(uint256)":"40650eef","tradeableBaseToken(address)":"0adcf0f5","updateCollateralAmount((bytes32,uint256,address,address,uint256))":"c6f61b01","updateDeadline((bytes32,uint256,address,address,uint256))":"5330e353","withdrawalMonitor()":"a4fbc0d7","withdrawingLiquidity()":"0121c777"}},"irOptimized":"/// @use-src 0:\"contracts/Pool.sol\", 2:\"contracts/base/Lockable.sol\", 8:\"contracts/interfaces/IPool.sol\"\nobject \"Pool_2664\" {\n    code {\n        {\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 2:122:123  \"1\" */ 0x00, 0x01)\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            let _2 := datasize(\"Pool_2664_deployed\")\n            codecopy(_1, dataoffset(\"Pool_2664_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/Pool.sol\", 2:\"contracts/base/Lockable.sol\", 13:\"contracts/libraries/TransferHelper.sol\"\n    object \"Pool_2664_deployed\" {\n        code {\n            {\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0121c777 {\n                        external_fun_withdrawingLiquidity()\n                    }\n                    case 0x0adcf0f5 {\n                        external_fun_tradeableBaseToken()\n                    }\n                    case 0x122f7e8b { external_fun_open() }\n                    case 0x1794bb3c { external_fun_initialize() }\n                    case 0x19972a50 { external_fun_rollback() }\n                    case 0x1d086720 { external_fun_setInterest() }\n                    case 0x217a4b70 { external_fun_quoteToken() }\n                    case 0x27014e33 { external_fun_accProtocolFee() }\n                    case 0x32196a01 { external_fun_setBaseTokens() }\n                    case 0x40650eef {\n                        external_fun_setMaxOpenInterest()\n                    }\n                    case 0x5330e353 { external_fun_updateDeadline() }\n                    case 0x59129e75 {\n                        external_fun_closeManuallyStep1()\n                    }\n                    case 0x653741ff { external_fun_addBurnRequest() }\n                    case 0x685b61d0 { external_fun_quoteInDebt() }\n                    case 0x6b8357ac { external_fun_collect() }\n                    case 0x74375359 {\n                        external_fun_availableLiquidity()\n                    }\n                    case 0x8b6e00fa {\n                        external_fun_collateralReserve()\n                    }\n                    case 0x8cd47415 {\n                        external_fun_positionStorage()\n                    }\n                    case 0x94d008ef { external_fun_mint() }\n                    case 0x9da771f4 { external_fun_quoteReserve() }\n                    case 0xa1c59afc { external_fun_claimableFee() }\n                    case 0xa4fbc0d7 {\n                        external_fun_withdrawalMonitor()\n                    }\n                    case 0xada3112f { external_fun_accFee() }\n                    case 0xba343922 { external_fun_availLiquidity() }\n                    case 0xc392f766 { external_fun_interest() }\n                    case 0xc45a0155 { external_fun_factory() }\n                    case 0xc6f61b01 {\n                        external_fun_updateCollateralAmount()\n                    }\n                    case 0xd3b5dc3b { external_fun_precision() }\n                    case 0xd4fd6905 {\n                        external_fun_liquidityPosition()\n                    }\n                    case 0xd8f2cab7 {\n                        external_fun_closeManuallyStep2()\n                    }\n                    case 0xdc6638f4 {\n                        external_fun_maxOpenInterest()\n                    }\n                    case 0xdd3b829a { external_fun_accFeePerShare() }\n                    case 0xfa5a2e62 { external_fun_openInterest() }\n                    case 0xfb2b74b2 { external_fun_burn() }\n                    case 0xfba0c814 { external_fun_close() }\n                    case 0xffc9dcbb { external_fun_baseReserve() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_withdrawingLiquidity()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:942:986  \"uint256 public override withdrawingLiquidity\" */ 11)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function validator_revert_address(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_20682() -> value\n            {\n                value := calldataload(4)\n                validator_revert_address(value)\n            }\n            function abi_decode_address_20683() -> value\n            {\n                value := calldataload(36)\n                validator_revert_address(value)\n            }\n            function abi_decode_address_20684() -> value\n            {\n                value := calldataload(68)\n                validator_revert_address(value)\n            }\n            function abi_decode_address_20685() -> value\n            {\n                value := calldataload(100)\n                validator_revert_address(value)\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                validator_revert_address(value)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_20710(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:9968:9985  \"liquidityPosition\" */ 0x12)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_20742(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:6980:6998  \"tradeableBaseToken\" */ 0x0f)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:15460:15471  \"baseReserve\" */ 0x10)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_bool_of_address_20791(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:15522:15539  \"collateralReserve\" */ 0x11)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_tradeableBaseToken()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 0:1116:1175  \"mapping(address => bool) public override tradeableBaseToken\" */ 15)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value_1 := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40)), 0xff)\n                let memPos := mload(0x40)\n                mstore(memPos, iszero(iszero(value_1)))\n                return(memPos, 32)\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_20704(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0xa0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_20719(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_20721(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_20731(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0xc0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory_20681() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 320)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0x01c0)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function external_fun_open()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 320)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := allocate_memory_20681()\n                mstore(value, abi_decode_address_20682())\n                mstore(add(value, 32), abi_decode_address_20683())\n                mstore(add(value, 64), abi_decode_address_20684())\n                mstore(add(value, 96), abi_decode_address_20685())\n                mstore(add(value, 128), calldataload(132))\n                mstore(add(value, 160), calldataload(164))\n                mstore(add(value, 192), calldataload(196))\n                mstore(add(value, 224), calldataload(228))\n                mstore(add(value, 256), calldataload(260))\n                mstore(add(value, 288), calldataload(292))\n                /// @src 0:14380:14399  \"bytes32 positionKey\"\n                let var_positionKey := modifier_lock_20692(value)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, var_positionKey), memPos))\n            }\n            function external_fun_initialize()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value_1 := calldataload(36)\n                validator_revert_address(value_1)\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 0:4291:4345  \"if (factory != address(0)) revert InitializedAlready()\"\n                if /** @src 0:4295:4316  \"factory != address(0)\" */ iszero(iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(cleanup_address(sload(/** @src 0:4295:4302  \"factory\" */ 0x01)), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)))\n                /// @src 0:4291:4345  \"if (factory != address(0)) revert InitializedAlready()\"\n                {\n                    /// @src 0:4325:4345  \"InitializedAlready()\"\n                    let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4325:4345  \"InitializedAlready()\"\n                    mstore(_2, shl(225, 0x73e833b9))\n                    revert(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                /// @src 0:4355:4373  \"factory = _factory\"\n                update_storage_value_offsett_address_to_address(value)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _3 := and(/** @src 0:4401:4419  \"IFactory(_factory)\" */ value, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                mstore(_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x8cd47415))\n                let _5 := 32\n                /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                let _6 := staticcall(gas(), _3, _4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4, /** @src 0:4401:4437  \"IFactory(_factory).positionStorage()\" */ _4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                if iszero(_6) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                if _6\n                {\n                    let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5\n                    /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:4401:4437  \"IFactory(_factory).positionStorage()\" */ returndatasize()) { _7 := returndatasize() }\n                    finalize_allocation(_4, _7)\n                    expr := abi_decode_tuple_address_fromMemory(_4, add(_4, _7))\n                }\n                /// @src 0:4383:4437  \"positionStorage = IFactory(_factory).positionStorage()\"\n                update_storage_value_offsett_address_to_address_20695(expr)\n                /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                mstore(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xa4fbc0d7))\n                /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                let _9 := staticcall(gas(), _3, _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4, /** @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\" */ _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                if iszero(_9) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                if _9\n                {\n                    let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5\n                    /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\" */ returndatasize()) { _10 := returndatasize() }\n                    finalize_allocation(_8, _10)\n                    expr_1 := abi_decode_tuple_address_fromMemory(_8, add(_8, _10))\n                }\n                /// @src 0:4447:4505  \"withdrawalMonitor = IFactory(_factory).withdrawalMonitor()\"\n                update_storage_value_offsett_address_to_address_20696(expr_1)\n                /// @src 0:4515:4539  \"quoteToken = _quoteToken\"\n                update_storage_value_offsett_address_to_address_20697(value_1)\n                /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                let _11 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                mstore(_11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x313ce567))\n                /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                let _12 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:4567:4586  \"IERC20(_quoteToken)\" */ value_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\" */ _11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4, /** @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\" */ _11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                if iszero(_12) { revert_forward() }\n                let expr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                if _12\n                {\n                    let _13 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5\n                    /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\" */ returndatasize()) { _13 := returndatasize() }\n                    finalize_allocation(_11, _13)\n                    expr_2 := abi_decode_uint8_fromMemory(_11, add(_11, _13))\n                }\n                /// @src 0:4549:4597  \"precision = 10 ** IERC20(_quoteToken).decimals()\"\n                update_storage_value_offsett_uint256_to_uint256_20698(/** @src 0:4561:4597  \"10 ** IERC20(_quoteToken).decimals()\" */ checked_exp_rational_by_uint8(expr_2))\n                /// @src 0:4607:4627  \"interest = _interest\"\n                update_storage_value_offsett_uint256_to_uint256_20699(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(68))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_decode_struct_RollbackTradePositionParams_calldata_20700(end) -> value\n            {\n                if slt(add(end, not(3)), 128) { revert(0, 0) }\n                value := 4\n            }\n            function abi_decode_struct_RollbackTradePositionParams_calldata(offset, end) -> value\n            {\n                if slt(sub(end, offset), 128) { revert(0, 0) }\n                value := offset\n            }\n            function external_fun_rollback()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value0 := abi_decode_struct_RollbackTradePositionParams_calldata_20700(calldatasize())\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, 32)\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                {\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    mstore(_5, shl(224, 0xa59d7f4d))\n                    revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                }\n                /// @src 0:4893:4894  \"_\"\n                fun_rollback_inner(value0)\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_setInterest()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value0 := calldataload(4)\n                /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                if /** @src 0:4677:4698  \"msg.sender != factory\" */ iszero(eq(/** @src 0:4677:4687  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:4691:4698  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                {\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    mstore(_1, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    mstore(/** @src 0:4707:4728  \"Forbidden(msg.sender)\" */ add(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4677:4687  \"msg.sender\" */ caller())\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                }\n                sstore(/** @src 0:6330:6350  \"interest = _interest\" */ 0x06, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value0)\n                /// @src 0:6366:6388  \"SetInterest(_interest)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                mstore(_2, value0)\n                /// @src 0:6366:6388  \"SetInterest(_interest)\"\n                log1(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32, /** @src 0:6366:6388  \"SetInterest(_interest)\" */ 0x81ed86e8cfa3004fc54732477c3eda4f4c606394a0b423aba78153a3e696f65d)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_encode_address(value, pos)\n            {\n                mstore(pos, and(value, sub(shl(160, 1), 1)))\n            }\n            function abi_encode_tuple_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function external_fun_quoteToken()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(4), sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_accProtocolFee()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:1028:1066  \"uint256 public override accProtocolFee\" */ 13)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function array_allocation_size_array_address_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function validator_revert_bool(value)\n            {\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function abi_decode_array_bool_dyn(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := 0x20\n                let _3 := array_allocation_size_array_address_dyn(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _1)\n                dst := add(memPtr, _2)\n                let srcEnd := add(add(offset, shl(5, _1)), _2)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let src := add(offset, _2)\n                for { } lt(src, srcEnd) { src := add(src, _2) }\n                {\n                    let value := calldataload(src)\n                    validator_revert_bool(value)\n                    mstore(dst, value)\n                    dst := add(dst, _2)\n                }\n                array := memPtr\n            }\n            function external_fun_setBaseTokens()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _2 := calldataload(add(4, offset))\n                let _3 := array_allocation_size_array_address_dyn(_2)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _2)\n                let _4 := 0x20\n                dst := add(memPtr, _4)\n                let srcEnd := add(add(offset, shl(5, _2)), 36)\n                if gt(srcEnd, calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let src := add(offset, 36)\n                for { } lt(src, srcEnd) { src := add(src, _4) }\n                {\n                    let value := calldataload(src)\n                    validator_revert_address(value)\n                    mstore(dst, value)\n                    dst := add(dst, _4)\n                }\n                let offset_1 := calldataload(36)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:6608:7125  \"function setBaseTokens(...\"\n                modifier_onlyFactory(memPtr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ abi_decode_array_bool_dyn(add(4, offset_1), calldatasize()))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_setMaxOpenInterest()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value0 := calldataload(4)\n                /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                if /** @src 0:4677:4698  \"msg.sender != factory\" */ iszero(eq(/** @src 0:4677:4687  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:4691:4698  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                {\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    mstore(_1, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    mstore(/** @src 0:4707:4728  \"Forbidden(msg.sender)\" */ add(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4677:4687  \"msg.sender\" */ caller())\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                }\n                sstore(/** @src 0:6509:6543  \"maxOpenInterest = _maxOpenInterest\" */ 0x07, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value0)\n                /// @src 0:6559:6595  \"SetMaxOpenInterest(_maxOpenInterest)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                mstore(_2, value0)\n                /// @src 0:6559:6595  \"SetMaxOpenInterest(_maxOpenInterest)\"\n                log1(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32, /** @src 0:6559:6595  \"SetMaxOpenInterest(_maxOpenInterest)\" */ 0x9290d3ed14fa81f8d341842ac22f26e4bb4449e0d0a8566656d54dafae29198e)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_decode_struct_UpdateDeadlineParams(end) -> value\n            {\n                if slt(add(end, not(3)), 0xa0) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_20704(memPtr)\n                value := memPtr\n                mstore(memPtr, calldataload(4))\n                mstore(add(memPtr, 32), calldataload(36))\n                let value_1 := calldataload(68)\n                validator_revert_address(value_1)\n                mstore(add(memPtr, 64), value_1)\n                let value_2 := calldataload(100)\n                validator_revert_address(value_2)\n                mstore(add(memPtr, 96), value_2)\n                mstore(add(memPtr, 128), calldataload(132))\n            }\n            function external_fun_updateDeadline()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 160)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value0 := abi_decode_struct_UpdateDeadlineParams(calldatasize())\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, 32)\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                {\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    mstore(_5, shl(224, 0xa59d7f4d))\n                    revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                }\n                /// @src 0:4893:4894  \"_\"\n                fun_updateDeadline_inner(value0)\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_closeManuallyStep1()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(36)\n                validator_revert_address(value)\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if _3\n                {\n                    let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                    /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4, /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                {\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    mstore(_5, shl(224, 0xa59d7f4d))\n                    revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                }\n                /// @src 0:4893:4894  \"_\"\n                fun_closeManuallyStep1_inner(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(4), /** @src 0:4893:4894  \"_\" */ value)\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function external_fun_addBurnRequest()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := 4\n                let value0 := calldataload(_1)\n                let value := calldataload(36)\n                validator_revert_address(value)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(_1, offset), calldatasize())\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_2, shl(226, 0x03cb96db))\n                    revert(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:9968:9997  \"liquidityPosition[msg.sender]\"\n                let _3 := mapping_index_access_mapping_address_bool_of_address_20710(/** @src 0:9986:9996  \"msg.sender\" */ caller())\n                /// @src 0:10024:10048  \"pos.withdrawingLiquidity\"\n                let _4 := add(_3, 3)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _5 := sload(/** @src 0:10024:10048  \"pos.withdrawingLiquidity\" */ _4)\n                /// @src 0:10011:10048  \"_liquidity + pos.withdrawingLiquidity\"\n                let expr := checked_add_uint256(value0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                /// @src 0:10007:10105  \"if (_liquidity + pos.withdrawingLiquidity > pos.liquidity)...\"\n                if /** @src 0:10011:10064  \"_liquidity + pos.withdrawingLiquidity > pos.liquidity\" */ gt(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:10051:10064  \"pos.liquidity\" */ _3))\n                /// @src 0:10007:10105  \"if (_liquidity + pos.withdrawingLiquidity > pos.liquidity)...\"\n                {\n                    /// @src 0:10085:10105  \"InsufficientOutput()\"\n                    let _6 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:10085:10105  \"InsufficientOutput()\"\n                    mstore(_6, shl(224, 0xbb2875c3))\n                    revert(_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                }\n                sstore(_4, /** @src 0:10116:10154  \"pos.withdrawingLiquidity += _liquidity\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:10116:10154  \"pos.withdrawingLiquidity += _liquidity\" */ value0))\n                /// @src 0:10164:10198  \"withdrawingLiquidity += _liquidity\"\n                update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:10164:10198  \"withdrawingLiquidity += _liquidity\" */ 0x0b), value0))\n                /// @src 0:10304:10322  \"monitor.addRequest\"\n                let expr_address := cleanup_address(/** @src 0:10238:10275  \"IWithdrawalMonitor(withdrawalMonitor)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:10024:10048  \"pos.withdrawingLiquidity\" */ 3))))\n                /// @src 0:10335:10345  \"quoteToken\"\n                let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(_1))\n                /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                mstore(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(227, 0x130e06fd))\n                /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                let _9 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\" */ _8, sub(abi_encode_address_address_uint256_address_bytes_calldata(add(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:9986:9996  \"msg.sender\" */ caller(), /** @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\" */ _7, value0, value, value2, value3), _8), _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                if iszero(_9) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                if _9\n                {\n                    let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                    /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _10, /** @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\" */ returndatasize()) { _10 := returndatasize() }\n                    finalize_allocation(_8, _10)\n                    expr_1 := abi_decode_uint256_fromMemory(_8, add(_8, _10))\n                }\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20712()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, expr_1), memPos))\n            }\n            function external_fun_quoteInDebt()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:901:936  \"uint256 public override quoteInDebt\" */ 10)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_collect()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let value1 := calldataload(36)\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:8996:9764  \"if (_amount > 0) {...\"\n                if /** @src 0:9000:9011  \"_amount > 0\" */ iszero(iszero(value1))\n                /// @src 0:8996:9764  \"if (_amount > 0) {...\"\n                {\n                    /// @src 0:9059:9088  \"liquidityPosition[msg.sender]\"\n                    let _2 := mapping_index_access_mapping_address_bool_of_address_20710(/** @src 0:9077:9087  \"msg.sender\" */ caller())\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _3 := sload(/** @src 0:9129:9143  \"accFeePerShare\" */ 0x0e)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _4 := sload(/** @src 0:9178:9187  \"precision\" */ 0x05)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _5 := sload(/** @src 0:9206:9219  \"pos.liquidity\" */ _2)\n                    /// @src 0:9202:9396  \"if (pos.liquidity > 0) {...\"\n                    if /** @src 0:9206:9223  \"pos.liquidity > 0\" */ iszero(iszero(_5))\n                    /// @src 0:9202:9396  \"if (pos.liquidity > 0) {...\"\n                    {\n                        /// @src 0:9281:9347  \"(_accFeePerShare * pos.liquidity) /...\"\n                        let expr := checked_div_uint256(/** @src 0:9282:9313  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5), /** @src 0:9281:9347  \"(_accFeePerShare * pos.liquidity) /...\" */ _4)\n                        /// @src 0:9281:9381  \"(_accFeePerShare * pos.liquidity) /...\"\n                        let expr_1 := checked_sub_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:9370:9381  \"pos.feeDebt\" */ add(_2, /** @src 2:193:194  \"1\" */ 0x01)))\n                        /// @src 0:9243:9257  \"pos.pendingFee\"\n                        let _6 := add(_2, 2)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_6, /** @src 0:9243:9381  \"pos.pendingFee +=...\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:9243:9381  \"pos.pendingFee +=...\" */ _6), expr_1))\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    sstore(/** @src 0:9409:9420  \"pos.feeDebt\" */ add(_2, /** @src 2:193:194  \"1\" */ 0x01), /** @src 0:9423:9469  \"(_accFeePerShare * pos.liquidity) / _precision\" */ checked_div_uint256(/** @src 0:9424:9455  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5), /** @src 0:9423:9469  \"(_accFeePerShare * pos.liquidity) / _precision\" */ _4))\n                    /// @src 0:9498:9512  \"pos.pendingFee\"\n                    let _7 := add(_2, 2)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _8 := sload(/** @src 0:9498:9512  \"pos.pendingFee\" */ _7)\n                    /// @src 0:9488:9532  \"_amount > pos.pendingFee || _amount > accFee\"\n                    let expr_2 := /** @src 0:9488:9512  \"_amount > pos.pendingFee\" */ gt(value1, _8)\n                    /// @src 0:9488:9532  \"_amount > pos.pendingFee || _amount > accFee\"\n                    if iszero(expr_2)\n                    {\n                        expr_2 := /** @src 0:9516:9532  \"_amount > accFee\" */ gt(value1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:9526:9532  \"accFee\" */ 0x0c))\n                    }\n                    /// @src 0:9484:9594  \"if (_amount > pos.pendingFee || _amount > accFee) {...\"\n                    if expr_2\n                    {\n                        /// @src 0:9559:9579  \"InsufficientOutput()\"\n                        let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:9559:9579  \"InsufficientOutput()\"\n                        mstore(_9, /** @src 0:10085:10105  \"InsufficientOutput()\" */ shl(224, 0xbb2875c3))\n                        /// @src 0:9559:9579  \"InsufficientOutput()\"\n                        revert(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                    }\n                    sstore(_7, /** @src 0:9607:9632  \"pos.pendingFee -= _amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _8, /** @src 0:9607:9632  \"pos.pendingFee -= _amount\" */ value1))\n                    /// @src 0:9692:9699  \"_amount\"\n                    fun_safeTransfer(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(4)), /** @src 0:9692:9699  \"_amount\" */ value, value1)\n                    /// @src 0:9720:9753  \"Collect(msg.sender, _to, _amount)\"\n                    let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:9720:9753  \"Collect(msg.sender, _to, _amount)\"\n                    log3(_10, sub(abi_encode_uint256(_10, value1), _10), 0x1314fd112a381beea61539dbd21ec04afcff2662ac7d1b83273aade1f53d1b97, /** @src 0:9077:9087  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:9720:9753  \"Collect(msg.sender, _to, _amount)\" */ value, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)))\n                }\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_availableLiquidity()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := /** @src 0:5849:5870  \"_availableLiquidity()\" */ fun_availableLiquidity()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_collateralReserve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 0:1242:1303  \"mapping(address => uint256) public override collateralReserve\" */ 17)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_positionStorage()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 0:536:575  \"address public override positionStorage\" */ 2), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_mint()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 96)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := 4\n                let value := calldataload(_1)\n                validator_revert_address(value)\n                let value1 := calldataload(36)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value2, value3 := abi_decode_bytes_calldata(add(_1, offset), calldatasize())\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ _2), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_3, shl(226, 0x03cb96db))\n                    revert(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                }\n                sstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 0:8019:8029  \"quoteToken\"\n                let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(_1))\n                /// @src 0:8071:8093  \"liquidityPosition[_to]\"\n                let _5 := mapping_index_access_mapping_address_bool_of_address_20710(value)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _6 := sload(/** @src 0:8130:8144  \"accFeePerShare\" */ 0x0e)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _7 := sload(/** @src 0:8175:8184  \"precision\" */ 0x05)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _8 := sload(/** @src 0:8199:8212  \"pos.liquidity\" */ _5)\n                /// @src 0:8195:8369  \"if (pos.liquidity > 0) {...\"\n                if /** @src 0:8199:8216  \"pos.liquidity > 0\" */ iszero(iszero(_8))\n                /// @src 0:8195:8369  \"if (pos.liquidity > 0) {...\"\n                {\n                    /// @src 0:8266:8328  \"(_accFeePerShare * pos.liquidity) /...\"\n                    let expr := checked_div_uint256(/** @src 0:8267:8298  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _8), /** @src 0:8266:8328  \"(_accFeePerShare * pos.liquidity) /...\" */ _7)\n                    /// @src 0:8266:8358  \"(_accFeePerShare * pos.liquidity) /...\"\n                    let expr_1 := checked_sub_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:8347:8358  \"pos.feeDebt\" */ add(_5, /** @src 2:193:194  \"1\" */ 0x01)))\n                    /// @src 0:8232:8246  \"pos.pendingFee\"\n                    let _9 := add(_5, 2)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    sstore(_9, /** @src 0:8232:8358  \"pos.pendingFee +=...\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:8232:8358  \"pos.pendingFee +=...\" */ _9), expr_1))\n                }\n                /// @src 0:8378:8405  \"pos.liquidity += _liquidity\"\n                let _10 := checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _8, /** @src 0:8378:8405  \"pos.liquidity += _liquidity\" */ value1)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_5, _10)\n                sstore(/** @src 0:8415:8426  \"pos.feeDebt\" */ add(_5, /** @src 2:193:194  \"1\" */ 0x01), /** @src 0:8429:8475  \"(_accFeePerShare * pos.liquidity) / _precision\" */ checked_div_uint256(/** @src 0:8430:8461  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _10), /** @src 0:8429:8475  \"(_accFeePerShare * pos.liquidity) / _precision\" */ _7))\n                /// @src 0:8486:8512  \"quoteReserve += _liquidity\"\n                update_storage_value_offsett_uint256_to_uint256_20718(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:8486:8512  \"quoteReserve += _liquidity\" */ 0x09), value1))\n                fun_transferProtocolFee()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _11 := sub(shl(160, 1), 1)\n                let _12 := and(/** @src 0:8579:8598  \"IERC20(_quoteToken)\" */ _4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11)\n                let _13 := 64\n                /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                let _14 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                let _15 := shl(224, 0x70a08231)\n                /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                mstore(_14, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15)\n                let _16 := 32\n                /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                let _17 := staticcall(gas(), _12, _14, sub(abi_encode_tuple_address(add(_14, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:8617:8621  \"this\" */ address()), /** @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\" */ _14), _14, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16)\n                /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                if iszero(_17) { revert_forward() }\n                let expr_2 := /** @src -1:-1:-1 */ _2\n                /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                if _17\n                {\n                    let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16\n                    /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16, /** @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\" */ returndatasize()) { _18 := returndatasize() }\n                    finalize_allocation(_14, _18)\n                    expr_2 := abi_decode_uint256_fromMemory(_14, add(_14, _18))\n                }\n                /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                if iszero(extcodesize(/** @src 0:8647:8657  \"msg.sender\" */ caller()))\n                /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src -1:-1:-1 */ _2, _2)\n                }\n                /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                mstore(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x03a3bcd7))\n                /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                let _20 := call(gas(), /** @src 0:8647:8657  \"msg.sender\" */ caller(), /** @src -1:-1:-1 */ _2, /** @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\" */ _19, sub(abi_encode_address_uint256_bytes_calldata(add(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\" */ _4, value1, value2, value3), _19), _19, /** @src -1:-1:-1 */ _2)\n                /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                if iszero(_20) { revert_forward() }\n                if _20\n                {\n                    finalize_allocation_20719(_19)\n                    abi_decode(_19, _19)\n                }\n                /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                mstore(_21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15)\n                /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                let _22 := staticcall(gas(), _12, _21, sub(abi_encode_tuple_address(add(_21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:8617:8621  \"this\" */ address()), /** @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\" */ _21), _21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16)\n                /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                if iszero(_22) { revert_forward() }\n                let expr_3 := /** @src -1:-1:-1 */ _2\n                /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                if _22\n                {\n                    let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16\n                    /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16, /** @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\" */ returndatasize()) { _23 := returndatasize() }\n                    finalize_allocation(_21, _23)\n                    expr_3 := abi_decode_uint256_fromMemory(_21, add(_21, _23))\n                }\n                /// @src 0:8786:8854  \"if (balance < balanceBefore + _liquidity) revert InsufficientInput()\"\n                if /** @src 0:8790:8826  \"balance < balanceBefore + _liquidity\" */ lt(expr_3, /** @src 0:8800:8826  \"balanceBefore + _liquidity\" */ checked_add_uint256(expr_2, value1))\n                /// @src 0:8786:8854  \"if (balance < balanceBefore + _liquidity) revert InsufficientInput()\"\n                {\n                    /// @src 0:8835:8854  \"InsufficientInput()\"\n                    let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                    /// @src 0:8835:8854  \"InsufficientInput()\"\n                    mstore(_24, shl(224, 0xf8b3bb61))\n                    revert(_24, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                }\n                /// @src 0:8870:8903  \"Mint(msg.sender, _to, _liquidity)\"\n                let _25 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                /// @src 0:8870:8903  \"Mint(msg.sender, _to, _liquidity)\"\n                log3(_25, sub(abi_encode_uint256(_25, value1), _25), 0xab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8, /** @src 0:8647:8657  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:8870:8903  \"Mint(msg.sender, _to, _liquidity)\" */ value, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11))\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(_13), /** @src -1:-1:-1 */ _2)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_quoteReserve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:859:895  \"uint256 public override quoteReserve\" */ 9)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_claimableFee()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                let var_amount := /** @src -1:-1:-1 */ 0\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                mstore(/** @src -1:-1:-1 */ var_amount, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 0:6024:6041  \"liquidityPosition\" */ 0x12)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ var_amount, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40)\n                let memPtr := mload(0x40)\n                finalize_allocation_20721(memPtr)\n                let _1 := sload(dataSlot)\n                mstore(memPtr, _1)\n                let _2 := sload(add(dataSlot, 1))\n                let _3 := add(memPtr, 32)\n                mstore(_3, _2)\n                let _4 := sload(add(dataSlot, 2))\n                mstore(add(memPtr, 0x40), _4)\n                mstore(add(memPtr, 96), sload(add(dataSlot, 3)))\n                /// @src 0:6110:6140  \"accFeePerShare * pos.liquidity\"\n                let expr := checked_mul_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:6110:6124  \"accFeePerShare\" */ 0x0e), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                /// @src 0:6080:6165  \"pos.pendingFee +...\"\n                let expr_1 := checked_add_uint256(_4, /** @src 0:6109:6165  \"(accFeePerShare * pos.liquidity) /...\" */ checked_div_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:6156:6165  \"precision\" */ 0x05)))\n                /// @src 0:6059:6191  \"amount =...\"\n                var_amount := /** @src 0:6080:6191  \"pos.pendingFee +...\" */ checked_sub_uint256(expr_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:6180:6191  \"pos.feeDebt\" */ _3))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _5 := sload(/** @src 0:6214:6220  \"accFee\" */ 0x0c)\n                /// @src 0:6201:6237  \"if (amount > accFee) amount = accFee\"\n                if /** @src 0:6205:6220  \"amount > accFee\" */ gt(var_amount, _5)\n                /// @src 0:6201:6237  \"if (amount > accFee) amount = accFee\"\n                {\n                    /// @src 0:6222:6237  \"amount = accFee\"\n                    var_amount := _5\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(0x40)\n                return(memPos, sub(abi_encode_uint256(memPos, var_amount), memPos))\n            }\n            function external_fun_withdrawalMonitor()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 0:581:622  \"address public override withdrawalMonitor\" */ 3), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_accFee()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:992:1022  \"uint256 public override accFee\" */ 12)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_availLiquidity()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 0:7729:7819  \"if (msg.sender != withdrawalMonitor) {...\"\n                if /** @src 0:7733:7764  \"msg.sender != withdrawalMonitor\" */ iszero(eq(/** @src 0:7733:7743  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:7747:7764  \"withdrawalMonitor\" */ 0x03), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                /// @src 0:7729:7819  \"if (msg.sender != withdrawalMonitor) {...\"\n                {\n                    /// @src 0:7787:7808  \"Forbidden(msg.sender)\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:7787:7808  \"Forbidden(msg.sender)\"\n                    mstore(_1, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    mstore(/** @src 0:7787:7808  \"Forbidden(msg.sender)\" */ add(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:7733:7743  \"msg.sender\" */ caller())\n                    /// @src 0:7787:7808  \"Forbidden(msg.sender)\"\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                }\n                sstore(/** @src 0:7828:7852  \"withdrawingLiquidity = 0\" */ 0x0b, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0)\n                return(mload(64), 0)\n            }\n            function external_fun_interest()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:707:739  \"uint256 public override interest\" */ 6)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_factory()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 0:499:530  \"address public override factory\" */ 1), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_updateCollateralAmount()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 160)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value0 := abi_decode_struct_UpdateDeadlineParams(calldatasize())\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, 32)\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(_4, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                {\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    mstore(_5, shl(224, 0xa59d7f4d))\n                    revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                }\n                /// @src 0:4893:4894  \"_\"\n                let _6 := /** @src 0:27134:28085  \"function updateCollateralAmount(...\" */ fun_updateCollateralAmount_inner(/** @src 0:4893:4894  \"_\" */ value0)\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20712()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_uint256(memPos, _6), memPos))\n            }\n            function external_fun_precision()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:668:701  \"uint256 public override precision\" */ 5)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_liquidityPosition()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ 18)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40)\n                let _1 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ dataSlot)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _2 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ add(dataSlot, 1))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _3 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ add(dataSlot, 2))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _4 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ add(dataSlot, 3))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                mstore(add(memPos, 32), _2)\n                mstore(add(memPos, 0x40), _3)\n                mstore(add(memPos, 96), _4)\n                return(memPos, 128)\n            }\n            function external_fun_closeManuallyStep2()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if _3\n                {\n                    let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                    /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4, /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                {\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    mstore(_5, shl(224, 0xa59d7f4d))\n                    revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                }\n                /// @src 0:4893:4894  \"_\"\n                fun_closeManuallyStep2_inner(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(4), calldataload(36), calldataload(68), calldataload(100))\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_maxOpenInterest()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:771:810  \"uint256 public override maxOpenInterest\" */ 7)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_accFeePerShare()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:1072:1110  \"uint256 public override accFeePerShare\" */ 14)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function external_fun_openInterest()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(/** @src 0:816:852  \"uint256 public override openInterest\" */ 8)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPos := mload(64)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                array := memPtr\n            }\n            function external_fun_burn()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := not(3)\n                if slt(add(calldatasize(), _1), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let offset := calldataload(4)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                if slt(add(sub(calldatasize(), offset), _1), 0xc0)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let memPtr := mload(64)\n                finalize_allocation_20731(memPtr)\n                mstore(memPtr, calldataload(add(4, offset)))\n                let value := calldataload(add(offset, 36))\n                validator_revert_address(value)\n                mstore(add(memPtr, 32), value)\n                mstore(add(memPtr, 64), abi_decode_address(add(offset, 68)))\n                mstore(add(memPtr, 96), calldataload(add(offset, 100)))\n                mstore(add(memPtr, 128), abi_decode_address(add(offset, 132)))\n                let offset_1 := calldataload(add(offset, 164))\n                if gt(offset_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                mstore(add(memPtr, 160), abi_decode_bytes(add(add(offset, offset_1), 4), calldatasize()))\n                /// @src 0:10383:12832  \"function burn(...\"\n                modifier_lock(memPtr)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_close()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value0 := abi_decode_struct_RollbackTradePositionParams_calldata(add(4, offset), calldatasize())\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_1, shl(226, 0x03cb96db))\n                    revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if iszero(_3) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                if _3\n                {\n                    let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                    /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4, /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                }\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                {\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                    mstore(_5, shl(224, 0xa59d7f4d))\n                    revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                }\n                /// @src 0:4893:4894  \"_\"\n                fun_close_inner(value0)\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function external_fun_baseReserve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let value := calldataload(4)\n                validator_revert_address(value)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 0:1181:1236  \"mapping(address => uint256) public override baseReserve\" */ 16)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40))\n                let memPos := mload(0x40)\n                mstore(memPos, _1)\n                return(memPos, 32)\n            }\n            function update_storage_value_offsett_address_to_address(value)\n            {\n                sstore(/** @src 0:4295:4302  \"factory\" */ 0x01, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ or(and(sload(/** @src 0:4295:4302  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_address_to_address_20695(value)\n            {\n                sstore(/** @src 0:4383:4437  \"positionStorage = IFactory(_factory).positionStorage()\" */ 0x02, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ or(and(sload(/** @src 0:4383:4437  \"positionStorage = IFactory(_factory).positionStorage()\" */ 0x02), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_address_to_address_20696(value)\n            {\n                sstore(/** @src 0:4447:4505  \"withdrawalMonitor = IFactory(_factory).withdrawalMonitor()\" */ 0x03, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ or(and(sload(/** @src 0:4447:4505  \"withdrawalMonitor = IFactory(_factory).withdrawalMonitor()\" */ 0x03), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_address_to_address_20697(value)\n            {\n                sstore(4, or(and(sload(4), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function abi_decode_address_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                validator_revert_address(value)\n            }\n            function abi_decode_tuple_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_address(value)\n                value0 := value\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function abi_decode_uint8_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, 0xff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                value0 := value\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_exp_rational_by_uint8(exponent) -> power\n            {\n                let exponent_1 := and(exponent, 0xff)\n                if gt(exponent_1, 77) { panic_error_0x11() }\n                power := exp(10, exponent_1)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20698(value)\n            {\n                sstore(/** @src 0:4549:4597  \"precision = 10 ** IERC20(_quoteToken).decimals()\" */ 0x05, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20699(value)\n            {\n                sstore(/** @src 0:4607:4627  \"interest = _interest\" */ 0x06, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20701()\n            {\n                sstore(/** @src 2:181:189  \"unlocked\" */ 0x00, /** @src 2:193:194  \"1\" */ 0x01)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function update_storage_value_offsett_uint256_to_uint256_20711(value)\n            {\n                sstore(/** @src 0:10164:10198  \"withdrawingLiquidity += _liquidity\" */ 0x0b, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20712()\n            {\n                sstore(0, /** @src 2:193:194  \"1\" */ 0x01)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function update_storage_value_offsett_uint256_to_uint256_20718(value)\n            {\n                sstore(/** @src 0:8486:8512  \"quoteReserve += _liquidity\" */ 0x09, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20769()\n            {\n                sstore(/** @src 0:10872:10892  \"withdrawingLiquidity\" */ 0x0b, /** @src 2:181:189  \"unlocked\" */ 0x00)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function update_storage_value_offsett_uint256_to_uint256(value)\n            {\n                sstore(/** @src 0:15373:15407  \"quoteInDebt += _params.quoteAmount\" */ 0x0a, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20789(value)\n            {\n                sstore(/** @src 0:15417:15450  \"accProtocolFee += pos.protocolFee\" */ 0x0d, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function update_storage_value_offsett_uint256_to_uint256_20792(value)\n            {\n                sstore(/** @src 0:14527:14539  \"openInterest\" */ 0x08, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n            }\n            function checked_sub_int256(x, y) -> diff\n            {\n                let _1 := slt(y, 0)\n                if and(iszero(_1), slt(x, add(shl(255, 1), y))) { panic_error_0x11() }\n                if and(_1, sgt(x, add(sub(shl(255, 1), 1), y))) { panic_error_0x11() }\n                diff := sub(x, y)\n            }\n            /// @ast-id 484 @src 0:5513:5755  \"function _availableLiquidity() internal view returns (uint256) {...\"\n            function fun_availableLiquidity() -> var\n            {\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := sload(/** @src 0:5609:5621  \"quoteReserve\" */ 0x09)\n                /// @src 0:5602:5656  \"int256(quoteReserve) -...\"\n                let expr := checked_sub_int256(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:5644:5655  \"quoteInDebt\" */ 0x0a))\n                /// @src 0:5602:5699  \"int256(quoteReserve) -...\"\n                let expr_1 := checked_sub_int256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:5678:5698  \"withdrawingLiquidity\" */ 0x0b))\n                /// @src 0:5716:5748  \"result < 0 ? 0 : uint256(result)\"\n                let expr_2 := /** @src -1:-1:-1 */ 0\n                /// @src 0:5716:5748  \"result < 0 ? 0 : uint256(result)\"\n                switch /** @src 0:5716:5726  \"result < 0\" */ slt(expr_1, /** @src -1:-1:-1 */ expr_2)\n                case /** @src 0:5716:5748  \"result < 0 ? 0 : uint256(result)\" */ 0 { expr_2 := expr_1 }\n                default {\n                    expr_2 := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 0:5709:5748  \"return result < 0 ? 0 : uint256(result)\"\n                var := expr_2\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n                product := mul(x, y)\n            }\n            function checked_div_uint256_20819(x) -> r\n            {\n                r := div(x, /** @src 0:18963:18968  \"10000\" */ 0x2710)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                if gt(x, not(y)) { panic_error_0x11() }\n                sum := add(x, y)\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                if lt(x, y) { panic_error_0x11() }\n                diff := sub(x, y)\n            }\n            /// @ast-id 362 @src 0:4640:4746  \"modifier onlyFactory() {...\"\n            function modifier_onlyFactory(var_baseTokens_mpos, var_tradeables_mpos)\n            {\n                /// @src 0:4691:4698  \"factory\"\n                let _1 := 0x01\n                /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                if /** @src 0:4677:4698  \"msg.sender != factory\" */ iszero(eq(/** @src 0:4677:4687  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:4691:4698  \"factory\" */ _1), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                {\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    mstore(_2, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    mstore(/** @src 0:4707:4728  \"Forbidden(msg.sender)\" */ add(_2, 4), /** @src 0:4677:4687  \"msg.sender\" */ caller())\n                    /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                    revert(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                }\n                /// @src 0:6772:6782  \"quoteToken\"\n                let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:6772:6782  \"quoteToken\" */ 0x04))\n                /// @src 0:6796:6814  \"_baseTokens.length\"\n                let expr := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:6796:6814  \"_baseTokens.length\" */ var_baseTokens_mpos)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _4 := mload(/** @src 0:6818:6836  \"_tradeables.length\" */ var_tradeables_mpos)\n                /// @src 0:6792:6907  \"if (_baseTokens.length != _tradeables.length)...\"\n                if /** @src 0:6796:6836  \"_baseTokens.length != _tradeables.length\" */ iszero(eq(expr, _4))\n                /// @src 0:6792:6907  \"if (_baseTokens.length != _tradeables.length)...\"\n                {\n                    /// @src 0:6857:6907  \"BadLengths(_baseTokens.length, _tradeables.length)\"\n                    let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:6857:6907  \"BadLengths(_baseTokens.length, _tradeables.length)\"\n                    mstore(_5, shl(224, 0x574092f9))\n                    revert(_5, sub(abi_encode_uint256_uint256(add(_5, /** @src 0:6772:6782  \"quoteToken\" */ 0x04), /** @src 0:6857:6907  \"BadLengths(_baseTokens.length, _tradeables.length)\" */ expr, _4), _5))\n                }\n                /// @src 0:6922:6935  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 0:6917:7119  \"for (uint256 i = 0; i < _baseTokens.length; i++) {...\"\n                for { }\n                /** @src 0:4691:4698  \"factory\" */ _1\n                /// @src 0:6922:6935  \"uint256 i = 0\"\n                {\n                    /// @src 0:6961:6964  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 0:6937:6959  \"i < _baseTokens.length\"\n                    if iszero(lt(var_i, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:6941:6959  \"_baseTokens.length\" */ var_baseTokens_mpos)))\n                    /// @src 0:6937:6959  \"i < _baseTokens.length\"\n                    { break }\n                    /// @src 0:6980:7031  \"tradeableBaseToken[_baseTokens[i]] = _tradeables[i]\"\n                    update_storage_value_offsett_bool_to_bool(/** @src 0:6980:7014  \"tradeableBaseToken[_baseTokens[i]]\" */ mapping_index_access_mapping_address_bool_of_address_20742(/** @src 0:6999:7013  \"_baseTokens[i]\" */ read_from_memoryt_address(memory_array_index_access_bool_dyn(var_baseTokens_mpos, var_i))), /** @src 0:7017:7031  \"_tradeables[i]\" */ read_from_memoryt_bool(memory_array_index_access_bool_dyn(var_tradeables_mpos, var_i)))\n                    /// @src 0:7064:7078  \"_baseTokens[i]\"\n                    let _6 := read_from_memoryt_address(memory_array_index_access_bool_dyn(var_baseTokens_mpos, var_i))\n                    /// @src 0:7093:7107  \"_tradeables[i]\"\n                    let _7 := read_from_memoryt_bool(memory_array_index_access_bool_dyn(var_tradeables_mpos, var_i))\n                    /// @src 0:7051:7108  \"SetBaseToken(_baseTokens[i], _quoteToken, _tradeables[i])\"\n                    let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:7051:7108  \"SetBaseToken(_baseTokens[i], _quoteToken, _tradeables[i])\"\n                    log1(_8, sub(abi_encode_address_address_bool(_8, _6, _3, _7), _8), 0xec4f975deac1f5c1d92fd5f7a2b08d2c4e3e60215ab50703da45f8f8e9f2fc9b)\n                }\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0)) { panic_error_0x11() }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_bool_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function read_from_memoryt_bool(ptr) -> returnValue\n            {\n                returnValue := iszero(iszero(mload(ptr)))\n            }\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := and(mload(ptr), sub(shl(160, 1), 1))\n            }\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            function abi_encode_address_address_bool(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), iszero(iszero(value2)))\n            }\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function abi_encode_bytes_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_address_uint256_bytes_calldata(headStart, value0, value1, value2, value3) -> tail\n            {\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), 96)\n                tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 96))\n            }\n            /// @ast-id 695 @src 0:7302:7669  \"function _transferProtocolFee() internal {...\"\n            function fun_transferProtocolFee()\n            {\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := sload(/** @src 0:7376:7390  \"accProtocolFee\" */ 0x0d)\n                /// @src 0:7400:7663  \"if (_protocolFee > 0) {...\"\n                if /** @src 0:7404:7420  \"_protocolFee > 0\" */ iszero(iszero(_1))\n                /// @src 0:7400:7663  \"if (_protocolFee > 0) {...\"\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _2 := sub(shl(160, 1), 1)\n                    let _3 := and(sload(/** @src 0:7461:7468  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)\n                    /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                    let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                    mstore(_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(225, 0x779b4929))\n                    /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                    let _5 := staticcall(gas(), _3, _4, 4, _4, 32)\n                    if iszero(_5) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                    if _5\n                    {\n                        let _6 := 32\n                        if gt(_6, returndatasize()) { _6 := returndatasize() }\n                        finalize_allocation(_4, _6)\n                        expr := abi_decode_tuple_address_fromMemory(_4, add(_4, _6))\n                    }\n                    /// @src 0:7499:7653  \"if (feeTo != address(0)) {...\"\n                    if /** @src 0:7503:7522  \"feeTo != address(0)\" */ iszero(iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:7503:7522  \"feeTo != address(0)\" */ expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)))\n                    /// @src 0:7499:7653  \"if (feeTo != address(0)) {...\"\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(/** @src 0:7376:7390  \"accProtocolFee\" */ 0x0d, /** @src -1:-1:-1 */ 0)\n                        /// @src 0:7625:7637  \"_protocolFee\"\n                        fun_safeTransfer(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\" */ 4), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2), /** @src 0:7625:7637  \"_protocolFee\" */ expr, _1)\n                    }\n                }\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_encode_address_address_uint256_address_bytes_calldata(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), and(value3, _1))\n                mstore(add(headStart, 128), 160)\n                tail := abi_encode_bytes_calldata(value4, value5, add(headStart, 160))\n            }\n            /// @ast-id 2803 @src 2:151:273  \"modifier lock() {...\"\n            function modifier_lock(var_request_mpos)\n            {\n                /// @src 2:181:189  \"unlocked\"\n                let _1 := 0x00\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 2:181:189  \"unlocked\" */ _1), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_2, shl(226, 0x03cb96db))\n                    revert(_2, 4)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(/** @src 2:181:189  \"unlocked\" */ _1, _1)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _3 := and(/** @src 0:10527:10564  \"IWithdrawalMonitor(withdrawalMonitor)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:10546:10563  \"withdrawalMonitor\" */ 0x03))), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:10574:10663  \"if (msg.sender != address(monitor)) {...\"\n                if /** @src 0:10578:10608  \"msg.sender != address(monitor)\" */ iszero(eq(/** @src 0:10578:10588  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _3))\n                /// @src 0:10574:10663  \"if (msg.sender != address(monitor)) {...\"\n                {\n                    /// @src 0:10631:10652  \"Forbidden(msg.sender)\"\n                    let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:10631:10652  \"Forbidden(msg.sender)\"\n                    mstore(_4, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                    /// @src 0:10631:10652  \"Forbidden(msg.sender)\"\n                    revert(_4, sub(abi_encode_tuple_address(add(_4, 4), /** @src 0:10578:10588  \"msg.sender\" */ caller()), /** @src 0:10631:10652  \"Forbidden(msg.sender)\" */ _4))\n                }\n                /// @src 0:10722:10736  \"_request.owner\"\n                let _5 := add(var_request_mpos, 32)\n                /// @src 0:10704:10737  \"liquidityPosition[_request.owner]\"\n                let _6 := mapping_index_access_mapping_address_bool_of_address_20710(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:10722:10736  \"_request.owner\" */ _5)))\n                /// @src 0:10751:10769  \"_request.liquidity\"\n                let _7 := add(var_request_mpos, 96)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _8 := mload(/** @src 0:10751:10769  \"_request.liquidity\" */ _7)\n                /// @src 0:10772:10796  \"pos.withdrawingLiquidity\"\n                let _9 := add(_6, /** @src 0:10546:10563  \"withdrawalMonitor\" */ 0x03)\n                /// @src 0:10747:10837  \"if (_request.liquidity > pos.withdrawingLiquidity)...\"\n                if /** @src 0:10751:10796  \"_request.liquidity > pos.withdrawingLiquidity\" */ gt(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:10772:10796  \"pos.withdrawingLiquidity\" */ _9))\n                /// @src 0:10747:10837  \"if (_request.liquidity > pos.withdrawingLiquidity)...\"\n                {\n                    /// @src 0:10817:10837  \"InsufficientOutput()\"\n                    let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:10817:10837  \"InsufficientOutput()\"\n                    mstore(_10, /** @src 0:10085:10105  \"InsufficientOutput()\" */ shl(224, 0xbb2875c3))\n                    /// @src 0:10817:10837  \"InsufficientOutput()\"\n                    revert(_10, 4)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _11 := mload(/** @src 0:10851:10869  \"_request.liquidity\" */ _7)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _12 := sload(/** @src 0:10872:10892  \"withdrawingLiquidity\" */ 0x0b)\n                /// @src 0:10847:10991  \"if (_request.liquidity > withdrawingLiquidity) {...\"\n                switch /** @src 0:10851:10892  \"_request.liquidity > withdrawingLiquidity\" */ gt(_11, _12)\n                case /** @src 0:10847:10991  \"if (_request.liquidity > withdrawingLiquidity) {...\" */ 0 {\n                    /// @src 0:10949:10991  \"withdrawingLiquidity -= _request.liquidity\"\n                    update_storage_value_offsett_uint256_to_uint256_20711(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _12, _11))\n                }\n                default /// @src 0:10847:10991  \"if (_request.liquidity > withdrawingLiquidity) {...\"\n                {\n                    /// @src 0:10908:10932  \"withdrawingLiquidity = 0\"\n                    update_storage_value_offsett_uint256_to_uint256_20769()\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _13 := sload(/** @src 0:11028:11042  \"accFeePerShare\" */ 0x0e)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _14 := sload(/** @src 0:11073:11082  \"precision\" */ 0x05)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _15 := sload(/** @src 0:11097:11110  \"pos.liquidity\" */ _6)\n                /// @src 0:11093:11267  \"if (pos.liquidity > 0) {...\"\n                if /** @src 0:11097:11114  \"pos.liquidity > 0\" */ iszero(iszero(_15))\n                /// @src 0:11093:11267  \"if (pos.liquidity > 0) {...\"\n                {\n                    /// @src 0:11164:11226  \"(_accFeePerShare * pos.liquidity) /...\"\n                    let expr := checked_div_uint256(/** @src 0:11165:11196  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15), /** @src 0:11164:11226  \"(_accFeePerShare * pos.liquidity) /...\" */ _14)\n                    /// @src 0:11164:11256  \"(_accFeePerShare * pos.liquidity) /...\"\n                    let expr_1 := checked_sub_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11245:11256  \"pos.feeDebt\" */ add(_6, /** @src 2:193:194  \"1\" */ 0x01)))\n                    /// @src 0:11130:11144  \"pos.pendingFee\"\n                    let _16 := add(_6, 2)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    sstore(_16, /** @src 0:11130:11256  \"pos.pendingFee +=...\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11130:11256  \"pos.pendingFee +=...\" */ _16), expr_1))\n                }\n                /// @src 0:11276:11311  \"pos.liquidity -= _request.liquidity\"\n                let _17 := checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15, mload(/** @src 0:11293:11311  \"_request.liquidity\" */ _7))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_6, _17)\n                sstore(_9, /** @src 0:11321:11367  \"pos.withdrawingLiquidity -= _request.liquidity\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11321:11367  \"pos.withdrawingLiquidity -= _request.liquidity\" */ _9), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:11349:11367  \"_request.liquidity\" */ _7)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(/** @src 0:11377:11388  \"pos.feeDebt\" */ add(_6, /** @src 2:193:194  \"1\" */ 0x01), /** @src 0:11391:11437  \"(_accFeePerShare * pos.liquidity) / _precision\" */ checked_div_uint256(/** @src 0:11392:11423  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _17), /** @src 0:11391:11437  \"(_accFeePerShare * pos.liquidity) / _precision\" */ _14))\n                /// @src 0:11448:11482  \"quoteReserve -= _request.liquidity\"\n                update_storage_value_offsett_uint256_to_uint256_20718(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11448:11482  \"quoteReserve -= _request.liquidity\" */ 0x09), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:11464:11482  \"_request.liquidity\" */ _7)))\n                /// @src 0:11448:11482  \"quoteReserve -= _request.liquidity\"\n                fun_transferProtocolFee()\n                /// @src 0:11549:11562  \"_request.data\"\n                let _mpos := mload(add(var_request_mpos, 160))\n                /// @src 0:11545:12645  \"if (_request.data.length > 0) {...\"\n                if /** @src 0:11549:11573  \"_request.data.length > 0\" */ iszero(iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:11549:11569  \"_request.data.length\" */ _mpos)))\n                /// @src 0:11545:12645  \"if (_request.data.length > 0) {...\"\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _18 := mload(/** @src 0:11705:11723  \"_request.liquidity\" */ _7)\n                    /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                    let expr_mpos := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                    let _19 := add(expr_mpos, /** @src 0:10722:10736  \"_request.owner\" */ 32)\n                    /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                    mstore(_19, shl(225, 0x462cc8ff))\n                    let _20 := sub(abi_encode_uint256_bytes(add(expr_mpos, 36), _18, _mpos), expr_mpos)\n                    mstore(expr_mpos, add(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ not(31)))\n                    /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                    finalize_allocation(expr_mpos, _20)\n                    /// @src 0:11820:11834  \"_request.owner\"\n                    let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:11820:11834  \"_request.owner\" */ _5))\n                    /// @src 0:11820:11883  \"_request.owner.call(...\"\n                    let expr_component := call(gas(), _21, /** @src 2:181:189  \"unlocked\" */ _1, /** @src 0:11820:11883  \"_request.owner.call(...\" */ _19, mload(expr_mpos), /** @src 2:181:189  \"unlocked\" */ _1, _1)\n                    /// @src 0:11820:11883  \"_request.owner.call(...\"\n                    let expr_component_mpos := extract_returndata()\n                    /// @src 0:11993:12635  \"if (!success) {...\"\n                    if /** @src 0:11997:12005  \"!success\" */ iszero(expr_component)\n                    /// @src 0:11993:12635  \"if (!success) {...\"\n                    {\n                        /// @src 0:12106:12621  \"if (result.length < 68) {...\"\n                        switch /** @src 0:12110:12128  \"result.length < 68\" */ lt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:12110:12123  \"result.length\" */ expr_component_mpos), /** @src 0:12126:12128  \"68\" */ 0x44)\n                        case /** @src 0:12106:12621  \"if (result.length < 68) {...\" */ 0 {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _22 := mload(/** @src 0:12512:12526  \"_request.index\" */ var_request_mpos)\n                            /// @src 0:12552:12580  \"abi.decode(result, (string))\"\n                            let expr_mpos_1 := abi_decode_string_fromMemory(add(/** @src 0:12353:12437  \"assembly {...\" */ expr_component_mpos, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 36), /** @src 0:12552:12580  \"abi.decode(result, (string))\" */ add(add(/** @src 0:12353:12437  \"assembly {...\" */ expr_component_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:12353:12437  \"assembly {...\" */ add(expr_component_mpos, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 4))), 36))\n                            /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                            if iszero(extcodesize(_3))\n                            {\n                                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                revert(/** @src 2:181:189  \"unlocked\" */ _1, _1)\n                            }\n                            /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                            let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                            mstore(_23, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x4d4a6fbb))\n                            /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                            let _24 := call(gas(), _3, /** @src 2:181:189  \"unlocked\" */ _1, /** @src 0:12458:12602  \"monitor.updateCallbackResult(...\" */ _23, sub(abi_encode_uint256_bytes(add(_23, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 4), /** @src 0:12458:12602  \"monitor.updateCallbackResult(...\" */ _22, expr_mpos_1), _23), _23, /** @src 2:181:189  \"unlocked\" */ _1)\n                            /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                            if iszero(_24) { revert_forward() }\n                            if _24\n                            {\n                                finalize_allocation_20719(_23)\n                                abi_decode(_23, _23)\n                            }\n                        }\n                        default /// @src 0:12106:12621  \"if (result.length < 68) {...\"\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _25 := mload(/** @src 0:12206:12220  \"_request.index\" */ var_request_mpos)\n                            /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                            if iszero(extcodesize(_3))\n                            {\n                                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                revert(/** @src 2:181:189  \"unlocked\" */ _1, _1)\n                            }\n                            /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                            let _26 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                            mstore(_26, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x4d4a6fbb))\n                            /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                            let _27 := call(gas(), _3, /** @src 2:181:189  \"unlocked\" */ _1, /** @src 0:12152:12306  \"monitor.updateCallbackResult(...\" */ _26, sub(abi_encode_uint256_stringliteral(add(_26, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 4), /** @src 0:12152:12306  \"monitor.updateCallbackResult(...\" */ _25), _26), _26, /** @src 2:181:189  \"unlocked\" */ _1)\n                            /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                            if iszero(_27) { revert_forward() }\n                            if _27\n                            {\n                                finalize_allocation_20719(_26)\n                                abi_decode(_26, _26)\n                            }\n                        }\n                    }\n                }\n                /// @src 0:12696:12706  \"quoteToken\"\n                let _28 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:12696:12706  \"quoteToken\" */ 0x04))\n                /// @src 0:12720:12731  \"_request.to\"\n                let _29 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:12720:12731  \"_request.to\" */ add(var_request_mpos, 128)))\n                /// @src 0:12745:12763  \"_request.liquidity\"\n                fun_safeTransfer(_28, _29, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:12745:12763  \"_request.liquidity\" */ _7))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _30 := mload(/** @src 0:12806:12824  \"_request.liquidity\" */ _7)\n                /// @src 0:12789:12825  \"Burn(msg.sender, _request.liquidity)\"\n                let _31 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:12789:12825  \"Burn(msg.sender, _request.liquidity)\"\n                log2(_31, sub(abi_encode_uint256(_31, _30), _31), 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5, /** @src 0:10578:10588  \"msg.sender\" */ caller())\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function copy_memory_to_memory(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                if gt(i, length) { mstore(add(dst, length), 0) }\n            }\n            function abi_encode_uint256_bytes(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                let length := mload(value1)\n                mstore(add(headStart, 64), length)\n                copy_memory_to_memory(add(value1, 32), add(headStart, 96), length)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ returndatasize())\n                }\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let _1 := add(headStart, offset)\n                if iszero(slt(add(_1, 0x1f), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _2 := mload(_1)\n                let _3 := array_allocation_size_bytes(_2)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                mstore(memPtr, _2)\n                if gt(add(add(_1, _2), 32), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                copy_memory_to_memory(add(_1, 32), add(memPtr, 32), _2)\n                value0 := memPtr\n            }\n            function abi_encode_uint256_stringliteral(headStart, value0) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), 64)\n                mstore(add(headStart, 64), 36)\n                mstore(add(headStart, 96), \"Callback transaction failed sile\")\n                mstore(add(headStart, 128), \"ntly\")\n                tail := add(headStart, 160)\n            }\n            /// @ast-id 2803 @src 2:151:273  \"modifier lock() {...\"\n            function modifier_lock_20692(var_params_mpos) -> _1\n            {\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ _2), /** @src 2:193:194  \"1\" */ 0x01))\n                /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                {\n                    /// @src 2:203:211  \"Locked()\"\n                    let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 2:203:211  \"Locked()\"\n                    mstore(_3, shl(226, 0x03cb96db))\n                    revert(_3, 4)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 0:14435:14452  \"_params.baseToken\"\n                let _4 := 32\n                let _5 := add(var_params_mpos, _4)\n                /// @src 0:14411:14513  \"if (!tradeableBaseToken[_params.baseToken])...\"\n                if /** @src 0:14415:14453  \"!tradeableBaseToken[_params.baseToken]\" */ cleanup_bool(iszero(/** @src 0:14416:14453  \"tradeableBaseToken[_params.baseToken]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_bool_of_address_20742(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14435:14452  \"_params.baseToken\" */ _5))))))\n                /// @src 0:14411:14513  \"if (!tradeableBaseToken[_params.baseToken])...\"\n                {\n                    /// @src 0:14495:14512  \"_params.baseToken\"\n                    let _6 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14495:14512  \"_params.baseToken\" */ _5))\n                    /// @src 0:14474:14513  \"UntradeableBaseToken(_params.baseToken)\"\n                    let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:14474:14513  \"UntradeableBaseToken(_params.baseToken)\"\n                    mstore(_7, shl(232, 12270121))\n                    revert(_7, sub(abi_encode_tuple_address(add(_7, 4), _6), _7))\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _8 := sload(/** @src 0:14527:14539  \"openInterest\" */ 0x08)\n                /// @src 0:14542:14561  \"_params.quoteAmount\"\n                let _9 := add(var_params_mpos, 160)\n                /// @src 0:14527:14561  \"openInterest + _params.quoteAmount\"\n                let expr := checked_add_uint256(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14542:14561  \"_params.quoteAmount\" */ _9))\n                /// @src 0:14523:14623  \"if (openInterest + _params.quoteAmount > maxOpenInterest)...\"\n                if /** @src 0:14527:14579  \"openInterest + _params.quoteAmount > maxOpenInterest\" */ gt(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:14564:14579  \"maxOpenInterest\" */ 0x07))\n                /// @src 0:14523:14623  \"if (openInterest + _params.quoteAmount > maxOpenInterest)...\"\n                {\n                    /// @src 0:14600:14623  \"ExceedMaxOpenInterest()\"\n                    let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:14600:14623  \"ExceedMaxOpenInterest()\"\n                    mstore(_10, shl(225, 0x554028e7))\n                    revert(_10, 4)\n                }\n                /// @src 0:14656:14666  \"quoteToken\"\n                let _11 := 0x04\n                let _12 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:14656:14666  \"quoteToken\" */ _11))\n                /// @src 0:14676:14694  \"_params.quoteToken\"\n                let _13 := 64\n                let _14 := add(var_params_mpos, _13)\n                /// @src 0:14676:14708  \"_params.quoteToken = _quoteToken\"\n                write_to_memory_address(_14, _12)\n                /// @src 0:14722:14739  \"_params.baseToken\"\n                let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14722:14739  \"_params.baseToken\" */ _5))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _16 := sub(shl(160, 1), 1)\n                /// @src 0:14718:14782  \"if (_params.baseToken == _quoteToken) revert InvalidParameters()\"\n                if /** @src 0:14722:14754  \"_params.baseToken == _quoteToken\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:14722:14754  \"_params.baseToken == _quoteToken\" */ _15, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16), and(/** @src 0:14722:14754  \"_params.baseToken == _quoteToken\" */ _12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16))\n                /// @src 0:14718:14782  \"if (_params.baseToken == _quoteToken) revert InvalidParameters()\"\n                {\n                    /// @src 0:14763:14782  \"InvalidParameters()\"\n                    let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                    /// @src 0:14763:14782  \"InvalidParameters()\"\n                    mstore(_17, shl(228, 0x0e523909))\n                    revert(_17, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                }\n                /// @src 0:14792:14851  \"if (!_checkInputTokens(_params)) revert InsufficientInput()\"\n                if /** @src 0:14796:14823  \"!_checkInputTokens(_params)\" */ cleanup_bool(iszero(/** @src 0:14797:14823  \"_checkInputTokens(_params)\" */ fun_checkInputTokens(var_params_mpos)))\n                /// @src 0:14792:14851  \"if (!_checkInputTokens(_params)) revert InsufficientInput()\"\n                {\n                    /// @src 0:14832:14851  \"InsufficientInput()\"\n                    let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                    /// @src 0:14832:14851  \"InsufficientInput()\"\n                    mstore(_18, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                    /// @src 0:14832:14851  \"InsufficientInput()\"\n                    revert(_18, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                }\n                /// @src 0:14985:15035  \"_positionStorage...\"\n                let expr_address := cleanup_address(/** @src 0:14898:14931  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:14915:14930  \"positionStorage\" */ 0x02))))\n                /// @src 0:14985:15044  \"_positionStorage...\"\n                let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                /// @src 0:14985:15044  \"_positionStorage...\"\n                mstore(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x2fa7cffb))\n                /// @src 0:14985:15044  \"_positionStorage...\"\n                let _20 := 832\n                let _21 := staticcall(gas(), expr_address, _19, sub(abi_encode_struct_OpenTradePositionParams(add(_19, /** @src 0:14656:14666  \"quoteToken\" */ _11), /** @src 0:14985:15044  \"_positionStorage...\" */ var_params_mpos), _19), _19, _20)\n                if iszero(_21) { revert_forward() }\n                let expr_mpos := /** @src -1:-1:-1 */ _2\n                /// @src 0:14985:15044  \"_positionStorage...\"\n                if _21\n                {\n                    let _22 := _20\n                    if gt(_20, returndatasize()) { _22 := returndatasize() }\n                    finalize_allocation(_19, _22)\n                    expr_mpos := abi_decode_struct_TradePosition_fromMemory(_19, add(_19, _22))\n                }\n                /// @src 0:15054:15109  \"if (pos.owner == address(0)) revert InvalidParameters()\"\n                if /** @src 0:15058:15081  \"pos.owner == address(0)\" */ iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(cleanup_address(mload(/** @src 0:15058:15067  \"pos.owner\" */ add(expr_mpos, /** @src 0:14435:14452  \"_params.baseToken\" */ _4))), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16))\n                /// @src 0:15054:15109  \"if (pos.owner == address(0)) revert InvalidParameters()\"\n                {\n                    /// @src 0:15090:15109  \"InvalidParameters()\"\n                    let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                    /// @src 0:15090:15109  \"InvalidParameters()\"\n                    mstore(_23, /** @src 0:14763:14782  \"InvalidParameters()\" */ shl(228, 0x0e523909))\n                    /// @src 0:15090:15109  \"InvalidParameters()\"\n                    revert(_23, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                }\n                /// @src 0:15146:15160  \"pos.quoteToken\"\n                let _24 := add(expr_mpos, 128)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _25 := mload(/** @src 0:15146:15167  \"pos.quoteToken.amount\" */ add(/** @src 0:15146:15160  \"pos.quoteToken\" */ mload(_24), /** @src 0:14435:14452  \"_params.baseToken\" */ _4))\n                /// @src 0:15170:15177  \"pos.fee\"\n                let _26 := add(expr_mpos, 288)\n                /// @src 0:15146:15177  \"pos.quoteToken.amount - pos.fee\"\n                let expr_1 := checked_sub_uint256(_25, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15170:15177  \"pos.fee\" */ _26))\n                /// @src 0:15238:15298  \"if (realQuoteAmount > available) revert InsufficientOutput()\"\n                if /** @src 0:15242:15269  \"realQuoteAmount > available\" */ gt(expr_1, /** @src 0:15207:15228  \"_availableLiquidity()\" */ fun_availableLiquidity())\n                /// @src 0:15238:15298  \"if (realQuoteAmount > available) revert InsufficientOutput()\"\n                {\n                    /// @src 0:15278:15298  \"InsufficientOutput()\"\n                    let _27 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                    /// @src 0:15278:15298  \"InsufficientOutput()\"\n                    mstore(_27, /** @src 0:10085:10105  \"InsufficientOutput()\" */ shl(224, 0xbb2875c3))\n                    /// @src 0:15278:15298  \"InsufficientOutput()\"\n                    revert(_27, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                }\n                /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                let _28 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                mstore(_28, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xf76e91fd))\n                /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                let _29 := call(gas(), expr_address, /** @src -1:-1:-1 */ _2, /** @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\" */ _28, sub(abi_encode_struct_TradePosition(add(_28, /** @src 0:14656:14666  \"quoteToken\" */ _11), /** @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\" */ expr_mpos), _28), _28, /** @src 0:14435:14452  \"_params.baseToken\" */ _4)\n                /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                if iszero(_29) { revert_forward() }\n                let expr_2 := /** @src -1:-1:-1 */ _2\n                /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                if _29\n                {\n                    let _30 := /** @src 0:14435:14452  \"_params.baseToken\" */ _4\n                    /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                    if gt(/** @src 0:14435:14452  \"_params.baseToken\" */ _4, /** @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\" */ returndatasize()) { _30 := returndatasize() }\n                    finalize_allocation(_28, _30)\n                    expr_2 := abi_decode_uint256_fromMemory(_28, add(_28, _30))\n                }\n                /// @src 0:15373:15407  \"quoteInDebt += _params.quoteAmount\"\n                update_storage_value_offsett_uint256_to_uint256(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15373:15407  \"quoteInDebt += _params.quoteAmount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15388:15407  \"_params.quoteAmount\" */ _9)))\n                /// @src 0:15435:15450  \"pos.protocolFee\"\n                let _31 := add(expr_mpos, 320)\n                /// @src 0:15417:15450  \"accProtocolFee += pos.protocolFee\"\n                update_storage_value_offsett_uint256_to_uint256_20789(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15417:15450  \"accProtocolFee += pos.protocolFee\" */ 0x0d), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15435:15450  \"pos.protocolFee\" */ _31)))\n                /// @src 0:15494:15512  \"_params.baseAmount\"\n                let _32 := add(var_params_mpos, /** @src 0:15146:15160  \"pos.quoteToken\" */ 128)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _33 := mload(/** @src 0:15494:15512  \"_params.baseAmount\" */ _32)\n                /// @src 0:15460:15490  \"baseReserve[_params.baseToken]\"\n                let _34 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15472:15489  \"_params.baseToken\" */ _5)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_34, /** @src 0:15460:15512  \"baseReserve[_params.baseToken] += _params.baseAmount\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15460:15512  \"baseReserve[_params.baseToken] += _params.baseAmount\" */ _34), _33))\n                /// @src 0:15563:15587  \"_params.collateralAmount\"\n                let _35 := add(var_params_mpos, 192)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _36 := mload(/** @src 0:15563:15587  \"_params.collateralAmount\" */ _35)\n                /// @src 0:15540:15558  \"_params.collateral\"\n                let _37 := add(var_params_mpos, 96)\n                /// @src 0:15522:15559  \"collateralReserve[_params.collateral]\"\n                let _38 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15540:15558  \"_params.collateral\" */ _37)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_38, /** @src 0:15522:15587  \"collateralReserve[_params.collateral] += _params.collateralAmount\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15522:15587  \"collateralReserve[_params.collateral] += _params.collateralAmount\" */ _38), _36))\n                /// @src 0:15597:15634  \"openInterest += pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20792(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:14527:14539  \"openInterest\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15613:15634  \"pos.quoteToken.amount\" */ add(/** @src 0:15613:15627  \"pos.quoteToken\" */ mload(_24), /** @src 0:14435:14452  \"_params.baseToken\" */ _4))))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _39 := mload(/** @src 0:15652:15659  \"pos.fee\" */ _26)\n                /// @src 0:15652:15677  \"pos.fee - pos.protocolFee\"\n                fun_addFee(checked_sub_uint256(_39, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15662:15677  \"pos.protocolFee\" */ _31)))\n                /// @src 0:15782:15797  \"realQuoteAmount\"\n                fun_safeTransfer(_12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15755:15768  \"_params.owner\" */ var_params_mpos)), /** @src 0:15782:15797  \"realQuoteAmount\" */ expr_1)\n                /// @src 0:15865:15878  \"_params.owner\"\n                let _40 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15865:15878  \"_params.owner\" */ var_params_mpos))\n                /// @src 0:15917:15934  \"_params.baseToken\"\n                let _41 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15917:15934  \"_params.baseToken\" */ _5))\n                /// @src 0:15948:15966  \"_params.quoteToken\"\n                let _42 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15948:15966  \"_params.quoteToken\" */ _14))\n                /// @src 0:15980:15998  \"_params.collateral\"\n                let _43 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15980:15998  \"_params.collateral\" */ _37))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _44 := mload(/** @src 0:16012:16030  \"_params.baseAmount\" */ _32)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _45 := mload(/** @src 0:16044:16063  \"_params.quoteAmount\" */ _9)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _46 := mload(/** @src 0:16077:16101  \"_params.collateralAmount\" */ _35)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _47 := mload(/** @src 0:16115:16122  \"pos.fee\" */ _26)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _48 := mload(/** @src 0:16136:16151  \"pos.protocolFee\" */ _31)\n                /// @src 0:15823:16161  \"Open(...\"\n                let _49 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                /// @src 0:15823:16161  \"Open(...\"\n                log4(_49, sub(abi_encode_address_address_address_uint256_uint256_uint256_uint256_uint256(_49, _41, _42, _43, _44, _45, _46, _47, _48), _49), 0x6fa15176f59ef643f98e48bb7bbcdc1f7ed128c889a18626d6c28f6e7e2dece4, /** @src 0:15841:15851  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:15823:16161  \"Open(...\" */ _40, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16), /** @src 0:15823:16161  \"Open(...\" */ expr_2)\n                /// @src 2:243:244  \"_\"\n                _1 := expr_2\n                /// @src 2:254:266  \"unlocked = 1\"\n                update_storage_value_offsett_uint256_to_uint256_20701()\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            function write_to_memory_address(memPtr, value)\n            {\n                mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n            }\n            function abi_decode_struct_BaseToken_fromMemory(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_20704(memPtr)\n                value := memPtr\n                let value_1 := mload(headStart)\n                validator_revert_address(value_1)\n                mstore(memPtr, value_1)\n                mstore(add(memPtr, 32), mload(add(headStart, 32)))\n                mstore(add(memPtr, 64), mload(add(headStart, 64)))\n                mstore(add(memPtr, 96), mload(add(headStart, 96)))\n                mstore(add(memPtr, 128), mload(add(headStart, 128)))\n            }\n            function abi_decode_struct_QuoteToken_fromMemory(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n                let memPtr := mload(0x40)\n                let newFreePtr := add(memPtr, 0x40)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(0x40, newFreePtr)\n                value := memPtr\n                let value_1 := mload(headStart)\n                validator_revert_address(value_1)\n                mstore(memPtr, value_1)\n                mstore(add(memPtr, 32), mload(add(headStart, 32)))\n            }\n            function abi_decode_struct_Status_fromMemory(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0x80)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                value := memPtr\n                let value_1 := mload(headStart)\n                validator_revert_bool(value_1)\n                mstore(memPtr, value_1)\n                let value_2 := mload(add(headStart, 32))\n                validator_revert_bool(value_2)\n                mstore(add(memPtr, 32), value_2)\n                let value_3 := mload(add(headStart, 64))\n                validator_revert_bool(value_3)\n                mstore(add(memPtr, 64), value_3)\n                let value_4 := mload(add(headStart, 96))\n                validator_revert_bool(value_4)\n                mstore(add(memPtr, 96), value_4)\n            }\n            function abi_decode_struct_TradePosition_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 832) { revert(0, 0) }\n                let value := allocate_memory()\n                mstore(value, mload(headStart))\n                mstore(add(value, 32), abi_decode_address_fromMemory(add(headStart, 32)))\n                mstore(add(value, 64), abi_decode_address_fromMemory(add(headStart, 64)))\n                mstore(add(value, 96), abi_decode_struct_BaseToken_fromMemory(add(headStart, 96), dataEnd))\n                let _1 := 256\n                mstore(add(value, 0x80), abi_decode_struct_QuoteToken_fromMemory(add(headStart, _1), dataEnd))\n                let _2 := 320\n                mstore(add(value, 0xa0), abi_decode_struct_BaseToken_fromMemory(add(headStart, _2), dataEnd))\n                mstore(add(value, 0xc0), mload(add(headStart, 480)))\n                mstore(add(value, 0xe0), mload(add(headStart, 512)))\n                mstore(add(value, _1), mload(add(headStart, 544)))\n                mstore(add(value, 0x0120), mload(add(headStart, 576)))\n                mstore(add(value, _2), mload(add(headStart, 608)))\n                mstore(add(value, 0x0160), abi_decode_struct_Status_fromMemory(add(headStart, 640), dataEnd))\n                mstore(add(value, 0x0180), abi_decode_address_fromMemory(add(headStart, 768)))\n                mstore(add(value, 0x01a0), mload(add(headStart, 800)))\n                value0 := value\n            }\n            function abi_encode_struct_OpenTradePositionParams(headStart, value0) -> tail\n            {\n                tail := add(headStart, 320)\n                abi_encode_address(mload(value0), headStart)\n                let memberValue0 := mload(add(value0, 0x20))\n                abi_encode_address(memberValue0, add(headStart, 0x20))\n                let memberValue0_1 := mload(add(value0, 0x40))\n                abi_encode_address(memberValue0_1, add(headStart, 0x40))\n                let memberValue0_2 := mload(add(value0, 0x60))\n                abi_encode_address(memberValue0_2, add(headStart, 0x60))\n                mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n                mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n                mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n                mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n                let _1 := 0x0100\n                mstore(add(headStart, _1), mload(add(value0, _1)))\n                let _2 := 0x0120\n                mstore(add(headStart, _2), mload(add(value0, _2)))\n            }\n            function abi_encode_struct_BaseToken(value, pos)\n            {\n                mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                mstore(add(pos, 0x80), mload(add(value, 0x80)))\n            }\n            function abi_encode_struct_QuoteToken(value, pos)\n            {\n                mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n            }\n            function abi_encode_struct_Status(value, pos)\n            {\n                mstore(pos, iszero(iszero(mload(value))))\n                mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n                mstore(add(pos, 0x40), iszero(iszero(mload(add(value, 0x40)))))\n                mstore(add(pos, 0x60), iszero(iszero(mload(add(value, 0x60)))))\n            }\n            function abi_encode_struct_TradePosition(headStart, value0) -> tail\n            {\n                tail := add(headStart, 832)\n                mstore(headStart, mload(value0))\n                let memberValue0 := mload(add(value0, 0x20))\n                abi_encode_address(memberValue0, add(headStart, 0x20))\n                let memberValue0_1 := mload(add(value0, 0x40))\n                abi_encode_address(memberValue0_1, add(headStart, 0x40))\n                let memberValue0_2 := mload(add(value0, 0x60))\n                abi_encode_struct_BaseToken(memberValue0_2, add(headStart, 0x60))\n                let memberValue0_3 := mload(add(value0, 0x80))\n                let _1 := 0x0100\n                abi_encode_struct_QuoteToken(memberValue0_3, add(headStart, _1))\n                let memberValue0_4 := mload(add(value0, 0xa0))\n                let _2 := 0x0140\n                abi_encode_struct_BaseToken(memberValue0_4, add(headStart, _2))\n                mstore(add(headStart, 0x01e0), mload(add(value0, 0xc0)))\n                mstore(add(headStart, 0x0200), mload(add(value0, 0xe0)))\n                mstore(add(headStart, 0x0220), mload(add(value0, _1)))\n                mstore(add(headStart, 0x0240), mload(add(value0, 0x0120)))\n                mstore(add(headStart, 0x0260), mload(add(value0, _2)))\n                let memberValue0_5 := mload(add(value0, 0x0160))\n                abi_encode_struct_Status(memberValue0_5, add(headStart, 0x0280))\n                let memberValue0_6 := mload(add(value0, 0x0180))\n                abi_encode_address(memberValue0_6, add(headStart, 0x0300))\n                mstore(add(headStart, 0x0320), mload(add(value0, 0x01a0)))\n            }\n            function abi_encode_address_address_address_uint256_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n            {\n                tail := add(headStart, 256)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), and(value2, _1))\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), value5)\n                mstore(add(headStart, 192), value6)\n                mstore(add(headStart, 224), value7)\n            }\n            /// @ast-id 654 @src 0:7131:7296  \"function _addFee(uint256 _fee) internal {...\"\n            function fun_addFee(var_fee)\n            {\n                /// @src 0:7181:7195  \"accFee += _fee\"\n                let _1 := checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7181:7195  \"accFee += _fee\" */ 0x0c), var_fee)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(/** @src 0:7181:7195  \"accFee += _fee\" */ 0x0c, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                /// @src 0:7224:7240  \"_fee * precision\"\n                let expr := checked_mul_uint256(var_fee, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7231:7240  \"precision\" */ 0x05))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(/** @src 0:7205:7256  \"accFeePerShare += (_fee * precision) / quoteReserve\" */ 0x0e, checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7205:7256  \"accFeePerShare += (_fee * precision) / quoteReserve\" */ 0x0e), /** @src 0:7223:7256  \"(_fee * precision) / quoteReserve\" */ checked_div_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7244:7256  \"quoteReserve\" */ 0x09))))\n                /// @src 0:7272:7289  \"UpdateFee(accFee)\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                mstore(_2, _1)\n                /// @src 0:7272:7289  \"UpdateFee(accFee)\"\n                log1(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32, /** @src 0:7272:7289  \"UpdateFee(accFee)\" */ 0x38e229a7f3f9c329892d08eb37c4e91ccac6d12c798d394990ca4f56028ec266)\n            }\n            /// @ast-id 1347 @src 0:12838:14257  \"function _checkInputTokens(...\"\n            function fun_checkInputTokens(var_params_1211_mpos) -> var\n            {\n                /// @src 0:12979:12997  \"_params.collateral\"\n                let _1 := add(var_params_1211_mpos, 96)\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:12979:12997  \"_params.collateral\" */ _1))\n                /// @src 0:13001:13018  \"_params.baseToken\"\n                let _3 := 32\n                let _4 := add(var_params_1211_mpos, _3)\n                /// @src 0:12979:13018  \"_params.collateral != _params.baseToken\"\n                let _5 := cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13001:13018  \"_params.baseToken\" */ _4)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _6 := sub(shl(160, 1), 1)\n                let _7 := and(/** @src 0:12979:13018  \"_params.collateral != _params.baseToken\" */ _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _6)\n                /// @src 0:12975:14230  \"if (_params.collateral != _params.baseToken) {...\"\n                switch /** @src 0:12979:13018  \"_params.collateral != _params.baseToken\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _7, /** @src 0:12979:13018  \"_params.collateral != _params.baseToken\" */ _5))\n                case /** @src 0:12975:14230  \"if (_params.collateral != _params.baseToken) {...\" */ 0 {\n                    /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                    let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                    mstore(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                    /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                    let _9 := staticcall(gas(), _7, _8, sub(abi_encode_tuple_address(add(_8, 4), /** @src 0:13975:13979  \"this\" */ address()), /** @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\" */ _8), _8, /** @src 0:13001:13018  \"_params.baseToken\" */ _3)\n                    /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                    if iszero(_9) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                    if _9\n                    {\n                        let _10 := /** @src 0:13001:13018  \"_params.baseToken\" */ _3\n                        /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                        if gt(/** @src 0:13001:13018  \"_params.baseToken\" */ _3, /** @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\" */ returndatasize()) { _10 := returndatasize() }\n                        finalize_allocation(_8, _10)\n                        expr := abi_decode_uint256_fromMemory(_8, add(_8, _10))\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _11 := sload(/** @src 0:14024:14061  \"collateralReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14042:14060  \"_params.collateral\" */ _1))))\n                    /// @src 0:14008:14112  \"addedAmount -= (collateralReserve[_params.collateral] +...\"\n                    let expr_1 := checked_sub_uint256(expr, /** @src 0:14024:14111  \"collateralReserve[_params.collateral] +...\" */ checked_add_uint256(_11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:14080:14111  \"baseReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14092:14110  \"_params.collateral\" */ _1))))))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _12 := mload(/** @src 0:14144:14168  \"_params.collateralAmount\" */ add(var_params_1211_mpos, 192))\n                    /// @src 0:14126:14219  \"if (addedAmount < _params.collateralAmount + _params.baseAmount)...\"\n                    if /** @src 0:14130:14189  \"addedAmount < _params.collateralAmount + _params.baseAmount\" */ lt(expr_1, /** @src 0:14144:14189  \"_params.collateralAmount + _params.baseAmount\" */ checked_add_uint256(_12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14171:14189  \"_params.baseAmount\" */ add(var_params_1211_mpos, 128))))\n                    /// @src 0:14126:14219  \"if (addedAmount < _params.collateralAmount + _params.baseAmount)...\"\n                    {\n                        /// @src 0:14207:14219  \"return false\"\n                        var := /** @src -1:-1:-1 */ 0\n                        /// @src 0:14207:14219  \"return false\"\n                        leave\n                    }\n                }\n                default /// @src 0:12975:14230  \"if (_params.collateral != _params.baseToken) {...\"\n                {\n                    /// @src 0:13061:13097  \"IERC20(_params.collateral).balanceOf\"\n                    let expr_1227_address := cleanup_address(/** @src 0:13061:13087  \"IERC20(_params.collateral)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13068:13086  \"_params.collateral\" */ _1))))\n                    /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                    let _13 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    let _14 := shl(224, 0x70a08231)\n                    /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                    mstore(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14)\n                    /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                    let _15 := staticcall(gas(), expr_1227_address, _13, sub(abi_encode_tuple_address(add(_13, 4), /** @src 0:13123:13127  \"this\" */ address()), /** @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\" */ _13), _13, /** @src 0:13001:13018  \"_params.baseToken\" */ _3)\n                    /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                    if iszero(_15) { revert_forward() }\n                    let expr_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                    if _15\n                    {\n                        let _16 := /** @src 0:13001:13018  \"_params.baseToken\" */ _3\n                        /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                        if gt(/** @src 0:13001:13018  \"_params.baseToken\" */ _3, /** @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\" */ returndatasize()) { _16 := returndatasize() }\n                        finalize_allocation(_13, _16)\n                        expr_2 := abi_decode_uint256_fromMemory(_13, add(_13, _16))\n                    }\n                    /// @src 0:13034:13142  \"uint256 collateralAmount = IERC20(_params.collateral).balanceOf(...\"\n                    let var_collateralAmount := expr_2\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _17 := sload(/** @src 0:13177:13214  \"collateralReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13195:13213  \"_params.collateral\" */ _1))))\n                    /// @src 0:13156:13265  \"collateralAmount -= (collateralReserve[_params.collateral] +...\"\n                    var_collateralAmount := checked_sub_uint256(expr_2, /** @src 0:13177:13264  \"collateralReserve[_params.collateral] +...\" */ checked_add_uint256(_17, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13233:13264  \"baseReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13245:13263  \"_params.collateral\" */ _1))))))\n                    /// @src 0:13283:13301  \"_params.collateral\"\n                    let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13283:13301  \"_params.collateral\" */ _1))\n                    /// @src 0:13279:13492  \"if (_params.collateral == _params.quoteToken) {...\"\n                    if /** @src 0:13283:13323  \"_params.collateral == _params.quoteToken\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:13283:13323  \"_params.collateral == _params.quoteToken\" */ _18, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _6), /** @src 0:13283:13323  \"_params.collateral == _params.quoteToken\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13305:13323  \"_params.quoteToken\" */ add(var_params_1211_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64)))))\n                    /// @src 0:13279:13492  \"if (_params.collateral == _params.quoteToken) {...\"\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _19 := sload(/** @src 0:13364:13376  \"quoteReserve\" */ 0x09)\n                        /// @src 0:13364:13410  \"quoteReserve -...\"\n                        let expr_3 := checked_sub_uint256(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13399:13410  \"quoteInDebt\" */ 0x0a))\n                        /// @src 0:13364:13439  \"quoteReserve -...\"\n                        let expr_4 := checked_sub_uint256(expr_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13433:13439  \"accFee\" */ 0x0c))\n                        /// @src 0:13343:13477  \"collateralAmount -= (quoteReserve -...\"\n                        var_collateralAmount := checked_sub_uint256(var_collateralAmount, /** @src 0:13364:13476  \"quoteReserve -...\" */ checked_sub_uint256(expr_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13462:13476  \"accProtocolFee\" */ 0x0d)))\n                    }\n                    /// @src 0:13505:13566  \"if (collateralAmount < _params.collateralAmount) return false\"\n                    if /** @src 0:13509:13552  \"collateralAmount < _params.collateralAmount\" */ lt(var_collateralAmount, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:13528:13552  \"_params.collateralAmount\" */ add(var_params_1211_mpos, 192)))\n                    /// @src 0:13505:13566  \"if (collateralAmount < _params.collateralAmount) return false\"\n                    {\n                        /// @src 0:13554:13566  \"return false\"\n                        var := /** @src -1:-1:-1 */ 0\n                        /// @src 0:13554:13566  \"return false\"\n                        leave\n                    }\n                    /// @src 0:13602:13637  \"IERC20(_params.baseToken).balanceOf\"\n                    let expr_1278_address := cleanup_address(/** @src 0:13602:13627  \"IERC20(_params.baseToken)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13609:13626  \"_params.baseToken\" */ _4))))\n                    /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                    let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                    mstore(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14)\n                    /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                    let _21 := staticcall(gas(), expr_1278_address, _20, sub(abi_encode_tuple_address(add(_20, /** @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\" */ 4), /** @src 0:13123:13127  \"this\" */ address()), /** @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\" */ _20), _20, /** @src 0:13001:13018  \"_params.baseToken\" */ _3)\n                    /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                    if iszero(_21) { revert_forward() }\n                    let expr_5 := /** @src -1:-1:-1 */ 0\n                    /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                    if _21\n                    {\n                        let _22 := /** @src 0:13001:13018  \"_params.baseToken\" */ _3\n                        /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                        if gt(/** @src 0:13001:13018  \"_params.baseToken\" */ _3, /** @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\" */ returndatasize()) { _22 := returndatasize() }\n                        finalize_allocation(_20, _22)\n                        expr_5 := abi_decode_uint256_fromMemory(_20, add(_20, _22))\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _23 := sload(/** @src 0:13711:13747  \"collateralReserve[_params.baseToken]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13729:13746  \"_params.baseToken\" */ _4))))\n                    /// @src 0:13696:13797  \"baseAmount -= (collateralReserve[_params.baseToken] +...\"\n                    let expr_6 := checked_sub_uint256(expr_5, /** @src 0:13711:13796  \"collateralReserve[_params.baseToken] +...\" */ checked_add_uint256(_23, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13766:13796  \"baseReserve[_params.baseToken]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13778:13795  \"_params.baseToken\" */ _4))))))\n                    /// @src 0:13811:13860  \"if (baseAmount < _params.baseAmount) return false\"\n                    if /** @src 0:13815:13846  \"baseAmount < _params.baseAmount\" */ lt(expr_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:13828:13846  \"_params.baseAmount\" */ add(var_params_1211_mpos, 128)))\n                    /// @src 0:13811:13860  \"if (baseAmount < _params.baseAmount) return false\"\n                    {\n                        /// @src 0:13848:13860  \"return false\"\n                        var := /** @src -1:-1:-1 */ 0\n                        /// @src 0:13848:13860  \"return false\"\n                        leave\n                    }\n                }\n                /// @src 0:14239:14250  \"return true\"\n                var := /** @src 0:14246:14250  \"true\" */ 0x01\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bool(value)\n                value0 := value\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                validator_revert_address(value)\n                returnValue := value\n            }\n            function abi_encode_bytes32_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n            }\n            function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function abi_decode_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                value0 := mload(headStart)\n                let value := mload(add(headStart, 32))\n                validator_revert_address(value)\n                value1 := value\n            }\n            function abi_encode_address_address_address_uint256(headStart, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, 0)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), and(value2, _1))\n                mstore(add(headStart, 96), value3)\n            }\n            function abi_encode_bytes32_uint256_uint256_uint256(headStart, value0, value1, value2, value3) -> tail\n            {\n                tail := add(headStart, 128)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @src 0:18135:21832  \"function close(...\"\n            function fun_close_inner(var_params_offset)\n            {\n                /// @src 0:18290:18307  \"IFactory(factory)\"\n                let expr_1742_address := cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:18299:18306  \"factory\" */ 0x01)))\n                /// @src 0:18418:18447  \"_positionStorage.updateStatus\"\n                let expr_1754_address := cleanup_address(/** @src 0:18353:18386  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:18370:18385  \"positionStorage\" */ 0x02))))\n                /// @src 0:18461:18480  \"_params.positionKey\"\n                let expr := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(/** @src 0:18461:18480  \"_params.positionKey\" */ var_params_offset)\n                /// @src 0:18494:18508  \"_params.closer\"\n                let expr_1 := read_from_calldatat_address(add(var_params_offset, 96))\n                /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x2b002d9d))\n                /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                let _2 := sub(abi_encode_bytes32_address(add(_1, 4), expr, expr_1), _1)\n                let _3 := call(gas(), expr_1754_address, /** @src 0:18461:18480  \"_params.positionKey\" */ 0, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ _1, _2, _1, 32)\n                if iszero(_3) { revert_forward() }\n                let expr_2 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(32, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_1, _4)\n                    expr_2 := abi_decode_bool_fromMemory(_1, add(_1, _4))\n                }\n                /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                mstore(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                let _6 := 832\n                let _7 := staticcall(gas(), expr_1754_address, _5, sub(abi_encode_uint256(add(_5, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:18572:18640  \"_positionStorage.position(...\" */ expr), _5), _5, _6)\n                if iszero(_7) { revert_forward() }\n                let expr_1770_mpos := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                if _7\n                {\n                    let _8 := _6\n                    if gt(_6, returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_5, _8)\n                    expr_1770_mpos := abi_decode_struct_TradePosition_fromMemory(_5, add(_5, _8))\n                }\n                /// @src 0:18695:18708  \"_params.data0\"\n                let expr_1777_offset, expr_length := access_calldata_tail_bytes_calldata(var_params_offset, add(var_params_offset, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                /// @src 0:18670:18709  \"_liquidateBaseToken(pos, _params.data0)\"\n                let expr_3 := fun_liquidateBaseToken(expr_1770_mpos, expr_1777_offset, expr_length)\n                /// @src 0:18719:18741  \"uint256 liquidationFee\"\n                let var_liquidationFee := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                /// @src 0:18751:18794  \"uint256 quoteAmount = pos.quoteToken.amount\"\n                let var_quoteAmount := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:18773:18794  \"pos.quoteToken.amount\" */ add(/** @src 0:18773:18787  \"pos.quoteToken\" */ mload(add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                /// @src 0:18804:19022  \"if (needLiquidate) {...\"\n                if expr_2\n                {\n                    /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                    let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                    mstore(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x5fb3b1b5))\n                    /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                    let _10 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:18866:18893  \"_factory.liquidationFeeRate\" */ expr_1742_address, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)), /** @src 0:18866:18895  \"_factory.liquidationFeeRate()\" */ _9, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4, /** @src 0:18866:18895  \"_factory.liquidationFeeRate()\" */ _9, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)\n                    /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                    if iszero(_10) { revert_forward() }\n                    let expr_4 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                    /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                    if _10\n                    {\n                        let _11 := /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32\n                        /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                        if gt(/** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32, /** @src 0:18866:18895  \"_factory.liquidationFeeRate()\" */ returndatasize()) { _11 := returndatasize() }\n                        finalize_allocation(_9, _11)\n                        expr_4 := abi_decode_uint256_fromMemory(_9, add(_9, _11))\n                    }\n                    /// @src 0:18909:18968  \"liquidationFee = (quoteAmount * liquidationFeeRate) / 10000\"\n                    var_liquidationFee := /** @src 0:18926:18968  \"(quoteAmount * liquidationFeeRate) / 10000\" */ checked_div_uint256_20819(/** @src 0:18927:18959  \"quoteAmount * liquidationFeeRate\" */ checked_mul_uint256(var_quoteAmount, expr_4))\n                    /// @src 0:18982:19011  \"quoteAmount += liquidationFee\"\n                    var_quoteAmount := checked_add_uint256(var_quoteAmount, var_liquidationFee)\n                }\n                /// @src 0:19031:19043  \"uint256 loss\"\n                let var_loss := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                /// @src 0:19053:19086  \"uint256 remainingCollateralAmount\"\n                let var_remainingCollateralAmount := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                /// @src 0:19142:19172  \"uint256 neededCollateralAmount\"\n                let var_neededCollateralAmount := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                /// @src 0:19186:20290  \"if (baseValue < quoteAmount) {...\"\n                if /** @src 0:19190:19213  \"baseValue < quoteAmount\" */ lt(expr_3, var_quoteAmount)\n                /// @src 0:19186:20290  \"if (baseValue < quoteAmount) {...\"\n                {\n                    /// @src 0:19233:19263  \"loss = quoteAmount - baseValue\"\n                    var_loss := /** @src 0:19240:19263  \"quoteAmount - baseValue\" */ checked_sub_uint256(var_quoteAmount, expr_3)\n                    /// @src 0:19281:19310  \"neededCollateralAmount = loss\"\n                    var_neededCollateralAmount := var_loss\n                    /// @src 0:19332:19349  \"pos.collateral.id\"\n                    let _12 := read_from_memoryt_address(/** @src 0:19332:19346  \"pos.collateral\" */ mload(add(expr_1770_mpos, 160)))\n                    /// @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\"\n                    let _13 := cleanup_address(/** @src 0:19353:19370  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:19353:19367  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128))))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _14 := sub(shl(160, 1), 1)\n                    /// @src 0:19328:20019  \"if (pos.collateral.id != pos.quoteToken.id) {...\"\n                    if /** @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\" */ _12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14), /** @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\" */ _13))\n                    /// @src 0:19328:20019  \"if (pos.collateral.id != pos.quoteToken.id) {...\"\n                    {\n                        /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                        let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                        mstore(_15, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(229, 0x03e10eaf))\n                        /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                        let _16 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:19465:19487  \"_factory.dexAggregator\" */ expr_1742_address, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14), /** @src 0:19465:19489  \"_factory.dexAggregator()\" */ _15, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4, /** @src 0:19465:19489  \"_factory.dexAggregator()\" */ _15, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)\n                        /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                        if iszero(_16) { revert_forward() }\n                        let expr_5 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                        if _16\n                        {\n                            let _17 := /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32\n                            /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                            if gt(/** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32, /** @src 0:19465:19489  \"_factory.dexAggregator()\" */ returndatasize()) { _17 := returndatasize() }\n                            finalize_allocation(_15, _17)\n                            expr_5 := abi_decode_tuple_address_fromMemory(_15, add(_15, _17))\n                        }\n                        /// @src 0:19649:19666  \"pos.collateral.id\"\n                        let _18 := read_from_memoryt_address(/** @src 0:19649:19663  \"pos.collateral\" */ mload(/** @src 0:19332:19346  \"pos.collateral\" */ add(expr_1770_mpos, 160)))\n                        /// @src 0:19692:19709  \"pos.quoteToken.id\"\n                        let _19 := read_from_memoryt_address(/** @src 0:19692:19706  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)))\n                        /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                        let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                        mstore(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xec278309))\n                        /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                        let _21 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:19425:19511  \"IDEXAggregator(...\" */ expr_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14), /** @src 0:19562:19761  \"dexAggregator.getAmountIn(...\" */ _20, sub(abi_encode_address_address_address_uint256(add(_20, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:19562:19761  \"dexAggregator.getAmountIn(...\" */ _18, _19, var_loss), _20), _20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64)\n                        /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                        if iszero(_21) { revert_forward() }\n                        let expr_1864_component := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                        if _21\n                        {\n                            let _22 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64\n                            /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64, /** @src 0:19562:19761  \"dexAggregator.getAmountIn(...\" */ returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_20, _22)\n                            let expr_component, expr_component_1 := abi_decode_uint256t_address_fromMemory(_20, add(_20, _22))\n                            expr_1864_component := expr_component\n                        }\n                        /// @src 0:19533:19761  \"(neededCollateralAmount, ) = dexAggregator.getAmountIn(...\"\n                        var_neededCollateralAmount := expr_1864_component\n                        /// @src 0:19965:19978  \"_params.data1\"\n                        let expr_offset, expr_1873_length := access_calldata_tail_bytes_calldata(var_params_offset, add(var_params_offset, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64))\n                        /// @src 0:19783:20000  \"remainingCollateralAmount += _liquidateCollateral(...\"\n                        var_remainingCollateralAmount := /** @src 0:19812:20000  \"_liquidateCollateral(...\" */ fun_liquidateCollateral(expr_1770_mpos, expr_1864_component, var_loss, expr_offset, expr_1873_length)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _23 := mload(/** @src 0:20066:20087  \"pos.collateral.amount\" */ add(/** @src 0:20066:20080  \"pos.collateral\" */ mload(/** @src 0:19332:19346  \"pos.collateral\" */ add(expr_1770_mpos, 160)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                    /// @src 0:20037:20276  \"if (neededCollateralAmount > pos.collateral.amount) {...\"\n                    if /** @src 0:20041:20087  \"neededCollateralAmount > pos.collateral.amount\" */ gt(var_neededCollateralAmount, _23)\n                    /// @src 0:20037:20276  \"if (neededCollateralAmount > pos.collateral.amount) {...\"\n                    {\n                        /// @src 0:20118:20257  \"InsufficientCollateral(...\"\n                        let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:20118:20257  \"InsufficientCollateral(...\"\n                        mstore(_24, shl(226, 0x2c1f8ef1))\n                        revert(_24, sub(abi_encode_uint256_uint256(add(_24, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:20118:20257  \"InsufficientCollateral(...\" */ _23, var_neededCollateralAmount), _24))\n                    }\n                }\n                /// @src 0:20304:20397  \"remainingCollateralAmount += (pos.collateral.amount -...\"\n                let expr_6 := checked_add_uint256(var_remainingCollateralAmount, /** @src 0:20334:20396  \"pos.collateral.amount -...\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20334:20355  \"pos.collateral.amount\" */ add(/** @src 0:20334:20348  \"pos.collateral\" */ mload(add(expr_1770_mpos, 160)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)), /** @src 0:20334:20396  \"pos.collateral.amount -...\" */ var_neededCollateralAmount))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _25 := mload(/** @src 0:20466:20481  \"pos.positionKey\" */ expr_1770_mpos)\n                /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                if iszero(extcodesize(expr_1754_address))\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src 0:18461:18480  \"_params.positionKey\" */ 0, 0)\n                }\n                /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                let _26 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                mstore(_26, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x8b029d61))\n                /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                let _27 := call(gas(), expr_1754_address, /** @src 0:18461:18480  \"_params.positionKey\" */ 0, /** @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\" */ _26, sub(abi_encode_bytes32_uint256_uint256_uint256(add(_26, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\" */ _25, expr_3, var_loss, expr_6), _26), _26, /** @src 0:18461:18480  \"_params.positionKey\" */ 0)\n                /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                if iszero(_27) { revert_forward() }\n                if _27\n                {\n                    finalize_allocation_20719(_26)\n                    abi_decode(_26, _26)\n                }\n                /// @src 0:20582:20618  \"quoteInDebt -= pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20582:20618  \"quoteInDebt -= pos.quoteToken.amount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20597:20618  \"pos.quoteToken.amount\" */ add(/** @src 0:20597:20611  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))))\n                /// @src 0:20628:20673  \"withdrawingLiquidity += pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20628:20673  \"withdrawingLiquidity += pos.quoteToken.amount\" */ 0x0b), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20652:20673  \"pos.quoteToken.amount\" */ add(/** @src 0:20652:20666  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))))\n                /// @src 0:20716:20729  \"pos.baseToken\"\n                let _782_mpos := mload(add(expr_1770_mpos, /** @src 0:18494:18508  \"_params.closer\" */ 96))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _28 := mload(/** @src 0:20716:20736  \"pos.baseToken.amount\" */ add(_782_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                /// @src 0:20683:20712  \"baseReserve[pos.baseToken.id]\"\n                let _29 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:20695:20711  \"pos.baseToken.id\" */ _782_mpos)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_29, /** @src 0:20683:20736  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20683:20736  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ _29), _28))\n                /// @src 0:20786:20800  \"pos.collateral\"\n                let _795_mpos := mload(/** @src 0:20334:20348  \"pos.collateral\" */ add(expr_1770_mpos, 160))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _30 := mload(/** @src 0:20786:20807  \"pos.collateral.amount\" */ add(_795_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                /// @src 0:20746:20782  \"collateralReserve[pos.collateral.id]\"\n                let _31 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:20764:20781  \"pos.collateral.id\" */ _795_mpos)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_31, /** @src 0:20746:20807  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20746:20807  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ _31), _30))\n                /// @src 0:20817:20854  \"openInterest -= pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20792(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20817:20854  \"openInterest -= pos.quoteToken.amount\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20833:20854  \"pos.quoteToken.amount\" */ add(/** @src 0:20833:20847  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))))\n                /// @src 0:20865:21124  \"if (liquidationFee > 0) {...\"\n                if /** @src 0:20869:20887  \"liquidationFee > 0\" */ iszero(iszero(var_liquidationFee))\n                /// @src 0:20865:21124  \"if (liquidationFee > 0) {...\"\n                {\n                    /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                    let _32 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                    mstore(_32, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xbd2bae9d))\n                    /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                    let _33 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:20930:20955  \"_factory.liquidationFeeTo\" */ expr_1742_address, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)), /** @src 0:20930:20957  \"_factory.liquidationFeeTo()\" */ _32, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4, /** @src 0:20930:20957  \"_factory.liquidationFeeTo()\" */ _32, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)\n                    /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                    if iszero(_33) { revert_forward() }\n                    let expr_7 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                    /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                    if _33\n                    {\n                        let _34 := /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32\n                        /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                        if gt(/** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32, /** @src 0:20930:20957  \"_factory.liquidationFeeTo()\" */ returndatasize()) { _34 := returndatasize() }\n                        finalize_allocation(_32, _34)\n                        expr_7 := abi_decode_tuple_address_fromMemory(_32, add(_32, _34))\n                    }\n                    /// @src 0:21085:21099  \"liquidationFee\"\n                    fun_safeTransfer(/** @src 0:21016:21033  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:21016:21030  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128))), /** @src 0:21085:21099  \"liquidationFee\" */ expr_7, var_liquidationFee)\n                }\n                /// @src 0:21133:21418  \"if (loss == 0) {...\"\n                if /** @src 0:21137:21146  \"loss == 0\" */ iszero(var_loss)\n                /// @src 0:21133:21418  \"if (loss == 0) {...\"\n                {\n                    /// @src 0:21179:21202  \"baseValue - quoteAmount\"\n                    let expr_8 := checked_sub_uint256(expr_3, var_quoteAmount)\n                    /// @src 0:21216:21408  \"if (profit > 0) {...\"\n                    if /** @src 0:21220:21230  \"profit > 0\" */ iszero(iszero(expr_8))\n                    /// @src 0:21216:21408  \"if (profit > 0) {...\"\n                    {\n                        /// @src 0:21299:21316  \"pos.quoteToken.id\"\n                        let _35 := read_from_memoryt_address(/** @src 0:21299:21313  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)))\n                        /// @src 0:21369:21375  \"profit\"\n                        fun_safeTransfer(_35, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:21338:21347  \"pos.owner\" */ add(expr_1770_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))), /** @src 0:21369:21375  \"profit\" */ expr_8)\n                    }\n                }\n                /// @src 0:21427:21633  \"if (remainingCollateralAmount > 0) {...\"\n                if /** @src 0:21431:21460  \"remainingCollateralAmount > 0\" */ iszero(iszero(expr_6))\n                /// @src 0:21427:21633  \"if (remainingCollateralAmount > 0) {...\"\n                {\n                    /// @src 0:21521:21538  \"pos.collateral.id\"\n                    let _36 := read_from_memoryt_address(/** @src 0:21521:21535  \"pos.collateral\" */ mload(/** @src 0:20334:20348  \"pos.collateral\" */ add(expr_1770_mpos, 160)))\n                    /// @src 0:21583:21608  \"remainingCollateralAmount\"\n                    fun_safeTransfer(_36, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:21556:21565  \"pos.owner\" */ add(expr_1770_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))), /** @src 0:21583:21608  \"remainingCollateralAmount\" */ expr_6)\n                }\n                /// @src 0:21691:21700  \"pos.owner\"\n                let _37 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:21691:21700  \"pos.owner\" */ add(expr_1770_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _38 := mload(/** @src 0:21714:21729  \"pos.positionKey\" */ expr_1770_mpos)\n                /// @src 0:21743:21759  \"pos.baseToken.id\"\n                let _39 := read_from_memoryt_address(/** @src 0:21743:21756  \"pos.baseToken\" */ mload(/** @src 0:20716:20729  \"pos.baseToken\" */ add(expr_1770_mpos, /** @src 0:18494:18508  \"_params.closer\" */ 96)))\n                /// @src 0:21773:21787  \"_params.closer\"\n                let expr_9 := read_from_calldatat_address(/** @src 0:18494:18508  \"_params.closer\" */ add(var_params_offset, 96))\n                /// @src 0:21648:21825  \"Close(...\"\n                let _40 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:21648:21825  \"Close(...\"\n                log4(_40, sub(abi_encode_address_address_uint256(_40, _39, expr_9, var_liquidationFee), _40), 0xad34241f9e3b3d38652a7493d4e07da1f3e88afa819a546544b20de727f2ffd8, /** @src 0:21667:21677  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:21648:21825  \"Close(...\" */ _37, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)), /** @src 0:21648:21825  \"Close(...\" */ _38)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_encode_address_address_rational_by_bytes_calldata(headStart, value0, value1, value3, value4) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n            }\n            /// @ast-id 1613 @src 0:16174:16948  \"function _liquidateBaseToken(...\"\n            function fun_liquidateBaseToken(var_pos_mpos, var_data_1540_offset, var_data_1540_length) -> var\n            {\n                /// @src 0:16359:16374  \"_pos.quoteToken\"\n                let _1 := add(var_pos_mpos, 128)\n                /// @src 0:16352:16388  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                let expr_1552_address := cleanup_address(/** @src 0:16352:16378  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:16359:16377  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:16359:16374  \"_pos.quoteToken\" */ mload(_1))))\n                /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                let _3 := shl(224, 0x70a08231)\n                /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _3)\n                /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _4 := 32\n                let _5 := staticcall(gas(), expr_1552_address, _2, sub(abi_encode_tuple_address(add(_2, 4), /** @src 0:16410:16414  \"this\" */ address()), /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _2), _2, _4)\n                if iszero(_5) { revert_forward() }\n                let expr := /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0\n                /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    expr := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                }\n                /// @src 0:16476:16490  \"_pos.baseToken\"\n                let _7 := add(var_pos_mpos, 96)\n                let _880_mpos := mload(_7)\n                /// @src 0:16476:16493  \"_pos.baseToken.id\"\n                let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:16476:16493  \"_pos.baseToken.id\" */ _880_mpos))\n                /// @src 0:16531:16552  \"_pos.baseToken.amount\"\n                fun_safeTransfer(_8, /** @src 0:16507:16517  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:16531:16552  \"_pos.baseToken.amount\" */ add(_880_mpos, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4)))\n                /// @src 0:16626:16643  \"_pos.baseToken.id\"\n                let _9 := read_from_memoryt_address(/** @src 0:16626:16640  \"_pos.baseToken\" */ mload(_7))\n                /// @src 0:16657:16675  \"_pos.quoteToken.id\"\n                let _10 := read_from_memoryt_address(/** @src 0:16657:16672  \"_pos.quoteToken\" */ mload(_1))\n                /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                if iszero(extcodesize(/** @src 0:16507:16517  \"msg.sender\" */ caller()))\n                /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0, 0)\n                }\n                /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                let _11 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                mstore(_11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x39d87e77))\n                /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                let _12 := call(gas(), /** @src 0:16507:16517  \"msg.sender\" */ caller(), /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0, /** @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\" */ _11, sub(abi_encode_address_address_rational_by_bytes_calldata(add(_11, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ 4), /** @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\" */ _9, _10, var_data_1540_offset, var_data_1540_length), _11), _11, /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0)\n                /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                if iszero(_12) { revert_forward() }\n                if _12\n                {\n                    finalize_allocation_20719(_11)\n                    abi_decode(_11, _11)\n                }\n                /// @src 0:16753:16789  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                let expr_address := cleanup_address(/** @src 0:16753:16779  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:16760:16778  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:16760:16775  \"_pos.quoteToken\" */ mload(_1))))\n                /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _13 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                mstore(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _3)\n                /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _14 := staticcall(gas(), expr_address, _13, sub(abi_encode_tuple_address(add(_13, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ 4), /** @src 0:16410:16414  \"this\" */ address()), /** @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _13), _13, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4)\n                /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if iszero(_14) { revert_forward() }\n                let expr_1 := /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0\n                /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if _14\n                {\n                    let _15 := /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4\n                    /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                    if gt(/** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4, /** @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ returndatasize()) { _15 := returndatasize() }\n                    finalize_allocation(_13, _15)\n                    expr_1 := abi_decode_uint256_fromMemory(_13, add(_13, _15))\n                }\n                /// @src 0:16836:16896  \"if (balanceAfter < balanceBefore) revert InsufficientInput()\"\n                if /** @src 0:16840:16868  \"balanceAfter < balanceBefore\" */ lt(expr_1, expr)\n                /// @src 0:16836:16896  \"if (balanceAfter < balanceBefore) revert InsufficientInput()\"\n                {\n                    /// @src 0:16877:16896  \"InsufficientInput()\"\n                    let _16 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:16877:16896  \"InsufficientInput()\"\n                    mstore(_16, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                    /// @src 0:16877:16896  \"InsufficientInput()\"\n                    revert(_16, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ 4)\n                }\n                /// @src 0:16906:16941  \"return balanceAfter - balanceBefore\"\n                var := /** @src 0:16913:16941  \"balanceAfter - balanceBefore\" */ checked_sub_uint256(expr_1, expr)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_encode_address_address_uint256_bytes_calldata(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n            }\n            /// @ast-id 1726 @src 0:16954:18129  \"function _liquidateCollateral(...\"\n            function fun_liquidateCollateral(var__pos_mpos, var_neededCollateralAmount, var_loss, var_data_offset, var_data_length) -> var\n            {\n                /// @src 0:17207:17222  \"_pos.collateral\"\n                let _1 := add(var__pos_mpos, 160)\n                /// @src 0:17200:17236  \"IERC20(_pos.collateral.id).balanceOf\"\n                let expr_1634_address := cleanup_address(/** @src 0:17200:17226  \"IERC20(_pos.collateral.id)\" */ cleanup_address(/** @src 0:17207:17225  \"_pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:17207:17222  \"_pos.collateral\" */ mload(_1))))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _2 := 64\n                /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                let _4 := shl(224, 0x70a08231)\n                /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                let _5 := 32\n                let _6 := 4\n                let _7 := staticcall(gas(), expr_1634_address, _3, sub(abi_encode_tuple_address(add(_3, _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _3), _3, _5)\n                if iszero(_7) { revert_forward() }\n                let expr := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                if _7\n                {\n                    let _8 := _5\n                    if gt(_5, returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_3, _8)\n                    expr := abi_decode_uint256_fromMemory(_3, add(_3, _8))\n                }\n                /// @src 0:17319:17334  \"_pos.quoteToken\"\n                let _9 := add(var__pos_mpos, 128)\n                /// @src 0:17312:17348  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                let expr_1648_address := cleanup_address(/** @src 0:17312:17338  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:17319:17337  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:17319:17334  \"_pos.quoteToken\" */ mload(_9))))\n                /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                mstore(_10, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _11 := staticcall(gas(), expr_1648_address, _10, sub(abi_encode_tuple_address(add(_10, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _10), _10, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5)\n                /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if iszero(_11) { revert_forward() }\n                let expr_1 := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if _11\n                {\n                    let _12 := /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5\n                    /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                    if gt(/** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5, /** @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ returndatasize()) { _12 := returndatasize() }\n                    finalize_allocation(_10, _12)\n                    expr_1 := abi_decode_uint256_fromMemory(_10, add(_10, _12))\n                }\n                /// @src 0:17436:17454  \"_pos.collateral.id\"\n                let _13 := read_from_memoryt_address(/** @src 0:17436:17451  \"_pos.collateral\" */ mload(_1))\n                /// @src 0:17492:17515  \"_neededCollateralAmount\"\n                fun_safeTransfer(_13, /** @src 0:17468:17478  \"msg.sender\" */ caller(), /** @src 0:17492:17515  \"_neededCollateralAmount\" */ var_neededCollateralAmount)\n                /// @src 0:17589:17607  \"_pos.collateral.id\"\n                let _14 := read_from_memoryt_address(/** @src 0:17589:17604  \"_pos.collateral\" */ mload(_1))\n                /// @src 0:17621:17639  \"_pos.quoteToken.id\"\n                let _15 := read_from_memoryt_address(/** @src 0:17621:17636  \"_pos.quoteToken\" */ mload(_9))\n                /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                if iszero(extcodesize(/** @src 0:17468:17478  \"msg.sender\" */ caller()))\n                /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src 0:17207:17225  \"_pos.collateral.id\" */ 0, 0)\n                }\n                /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                let _16 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                mstore(_16, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x39d87e77))\n                /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                let _17 := call(gas(), /** @src 0:17468:17478  \"msg.sender\" */ caller(), /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0, /** @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\" */ _16, sub(abi_encode_address_address_uint256_bytes_calldata(add(_16, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\" */ _14, _15, var_loss, var_data_offset, var_data_length), _16), _16, /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0)\n                /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                if iszero(_17) { revert_forward() }\n                if _17\n                {\n                    finalize_allocation_20719(_16)\n                    abi_decode(_16, _16)\n                }\n                /// @src 0:17724:17760  \"IERC20(_pos.collateral.id).balanceOf\"\n                let expr_1688_address := cleanup_address(/** @src 0:17724:17750  \"IERC20(_pos.collateral.id)\" */ cleanup_address(/** @src 0:17731:17749  \"_pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:17731:17746  \"_pos.collateral\" */ mload(_1))))\n                /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                mstore(_18, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                let _19 := staticcall(gas(), expr_1688_address, _18, sub(abi_encode_tuple_address(add(_18, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _18), _18, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5)\n                /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                if iszero(_19) { revert_forward() }\n                let expr_2 := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                if _19\n                {\n                    let _20 := /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5\n                    /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                    if gt(/** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5, /** @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\" */ returndatasize()) { _20 := returndatasize() }\n                    finalize_allocation(_18, _20)\n                    expr_2 := abi_decode_uint256_fromMemory(_18, add(_18, _20))\n                }\n                /// @src 0:17835:17871  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                let expr_1702_address := cleanup_address(/** @src 0:17835:17861  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:17842:17860  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:17842:17857  \"_pos.quoteToken\" */ mload(_9))))\n                /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                mstore(_21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                let _22 := staticcall(gas(), expr_1702_address, _21, sub(abi_encode_tuple_address(add(_21, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _21), _21, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5)\n                /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if iszero(_22) { revert_forward() }\n                let expr_3 := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                if _22\n                {\n                    let _23 := /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5\n                    /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                    if gt(/** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5, /** @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ returndatasize()) { _23 := returndatasize() }\n                    finalize_allocation(_21, _23)\n                    expr_3 := abi_decode_uint256_fromMemory(_21, add(_21, _23))\n                }\n                /// @src 0:17918:18008  \"if (quoteBalanceAfter < quoteBalanceBefore + _loss)...\"\n                if /** @src 0:17922:17968  \"quoteBalanceAfter < quoteBalanceBefore + _loss\" */ lt(expr_3, /** @src 0:17942:17968  \"quoteBalanceBefore + _loss\" */ checked_add_uint256(expr_1, var_loss))\n                /// @src 0:17918:18008  \"if (quoteBalanceAfter < quoteBalanceBefore + _loss)...\"\n                {\n                    /// @src 0:17989:18008  \"InsufficientInput()\"\n                    let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                    /// @src 0:17989:18008  \"InsufficientInput()\"\n                    mstore(_24, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                    /// @src 0:17989:18008  \"InsufficientInput()\"\n                    revert(_24, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6)\n                }\n                /// @src 0:18018:18087  \"return colBalanceAfter - (colBalanceBefore - _neededCollateralAmount)\"\n                var := /** @src 0:18025:18087  \"colBalanceAfter - (colBalanceBefore - _neededCollateralAmount)\" */ checked_sub_uint256(expr_2, /** @src 0:18044:18086  \"colBalanceBefore - _neededCollateralAmount\" */ checked_sub_uint256(expr, var_neededCollateralAmount))\n            }\n            /// @src 0:21838:23123  \"function rollback(...\"\n            function fun_rollback_inner(var_params_offset)\n            {\n                /// @src 0:22102:22127  \"_positionStorage.position\"\n                let expr_2057_address := cleanup_address(/** @src 0:22015:22048  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:22032:22047  \"positionStorage\" */ 0x02))))\n                /// @src 0:22141:22160  \"_params.positionKey\"\n                let expr := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(/** @src 0:22141:22160  \"_params.positionKey\" */ var_params_offset)\n                /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                let _2 := 832\n                let _3 := staticcall(gas(), expr_2057_address, _1, sub(abi_encode_uint256(add(_1, 4), expr), _1), _1, _2)\n                if iszero(_3) { revert_forward() }\n                let expr_2060_mpos := /** @src 0:22141:22160  \"_params.positionKey\" */ 0\n                /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                if _3\n                {\n                    let _4 := _2\n                    if gt(_2, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_1, _4)\n                    expr_2060_mpos := abi_decode_struct_TradePosition_fromMemory(_1, add(_1, _4))\n                }\n                /// @src 0:22202:22223  \"_unrealizeLiquidity()\"\n                let expr_1 := fun_unrealizeLiquidity()\n                /// @src 0:22251:22265  \"pos.quoteToken\"\n                let _5 := add(expr_2060_mpos, 128)\n                /// @src 0:22251:22272  \"pos.quoteToken.amount\"\n                let _6 := 32\n                /// @src 0:22233:22300  \"if (quoteAmount < pos.quoteToken.amount) revert InsufficientInput()\"\n                if /** @src 0:22237:22272  \"quoteAmount < pos.quoteToken.amount\" */ lt(expr_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22251:22272  \"pos.quoteToken.amount\" */ add(/** @src 0:22251:22265  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)))\n                /// @src 0:22233:22300  \"if (quoteAmount < pos.quoteToken.amount) revert InsufficientInput()\"\n                {\n                    /// @src 0:22281:22300  \"InsufficientInput()\"\n                    let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:22281:22300  \"InsufficientInput()\"\n                    mstore(_7, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                    /// @src 0:22281:22300  \"InsufficientInput()\"\n                    revert(_7, /** @src 0:22102:22170  \"_positionStorage.position(...\" */ 4)\n                }\n                /// @src 0:22358:22376  \"_params.rollbacker\"\n                let _8 := add(var_params_offset, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)\n                /// @src 0:22358:22376  \"_params.rollbacker\"\n                let expr_2 := read_from_calldatat_address(_8)\n                /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                if iszero(extcodesize(expr_2057_address))\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src 0:22141:22160  \"_params.positionKey\" */ 0, 0)\n                }\n                /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                mstore(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a102341))\n                /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                let _10 := call(gas(), expr_2057_address, /** @src 0:22141:22160  \"_params.positionKey\" */ 0, /** @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\" */ _9, sub(abi_encode_bytes32_address(add(_9, /** @src 0:22102:22170  \"_positionStorage.position(...\" */ 4), /** @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\" */ expr, expr_2), _9), _9, /** @src 0:22141:22160  \"_params.positionKey\" */ 0)\n                /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                if iszero(_10) { revert_forward() }\n                if _10\n                {\n                    finalize_allocation_20719(_9)\n                    abi_decode(_9, _9)\n                }\n                /// @src 0:22388:22424  \"quoteInDebt -= pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22388:22424  \"quoteInDebt -= pos.quoteToken.amount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22403:22424  \"pos.quoteToken.amount\" */ add(/** @src 0:22403:22417  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))))\n                /// @src 0:22434:22479  \"withdrawingLiquidity += pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22434:22479  \"withdrawingLiquidity += pos.quoteToken.amount\" */ 0x0b), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22458:22479  \"pos.quoteToken.amount\" */ add(/** @src 0:22458:22472  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))))\n                /// @src 0:22522:22535  \"pos.baseToken\"\n                let _11 := add(expr_2060_mpos, 96)\n                let _mpos := mload(_11)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _12 := mload(/** @src 0:22522:22542  \"pos.baseToken.amount\" */ add(_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))\n                /// @src 0:22489:22518  \"baseReserve[pos.baseToken.id]\"\n                let _13 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22501:22517  \"pos.baseToken.id\" */ _mpos)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_13, /** @src 0:22489:22542  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22489:22542  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ _13), _12))\n                /// @src 0:22592:22606  \"pos.collateral\"\n                let _14 := add(expr_2060_mpos, 160)\n                let _1049_mpos := mload(_14)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _15 := mload(/** @src 0:22592:22613  \"pos.collateral.amount\" */ add(_1049_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))\n                /// @src 0:22552:22588  \"collateralReserve[pos.collateral.id]\"\n                let _16 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22570:22587  \"pos.collateral.id\" */ _1049_mpos)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_16, /** @src 0:22552:22613  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22552:22613  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ _16), _15))\n                /// @src 0:22623:22660  \"openInterest -= pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20792(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22623:22660  \"openInterest -= pos.quoteToken.amount\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22639:22660  \"pos.quoteToken.amount\" */ add(/** @src 0:22639:22653  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))))\n                /// @src 0:22712:22725  \"pos.baseToken\"\n                let _1068_mpos := mload(_11)\n                /// @src 0:22712:22728  \"pos.baseToken.id\"\n                let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22712:22728  \"pos.baseToken.id\" */ _1068_mpos))\n                /// @src 0:22742:22751  \"pos.owner\"\n                let _18 := add(expr_2060_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)\n                /// @src 0:22742:22751  \"pos.owner\"\n                let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22742:22751  \"pos.owner\" */ _18))\n                /// @src 0:22765:22785  \"pos.baseToken.amount\"\n                fun_safeTransfer(_17, _19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22765:22785  \"pos.baseToken.amount\" */ add(_1068_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)))\n                /// @src 0:22846:22860  \"pos.collateral\"\n                let _1081_mpos := mload(_14)\n                /// @src 0:22846:22863  \"pos.collateral.id\"\n                let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22846:22863  \"pos.collateral.id\" */ _1081_mpos))\n                /// @src 0:22877:22886  \"pos.owner\"\n                let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22877:22886  \"pos.owner\" */ _18))\n                /// @src 0:22900:22921  \"pos.collateral.amount\"\n                fun_safeTransfer(_20, _21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22900:22921  \"pos.collateral.amount\" */ add(_1081_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _22 := mload(/** @src 0:22993:23008  \"pos.positionKey\" */ expr_2060_mpos)\n                /// @src 0:23022:23040  \"_params.rollbacker\"\n                let expr_3 := read_from_calldatat_address(_8)\n                /// @src 0:23054:23074  \"_params.serviceToken\"\n                let expr_4 := read_from_calldatat_address(add(var_params_offset, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64))\n                /// @src 0:22947:23116  \"Rollback(...\"\n                let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:22947:23116  \"Rollback(...\"\n                log3(_23, sub(abi_encode_address_address_uint256(_23, expr_3, expr_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(/** @src 0:23088:23106  \"_params.serviceFee\" */ add(var_params_offset, /** @src 0:22522:22535  \"pos.baseToken\" */ 96))), /** @src 0:22947:23116  \"Rollback(...\" */ _23), 0x415e462bce09ff3142dc51f9a6878d89bb34d75a21bc8ffc7fc397eccce872e9, /** @src 0:22969:22979  \"msg.sender\" */ caller(), /** @src 0:22947:23116  \"Rollback(...\" */ _22)\n            }\n            /// @ast-id 414 @src 0:4907:5215  \"function _unrealizeLiquidity() internal view returns (uint256) {...\"\n            function fun_unrealizeLiquidity() -> var\n            {\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let cleaned := and(sload(/** @src 0:5002:5012  \"quoteToken\" */ 0x04), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                mstore(/** @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\" */ add(_1, /** @src 0:5002:5012  \"quoteToken\" */ 0x04), /** @src 0:5078:5082  \"this\" */ address())\n                /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                let _2 := staticcall(gas(), cleaned, _1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36, /** @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\" */ _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _4 := sload(/** @src 0:5135:5165  \"collateralReserve[_quoteToken]\" */ mapping_index_access_mapping_address_bool_of_address_20791(cleaned))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                if lt(expr, _4) { panic_error_0x11() }\n                let _5 := sload(/** @src 0:5181:5193  \"quoteReserve\" */ 0x09)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _6 := sload(/** @src 0:5196:5207  \"quoteInDebt\" */ 0x0a)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                if lt(_5, _6) { panic_error_0x11() }\n                /// @src 0:5094:5208  \"return...\"\n                var := /** @src 0:5113:5208  \"balance -...\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(expr, _4), sub(_5, _6))\n            }\n            /// @src 0:23174:24109  \"function closeManuallyStep1(...\"\n            function fun_closeManuallyStep1_inner(var_positionKey, var_executor)\n            {\n                /// @src 0:23381:23416  \"_positionStorage.closeManuallyStep1\"\n                let expr_2183_address := cleanup_address(/** @src 0:23338:23371  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:23355:23370  \"positionStorage\" */ 0x02))))\n                /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                if iszero(extcodesize(expr_2183_address))\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(227, 0x1601180b))\n                /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                let _2 := call(gas(), expr_2183_address, 0, _1, sub(abi_encode_uint256(add(_1, 4), var_positionKey), _1), _1, 0)\n                if iszero(_2) { revert_forward() }\n                if _2\n                {\n                    finalize_allocation_20719(_1)\n                    abi_decode(_1, _1)\n                }\n                /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                let _4 := 832\n                let _5 := staticcall(gas(), expr_2183_address, _3, sub(abi_encode_uint256(add(_3, /** @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\" */ 4), /** @src 0:23485:23546  \"_positionStorage.position(...\" */ var_positionKey), _3), _3, _4)\n                if iszero(_5) { revert_forward() }\n                let expr_2195_mpos := /** @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\" */ 0\n                /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_3, _6)\n                    expr_2195_mpos := abi_decode_struct_TradePosition_fromMemory(_3, add(_3, _6))\n                }\n                /// @src 0:23677:23690  \"pos.baseToken\"\n                let _7 := add(expr_2195_mpos, 96)\n                let _1147_mpos := mload(_7)\n                /// @src 0:23677:23693  \"pos.baseToken.id\"\n                let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23677:23693  \"pos.baseToken.id\" */ _1147_mpos))\n                /// @src 0:23730:23750  \"pos.baseToken.amount\"\n                fun_safeTransfer(_8, var_executor, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:23730:23750  \"pos.baseToken.amount\" */ add(_1147_mpos, 32)))\n                /// @src 0:23811:23825  \"pos.collateral\"\n                let _9 := add(expr_2195_mpos, 160)\n                let _1158_mpos := mload(_9)\n                /// @src 0:23811:23828  \"pos.collateral.id\"\n                let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23811:23828  \"pos.collateral.id\" */ _1158_mpos))\n                /// @src 0:23865:23886  \"pos.collateral.amount\"\n                fun_safeTransfer(_10, var_executor, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:23865:23886  \"pos.collateral.amount\" */ add(_1158_mpos, /** @src 0:23730:23750  \"pos.baseToken.amount\" */ 32)))\n                /// @src 0:23940:23953  \"pos.baseToken\"\n                let _1169_mpos := mload(_7)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _11 := mload(/** @src 0:23940:23960  \"pos.baseToken.amount\" */ add(_1169_mpos, /** @src 0:23730:23750  \"pos.baseToken.amount\" */ 32))\n                /// @src 0:23907:23936  \"baseReserve[pos.baseToken.id]\"\n                let _12 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23919:23935  \"pos.baseToken.id\" */ _1169_mpos)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_12, /** @src 0:23907:23960  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:23907:23960  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ _12), _11))\n                /// @src 0:24010:24024  \"pos.collateral\"\n                let _1182_mpos := mload(_9)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _13 := mload(/** @src 0:24010:24031  \"pos.collateral.amount\" */ add(_1182_mpos, /** @src 0:23730:23750  \"pos.baseToken.amount\" */ 32))\n                /// @src 0:23970:24006  \"collateralReserve[pos.collateral.id]\"\n                let _14 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23988:24005  \"pos.collateral.id\" */ _1182_mpos)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_14, /** @src 0:23970:24031  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:23970:24031  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ _14), _13))\n                /// @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\"\n                log4(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64), /** @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\" */ 0, /** @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\" */ 0x1cc79853bbf119208b3fab3b7d33fcdb6ceaee7c8b16b89bdb389ed3b51ad17c, /** @src 0:24066:24076  \"msg.sender\" */ caller(), /** @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\" */ var_positionKey, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\" */ var_executor, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @src 0:24211:27128  \"function closeManuallyStep2(...\"\n            function fun_closeManuallyStep2_inner(var_positionKey, var_baseValue, var_remainingCollateralAmount, var_liquidationFee)\n            {\n                /// @src 0:24540:24565  \"_positionStorage.position\"\n                let expr_2277_address := cleanup_address(/** @src 0:24453:24486  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:24470:24485  \"positionStorage\" */ 0x02))))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := 64\n                /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                let _3 := 832\n                let _4 := 4\n                let _5 := staticcall(gas(), expr_2277_address, _2, sub(abi_encode_uint256(add(_2, _4), var_positionKey), _2), _2, _3)\n                if iszero(_5) { revert_forward() }\n                let expr_2279_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                if _5\n                {\n                    let _6 := _3\n                    if gt(_3, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    expr_2279_mpos := abi_decode_struct_TradePosition_fromMemory(_2, add(_2, _6))\n                }\n                /// @src 0:24616:24630  \"pos.collateral\"\n                let _7 := add(expr_2279_mpos, 160)\n                /// @src 0:24616:24633  \"pos.collateral.id\"\n                let _8 := read_from_memoryt_address(/** @src 0:24616:24630  \"pos.collateral\" */ mload(_7))\n                /// @src 0:24637:24651  \"pos.quoteToken\"\n                let _9 := add(expr_2279_mpos, 128)\n                /// @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\"\n                let _10 := cleanup_address(/** @src 0:24637:24654  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:24637:24651  \"pos.quoteToken\" */ mload(_9)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _11 := sub(shl(160, 1), 1)\n                /// @src 0:24612:25556  \"if (pos.collateral.id == pos.quoteToken.id) {...\"\n                switch /** @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\" */ _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11), /** @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\" */ _10)\n                case /** @src 0:24612:25556  \"if (pos.collateral.id == pos.quoteToken.id) {...\" */ 0 {\n                    /// @src 0:24919:24940  \"_unrealizeLiquidity()\"\n                    let expr := fun_unrealizeLiquidity()\n                    /// @src 0:24954:25044  \"if (quoteAmount < _baseValue + _liquidationFee)...\"\n                    if /** @src 0:24958:25000  \"quoteAmount < _baseValue + _liquidationFee\" */ lt(expr, /** @src 0:24972:25000  \"_baseValue + _liquidationFee\" */ checked_add_uint256(var_baseValue, var_liquidationFee))\n                    /// @src 0:24954:25044  \"if (quoteAmount < _baseValue + _liquidationFee)...\"\n                    {\n                        /// @src 0:25025:25044  \"InsufficientInput()\"\n                        let _12 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:25025:25044  \"InsufficientInput()\"\n                        mstore(_12, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                        /// @src 0:25025:25044  \"InsufficientInput()\"\n                        revert(_12, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _13 := sload(/** @src 0:25087:25123  \"collateralReserve[pos.collateral.id]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:25105:25122  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:25105:25119  \"pos.collateral\" */ mload(_7))))\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _14 := sload(/** @src 0:25160:25190  \"baseReserve[pos.collateral.id]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:25172:25189  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:25172:25186  \"pos.collateral\" */ mload(_7))))\n                    /// @src 0:25232:25267  \"IERC20(pos.collateral.id).balanceOf\"\n                    let expr_2342_address := cleanup_address(/** @src 0:25232:25257  \"IERC20(pos.collateral.id)\" */ cleanup_address(/** @src 0:25239:25256  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:25239:25253  \"pos.collateral\" */ mload(_7))))\n                    /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                    let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                    /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                    mstore(_15, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                    /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                    let _16 := staticcall(gas(), expr_2342_address, _15, sub(abi_encode_tuple_address(add(_15, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4), /** @src 0:25293:25297  \"this\" */ address()), /** @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\" */ _15), _15, 32)\n                    if iszero(_16) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                    if _16\n                    {\n                        let _17 := 32\n                        if gt(_17, returndatasize()) { _17 := returndatasize() }\n                        finalize_allocation(_15, _17)\n                        expr_1 := abi_decode_uint256_fromMemory(_15, add(_15, _17))\n                    }\n                    /// @src 0:25452:25545  \"if (collateralAmount < _remainingCollateralAmount)...\"\n                    if /** @src 0:25456:25501  \"collateralAmount < _remainingCollateralAmount\" */ lt(/** @src 0:25353:25438  \"collateralBalance -...\" */ checked_sub_uint256(/** @src 0:25353:25407  \"collateralBalance -...\" */ checked_sub_uint256(expr_1, _13), /** @src 0:25353:25438  \"collateralBalance -...\" */ _14), /** @src 0:25456:25501  \"collateralAmount < _remainingCollateralAmount\" */ var_remainingCollateralAmount)\n                    /// @src 0:25452:25545  \"if (collateralAmount < _remainingCollateralAmount)...\"\n                    {\n                        /// @src 0:25526:25545  \"InsufficientInput()\"\n                        let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:25526:25545  \"InsufficientInput()\"\n                        mstore(_18, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                        /// @src 0:25526:25545  \"InsufficientInput()\"\n                        revert(_18, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4)\n                    }\n                }\n                default /// @src 0:24612:25556  \"if (pos.collateral.id == pos.quoteToken.id) {...\"\n                {\n                    /// @src 0:24687:24708  \"_unrealizeLiquidity()\"\n                    let expr_2 := fun_unrealizeLiquidity()\n                    /// @src 0:24722:24866  \"if (...\"\n                    if /** @src 0:24743:24825  \"amount <...\" */ lt(expr_2, /** @src 0:24768:24825  \"_baseValue + _remainingCollateralAmount + _liquidationFee\" */ checked_add_uint256(/** @src 0:24768:24807  \"_baseValue + _remainingCollateralAmount\" */ checked_add_uint256(var_baseValue, var_remainingCollateralAmount), /** @src 0:24768:24825  \"_baseValue + _remainingCollateralAmount + _liquidationFee\" */ var_liquidationFee))\n                    /// @src 0:24722:24866  \"if (...\"\n                    {\n                        /// @src 0:24847:24866  \"InsufficientInput()\"\n                        let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:24847:24866  \"InsufficientInput()\"\n                        mstore(_19, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                        /// @src 0:24847:24866  \"InsufficientInput()\"\n                        revert(_19, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4)\n                    }\n                }\n                /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                if iszero(extcodesize(expr_2277_address))\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                mstore(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xf71139f7))\n                /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                let _21 := call(gas(), expr_2277_address, /** @src -1:-1:-1 */ 0, /** @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\" */ _20, sub(abi_encode_uint256(add(_20, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4), /** @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\" */ var_positionKey), _20), _20, /** @src -1:-1:-1 */ 0)\n                /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                if iszero(_21) { revert_forward() }\n                if _21\n                {\n                    finalize_allocation_20719(_20)\n                    abi_decode(_20, _20)\n                }\n                /// @src 0:25626:25638  \"uint256 loss\"\n                let var_loss := /** @src -1:-1:-1 */ 0\n                /// @src 0:25676:25697  \"pos.quoteToken.amount\"\n                let _22 := 32\n                /// @src 0:25676:25715  \"pos.quoteToken.amount + _liquidationFee\"\n                let expr_3 := checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:25676:25697  \"pos.quoteToken.amount\" */ add(/** @src 0:25676:25690  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22)), /** @src 0:25676:25715  \"pos.quoteToken.amount + _liquidationFee\" */ var_liquidationFee)\n                /// @src 0:25725:25823  \"if (_baseValue < neededQuoteAmount) {...\"\n                if /** @src 0:25729:25759  \"_baseValue < neededQuoteAmount\" */ lt(var_baseValue, expr_3)\n                /// @src 0:25725:25823  \"if (_baseValue < neededQuoteAmount) {...\"\n                {\n                    /// @src 0:25775:25812  \"loss = neededQuoteAmount - _baseValue\"\n                    var_loss := /** @src 0:25782:25812  \"neededQuoteAmount - _baseValue\" */ checked_sub_uint256(expr_3, var_baseValue)\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _23 := mload(/** @src 0:25880:25895  \"pos.positionKey\" */ expr_2279_mpos)\n                /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                if iszero(extcodesize(expr_2277_address))\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                mstore(_24, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x8b029d61))\n                /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                let _25 := call(gas(), expr_2277_address, /** @src -1:-1:-1 */ 0, /** @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\" */ _24, sub(abi_encode_bytes32_uint256_uint256_uint256(add(_24, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4), /** @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\" */ _23, var_baseValue, var_loss, var_remainingCollateralAmount), _24), _24, /** @src -1:-1:-1 */ 0)\n                /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                if iszero(_25) { revert_forward() }\n                if _25\n                {\n                    finalize_allocation_20719(_24)\n                    abi_decode(_24, _24)\n                }\n                /// @src 0:25998:26034  \"quoteInDebt -= pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:25998:26034  \"quoteInDebt -= pos.quoteToken.amount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:26013:26034  \"pos.quoteToken.amount\" */ add(/** @src 0:26013:26027  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))))\n                /// @src 0:26044:26089  \"withdrawingLiquidity += pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:26044:26089  \"withdrawingLiquidity += pos.quoteToken.amount\" */ 0x0b), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:26068:26089  \"pos.quoteToken.amount\" */ add(/** @src 0:26068:26082  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))))\n                /// @src 0:26099:26136  \"openInterest -= pos.quoteToken.amount\"\n                update_storage_value_offsett_uint256_to_uint256_20792(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:26099:26136  \"openInterest -= pos.quoteToken.amount\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:26115:26136  \"pos.quoteToken.amount\" */ add(/** @src 0:26115:26129  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))))\n                /// @src 0:26147:26417  \"if (_liquidationFee > 0) {...\"\n                if /** @src 0:26151:26170  \"_liquidationFee > 0\" */ iszero(iszero(var_liquidationFee))\n                /// @src 0:26147:26417  \"if (_liquidationFee > 0) {...\"\n                {\n                    /// @src 0:26213:26247  \"IFactory(factory).liquidationFeeTo\"\n                    let expr_2430_address := cleanup_address(/** @src 0:26213:26230  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:26222:26229  \"factory\" */ 0x01))))\n                    /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                    let _26 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                    /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                    mstore(_26, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xbd2bae9d))\n                    /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                    let _27 := staticcall(gas(), expr_2430_address, _26, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4, /** @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\" */ _26, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22)\n                    /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                    if iszero(_27) { revert_forward() }\n                    let expr_4 := /** @src -1:-1:-1 */ 0\n                    /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                    if _27\n                    {\n                        let _28 := /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22\n                        /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                        if gt(/** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22, /** @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\" */ returndatasize()) { _28 := returndatasize() }\n                        finalize_allocation(_26, _28)\n                        expr_4 := abi_decode_tuple_address_fromMemory(_26, add(_26, _28))\n                    }\n                    /// @src 0:26377:26392  \"_liquidationFee\"\n                    fun_safeTransfer(/** @src 0:26308:26325  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:26308:26322  \"pos.quoteToken\" */ mload(_9)), /** @src 0:26377:26392  \"_liquidationFee\" */ expr_4, var_liquidationFee)\n                }\n                /// @src 0:26426:26718  \"if (loss == 0) {...\"\n                if /** @src 0:26430:26439  \"loss == 0\" */ iszero(var_loss)\n                /// @src 0:26426:26718  \"if (loss == 0) {...\"\n                {\n                    /// @src 0:26472:26502  \"_baseValue - neededQuoteAmount\"\n                    let expr_5 := checked_sub_uint256(var_baseValue, expr_3)\n                    /// @src 0:26516:26708  \"if (profit > 0) {...\"\n                    if /** @src 0:26520:26530  \"profit > 0\" */ iszero(iszero(expr_5))\n                    /// @src 0:26516:26708  \"if (profit > 0) {...\"\n                    {\n                        /// @src 0:26599:26616  \"pos.quoteToken.id\"\n                        let _29 := read_from_memoryt_address(/** @src 0:26599:26613  \"pos.quoteToken\" */ mload(_9))\n                        /// @src 0:26669:26675  \"profit\"\n                        fun_safeTransfer(_29, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:26638:26647  \"pos.owner\" */ add(expr_2279_mpos, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))), /** @src 0:26669:26675  \"profit\" */ expr_5)\n                    }\n                }\n                /// @src 0:26727:26935  \"if (_remainingCollateralAmount > 0) {...\"\n                if /** @src 0:26731:26761  \"_remainingCollateralAmount > 0\" */ iszero(iszero(var_remainingCollateralAmount))\n                /// @src 0:26727:26935  \"if (_remainingCollateralAmount > 0) {...\"\n                {\n                    /// @src 0:26822:26839  \"pos.collateral.id\"\n                    let _30 := read_from_memoryt_address(/** @src 0:26822:26836  \"pos.collateral\" */ mload(_7))\n                    /// @src 0:26884:26910  \"_remainingCollateralAmount\"\n                    fun_safeTransfer(_30, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:26857:26866  \"pos.owner\" */ add(expr_2279_mpos, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))), /** @src 0:26884:26910  \"_remainingCollateralAmount\" */ var_remainingCollateralAmount)\n                }\n                /// @src 0:26993:27002  \"pos.owner\"\n                let _31 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:26993:27002  \"pos.owner\" */ add(expr_2279_mpos, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22)))\n                /// @src 0:27042:27058  \"pos.baseToken.id\"\n                let _32 := read_from_memoryt_address(/** @src 0:27042:27055  \"pos.baseToken\" */ mload(add(expr_2279_mpos, 96)))\n                /// @src 0:26950:27121  \"Close(...\"\n                let _33 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                /// @src 0:26950:27121  \"Close(...\"\n                log4(_33, sub(abi_encode_address_address_uint256(_33, _32, /** @src 0:26969:26979  \"msg.sender\" */ caller(), /** @src 0:26950:27121  \"Close(...\" */ var_liquidationFee), _33), 0xad34241f9e3b3d38652a7493d4e07da1f3e88afa819a546544b20de727f2ffd8, /** @src 0:26969:26979  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:26950:27121  \"Close(...\" */ _31, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11), /** @src 0:26950:27121  \"Close(...\" */ var_positionKey)\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_encode_struct_UpdateCollateralAmountParams(headStart, value0) -> tail\n            {\n                tail := add(headStart, 160)\n                mstore(headStart, mload(value0))\n                mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n                let memberValue0 := mload(add(value0, 0x40))\n                let _1 := sub(shl(160, 1), 1)\n                mstore(add(headStart, 0x40), and(memberValue0, _1))\n                mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n                mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n            }\n            function abi_encode_uint256_uint256_address_address_uint256(headStart, value0, value1, value2, value3, value4) -> tail\n            {\n                tail := add(headStart, 160)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(add(headStart, 64), and(value2, _1))\n                mstore(add(headStart, 96), and(value3, _1))\n                mstore(add(headStart, 128), value4)\n            }\n            /// @src 0:27134:28085  \"function updateCollateralAmount(...\"\n            function fun_updateCollateralAmount_inner(var_params_mpos) -> var_collateralLiqPrice\n            {\n                /// @src 0:27448:27473  \"_positionStorage.position\"\n                let expr_2529_address := cleanup_address(/** @src 0:27361:27394  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:27378:27393  \"positionStorage\" */ 0x02))))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := mload(/** @src 0:27487:27506  \"_params.positionKey\" */ var_params_mpos)\n                /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                let _3 := 832\n                let _4 := staticcall(gas(), expr_2529_address, _2, sub(abi_encode_uint256(add(_2, 4), _1), _2), _2, _3)\n                if iszero(_4) { revert_forward() }\n                let expr_2532_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                if _4\n                {\n                    let _5 := _3\n                    if gt(_3, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_2, _5)\n                    expr_2532_mpos := abi_decode_struct_TradePosition_fromMemory(_2, add(_2, _5))\n                }\n                /// @src 0:27575:27589  \"pos.collateral\"\n                let _6 := add(expr_2532_mpos, 160)\n                /// @src 0:27558:27593  \"_unrealizeAmount(pos.collateral.id)\"\n                let expr := fun_unrealizeAmount(/** @src 0:27575:27592  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:27575:27589  \"pos.collateral\" */ mload(_6)))\n                /// @src 0:27631:27645  \"_params.amount\"\n                let _7 := add(var_params_mpos, 32)\n                /// @src 0:27603:27673  \"if (addedCollateralAmount < _params.amount) revert InsufficientInput()\"\n                if /** @src 0:27607:27645  \"addedCollateralAmount < _params.amount\" */ lt(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:27631:27645  \"_params.amount\" */ _7))\n                /// @src 0:27603:27673  \"if (addedCollateralAmount < _params.amount) revert InsufficientInput()\"\n                {\n                    /// @src 0:27654:27673  \"InsufficientInput()\"\n                    let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                    /// @src 0:27654:27673  \"InsufficientInput()\"\n                    mstore(_8, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                    /// @src 0:27654:27673  \"InsufficientInput()\"\n                    revert(_8, /** @src 0:27448:27516  \"_positionStorage.position(...\" */ 4)\n                }\n                /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                mstore(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xc6f61b01))\n                /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                let _10 := call(gas(), expr_2529_address, /** @src -1:-1:-1 */ 0, /** @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\" */ _9, sub(abi_encode_struct_UpdateCollateralAmountParams(add(_9, /** @src 0:27448:27516  \"_positionStorage.position(...\" */ 4), /** @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\" */ var_params_mpos), _9), _9, /** @src 0:27631:27645  \"_params.amount\" */ 32)\n                /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                if iszero(_10) { revert_forward() }\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                if _10\n                {\n                    let _11 := /** @src 0:27631:27645  \"_params.amount\" */ 32\n                    /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                    if gt(/** @src 0:27631:27645  \"_params.amount\" */ _11, /** @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\" */ returndatasize()) { _11 := returndatasize() }\n                    finalize_allocation(_9, _11)\n                    expr_1 := abi_decode_uint256_fromMemory(_9, add(_9, _11))\n                }\n                /// @src 0:27684:27753  \"collateralLiqPrice = _positionStorage.updateCollateralAmount(_params)\"\n                var_collateralLiqPrice := expr_1\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _12 := mload(/** @src 0:27804:27818  \"_params.amount\" */ _7)\n                /// @src 0:27764:27800  \"collateralReserve[pos.collateral.id]\"\n                let _13 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:27782:27799  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:27782:27796  \"pos.collateral\" */ mload(_6)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                sstore(_13, /** @src 0:27764:27818  \"collateralReserve[pos.collateral.id] += _params.amount\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:27764:27818  \"collateralReserve[pos.collateral.id] += _params.amount\" */ _13), _12))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _14 := mload(/** @src 0:27894:27913  \"_params.positionKey\" */ var_params_mpos)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _15 := mload(/** @src 0:27927:27941  \"_params.amount\" */ _7)\n                /// @src 0:27987:28002  \"_params.updater\"\n                let _16 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:27987:28002  \"_params.updater\" */ add(var_params_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64)))\n                /// @src 0:28016:28036  \"_params.serviceToken\"\n                let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:28016:28036  \"_params.serviceToken\" */ add(var_params_mpos, 96)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _18 := mload(/** @src 0:28050:28068  \"_params.serviceFee\" */ add(var_params_mpos, 128))\n                /// @src 0:27834:28078  \"UpdateCollateralAmount(...\"\n                let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:27834:28078  \"UpdateCollateralAmount(...\"\n                log3(_19, sub(abi_encode_uint256_uint256_address_address_uint256(_19, _15, expr_1, _16, _17, _18), _19), 0x55c8ac91237f6fa939a79c1699293ce14171d61728c7cc56a131f51758fa598f, /** @src 0:27870:27880  \"msg.sender\" */ caller(), /** @src 0:27834:28078  \"UpdateCollateralAmount(...\" */ _14)\n            }\n            /// @ast-id 451 @src 0:5221:5507  \"function _unrealizeAmount(address _token) internal view returns (uint256) {...\"\n            function fun_unrealizeAmount(var_token) -> var\n            {\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(/** @src 0:5319:5329  \"quoteToken\" */ 0x04), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                let _2 := and(/** @src 0:5309:5329  \"_token == quoteToken\" */ var_token, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                /// @src 0:5305:5359  \"if (_token == quoteToken) return _unrealizeLiquidity()\"\n                if /** @src 0:5309:5329  \"_token == quoteToken\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2, /** @src 0:5309:5329  \"_token == quoteToken\" */ cleaned)\n                /// @src 0:5305:5359  \"if (_token == quoteToken) return _unrealizeLiquidity()\"\n                {\n                    /// @src 0:5331:5359  \"return _unrealizeLiquidity()\"\n                    var := /** @src 0:5338:5359  \"_unrealizeLiquidity()\" */ fun_unrealizeLiquidity()\n                    /// @src 0:5331:5359  \"return _unrealizeLiquidity()\"\n                    leave\n                }\n                /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                mstore(/** @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\" */ add(_3, /** @src 0:5319:5329  \"quoteToken\" */ 0x04), /** @src 0:5420:5424  \"this\" */ address())\n                /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                let _4 := staticcall(gas(), _2, _3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36, /** @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\" */ _3, 32)\n                if iszero(_4) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                if _4\n                {\n                    let _5 := 32\n                    if gt(_5, returndatasize()) { _5 := returndatasize() }\n                    finalize_allocation(_3, _5)\n                    expr := abi_decode_uint256_fromMemory(_3, add(_3, _5))\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _6 := sload(/** @src 0:5453:5478  \"collateralReserve[_token]\" */ mapping_index_access_mapping_address_bool_of_address_20791(var_token))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                if lt(expr, _6) { panic_error_0x11() }\n                /// @src 0:5436:5500  \"return balance - collateralReserve[_token] - baseReserve[_token]\"\n                var := /** @src 0:5443:5500  \"balance - collateralReserve[_token] - baseReserve[_token]\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(expr, _6), sload(/** @src 0:5481:5500  \"baseReserve[_token]\" */ mapping_index_access_mapping_address_bool_of_address(var_token)))\n            }\n            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n            function abi_decode_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                value0 := mload(headStart)\n                value1 := mload(add(headStart, 32))\n            }\n            function abi_encode_address_address_uint256_uint256_uint256_address_address_uint256(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n            {\n                tail := add(headStart, 256)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), and(value5, _1))\n                mstore(add(headStart, 192), and(value6, _1))\n                mstore(add(headStart, 224), value7)\n            }\n            /// @src 0:28091:28994  \"function updateDeadline(...\"\n            function fun_updateDeadline_inner(var_params_mpos)\n            {\n                /// @src 0:28352:28377  \"_positionStorage.position\"\n                let expr_2607_address := cleanup_address(/** @src 0:28265:28298  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:28282:28297  \"positionStorage\" */ 0x02))))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _1 := mload(/** @src 0:28391:28410  \"_params.positionKey\" */ var_params_mpos)\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _2 := 64\n                /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                let _4 := 832\n                let _5 := staticcall(gas(), expr_2607_address, _3, sub(abi_encode_uint256(add(_3, 4), _1), _3), _3, _4)\n                if iszero(_5) { revert_forward() }\n                let expr_2610_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_3, _6)\n                    expr_2610_mpos := abi_decode_struct_TradePosition_fromMemory(_3, add(_3, _6))\n                }\n                /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                mstore(_7, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x5330e353))\n                /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                let _8 := call(gas(), expr_2607_address, /** @src -1:-1:-1 */ 0, /** @src 0:28467:28529  \"_positionStorage.updateDeadline(...\" */ _7, sub(abi_encode_struct_UpdateCollateralAmountParams(add(_7, /** @src 0:28352:28420  \"_positionStorage.position(...\" */ 4), /** @src 0:28467:28529  \"_positionStorage.updateDeadline(...\" */ var_params_mpos), _7), _7, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)\n                /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                if iszero(_8) { revert_forward() }\n                let expr_2619_component := /** @src -1:-1:-1 */ 0\n                let expr_component := expr_2619_component\n                /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                if _8\n                {\n                    let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2\n                    /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2, /** @src 0:28467:28529  \"_positionStorage.updateDeadline(...\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    let expr_component_1, expr_component_2 := abi_decode_uint256t_uint256_fromMemory(_7, add(_7, _9))\n                    expr_2619_component := expr_component_1\n                    expr_component := expr_component_2\n                }\n                /// @src 0:28540:28558  \"quoteInDebt += fee\"\n                update_storage_value_offsett_uint256_to_uint256(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:28540:28558  \"quoteInDebt += fee\" */ 0x0a), expr_2619_component))\n                /// @src 0:28568:28597  \"accProtocolFee += protocolFee\"\n                update_storage_value_offsett_uint256_to_uint256_20789(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:28568:28597  \"accProtocolFee += protocolFee\" */ 0x0d), expr_component))\n                /// @src 0:28607:28626  \"openInterest += fee\"\n                update_storage_value_offsett_uint256_to_uint256_20792(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:28607:28626  \"openInterest += fee\" */ 0x08), expr_2619_component))\n                /// @src 0:28644:28661  \"fee - protocolFee\"\n                fun_addFee(checked_sub_uint256(expr_2619_component, expr_component))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _10 := mload(/** @src 0:28730:28749  \"_params.positionKey\" */ var_params_mpos)\n                /// @src 0:28763:28779  \"pos.baseToken.id\"\n                let _11 := read_from_memoryt_address(/** @src 0:28763:28776  \"pos.baseToken\" */ mload(add(expr_2610_mpos, 96)))\n                /// @src 0:28793:28810  \"pos.quoteToken.id\"\n                let _12 := read_from_memoryt_address(/** @src 0:28793:28807  \"pos.quoteToken\" */ mload(add(expr_2610_mpos, 128)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _13 := mload(/** @src 0:28824:28840  \"_params.deadline\" */ add(var_params_mpos, 32))\n                /// @src 0:28896:28911  \"_params.updater\"\n                let _14 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:28896:28911  \"_params.updater\" */ add(var_params_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)))\n                /// @src 0:28925:28945  \"_params.serviceToken\"\n                let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:28925:28945  \"_params.serviceToken\" */ add(var_params_mpos, /** @src 0:28763:28776  \"pos.baseToken\" */ 96)))\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                let _16 := mload(/** @src 0:28959:28977  \"_params.serviceFee\" */ add(var_params_mpos, /** @src 0:28793:28807  \"pos.quoteToken\" */ 128))\n                /// @src 0:28678:28987  \"UpdateDeadline(...\"\n                let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                /// @src 0:28678:28987  \"UpdateDeadline(...\"\n                log3(_17, sub(abi_encode_address_address_uint256_uint256_uint256_address_address_uint256(_17, _11, _12, _13, expr_2619_component, expr_component, _14, _15, _16), _17), 0x02bde35fb6c4387120ff67d8e52f04c37f08b2a8235cd8a731848afda59f622e, /** @src 0:28706:28716  \"msg.sender\" */ caller(), /** @src 0:28678:28987  \"UpdateDeadline(...\" */ _10)\n            }\n            /// @ast-id 3898 @src 13:649:1115  \"function safeTransfer(...\"\n            function fun_safeTransfer(var__token, var_to, var_value)\n            {\n                /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                let expr_3875_mpos := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                let _1 := add(expr_3875_mpos, 0x20)\n                mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xa9059cbb))\n                mstore(/** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ add(expr_3875_mpos, 36), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                mstore(add(/** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ expr_3875_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 68), var_value)\n                /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                mstore(expr_3875_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 68)\n                /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                finalize_allocation_20721(expr_3875_mpos)\n                /// @src 13:867:949  \"_token.call(...\"\n                let expr_component := call(gas(), var__token, /** @src -1:-1:-1 */ 0, /** @src 13:867:949  \"_token.call(...\" */ _1, mload(expr_3875_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 13:867:949  \"_token.call(...\"\n                let expr_component_mpos := extract_returndata()\n                /// @src 13:980:1037  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                let expr := expr_component\n                if expr_component\n                {\n                    /// @src 13:992:1003  \"data.length\"\n                    let expr_1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 13:992:1003  \"data.length\" */ expr_component_mpos)\n                    /// @src 13:992:1036  \"data.length == 0 || abi.decode(data, (bool))\"\n                    let expr_2 := /** @src 13:992:1008  \"data.length == 0\" */ iszero(expr_1)\n                    /// @src 13:992:1036  \"data.length == 0 || abi.decode(data, (bool))\"\n                    if iszero(expr_2)\n                    {\n                        expr_2 := /** @src 13:1012:1036  \"abi.decode(data, (bool))\" */ abi_decode_bool_fromMemory(add(expr_component_mpos, /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 0x20), /** @src 13:1012:1036  \"abi.decode(data, (bool))\" */ add(add(expr_component_mpos, expr_1), /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 0x20))\n                    }\n                    /// @src 13:980:1037  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                    expr := expr_2\n                }\n                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                if iszero(expr)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 0x20)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    mstore(add(memPtr, /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 36), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 45)\n                    mstore(add(memPtr, 68), \"TransferHelper::safeTransfer: tr\")\n                    mstore(add(memPtr, 100), \"ansfer failed\")\n                    revert(memPtr, 132)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122048b365fa88dd7f01bcfe94464ece30d664ecd7af417a4a2c2771578f07c5acb764736f6c634300080f0033\"\n    }\n}\n","hash":"01000c157a6a234a3691a4db61078def28c0c3a8186f7d698eb83dbe9d157460","factoryDependencies":{}}},"contracts/PoolDeployer.sol":{"PoolDeployer":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"Forbidden","type":"error"},{"inputs":[],"name":"InitializedAlready","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"factory","type":"address"}],"name":"SetFactory","type":"event"},{"inputs":[{"internalType":"address","name":"_quoteToken","type":"address"},{"internalType":"uint256","name":"_interest","type":"uint256"}],"name":"deployPool","outputs":[{"internalType":"address payable","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolInitCodeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"name":"setFactory","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializedAlready\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"SetFactory\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_interest\",\"type\":\"uint256\"}],\"name\":\"deployPool\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInitCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoolDeployer.sol\":\"PoolDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Pool.sol\":{\"keccak256\":\"0xc61ec5a21da8ff6ee91e38bba24b5d5fdc139c9640303d4c60331927d9ad2a50\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b5a969a00c69f4a24822c13af9954b6e17bec8badc887f29046b0c239ca04259\",\"dweb:/ipfs/QmfRGJEwjpb84dUTbUc1D7yzgaEdAzDiGUQhiGiBFy1duc\"]},\"contracts/PoolDeployer.sol\":{\"keccak256\":\"0x310a50aa62bd332f08c5c2fad77f6d0d64490ad283410916b14ca3da78f9422f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bee1230fbde37703529db51685341e758224676db13e736070928d070a08a600\",\"dweb:/ipfs/QmZPYnHnho8gjtktvUEp9p7rB4gMTsbrtUDmvVAUkpNrzS\"]},\"contracts/base/Lockable.sol\":{\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4af8261e270ee279b561618e7eb68593b7af51c9cb365927302bcdcbf7263f60\",\"dweb:/ipfs/QmTy94DQYqyxcCPYK8CrgRmwdfckVi4v4dKy76VyPs2eri\"]},\"contracts/interfaces/ICloseCallback.sol\":{\"keccak256\":\"0x018443b6be91235a8e0843503b318ad8c424103637b7be17bd57ca4098c42b83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e418b690cbe19033f682c7fb228d81fa0d6db7804cd582ad448a2e68d6e70a8\",\"dweb:/ipfs/Qmf5godhuJXTxjZegaLgECSEC4eW8x8wpYwPLFkV6WwjWY\"]},\"contracts/interfaces/IDEXAggregator.sol\":{\"keccak256\":\"0x050436409ad725de56a178bc04f3af194c092e8819b68a74d3cff79c0e80b53b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f22c550e270aa714d692d8cc0c1e3d6316c087912b91244536275e520c722f18\",\"dweb:/ipfs/QmTZLbGDAC6NRzyvjRew7wKt9rj11hwb9YerHY63oJhYyN\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d783bcfa47faaa1ed36eb4ce8c1612372cd4118fc11b347d8ecea2ab3d4a1284\",\"dweb:/ipfs/QmbyCFzoezQpCkD6uMEHXeEsMRmNbnwTbqMP74MC3TMgfi\"]},\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x8c18d9f7d476a1cb444761ff88f5f7df0bb1f605c4821b7eac11b66bb2dcc540\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bd4ef80a309ad13ac57af819b211cd226257047d5aded698b5f1cc3633fabe7e\",\"dweb:/ipfs/QmVicyyJSjDKaGJzwsxYzG9mZ8yXGTrkkLr8CgrgxgSEpG\"]},\"contracts/interfaces/IMintCallback.sol\":{\"keccak256\":\"0x9d5d83eabb0f9f91852dc984da6032d3f34abfed0d73810b2658ba0a95e4da29\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e055ac0adde86038e3d8b005592916224ccf19cfe0dbf5bc50dcb828a80979bb\",\"dweb:/ipfs/QmeweMXsfsamgk1Hq6Sfk4ZwTLaoC2ZTDyPv37oghcMXhh\"]},\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x0df40413291993de9306d0f1fd006f4057eb73713ab3a55e501f5c19544163c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cdd815390201d8154835657457a1b7b54b621685f361eb492a4bce904b1c9dc9\",\"dweb:/ipfs/QmZuULKjAbdfSabtC2A7o5U8CjvANRdYwKeUdoFBZoAt7Z\"]},\"contracts/interfaces/IPoolDeployer.sol\":{\"keccak256\":\"0x116f7bb3266dcb37b56ea86715709018089114c17cf430057f5c2802d1bfbef7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8c72018cbdd53c3a35899d6be0305f23e8cb4ab84e5fc423e53f177ddce1f780\",\"dweb:/ipfs/Qma5BWmbhPyp6JzkN6Gso9EmrV5pAbn2VJpsjNJSvoTB3J\"]},\"contracts/interfaces/IPositionStorage.sol\":{\"keccak256\":\"0x59c96dbc599d853167cf4954037f3df32a645c28bd675bb18689a5c1d4750827\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67aa7fb58f85dacf0fe4243d8a99f714981b8c86d201a896afed88651fe7976a\",\"dweb:/ipfs/QmT2f6Wkr44vm82UuBqwLkAqz3mFUCXfdkbWgJFVeTa8ph\"]},\"contracts/interfaces/IWithdrawalMonitor.sol\":{\"keccak256\":\"0xb744b52875c32378810f80f1b49f034e676ea3a7413d97ed022cf28cc09f26d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://461161a473261ca4400e2315ade9b72276b9ccbf8e8384c9847bb7de0b453c84\",\"dweb:/ipfs/QmeoZSgXKF8DiizUAsb5LxpWAeEMQ6ipmvegoWViaDgz8q\"]},\"contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0x8b10c75fabc065dad2edca967243c55972451facbcee902fb871a1741406e82d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b398f2dd3202ac7a4a3e133412f1c2db65290320ff82c4665deacd13c9827bc\",\"dweb:/ipfs/QmbmegXRKW84nKmcS91uj8GwK2FFnaDFaj5inSbYUYUk6F\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4974ccca392242612b24dc99f2aa88d3f2eaf3d0b3b307519f0a6a425a4e85c1\",\"dweb:/ipfs/QmXdMCaLvTfJwNJ6byE8fiYz57PpMXxQenHXMHpVKKBSAp\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.5.0"},"evm":{"assembly":"\t.text\n\t.file\t\"PoolDeployer.sol:PoolDeployer\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3 + r0]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_8\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t36, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_9[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand!\t@CPI0_9[0], r1, r2\n\tjump.ne\t@.BB0_44\n\tand\t@CPI0_13[0], r1, r1\n\tor\tr1, r5, r1\n\tsstore\tr0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_14[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_15[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.eq\t@.BB0_47\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t320, r0, r1\n\tst.1\t64, r1\n\tadd\t132, r0, r2\n\tst.1\t128, r2\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t196, r1\n\tadd\t160, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tst.1\t320, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_9[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_9[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_14\n\tst.1\t160, r3\n\tadd\t32, r0, r1\n\tst.1\t128, r1\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\t228, r2\n\tcontext.gas_left\tr2\n\tadd\t@CPI0_20[0], r0, r3\n\tst.1\t192, r3\n\tst.1\t196, r1\n\tadd\t96, r0, r1\n\tst.1\t260, r1\n\tst.1\t292, r0\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_16\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_20\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_23\n.BB0_47:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_9[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_44:\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tadd\t@CPI0_17[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_16:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_23:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_26\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr3, r0, r8\n.BB0_25:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_25\n.BB0_26:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_28\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_28:\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t96, r2, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\t@CPI0_0[0], r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_20:\n\tsload\tr0, r2\n\tadd\tr2, r0, stack-[2]\n\tadd\t@CPI0_22[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_9[0], r1, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand\t@CPI0_9[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_21\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[3], r0, r2\n\tjump.ne\t@.BB0_29\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_21:\n\trevert\n.BB0_29:\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_37\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_31\n.BB0_37:\n\tsub.s!\t@CPI0_26[0], r4, r1\n\tjump.lt\t@.BB0_39\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_39:\n\tst.1\t64, r4\n\tadd\tstack-[1], r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd.ge\t@CPI0_0[0], r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_27[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_34\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r6\n\tptr.add\tr1, r0, r7\n\tadd\tr2, r0, r8\n.BB0_33:\n\tld.inc\tr7, r9, r7\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr8, r6, r9\n\tjump.ne\t@.BB0_33\n.BB0_34:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_36\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_36:\n\tshl.s\t96, r3, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\t@CPI0_0[0], r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__cxa_throw:\n.func_begin1:\n\trevert\n.func_end1:\n\n__sha3:\n.func_begin2:\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tadd.ge\t@CPI2_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.ge\t@CPI2_0[0], r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r3\n\tadd.ge\t@CPI2_0[0], r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n\t.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n\t.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell\t3294232916\nCPI0_3:\n\t.cell\t3294232917\nCPI0_4:\n\t.cell\t3595501201\nCPI0_5:\n\t.cell\t667373439\nCPI0_6:\n\t.cell\t1538553864\nCPI0_7:\n\t.cell\t452396248590070048310301354259743786733336757863593923598933170124160857184\nCPI0_8:\n\t.cell\t2535301206359416906580462927872\nCPI0_9:\n\t.cell\t1461501637330902918203684832716283019655932542975\nCPI0_10:\n\t.cell\t2535301202817642044428229017600\nCPI0_11:\n\t.cell\t-10939603071800116285536735752706616996144281030595234869248541012597281914880\nCPI0_12:\n\t.cell\t316912652418240591808998408192\nCPI0_13:\n\t.cell\t-1461501637330902918203684832716283019655932542976\nCPI0_14:\n\t.cell\t904625697166532776746648320380374280103671755200316908919445616496643932160\nCPI0_15:\n\t.cell\t12907252435357970188489996848810340247033076951055846865437859141154458667193\nCPI0_16:\n\t.cell\t2361183241434822606848\nCPI0_17:\n\t.cell\t-40882195634205099230027652466335720654988126728905360897259259206155517296640\nCPI0_18:\n\t.cell\t2852213852874699394802404818944\nCPI0_19:\n\t.cell\t904625697166532776746648320380374280103671757735618109966200229848755994624\nCPI0_20:\n\t.cell\t27524297751018104354606870944915773909797785407991800839046391672766794276695\nCPI0_21:\n\t.cell\t904625697166532776746648320380374280103671765658434361982929799561856679936\nCPI0_22:\n\t.cell\t10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_23:\n\t.cell\t904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_24:\n\t.cell\t10665981127165977677831421693851407186472141577147697245942179289248718389248\nCPI0_25:\n\t.cell\t7922816251426433759354395033600\nCPI0_26:\n\t.cell\t18446744073709551616\nCPI0_27:\n\t.cell\t2535301200456458802993406410752\nCPI0_28:\n\t.cell\t35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_29:\n\t.cell\t2852213850513516153367582212096\nCPI2_1:\n\t.cell\t904625697166532776746648320380374280103671755200316906558262375061821325312\n","bytecode":{"object":"00030000000000020003000000000002000000000301001900000060033002700000005303300197000200000031035500010000000103550000008004000039000000400040043f0000000102200190000000310000c13d000000040230008c000000cf0000413d000000000201043b000000e002200270000000550420009c000000390000213d000000580420009c0000004b0000613d000000590220009c000000cf0000c13d000000240230008c000000cf0000413d0000000002000416000000000202004b000000cf0000c13d0000000401100370000000000501043b0000005c0150009c000000cf0000213d000000000100041a0000005c02100198000000880000c13d0000006001100197000000000151019f000000000010041b0000000001000414000000530210009c0000005301008041000000c00110021000000061011001c70000800d02000039000000020300003900000062040000410147013d0000040f0000000101200190000000cf0000613d0000006301000041000001480001042e0000000001000416000000000101004b000000cf0000c13d0000002001000039000001000010044300000120000004430000005401000041000001480001042e000000560120009c000000800000613d000000570120009c000000cf0000c13d0000000001000416000000000101004b000000cf0000c13d0000014001000039000000400010043f0000008402000039000000800020043f0000005a01000041000000c40010043f000000a001000039014701280000040f000001400010043f0000005b01000041000001480001042e000000440230008c000000cf0000413d0000000002000416000000000202004b000000cf0000c13d0000000401100370000000000301043b0000005c0130009c000000cf0000213d000000000100041a0000005c021001970000000001000411000000000221004b0000008c0000c13d000000a00030043f0000002001000039000000800010043f000000c001000039000000400010043f0000000001000414000000530210009c0000005301008041000000c00110021000000066011001c70000801002000039000300000003001d014701420000040f0000000102200190000000cf0000613d000000000101043b0000005a02000041000000e40020043f00000000020004140000006703000041000000c00030043f000000c40010043f0000006001000039000001040010043f000001240000043f000000530120009c0000005302008041000000c00120021000000068011001c700008006020000390147013d0000040f0000000102200190000000910000613d000000000101043b000000000201004b000000b90000c13d00000002010003670000000002000031000000960000013d0000000001000416000000000101004b000000cf0000c13d000000000100041a0000005c01100197000000800010043f0000005d01000041000001480001042e0000005e01000041000000800010043f0000005f0100004100000149000104300000006402000041000000800020043f000000840010043f00000065010000410000014900010430000200000001035500000000020100190000006002200270000000530020019d0000005302200197000000400300043d0000001f0420018f0000000505200272000000a20000613d00000005065002100000000006630019000000000701034f0000000008030019000000007907043c0000000008980436000000000968004b0000009e0000c13d000000000604004b000000b10000613d0000000505500210000000000151034f00000000055300190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f0000000000150435000000530120009c00000053020080410000006001200210000000530230009c00000053030080410000004002300210000000000112019f0000014900010430000000000200041a000200000002001d000000690200004100000000002004390000005c01100197000100000001001d00000004001004430000000001000414000000530210009c0000005301008041000000c0011002100000006a011001c70000800202000039014701420000040f00000002030000290000005c033001970000000102200190000000d10000613d000000000101043b000000000101004b0000000302000029000000d20000c13d00000000010000190000014900010430000000000001042f000000400400043d000000240140003900000000002104350000006b0100004100000000001404350000000401400039000000000031043500000024010000390000000101100367000000000101043b0000004402400039000000000012043500000000010004140000000102000029000000040220008c000000f60000613d000000530240009c000000530200004100000000020440190000004002200210000000530310009c0000005301008041000000c001100210000000000121019f0000006c011001c70000000102000029000300000004001d0147013d0000040f000000030400002900000000030100190000006003300270000000530030019d000000530330019700020000000103550000000102200190000001060000613d0000006d0140009c000000fe0000413d0000006f0100004100000000001004350000004101000039000000040010043f00000070010000410000014900010430000000400040043f00000001010000290000000000140435000000530140009c000000530400804100000040014002100000006e011001c7000001480001042e000000400200043d0000001f0430018f0000000505300272000001120000613d00000005065002100000000006620019000000000701034f0000000008020019000000007907043c0000000008980436000000000968004b0000010e0000c13d000000000604004b000001210000613d0000000505500210000000000151034f00000000055200190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f00000000001504350000006001300210000000530320009c00000053020080410000004002200210000000000112019f0000014900010430000000000001042f000000530310009c00000053010080410000004001100210000000530320009c00000053020080410000006002200210000000000112019f0000000002000414000000530320009c0000005302008041000000c002200210000000000112019f00000071011001c70000801002000039014701420000040f00000001022001900000013b0000613d000000000101043b000000000001042d0000000001000019000001490001043000000140002104210000000102000039000000000001042d0000000002000019000000000001042d00000145002104230000000102000039000000000001042d0000000002000019000000000001042d0000014700000432000001480001042e00000149000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000c45a015400000000000000000000000000000000000000000000000000000000c45a015500000000000000000000000000000000000000000000000000000000d64efe910000000000000000000000000000000000000000000000000000000027c74f7f000000000000000000000000000000000000000000000000000000005bb4780801000c157a6a234a3691a4db61078def28c0c3a8186f7d698eb83dbe9d1574600000000000000000000000000000000000000020000001400000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000020000000800000000000000000e7d06772000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000800000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000002000000000000000000000000000000000000000000008000000000000000001c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b90000000000000000000000000000000000000000000000800000000000000000a59d7f4d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000008000000000000000000200000000000000000000000000000000000020000000a000000000000000003cda33511d41a8a5431b1770c5bc0ddd62e1cd30555d16659b89c0d60f4f9f570200000000000000000000000000000000000084000000c000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000002000000000000000000000000000000240000000000000000000000001794bb3c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000200000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000020000000000000000000000000000000000000000000000000000000000000067e4f7246c39f23464f9ed5e67b52b44c33c4fc6854dde9b578c59ed2fdae8e2"},"methodIdentifiers":{"deployPool(address,uint256)":"27c74f7f","factory()":"c45a0155","poolInitCodeHash()":"d64efe91","setFactory(address)":"5bb47808"}},"irOptimized":"/// @use-src 1:\"contracts/PoolDeployer.sol\", 9:\"contracts/interfaces/IPoolDeployer.sol\"\nobject \"PoolDeployer_2777\" {\n    code {\n        {\n            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"PoolDeployer_2777_deployed\")\n            codecopy(_1, dataoffset(\"PoolDeployer_2777_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"contracts/PoolDeployer.sol\"\n    object \"PoolDeployer_2777_deployed\" {\n        code {\n            {\n                /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x27c74f7f {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        let _5 := 36\n                        let _6 := sub(shl(160, 1), 1)\n                        /// @src 1:368:423  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        if /** @src 1:372:393  \"msg.sender != factory\" */ iszero(eq(/** @src 1:372:382  \"msg.sender\" */ caller(), /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ and(sload(_4), _6)))\n                        /// @src 1:368:423  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 1:402:423  \"Forbidden(msg.sender)\"\n                            mstore(_1, shl(224, 0xa59d7f4d))\n                            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                            mstore(/** @src 1:402:423  \"Forbidden(msg.sender)\" */ add(_1, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _3), /** @src 1:372:382  \"msg.sender\" */ caller())\n                            /// @src 1:402:423  \"Forbidden(msg.sender)\"\n                            revert(_1, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _5)\n                        }\n                        /// @src 1:1005:1028  \"abi.encode(_quoteToken)\"\n                        let expr_mpos := /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ mload(_2)\n                        /// @src 1:1005:1028  \"abi.encode(_quoteToken)\"\n                        let _7 := add(expr_mpos, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ 32)\n                        let _8 := and(value0, _6)\n                        mstore(_7, _8)\n                        /// @src 1:1005:1028  \"abi.encode(_quoteToken)\"\n                        mstore(expr_mpos, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ 32)\n                        let newFreePtr := add(expr_mpos, _2)\n                        let _9 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _9), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, _5)\n                        }\n                        mstore(_2, newFreePtr)\n                        /// @src 1:995:1029  \"keccak256(abi.encode(_quoteToken))\"\n                        let expr := keccak256(/** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _7, mload(/** @src 1:995:1029  \"keccak256(abi.encode(_quoteToken))\" */ expr_mpos))\n                        /// @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\"\n                        let _10 := datasize(\"Pool_2664\")\n                        let _11 := add(/** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ expr_mpos, /** @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\" */ _10)\n                        let _12 := add(_11, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _2)\n                        /// @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\"\n                        if or(gt(_12, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _9), /** @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\" */ lt(_12, newFreePtr))\n                        {\n                            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, _5)\n                        }\n                        /// @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\"\n                        datacopy(newFreePtr, dataoffset(\"Pool_2664\"), _10)\n                        let expr_address := create2(/** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _4, /** @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\" */ newFreePtr, sub(_11, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ expr_mpos), /** @src 1:980:1032  \"new Pool{salt: keccak256(abi.encode(_quoteToken))}()\" */ expr)\n                        if iszero(expr_address)\n                        {\n                            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        let _13 := and(/** @src 1:972:1033  \"address(new Pool{salt: keccak256(abi.encode(_quoteToken))}())\" */ expr_address, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _6)\n                        let cleaned := and(sload(_4), _6)\n                        /// @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\"\n                        if iszero(extcodesize(_13))\n                        {\n                            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\"\n                        let _14 := /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ mload(_2)\n                        /// @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\"\n                        mstore(_14, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ shl(226, 0x05e52ecf))\n                        mstore(/** @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\" */ add(_14, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _3), cleaned)\n                        mstore(add(/** @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\" */ _14, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _5), _8)\n                        mstore(add(/** @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\" */ _14, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ 68), calldataload(_5))\n                        /// @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\"\n                        let _15 := call(gas(), _13, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _4, /** @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\" */ _14, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ 100, /** @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\" */ _14, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _4)\n                        /// @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\"\n                        if iszero(_15)\n                        {\n                            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 1:1053:1107  \"Pool(pool).initialize(factory, _quoteToken, _interest)\"\n                        if _15\n                        {\n                            /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                            if gt(_14, _9)\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x41)\n                                revert(_4, _5)\n                            }\n                            mstore(_2, _14)\n                        }\n                        let memPos := mload(_2)\n                        mstore(memPos, _13)\n                        return(memPos, 32)\n                    }\n                    case 0x5bb47808 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let _16 := sload(_4)\n                        let _17 := sub(shl(160, 1), 1)\n                        /// @src 1:504:558  \"if (factory != address(0)) revert InitializedAlready()\"\n                        if /** @src 1:508:529  \"factory != address(0)\" */ iszero(iszero(/** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ and(_16, _17)))\n                        /// @src 1:504:558  \"if (factory != address(0)) revert InitializedAlready()\"\n                        {\n                            /// @src 1:538:558  \"InitializedAlready()\"\n                            let _18 := /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ mload(_2)\n                            /// @src 1:538:558  \"InitializedAlready()\"\n                            mstore(_18, shl(225, 0x73e833b9))\n                            revert(_18, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _3)\n                        }\n                        let _19 := and(value0_1, _17)\n                        sstore(_4, or(and(_16, shl(160, 0xffffffffffffffffffffffff)), _19))\n                        /// @src 1:602:622  \"SetFactory(_factory)\"\n                        let _20 := /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ mload(_2)\n                        /// @src 1:602:622  \"SetFactory(_factory)\"\n                        log2(_20, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _4, /** @src 1:602:622  \"SetFactory(_factory)\" */ 0x1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b9, _19)\n                        /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                        return(_20, _4)\n                    }\n                    case 0xc45a0155 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0xd64efe91 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 1:722:745  \"type(Pool).creationCode\"\n                        let _21 := datasize(\"Pool_2664\")\n                        /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                        let memPtr := mload(_2)\n                        let newFreePtr_1 := add(memPtr, and(add(/** @src 1:722:745  \"type(Pool).creationCode\" */ _21, /** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ 63), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        /// @src 1:722:745  \"type(Pool).creationCode\"\n                        mstore(memPtr, _21)\n                        let _22 := add(memPtr, 32)\n                        datacopy(_22, dataoffset(\"Pool_2664\"), _21)\n                        /// @src 1:705:746  \"return keccak256(type(Pool).creationCode)\"\n                        let var := /** @src 1:712:746  \"keccak256(type(Pool).creationCode)\" */ keccak256(/** @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\" */ _22, mload(/** @src 1:712:746  \"keccak256(type(Pool).creationCode)\" */ memPtr))\n                        /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, var)\n                        return(memPos_2, /** @src 1:722:745  \"type(Pool).creationCode\" */ 32)\n                    }\n                }\n                /// @src 1:134:1116  \"contract PoolDeployer is IPoolDeployer {...\"\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n        }\n        /// @use-src 0:\"contracts/Pool.sol\", 2:\"contracts/base/Lockable.sol\", 8:\"contracts/interfaces/IPool.sol\"\n        object \"Pool_2664\" {\n            code {\n                {\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 2:122:123  \"1\" */ 0x00, 0x01)\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    let _2 := datasize(\"Pool_2664_deployed\")\n                    codecopy(_1, dataoffset(\"Pool_2664_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 0:\"contracts/Pool.sol\", 2:\"contracts/base/Lockable.sol\", 13:\"contracts/libraries/TransferHelper.sol\"\n            object \"Pool_2664_deployed\" {\n                code {\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        mstore(64, 128)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x0121c777 {\n                                external_fun_withdrawingLiquidity()\n                            }\n                            case 0x0adcf0f5 {\n                                external_fun_tradeableBaseToken()\n                            }\n                            case 0x122f7e8b { external_fun_open() }\n                            case 0x1794bb3c { external_fun_initialize() }\n                            case 0x19972a50 { external_fun_rollback() }\n                            case 0x1d086720 { external_fun_setInterest() }\n                            case 0x217a4b70 { external_fun_quoteToken() }\n                            case 0x27014e33 { external_fun_accProtocolFee() }\n                            case 0x32196a01 { external_fun_setBaseTokens() }\n                            case 0x40650eef {\n                                external_fun_setMaxOpenInterest()\n                            }\n                            case 0x5330e353 { external_fun_updateDeadline() }\n                            case 0x59129e75 {\n                                external_fun_closeManuallyStep1()\n                            }\n                            case 0x653741ff { external_fun_addBurnRequest() }\n                            case 0x685b61d0 { external_fun_quoteInDebt() }\n                            case 0x6b8357ac { external_fun_collect() }\n                            case 0x74375359 {\n                                external_fun_availableLiquidity()\n                            }\n                            case 0x8b6e00fa {\n                                external_fun_collateralReserve()\n                            }\n                            case 0x8cd47415 {\n                                external_fun_positionStorage()\n                            }\n                            case 0x94d008ef { external_fun_mint() }\n                            case 0x9da771f4 { external_fun_quoteReserve() }\n                            case 0xa1c59afc { external_fun_claimableFee() }\n                            case 0xa4fbc0d7 {\n                                external_fun_withdrawalMonitor()\n                            }\n                            case 0xada3112f { external_fun_accFee() }\n                            case 0xba343922 { external_fun_availLiquidity() }\n                            case 0xc392f766 { external_fun_interest() }\n                            case 0xc45a0155 { external_fun_factory() }\n                            case 0xc6f61b01 {\n                                external_fun_updateCollateralAmount()\n                            }\n                            case 0xd3b5dc3b { external_fun_precision() }\n                            case 0xd4fd6905 {\n                                external_fun_liquidityPosition()\n                            }\n                            case 0xd8f2cab7 {\n                                external_fun_closeManuallyStep2()\n                            }\n                            case 0xdc6638f4 {\n                                external_fun_maxOpenInterest()\n                            }\n                            case 0xdd3b829a { external_fun_accFeePerShare() }\n                            case 0xfa5a2e62 { external_fun_openInterest() }\n                            case 0xfb2b74b2 { external_fun_burn() }\n                            case 0xfba0c814 { external_fun_close() }\n                            case 0xffc9dcbb { external_fun_baseReserve() }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode(headStart, dataEnd)\n                    {\n                        if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n                    }\n                    function abi_encode_uint256(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 32)\n                        mstore(headStart, value0)\n                    }\n                    function external_fun_withdrawingLiquidity()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:942:986  \"uint256 public override withdrawingLiquidity\" */ 11)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function cleanup_address(value) -> cleaned\n                    {\n                        cleaned := and(value, sub(shl(160, 1), 1))\n                    }\n                    function validator_revert_address(value)\n                    {\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_20682() -> value\n                    {\n                        value := calldataload(4)\n                        validator_revert_address(value)\n                    }\n                    function abi_decode_address_20683() -> value\n                    {\n                        value := calldataload(36)\n                        validator_revert_address(value)\n                    }\n                    function abi_decode_address_20684() -> value\n                    {\n                        value := calldataload(68)\n                        validator_revert_address(value)\n                    }\n                    function abi_decode_address_20685() -> value\n                    {\n                        value := calldataload(100)\n                        validator_revert_address(value)\n                    }\n                    function abi_decode_address(offset) -> value\n                    {\n                        value := calldataload(offset)\n                        validator_revert_address(value)\n                    }\n                    function mapping_index_access_mapping_address_bool_of_address_20710(key) -> dataSlot\n                    {\n                        mstore(0, and(key, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:9968:9985  \"liquidityPosition\" */ 0x12)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        dataSlot := keccak256(0, 0x40)\n                    }\n                    function mapping_index_access_mapping_address_bool_of_address_20742(key) -> dataSlot\n                    {\n                        mstore(0, and(key, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:6980:6998  \"tradeableBaseToken\" */ 0x0f)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        dataSlot := keccak256(0, 0x40)\n                    }\n                    function mapping_index_access_mapping_address_bool_of_address(key) -> dataSlot\n                    {\n                        mstore(0, and(key, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:15460:15471  \"baseReserve\" */ 0x10)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        dataSlot := keccak256(0, 0x40)\n                    }\n                    function mapping_index_access_mapping_address_bool_of_address_20791(key) -> dataSlot\n                    {\n                        mstore(0, and(key, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:15522:15539  \"collateralReserve\" */ 0x11)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        dataSlot := keccak256(0, 0x40)\n                    }\n                    function cleanup_bool(value) -> cleaned\n                    {\n                        cleaned := iszero(iszero(value))\n                    }\n                    function external_fun_tradeableBaseToken()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1116:1175  \"mapping(address => bool) public override tradeableBaseToken\" */ 15)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value_1 := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40)), 0xff)\n                        let memPos := mload(0x40)\n                        mstore(memPos, iszero(iszero(value_1)))\n                        return(memPos, 32)\n                    }\n                    function panic_error_0x41()\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    function finalize_allocation_20704(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0xa0)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_20719(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation_20721(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 128)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_20731(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0xc0)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function allocate_memory_20681() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, 320)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function allocate_memory() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, 0x01c0)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function external_fun_open()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 320)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := allocate_memory_20681()\n                        mstore(value, abi_decode_address_20682())\n                        mstore(add(value, 32), abi_decode_address_20683())\n                        mstore(add(value, 64), abi_decode_address_20684())\n                        mstore(add(value, 96), abi_decode_address_20685())\n                        mstore(add(value, 128), calldataload(132))\n                        mstore(add(value, 160), calldataload(164))\n                        mstore(add(value, 192), calldataload(196))\n                        mstore(add(value, 224), calldataload(228))\n                        mstore(add(value, 256), calldataload(260))\n                        mstore(add(value, 288), calldataload(292))\n                        /// @src 0:14380:14399  \"bytes32 positionKey\"\n                        let var_positionKey := modifier_lock_20692(value)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_uint256(memPos, var_positionKey), memPos))\n                    }\n                    function external_fun_initialize()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        let value_1 := calldataload(36)\n                        validator_revert_address(value_1)\n                        let _1 := sub(shl(160, 1), 1)\n                        /// @src 0:4291:4345  \"if (factory != address(0)) revert InitializedAlready()\"\n                        if /** @src 0:4295:4316  \"factory != address(0)\" */ iszero(iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(cleanup_address(sload(/** @src 0:4295:4302  \"factory\" */ 0x01)), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)))\n                        /// @src 0:4291:4345  \"if (factory != address(0)) revert InitializedAlready()\"\n                        {\n                            /// @src 0:4325:4345  \"InitializedAlready()\"\n                            let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4325:4345  \"InitializedAlready()\"\n                            mstore(_2, shl(225, 0x73e833b9))\n                            revert(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        /// @src 0:4355:4373  \"factory = _factory\"\n                        update_storage_value_offsett_address_to_address(value)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _3 := and(/** @src 0:4401:4419  \"IFactory(_factory)\" */ value, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                        let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                        mstore(_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x8cd47415))\n                        let _5 := 32\n                        /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                        let _6 := staticcall(gas(), _3, _4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4, /** @src 0:4401:4437  \"IFactory(_factory).positionStorage()\" */ _4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                        /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                        if iszero(_6) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                        if _6\n                        {\n                            let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5\n                            /// @src 0:4401:4437  \"IFactory(_factory).positionStorage()\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:4401:4437  \"IFactory(_factory).positionStorage()\" */ returndatasize()) { _7 := returndatasize() }\n                            finalize_allocation(_4, _7)\n                            expr := abi_decode_tuple_address_fromMemory(_4, add(_4, _7))\n                        }\n                        /// @src 0:4383:4437  \"positionStorage = IFactory(_factory).positionStorage()\"\n                        update_storage_value_offsett_address_to_address_20695(expr)\n                        /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                        let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                        mstore(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xa4fbc0d7))\n                        /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                        let _9 := staticcall(gas(), _3, _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4, /** @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\" */ _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                        /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                        if iszero(_9) { revert_forward() }\n                        let expr_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                        if _9\n                        {\n                            let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5\n                            /// @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:4467:4505  \"IFactory(_factory).withdrawalMonitor()\" */ returndatasize()) { _10 := returndatasize() }\n                            finalize_allocation(_8, _10)\n                            expr_1 := abi_decode_tuple_address_fromMemory(_8, add(_8, _10))\n                        }\n                        /// @src 0:4447:4505  \"withdrawalMonitor = IFactory(_factory).withdrawalMonitor()\"\n                        update_storage_value_offsett_address_to_address_20696(expr_1)\n                        /// @src 0:4515:4539  \"quoteToken = _quoteToken\"\n                        update_storage_value_offsett_address_to_address_20697(value_1)\n                        /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                        let _11 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                        mstore(_11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x313ce567))\n                        /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                        let _12 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:4567:4586  \"IERC20(_quoteToken)\" */ value_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\" */ _11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4, /** @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\" */ _11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                        /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                        if iszero(_12) { revert_forward() }\n                        let expr_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                        if _12\n                        {\n                            let _13 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5\n                            /// @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:4567:4597  \"IERC20(_quoteToken).decimals()\" */ returndatasize()) { _13 := returndatasize() }\n                            finalize_allocation(_11, _13)\n                            expr_2 := abi_decode_uint8_fromMemory(_11, add(_11, _13))\n                        }\n                        /// @src 0:4549:4597  \"precision = 10 ** IERC20(_quoteToken).decimals()\"\n                        update_storage_value_offsett_uint256_to_uint256_20698(/** @src 0:4561:4597  \"10 ** IERC20(_quoteToken).decimals()\" */ checked_exp_rational_by_uint8(expr_2))\n                        /// @src 0:4607:4627  \"interest = _interest\"\n                        update_storage_value_offsett_uint256_to_uint256_20699(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(68))\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_decode_struct_RollbackTradePositionParams_calldata_20700(end) -> value\n                    {\n                        if slt(add(end, not(3)), 128) { revert(0, 0) }\n                        value := 4\n                    }\n                    function abi_decode_struct_RollbackTradePositionParams_calldata(offset, end) -> value\n                    {\n                        if slt(sub(end, offset), 128) { revert(0, 0) }\n                        value := offset\n                    }\n                    function external_fun_rollback()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value0 := abi_decode_struct_RollbackTradePositionParams_calldata_20700(calldatasize())\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                        let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, 32)\n                        if iszero(_3) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                        }\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        {\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            mstore(_5, shl(224, 0xa59d7f4d))\n                            revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                        }\n                        /// @src 0:4893:4894  \"_\"\n                        fun_rollback_inner(value0)\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_setInterest()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value0 := calldataload(4)\n                        /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        if /** @src 0:4677:4698  \"msg.sender != factory\" */ iszero(eq(/** @src 0:4677:4687  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:4691:4698  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            mstore(_1, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            mstore(/** @src 0:4707:4728  \"Forbidden(msg.sender)\" */ add(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4677:4687  \"msg.sender\" */ caller())\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                        }\n                        sstore(/** @src 0:6330:6350  \"interest = _interest\" */ 0x06, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value0)\n                        /// @src 0:6366:6388  \"SetInterest(_interest)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        mstore(_2, value0)\n                        /// @src 0:6366:6388  \"SetInterest(_interest)\"\n                        log1(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32, /** @src 0:6366:6388  \"SetInterest(_interest)\" */ 0x81ed86e8cfa3004fc54732477c3eda4f4c606394a0b423aba78153a3e696f65d)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_encode_address(value, pos)\n                    {\n                        mstore(pos, and(value, sub(shl(160, 1), 1)))\n                    }\n                    function abi_encode_tuple_address(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 32)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                    }\n                    function external_fun_quoteToken()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(4), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    function external_fun_accProtocolFee()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:1028:1066  \"uint256 public override accProtocolFee\" */ 13)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function array_allocation_size_array_address_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function validator_revert_bool(value)\n                    {\n                        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n                    }\n                    function abi_decode_array_bool_dyn(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := calldataload(offset)\n                        let _2 := 0x20\n                        let _3 := array_allocation_size_array_address_dyn(_1)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _3)\n                        let dst := memPtr\n                        mstore(memPtr, _1)\n                        dst := add(memPtr, _2)\n                        let srcEnd := add(add(offset, shl(5, _1)), _2)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let src := add(offset, _2)\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            let value := calldataload(src)\n                            validator_revert_bool(value)\n                            mstore(dst, value)\n                            dst := add(dst, _2)\n                        }\n                        array := memPtr\n                    }\n                    function external_fun_setBaseTokens()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let offset := calldataload(4)\n                        let _1 := 0xffffffffffffffff\n                        if gt(offset, _1)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        if iszero(slt(add(offset, 35), calldatasize()))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _2 := calldataload(add(4, offset))\n                        let _3 := array_allocation_size_array_address_dyn(_2)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _3)\n                        let dst := memPtr\n                        mstore(memPtr, _2)\n                        let _4 := 0x20\n                        dst := add(memPtr, _4)\n                        let srcEnd := add(add(offset, shl(5, _2)), 36)\n                        if gt(srcEnd, calldatasize())\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let src := add(offset, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _4) }\n                        {\n                            let value := calldataload(src)\n                            validator_revert_address(value)\n                            mstore(dst, value)\n                            dst := add(dst, _4)\n                        }\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _1)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:6608:7125  \"function setBaseTokens(...\"\n                        modifier_onlyFactory(memPtr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ abi_decode_array_bool_dyn(add(4, offset_1), calldatasize()))\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_setMaxOpenInterest()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value0 := calldataload(4)\n                        /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        if /** @src 0:4677:4698  \"msg.sender != factory\" */ iszero(eq(/** @src 0:4677:4687  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:4691:4698  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            mstore(_1, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            mstore(/** @src 0:4707:4728  \"Forbidden(msg.sender)\" */ add(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4677:4687  \"msg.sender\" */ caller())\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                        }\n                        sstore(/** @src 0:6509:6543  \"maxOpenInterest = _maxOpenInterest\" */ 0x07, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value0)\n                        /// @src 0:6559:6595  \"SetMaxOpenInterest(_maxOpenInterest)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        mstore(_2, value0)\n                        /// @src 0:6559:6595  \"SetMaxOpenInterest(_maxOpenInterest)\"\n                        log1(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32, /** @src 0:6559:6595  \"SetMaxOpenInterest(_maxOpenInterest)\" */ 0x9290d3ed14fa81f8d341842ac22f26e4bb4449e0d0a8566656d54dafae29198e)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_decode_struct_UpdateDeadlineParams(end) -> value\n                    {\n                        if slt(add(end, not(3)), 0xa0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        finalize_allocation_20704(memPtr)\n                        value := memPtr\n                        mstore(memPtr, calldataload(4))\n                        mstore(add(memPtr, 32), calldataload(36))\n                        let value_1 := calldataload(68)\n                        validator_revert_address(value_1)\n                        mstore(add(memPtr, 64), value_1)\n                        let value_2 := calldataload(100)\n                        validator_revert_address(value_2)\n                        mstore(add(memPtr, 96), value_2)\n                        mstore(add(memPtr, 128), calldataload(132))\n                    }\n                    function external_fun_updateDeadline()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value0 := abi_decode_struct_UpdateDeadlineParams(calldatasize())\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                        let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, 32)\n                        if iszero(_3) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                        }\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        {\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            mstore(_5, shl(224, 0xa59d7f4d))\n                            revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                        }\n                        /// @src 0:4893:4894  \"_\"\n                        fun_updateDeadline_inner(value0)\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_closeManuallyStep1()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(36)\n                        validator_revert_address(value)\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                        let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if iszero(_3) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if _3\n                        {\n                            let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                            /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4, /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                        }\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        {\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            mstore(_5, shl(224, 0xa59d7f4d))\n                            revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                        }\n                        /// @src 0:4893:4894  \"_\"\n                        fun_closeManuallyStep1_inner(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(4), /** @src 0:4893:4894  \"_\" */ value)\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                    }\n                    function external_fun_addBurnRequest()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := 4\n                        let value0 := calldataload(_1)\n                        let value := calldataload(36)\n                        validator_revert_address(value)\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value2, value3 := abi_decode_bytes_calldata(add(_1, offset), calldatasize())\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_2, shl(226, 0x03cb96db))\n                            revert(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:9968:9997  \"liquidityPosition[msg.sender]\"\n                        let _3 := mapping_index_access_mapping_address_bool_of_address_20710(/** @src 0:9986:9996  \"msg.sender\" */ caller())\n                        /// @src 0:10024:10048  \"pos.withdrawingLiquidity\"\n                        let _4 := add(_3, 3)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _5 := sload(/** @src 0:10024:10048  \"pos.withdrawingLiquidity\" */ _4)\n                        /// @src 0:10011:10048  \"_liquidity + pos.withdrawingLiquidity\"\n                        let expr := checked_add_uint256(value0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5)\n                        /// @src 0:10007:10105  \"if (_liquidity + pos.withdrawingLiquidity > pos.liquidity)...\"\n                        if /** @src 0:10011:10064  \"_liquidity + pos.withdrawingLiquidity > pos.liquidity\" */ gt(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:10051:10064  \"pos.liquidity\" */ _3))\n                        /// @src 0:10007:10105  \"if (_liquidity + pos.withdrawingLiquidity > pos.liquidity)...\"\n                        {\n                            /// @src 0:10085:10105  \"InsufficientOutput()\"\n                            let _6 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:10085:10105  \"InsufficientOutput()\"\n                            mstore(_6, shl(224, 0xbb2875c3))\n                            revert(_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        }\n                        sstore(_4, /** @src 0:10116:10154  \"pos.withdrawingLiquidity += _liquidity\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5, /** @src 0:10116:10154  \"pos.withdrawingLiquidity += _liquidity\" */ value0))\n                        /// @src 0:10164:10198  \"withdrawingLiquidity += _liquidity\"\n                        update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:10164:10198  \"withdrawingLiquidity += _liquidity\" */ 0x0b), value0))\n                        /// @src 0:10304:10322  \"monitor.addRequest\"\n                        let expr_address := cleanup_address(/** @src 0:10238:10275  \"IWithdrawalMonitor(withdrawalMonitor)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:10024:10048  \"pos.withdrawingLiquidity\" */ 3))))\n                        /// @src 0:10335:10345  \"quoteToken\"\n                        let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(_1))\n                        /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                        let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                        mstore(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(227, 0x130e06fd))\n                        /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                        let _9 := call(gas(), expr_address, /** @src -1:-1:-1 */ 0, /** @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\" */ _8, sub(abi_encode_address_address_uint256_address_bytes_calldata(add(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:9986:9996  \"msg.sender\" */ caller(), /** @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\" */ _7, value0, value, value2, value3), _8), _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                        /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                        if iszero(_9) { revert_forward() }\n                        let expr_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                        if _9\n                        {\n                            let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                            /// @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _10, /** @src 0:10304:10370  \"monitor.addRequest(msg.sender, quoteToken, _liquidity, _to, _data)\" */ returndatasize()) { _10 := returndatasize() }\n                            finalize_allocation(_8, _10)\n                            expr_1 := abi_decode_uint256_fromMemory(_8, add(_8, _10))\n                        }\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20712()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_uint256(memPos, expr_1), memPos))\n                    }\n                    function external_fun_quoteInDebt()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:901:936  \"uint256 public override quoteInDebt\" */ 10)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_collect()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        let value1 := calldataload(36)\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:8996:9764  \"if (_amount > 0) {...\"\n                        if /** @src 0:9000:9011  \"_amount > 0\" */ iszero(iszero(value1))\n                        /// @src 0:8996:9764  \"if (_amount > 0) {...\"\n                        {\n                            /// @src 0:9059:9088  \"liquidityPosition[msg.sender]\"\n                            let _2 := mapping_index_access_mapping_address_bool_of_address_20710(/** @src 0:9077:9087  \"msg.sender\" */ caller())\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _3 := sload(/** @src 0:9129:9143  \"accFeePerShare\" */ 0x0e)\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _4 := sload(/** @src 0:9178:9187  \"precision\" */ 0x05)\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _5 := sload(/** @src 0:9206:9219  \"pos.liquidity\" */ _2)\n                            /// @src 0:9202:9396  \"if (pos.liquidity > 0) {...\"\n                            if /** @src 0:9206:9223  \"pos.liquidity > 0\" */ iszero(iszero(_5))\n                            /// @src 0:9202:9396  \"if (pos.liquidity > 0) {...\"\n                            {\n                                /// @src 0:9281:9347  \"(_accFeePerShare * pos.liquidity) /...\"\n                                let expr := checked_div_uint256(/** @src 0:9282:9313  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5), /** @src 0:9281:9347  \"(_accFeePerShare * pos.liquidity) /...\" */ _4)\n                                /// @src 0:9281:9381  \"(_accFeePerShare * pos.liquidity) /...\"\n                                let expr_1 := checked_sub_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:9370:9381  \"pos.feeDebt\" */ add(_2, /** @src 2:193:194  \"1\" */ 0x01)))\n                                /// @src 0:9243:9257  \"pos.pendingFee\"\n                                let _6 := add(_2, 2)\n                                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                sstore(_6, /** @src 0:9243:9381  \"pos.pendingFee +=...\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:9243:9381  \"pos.pendingFee +=...\" */ _6), expr_1))\n                            }\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            sstore(/** @src 0:9409:9420  \"pos.feeDebt\" */ add(_2, /** @src 2:193:194  \"1\" */ 0x01), /** @src 0:9423:9469  \"(_accFeePerShare * pos.liquidity) / _precision\" */ checked_div_uint256(/** @src 0:9424:9455  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _5), /** @src 0:9423:9469  \"(_accFeePerShare * pos.liquidity) / _precision\" */ _4))\n                            /// @src 0:9498:9512  \"pos.pendingFee\"\n                            let _7 := add(_2, 2)\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _8 := sload(/** @src 0:9498:9512  \"pos.pendingFee\" */ _7)\n                            /// @src 0:9488:9532  \"_amount > pos.pendingFee || _amount > accFee\"\n                            let expr_2 := /** @src 0:9488:9512  \"_amount > pos.pendingFee\" */ gt(value1, _8)\n                            /// @src 0:9488:9532  \"_amount > pos.pendingFee || _amount > accFee\"\n                            if iszero(expr_2)\n                            {\n                                expr_2 := /** @src 0:9516:9532  \"_amount > accFee\" */ gt(value1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:9526:9532  \"accFee\" */ 0x0c))\n                            }\n                            /// @src 0:9484:9594  \"if (_amount > pos.pendingFee || _amount > accFee) {...\"\n                            if expr_2\n                            {\n                                /// @src 0:9559:9579  \"InsufficientOutput()\"\n                                let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                                /// @src 0:9559:9579  \"InsufficientOutput()\"\n                                mstore(_9, /** @src 0:10085:10105  \"InsufficientOutput()\" */ shl(224, 0xbb2875c3))\n                                /// @src 0:9559:9579  \"InsufficientOutput()\"\n                                revert(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                            }\n                            sstore(_7, /** @src 0:9607:9632  \"pos.pendingFee -= _amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _8, /** @src 0:9607:9632  \"pos.pendingFee -= _amount\" */ value1))\n                            /// @src 0:9692:9699  \"_amount\"\n                            fun_safeTransfer(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(4)), /** @src 0:9692:9699  \"_amount\" */ value, value1)\n                            /// @src 0:9720:9753  \"Collect(msg.sender, _to, _amount)\"\n                            let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:9720:9753  \"Collect(msg.sender, _to, _amount)\"\n                            log3(_10, sub(abi_encode_uint256(_10, value1), _10), 0x1314fd112a381beea61539dbd21ec04afcff2662ac7d1b83273aade1f53d1b97, /** @src 0:9077:9087  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:9720:9753  \"Collect(msg.sender, _to, _amount)\" */ value, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)))\n                        }\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_availableLiquidity()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := /** @src 0:5849:5870  \"_availableLiquidity()\" */ fun_availableLiquidity()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    function external_fun_collateralReserve()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1242:1303  \"mapping(address => uint256) public override collateralReserve\" */ 17)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40))\n                        let memPos := mload(0x40)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_positionStorage()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(/** @src 0:536:575  \"address public override positionStorage\" */ 2), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    function external_fun_mint()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := 4\n                        let value := calldataload(_1)\n                        validator_revert_address(value)\n                        let value1 := calldataload(36)\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value2, value3 := abi_decode_bytes_calldata(add(_1, offset), calldatasize())\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ _2), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_3, shl(226, 0x03cb96db))\n                            revert(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        }\n                        sstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 0:8019:8029  \"quoteToken\"\n                        let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(_1))\n                        /// @src 0:8071:8093  \"liquidityPosition[_to]\"\n                        let _5 := mapping_index_access_mapping_address_bool_of_address_20710(value)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _6 := sload(/** @src 0:8130:8144  \"accFeePerShare\" */ 0x0e)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _7 := sload(/** @src 0:8175:8184  \"precision\" */ 0x05)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _8 := sload(/** @src 0:8199:8212  \"pos.liquidity\" */ _5)\n                        /// @src 0:8195:8369  \"if (pos.liquidity > 0) {...\"\n                        if /** @src 0:8199:8216  \"pos.liquidity > 0\" */ iszero(iszero(_8))\n                        /// @src 0:8195:8369  \"if (pos.liquidity > 0) {...\"\n                        {\n                            /// @src 0:8266:8328  \"(_accFeePerShare * pos.liquidity) /...\"\n                            let expr := checked_div_uint256(/** @src 0:8267:8298  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _8), /** @src 0:8266:8328  \"(_accFeePerShare * pos.liquidity) /...\" */ _7)\n                            /// @src 0:8266:8358  \"(_accFeePerShare * pos.liquidity) /...\"\n                            let expr_1 := checked_sub_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:8347:8358  \"pos.feeDebt\" */ add(_5, /** @src 2:193:194  \"1\" */ 0x01)))\n                            /// @src 0:8232:8246  \"pos.pendingFee\"\n                            let _9 := add(_5, 2)\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            sstore(_9, /** @src 0:8232:8358  \"pos.pendingFee +=...\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:8232:8358  \"pos.pendingFee +=...\" */ _9), expr_1))\n                        }\n                        /// @src 0:8378:8405  \"pos.liquidity += _liquidity\"\n                        let _10 := checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _8, /** @src 0:8378:8405  \"pos.liquidity += _liquidity\" */ value1)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_5, _10)\n                        sstore(/** @src 0:8415:8426  \"pos.feeDebt\" */ add(_5, /** @src 2:193:194  \"1\" */ 0x01), /** @src 0:8429:8475  \"(_accFeePerShare * pos.liquidity) / _precision\" */ checked_div_uint256(/** @src 0:8430:8461  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _10), /** @src 0:8429:8475  \"(_accFeePerShare * pos.liquidity) / _precision\" */ _7))\n                        /// @src 0:8486:8512  \"quoteReserve += _liquidity\"\n                        update_storage_value_offsett_uint256_to_uint256_20718(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:8486:8512  \"quoteReserve += _liquidity\" */ 0x09), value1))\n                        fun_transferProtocolFee()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _11 := sub(shl(160, 1), 1)\n                        let _12 := and(/** @src 0:8579:8598  \"IERC20(_quoteToken)\" */ _4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11)\n                        let _13 := 64\n                        /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        let _14 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                        let _15 := shl(224, 0x70a08231)\n                        /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        mstore(_14, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15)\n                        let _16 := 32\n                        /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        let _17 := staticcall(gas(), _12, _14, sub(abi_encode_tuple_address(add(_14, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:8617:8621  \"this\" */ address()), /** @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\" */ _14), _14, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16)\n                        /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        if iszero(_17) { revert_forward() }\n                        let expr_2 := /** @src -1:-1:-1 */ _2\n                        /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        if _17\n                        {\n                            let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16\n                            /// @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16, /** @src 0:8579:8623  \"IERC20(_quoteToken).balanceOf(address(this))\" */ returndatasize()) { _18 := returndatasize() }\n                            finalize_allocation(_14, _18)\n                            expr_2 := abi_decode_uint256_fromMemory(_14, add(_14, _18))\n                        }\n                        /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                        if iszero(extcodesize(/** @src 0:8647:8657  \"msg.sender\" */ caller()))\n                        /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src -1:-1:-1 */ _2, _2)\n                        }\n                        /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                        let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                        /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                        mstore(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x03a3bcd7))\n                        /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                        let _20 := call(gas(), /** @src 0:8647:8657  \"msg.sender\" */ caller(), /** @src -1:-1:-1 */ _2, /** @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\" */ _19, sub(abi_encode_address_uint256_bytes_calldata(add(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\" */ _4, value1, value2, value3), _19), _19, /** @src -1:-1:-1 */ _2)\n                        /// @src 0:8633:8703  \"IMintCallback(msg.sender).mintCallback(_quoteToken, _liquidity, _data)\"\n                        if iszero(_20) { revert_forward() }\n                        if _20\n                        {\n                            finalize_allocation_20719(_19)\n                            abi_decode(_19, _19)\n                        }\n                        /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                        /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        mstore(_21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15)\n                        /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        let _22 := staticcall(gas(), _12, _21, sub(abi_encode_tuple_address(add(_21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1), /** @src 0:8617:8621  \"this\" */ address()), /** @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\" */ _21), _21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16)\n                        /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        if iszero(_22) { revert_forward() }\n                        let expr_3 := /** @src -1:-1:-1 */ _2\n                        /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        if _22\n                        {\n                            let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16\n                            /// @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16, /** @src 0:8732:8776  \"IERC20(_quoteToken).balanceOf(address(this))\" */ returndatasize()) { _23 := returndatasize() }\n                            finalize_allocation(_21, _23)\n                            expr_3 := abi_decode_uint256_fromMemory(_21, add(_21, _23))\n                        }\n                        /// @src 0:8786:8854  \"if (balance < balanceBefore + _liquidity) revert InsufficientInput()\"\n                        if /** @src 0:8790:8826  \"balance < balanceBefore + _liquidity\" */ lt(expr_3, /** @src 0:8800:8826  \"balanceBefore + _liquidity\" */ checked_add_uint256(expr_2, value1))\n                        /// @src 0:8786:8854  \"if (balance < balanceBefore + _liquidity) revert InsufficientInput()\"\n                        {\n                            /// @src 0:8835:8854  \"InsufficientInput()\"\n                            let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                            /// @src 0:8835:8854  \"InsufficientInput()\"\n                            mstore(_24, shl(224, 0xf8b3bb61))\n                            revert(_24, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        }\n                        /// @src 0:8870:8903  \"Mint(msg.sender, _to, _liquidity)\"\n                        let _25 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_13)\n                        /// @src 0:8870:8903  \"Mint(msg.sender, _to, _liquidity)\"\n                        log3(_25, sub(abi_encode_uint256(_25, value1), _25), 0xab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8, /** @src 0:8647:8657  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:8870:8903  \"Mint(msg.sender, _to, _liquidity)\" */ value, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11))\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(_13), /** @src -1:-1:-1 */ _2)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_quoteReserve()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:859:895  \"uint256 public override quoteReserve\" */ 9)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_claimableFee()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        let var_amount := /** @src -1:-1:-1 */ 0\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        mstore(/** @src -1:-1:-1 */ var_amount, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:6024:6041  \"liquidityPosition\" */ 0x12)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ var_amount, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40)\n                        let memPtr := mload(0x40)\n                        finalize_allocation_20721(memPtr)\n                        let _1 := sload(dataSlot)\n                        mstore(memPtr, _1)\n                        let _2 := sload(add(dataSlot, 1))\n                        let _3 := add(memPtr, 32)\n                        mstore(_3, _2)\n                        let _4 := sload(add(dataSlot, 2))\n                        mstore(add(memPtr, 0x40), _4)\n                        mstore(add(memPtr, 96), sload(add(dataSlot, 3)))\n                        /// @src 0:6110:6140  \"accFeePerShare * pos.liquidity\"\n                        let expr := checked_mul_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:6110:6124  \"accFeePerShare\" */ 0x0e), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        /// @src 0:6080:6165  \"pos.pendingFee +...\"\n                        let expr_1 := checked_add_uint256(_4, /** @src 0:6109:6165  \"(accFeePerShare * pos.liquidity) /...\" */ checked_div_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:6156:6165  \"precision\" */ 0x05)))\n                        /// @src 0:6059:6191  \"amount =...\"\n                        var_amount := /** @src 0:6080:6191  \"pos.pendingFee +...\" */ checked_sub_uint256(expr_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:6180:6191  \"pos.feeDebt\" */ _3))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _5 := sload(/** @src 0:6214:6220  \"accFee\" */ 0x0c)\n                        /// @src 0:6201:6237  \"if (amount > accFee) amount = accFee\"\n                        if /** @src 0:6205:6220  \"amount > accFee\" */ gt(var_amount, _5)\n                        /// @src 0:6201:6237  \"if (amount > accFee) amount = accFee\"\n                        {\n                            /// @src 0:6222:6237  \"amount = accFee\"\n                            var_amount := _5\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(0x40)\n                        return(memPos, sub(abi_encode_uint256(memPos, var_amount), memPos))\n                    }\n                    function external_fun_withdrawalMonitor()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(/** @src 0:581:622  \"address public override withdrawalMonitor\" */ 3), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    function external_fun_accFee()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:992:1022  \"uint256 public override accFee\" */ 12)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_availLiquidity()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:7729:7819  \"if (msg.sender != withdrawalMonitor) {...\"\n                        if /** @src 0:7733:7764  \"msg.sender != withdrawalMonitor\" */ iszero(eq(/** @src 0:7733:7743  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:7747:7764  \"withdrawalMonitor\" */ 0x03), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:7729:7819  \"if (msg.sender != withdrawalMonitor) {...\"\n                        {\n                            /// @src 0:7787:7808  \"Forbidden(msg.sender)\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:7787:7808  \"Forbidden(msg.sender)\"\n                            mstore(_1, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            mstore(/** @src 0:7787:7808  \"Forbidden(msg.sender)\" */ add(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:7733:7743  \"msg.sender\" */ caller())\n                            /// @src 0:7787:7808  \"Forbidden(msg.sender)\"\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                        }\n                        sstore(/** @src 0:7828:7852  \"withdrawingLiquidity = 0\" */ 0x0b, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0)\n                        return(mload(64), 0)\n                    }\n                    function external_fun_interest()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:707:739  \"uint256 public override interest\" */ 6)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_factory()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value := and(sload(/** @src 0:499:530  \"address public override factory\" */ 1), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value)\n                        return(memPos, 32)\n                    }\n                    function external_fun_updateCollateralAmount()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value0 := abi_decode_struct_UpdateDeadlineParams(calldatasize())\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                        let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, 32)\n                        if iszero(_3) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(_4, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                        }\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        {\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            mstore(_5, shl(224, 0xa59d7f4d))\n                            revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                        }\n                        /// @src 0:4893:4894  \"_\"\n                        let _6 := /** @src 0:27134:28085  \"function updateCollateralAmount(...\" */ fun_updateCollateralAmount_inner(/** @src 0:4893:4894  \"_\" */ value0)\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20712()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_uint256(memPos, _6), memPos))\n                    }\n                    function external_fun_precision()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:668:701  \"uint256 public override precision\" */ 5)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_liquidityPosition()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ 18)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40)\n                        let _1 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ dataSlot)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _2 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ add(dataSlot, 1))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _3 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ add(dataSlot, 2))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _4 := sload(/** @src 0:1309:1380  \"mapping(address => LiquidityPosition) public override liquidityPosition\" */ add(dataSlot, 3))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(0x40)\n                        mstore(memPos, _1)\n                        mstore(add(memPos, 32), _2)\n                        mstore(add(memPos, 0x40), _3)\n                        mstore(add(memPos, 96), _4)\n                        return(memPos, 128)\n                    }\n                    function external_fun_closeManuallyStep2()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                        let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if iszero(_3) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if _3\n                        {\n                            let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                            /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4, /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                        }\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        {\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            mstore(_5, shl(224, 0xa59d7f4d))\n                            revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                        }\n                        /// @src 0:4893:4894  \"_\"\n                        fun_closeManuallyStep2_inner(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(4), calldataload(36), calldataload(68), calldataload(100))\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_maxOpenInterest()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:771:810  \"uint256 public override maxOpenInterest\" */ 7)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_accFeePerShare()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:1072:1110  \"uint256 public override accFeePerShare\" */ 14)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function external_fun_openInterest()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(/** @src 0:816:852  \"uint256 public override openInterest\" */ 8)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    function abi_decode_bytes(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := calldataload(offset)\n                        let _2 := array_allocation_size_bytes(_1)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _2)\n                        mstore(memPtr, _1)\n                        if gt(add(add(offset, _1), 0x20), end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                        mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        array := memPtr\n                    }\n                    function external_fun_burn()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        let _1 := not(3)\n                        if slt(add(calldatasize(), _1), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let offset := calldataload(4)\n                        let _2 := 0xffffffffffffffff\n                        if gt(offset, _2)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        if slt(add(sub(calldatasize(), offset), _1), 0xc0)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let memPtr := mload(64)\n                        finalize_allocation_20731(memPtr)\n                        mstore(memPtr, calldataload(add(4, offset)))\n                        let value := calldataload(add(offset, 36))\n                        validator_revert_address(value)\n                        mstore(add(memPtr, 32), value)\n                        mstore(add(memPtr, 64), abi_decode_address(add(offset, 68)))\n                        mstore(add(memPtr, 96), calldataload(add(offset, 100)))\n                        mstore(add(memPtr, 128), abi_decode_address(add(offset, 132)))\n                        let offset_1 := calldataload(add(offset, 164))\n                        if gt(offset_1, _2)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        mstore(add(memPtr, 160), abi_decode_bytes(add(add(offset, offset_1), 4), calldatasize()))\n                        /// @src 0:10383:12832  \"function burn(...\"\n                        modifier_lock(memPtr)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_close()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value0 := abi_decode_struct_RollbackTradePositionParams_calldata(add(4, offset), calldatasize())\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_1, shl(226, 0x03cb96db))\n                            revert(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4)\n                        }\n                        sstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 0:4791:4817  \"IFactory(factory).operator\"\n                        let expr_address := cleanup_address(/** @src 0:4791:4808  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 2:193:194  \"1\" */ 0x01))))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a307391))\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        let _3 := staticcall(gas(), expr_address, _2, sub(abi_encode_tuple_address(add(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ _2), _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32)\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if iszero(_3) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                        if _3\n                        {\n                            let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32\n                            /// @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4, /** @src 0:4791:4829  \"IFactory(factory).operator(msg.sender)\" */ returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            expr := abi_decode_bool_fromMemory(_2, add(_2, _4))\n                        }\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        if /** @src 0:4790:4829  \"!IFactory(factory).operator(msg.sender)\" */ iszero(expr)\n                        /// @src 0:4786:4884  \"if (!IFactory(factory).operator(msg.sender)) {...\"\n                        {\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4852:4873  \"Forbidden(msg.sender)\"\n                            mstore(_5, shl(224, 0xa59d7f4d))\n                            revert(_5, sub(abi_encode_tuple_address(add(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 4), /** @src 0:4818:4828  \"msg.sender\" */ caller()), /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ _5))\n                        }\n                        /// @src 0:4893:4894  \"_\"\n                        fun_close_inner(value0)\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        return(mload(64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function external_fun_baseReserve()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let value := calldataload(4)\n                        validator_revert_address(value)\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(value, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:1181:1236  \"mapping(address => uint256) public override baseReserve\" */ 16)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 0x40))\n                        let memPos := mload(0x40)\n                        mstore(memPos, _1)\n                        return(memPos, 32)\n                    }\n                    function update_storage_value_offsett_address_to_address(value)\n                    {\n                        sstore(/** @src 0:4295:4302  \"factory\" */ 0x01, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ or(and(sload(/** @src 0:4295:4302  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                    }\n                    function update_storage_value_offsett_address_to_address_20695(value)\n                    {\n                        sstore(/** @src 0:4383:4437  \"positionStorage = IFactory(_factory).positionStorage()\" */ 0x02, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ or(and(sload(/** @src 0:4383:4437  \"positionStorage = IFactory(_factory).positionStorage()\" */ 0x02), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                    }\n                    function update_storage_value_offsett_address_to_address_20696(value)\n                    {\n                        sstore(/** @src 0:4447:4505  \"withdrawalMonitor = IFactory(_factory).withdrawalMonitor()\" */ 0x03, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ or(and(sload(/** @src 0:4447:4505  \"withdrawalMonitor = IFactory(_factory).withdrawalMonitor()\" */ 0x03), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                    }\n                    function update_storage_value_offsett_address_to_address_20697(value)\n                    {\n                        sstore(4, or(and(sload(4), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                    }\n                    function abi_decode_address_fromMemory(offset) -> value\n                    {\n                        value := mload(offset)\n                        validator_revert_address(value)\n                    }\n                    function abi_decode_tuple_address_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        validator_revert_address(value)\n                        value0 := value\n                    }\n                    function revert_forward()\n                    {\n                        let pos := mload(64)\n                        returndatacopy(pos, 0, returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    function abi_decode_uint8_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, and(value, 0xff)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        value0 := value\n                    }\n                    function panic_error_0x11()\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                    function checked_exp_rational_by_uint8(exponent) -> power\n                    {\n                        let exponent_1 := and(exponent, 0xff)\n                        if gt(exponent_1, 77) { panic_error_0x11() }\n                        power := exp(10, exponent_1)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20698(value)\n                    {\n                        sstore(/** @src 0:4549:4597  \"precision = 10 ** IERC20(_quoteToken).decimals()\" */ 0x05, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20699(value)\n                    {\n                        sstore(/** @src 0:4607:4627  \"interest = _interest\" */ 0x06, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20701()\n                    {\n                        sstore(/** @src 2:181:189  \"unlocked\" */ 0x00, /** @src 2:193:194  \"1\" */ 0x01)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function update_storage_value_offsett_uint256_to_uint256_20711(value)\n                    {\n                        sstore(/** @src 0:10164:10198  \"withdrawingLiquidity += _liquidity\" */ 0x0b, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20712()\n                    {\n                        sstore(0, /** @src 2:193:194  \"1\" */ 0x01)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function update_storage_value_offsett_uint256_to_uint256_20718(value)\n                    {\n                        sstore(/** @src 0:8486:8512  \"quoteReserve += _liquidity\" */ 0x09, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20769()\n                    {\n                        sstore(/** @src 0:10872:10892  \"withdrawingLiquidity\" */ 0x0b, /** @src 2:181:189  \"unlocked\" */ 0x00)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function update_storage_value_offsett_uint256_to_uint256(value)\n                    {\n                        sstore(/** @src 0:15373:15407  \"quoteInDebt += _params.quoteAmount\" */ 0x0a, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20789(value)\n                    {\n                        sstore(/** @src 0:15417:15450  \"accProtocolFee += pos.protocolFee\" */ 0x0d, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function update_storage_value_offsett_uint256_to_uint256_20792(value)\n                    {\n                        sstore(/** @src 0:14527:14539  \"openInterest\" */ 0x08, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ value)\n                    }\n                    function checked_sub_int256(x, y) -> diff\n                    {\n                        let _1 := slt(y, 0)\n                        if and(iszero(_1), slt(x, add(shl(255, 1), y))) { panic_error_0x11() }\n                        if and(_1, sgt(x, add(sub(shl(255, 1), 1), y))) { panic_error_0x11() }\n                        diff := sub(x, y)\n                    }\n                    /// @ast-id 484 @src 0:5513:5755  \"function _availableLiquidity() internal view returns (uint256) {...\"\n                    function fun_availableLiquidity() -> var\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := sload(/** @src 0:5609:5621  \"quoteReserve\" */ 0x09)\n                        /// @src 0:5602:5656  \"int256(quoteReserve) -...\"\n                        let expr := checked_sub_int256(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:5644:5655  \"quoteInDebt\" */ 0x0a))\n                        /// @src 0:5602:5699  \"int256(quoteReserve) -...\"\n                        let expr_1 := checked_sub_int256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:5678:5698  \"withdrawingLiquidity\" */ 0x0b))\n                        /// @src 0:5716:5748  \"result < 0 ? 0 : uint256(result)\"\n                        let expr_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:5716:5748  \"result < 0 ? 0 : uint256(result)\"\n                        switch /** @src 0:5716:5726  \"result < 0\" */ slt(expr_1, /** @src -1:-1:-1 */ expr_2)\n                        case /** @src 0:5716:5748  \"result < 0 ? 0 : uint256(result)\" */ 0 { expr_2 := expr_1 }\n                        default {\n                            expr_2 := /** @src -1:-1:-1 */ 0\n                        }\n                        /// @src 0:5709:5748  \"return result < 0 ? 0 : uint256(result)\"\n                        var := expr_2\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function checked_mul_uint256(x, y) -> product\n                    {\n                        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n                        product := mul(x, y)\n                    }\n                    function checked_div_uint256_20819(x) -> r\n                    {\n                        r := div(x, /** @src 0:18963:18968  \"10000\" */ 0x2710)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function checked_div_uint256(x, y) -> r\n                    {\n                        if iszero(y)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(0, 0x24)\n                        }\n                        r := div(x, y)\n                    }\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        if gt(x, not(y)) { panic_error_0x11() }\n                        sum := add(x, y)\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        if lt(x, y) { panic_error_0x11() }\n                        diff := sub(x, y)\n                    }\n                    /// @ast-id 362 @src 0:4640:4746  \"modifier onlyFactory() {...\"\n                    function modifier_onlyFactory(var_baseTokens_mpos, var_tradeables_mpos)\n                    {\n                        /// @src 0:4691:4698  \"factory\"\n                        let _1 := 0x01\n                        /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        if /** @src 0:4677:4698  \"msg.sender != factory\" */ iszero(eq(/** @src 0:4677:4687  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:4691:4698  \"factory\" */ _1), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:4673:4728  \"if (msg.sender != factory) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            mstore(_2, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            mstore(/** @src 0:4707:4728  \"Forbidden(msg.sender)\" */ add(_2, 4), /** @src 0:4677:4687  \"msg.sender\" */ caller())\n                            /// @src 0:4707:4728  \"Forbidden(msg.sender)\"\n                            revert(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36)\n                        }\n                        /// @src 0:6772:6782  \"quoteToken\"\n                        let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:6772:6782  \"quoteToken\" */ 0x04))\n                        /// @src 0:6796:6814  \"_baseTokens.length\"\n                        let expr := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:6796:6814  \"_baseTokens.length\" */ var_baseTokens_mpos)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _4 := mload(/** @src 0:6818:6836  \"_tradeables.length\" */ var_tradeables_mpos)\n                        /// @src 0:6792:6907  \"if (_baseTokens.length != _tradeables.length)...\"\n                        if /** @src 0:6796:6836  \"_baseTokens.length != _tradeables.length\" */ iszero(eq(expr, _4))\n                        /// @src 0:6792:6907  \"if (_baseTokens.length != _tradeables.length)...\"\n                        {\n                            /// @src 0:6857:6907  \"BadLengths(_baseTokens.length, _tradeables.length)\"\n                            let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:6857:6907  \"BadLengths(_baseTokens.length, _tradeables.length)\"\n                            mstore(_5, shl(224, 0x574092f9))\n                            revert(_5, sub(abi_encode_uint256_uint256(add(_5, /** @src 0:6772:6782  \"quoteToken\" */ 0x04), /** @src 0:6857:6907  \"BadLengths(_baseTokens.length, _tradeables.length)\" */ expr, _4), _5))\n                        }\n                        /// @src 0:6922:6935  \"uint256 i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 0:6917:7119  \"for (uint256 i = 0; i < _baseTokens.length; i++) {...\"\n                        for { }\n                        /** @src 0:4691:4698  \"factory\" */ _1\n                        /// @src 0:6922:6935  \"uint256 i = 0\"\n                        {\n                            /// @src 0:6961:6964  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:6937:6959  \"i < _baseTokens.length\"\n                            if iszero(lt(var_i, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:6941:6959  \"_baseTokens.length\" */ var_baseTokens_mpos)))\n                            /// @src 0:6937:6959  \"i < _baseTokens.length\"\n                            { break }\n                            /// @src 0:6980:7031  \"tradeableBaseToken[_baseTokens[i]] = _tradeables[i]\"\n                            update_storage_value_offsett_bool_to_bool(/** @src 0:6980:7014  \"tradeableBaseToken[_baseTokens[i]]\" */ mapping_index_access_mapping_address_bool_of_address_20742(/** @src 0:6999:7013  \"_baseTokens[i]\" */ read_from_memoryt_address(memory_array_index_access_bool_dyn(var_baseTokens_mpos, var_i))), /** @src 0:7017:7031  \"_tradeables[i]\" */ read_from_memoryt_bool(memory_array_index_access_bool_dyn(var_tradeables_mpos, var_i)))\n                            /// @src 0:7064:7078  \"_baseTokens[i]\"\n                            let _6 := read_from_memoryt_address(memory_array_index_access_bool_dyn(var_baseTokens_mpos, var_i))\n                            /// @src 0:7093:7107  \"_tradeables[i]\"\n                            let _7 := read_from_memoryt_bool(memory_array_index_access_bool_dyn(var_tradeables_mpos, var_i))\n                            /// @src 0:7051:7108  \"SetBaseToken(_baseTokens[i], _quoteToken, _tradeables[i])\"\n                            let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:7051:7108  \"SetBaseToken(_baseTokens[i], _quoteToken, _tradeables[i])\"\n                            log1(_8, sub(abi_encode_address_address_bool(_8, _6, _3, _7), _8), 0xec4f975deac1f5c1d92fd5f7a2b08d2c4e3e60215ab50703da45f8f8e9f2fc9b)\n                        }\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_encode_uint256_uint256(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), value1)\n                    }\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0)) { panic_error_0x11() }\n                        ret := add(value, 1)\n                    }\n                    function memory_array_index_access_bool_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    function read_from_memoryt_bool(ptr) -> returnValue\n                    {\n                        returnValue := iszero(iszero(mload(ptr)))\n                    }\n                    function read_from_memoryt_address(ptr) -> returnValue\n                    {\n                        returnValue := and(mload(ptr), sub(shl(160, 1), 1))\n                    }\n                    function update_storage_value_offsett_bool_to_bool(slot, value)\n                    {\n                        let value_1 := and(sload(slot), not(255))\n                        sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n                    }\n                    function abi_encode_address_address_bool(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), iszero(iszero(value2)))\n                    }\n                    function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        value0 := mload(headStart)\n                    }\n                    function abi_encode_bytes_calldata(start, length, pos) -> end\n                    {\n                        mstore(pos, length)\n                        calldatacopy(add(pos, 0x20), start, length)\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_encode_address_uint256_bytes_calldata(headStart, value0, value1, value2, value3) -> tail\n                    {\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), 96)\n                        tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 96))\n                    }\n                    /// @ast-id 695 @src 0:7302:7669  \"function _transferProtocolFee() internal {...\"\n                    function fun_transferProtocolFee()\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := sload(/** @src 0:7376:7390  \"accProtocolFee\" */ 0x0d)\n                        /// @src 0:7400:7663  \"if (_protocolFee > 0) {...\"\n                        if /** @src 0:7404:7420  \"_protocolFee > 0\" */ iszero(iszero(_1))\n                        /// @src 0:7400:7663  \"if (_protocolFee > 0) {...\"\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _2 := sub(shl(160, 1), 1)\n                            let _3 := and(sload(/** @src 0:7461:7468  \"factory\" */ 0x01), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)\n                            /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                            let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                            mstore(_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(225, 0x779b4929))\n                            /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                            let _5 := staticcall(gas(), _3, _4, 4, _4, 32)\n                            if iszero(_5) { revert_forward() }\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\"\n                            if _5\n                            {\n                                let _6 := 32\n                                if gt(_6, returndatasize()) { _6 := returndatasize() }\n                                finalize_allocation(_4, _6)\n                                expr := abi_decode_tuple_address_fromMemory(_4, add(_4, _6))\n                            }\n                            /// @src 0:7499:7653  \"if (feeTo != address(0)) {...\"\n                            if /** @src 0:7503:7522  \"feeTo != address(0)\" */ iszero(iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:7503:7522  \"feeTo != address(0)\" */ expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)))\n                            /// @src 0:7499:7653  \"if (feeTo != address(0)) {...\"\n                            {\n                                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                sstore(/** @src 0:7376:7390  \"accProtocolFee\" */ 0x0d, /** @src -1:-1:-1 */ 0)\n                                /// @src 0:7625:7637  \"_protocolFee\"\n                                fun_safeTransfer(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(sload(/** @src 0:7452:7485  \"IFactory(factory).protocolFeeTo()\" */ 4), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2), /** @src 0:7625:7637  \"_protocolFee\" */ expr, _1)\n                            }\n                        }\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_encode_address_address_uint256_address_bytes_calldata(headStart, value0, value1, value2, value3, value4, value5) -> tail\n                    {\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), and(value3, _1))\n                        mstore(add(headStart, 128), 160)\n                        tail := abi_encode_bytes_calldata(value4, value5, add(headStart, 160))\n                    }\n                    /// @ast-id 2803 @src 2:151:273  \"modifier lock() {...\"\n                    function modifier_lock(var_request_mpos)\n                    {\n                        /// @src 2:181:189  \"unlocked\"\n                        let _1 := 0x00\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 2:181:189  \"unlocked\" */ _1), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_2, shl(226, 0x03cb96db))\n                            revert(_2, 4)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(/** @src 2:181:189  \"unlocked\" */ _1, _1)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _3 := and(/** @src 0:10527:10564  \"IWithdrawalMonitor(withdrawalMonitor)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:10546:10563  \"withdrawalMonitor\" */ 0x03))), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:10574:10663  \"if (msg.sender != address(monitor)) {...\"\n                        if /** @src 0:10578:10608  \"msg.sender != address(monitor)\" */ iszero(eq(/** @src 0:10578:10588  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _3))\n                        /// @src 0:10574:10663  \"if (msg.sender != address(monitor)) {...\"\n                        {\n                            /// @src 0:10631:10652  \"Forbidden(msg.sender)\"\n                            let _4 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:10631:10652  \"Forbidden(msg.sender)\"\n                            mstore(_4, /** @src 0:4852:4873  \"Forbidden(msg.sender)\" */ shl(224, 0xa59d7f4d))\n                            /// @src 0:10631:10652  \"Forbidden(msg.sender)\"\n                            revert(_4, sub(abi_encode_tuple_address(add(_4, 4), /** @src 0:10578:10588  \"msg.sender\" */ caller()), /** @src 0:10631:10652  \"Forbidden(msg.sender)\" */ _4))\n                        }\n                        /// @src 0:10722:10736  \"_request.owner\"\n                        let _5 := add(var_request_mpos, 32)\n                        /// @src 0:10704:10737  \"liquidityPosition[_request.owner]\"\n                        let _6 := mapping_index_access_mapping_address_bool_of_address_20710(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:10722:10736  \"_request.owner\" */ _5)))\n                        /// @src 0:10751:10769  \"_request.liquidity\"\n                        let _7 := add(var_request_mpos, 96)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _8 := mload(/** @src 0:10751:10769  \"_request.liquidity\" */ _7)\n                        /// @src 0:10772:10796  \"pos.withdrawingLiquidity\"\n                        let _9 := add(_6, /** @src 0:10546:10563  \"withdrawalMonitor\" */ 0x03)\n                        /// @src 0:10747:10837  \"if (_request.liquidity > pos.withdrawingLiquidity)...\"\n                        if /** @src 0:10751:10796  \"_request.liquidity > pos.withdrawingLiquidity\" */ gt(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:10772:10796  \"pos.withdrawingLiquidity\" */ _9))\n                        /// @src 0:10747:10837  \"if (_request.liquidity > pos.withdrawingLiquidity)...\"\n                        {\n                            /// @src 0:10817:10837  \"InsufficientOutput()\"\n                            let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:10817:10837  \"InsufficientOutput()\"\n                            mstore(_10, /** @src 0:10085:10105  \"InsufficientOutput()\" */ shl(224, 0xbb2875c3))\n                            /// @src 0:10817:10837  \"InsufficientOutput()\"\n                            revert(_10, 4)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _11 := mload(/** @src 0:10851:10869  \"_request.liquidity\" */ _7)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _12 := sload(/** @src 0:10872:10892  \"withdrawingLiquidity\" */ 0x0b)\n                        /// @src 0:10847:10991  \"if (_request.liquidity > withdrawingLiquidity) {...\"\n                        switch /** @src 0:10851:10892  \"_request.liquidity > withdrawingLiquidity\" */ gt(_11, _12)\n                        case /** @src 0:10847:10991  \"if (_request.liquidity > withdrawingLiquidity) {...\" */ 0 {\n                            /// @src 0:10949:10991  \"withdrawingLiquidity -= _request.liquidity\"\n                            update_storage_value_offsett_uint256_to_uint256_20711(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _12, _11))\n                        }\n                        default /// @src 0:10847:10991  \"if (_request.liquidity > withdrawingLiquidity) {...\"\n                        {\n                            /// @src 0:10908:10932  \"withdrawingLiquidity = 0\"\n                            update_storage_value_offsett_uint256_to_uint256_20769()\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _13 := sload(/** @src 0:11028:11042  \"accFeePerShare\" */ 0x0e)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _14 := sload(/** @src 0:11073:11082  \"precision\" */ 0x05)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _15 := sload(/** @src 0:11097:11110  \"pos.liquidity\" */ _6)\n                        /// @src 0:11093:11267  \"if (pos.liquidity > 0) {...\"\n                        if /** @src 0:11097:11114  \"pos.liquidity > 0\" */ iszero(iszero(_15))\n                        /// @src 0:11093:11267  \"if (pos.liquidity > 0) {...\"\n                        {\n                            /// @src 0:11164:11226  \"(_accFeePerShare * pos.liquidity) /...\"\n                            let expr := checked_div_uint256(/** @src 0:11165:11196  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15), /** @src 0:11164:11226  \"(_accFeePerShare * pos.liquidity) /...\" */ _14)\n                            /// @src 0:11164:11256  \"(_accFeePerShare * pos.liquidity) /...\"\n                            let expr_1 := checked_sub_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11245:11256  \"pos.feeDebt\" */ add(_6, /** @src 2:193:194  \"1\" */ 0x01)))\n                            /// @src 0:11130:11144  \"pos.pendingFee\"\n                            let _16 := add(_6, 2)\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            sstore(_16, /** @src 0:11130:11256  \"pos.pendingFee +=...\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11130:11256  \"pos.pendingFee +=...\" */ _16), expr_1))\n                        }\n                        /// @src 0:11276:11311  \"pos.liquidity -= _request.liquidity\"\n                        let _17 := checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _15, mload(/** @src 0:11293:11311  \"_request.liquidity\" */ _7))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_6, _17)\n                        sstore(_9, /** @src 0:11321:11367  \"pos.withdrawingLiquidity -= _request.liquidity\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11321:11367  \"pos.withdrawingLiquidity -= _request.liquidity\" */ _9), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:11349:11367  \"_request.liquidity\" */ _7)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(/** @src 0:11377:11388  \"pos.feeDebt\" */ add(_6, /** @src 2:193:194  \"1\" */ 0x01), /** @src 0:11391:11437  \"(_accFeePerShare * pos.liquidity) / _precision\" */ checked_div_uint256(/** @src 0:11392:11423  \"_accFeePerShare * pos.liquidity\" */ checked_mul_uint256(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _17), /** @src 0:11391:11437  \"(_accFeePerShare * pos.liquidity) / _precision\" */ _14))\n                        /// @src 0:11448:11482  \"quoteReserve -= _request.liquidity\"\n                        update_storage_value_offsett_uint256_to_uint256_20718(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:11448:11482  \"quoteReserve -= _request.liquidity\" */ 0x09), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:11464:11482  \"_request.liquidity\" */ _7)))\n                        /// @src 0:11448:11482  \"quoteReserve -= _request.liquidity\"\n                        fun_transferProtocolFee()\n                        /// @src 0:11549:11562  \"_request.data\"\n                        let _mpos := mload(add(var_request_mpos, 160))\n                        /// @src 0:11545:12645  \"if (_request.data.length > 0) {...\"\n                        if /** @src 0:11549:11573  \"_request.data.length > 0\" */ iszero(iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:11549:11569  \"_request.data.length\" */ _mpos)))\n                        /// @src 0:11545:12645  \"if (_request.data.length > 0) {...\"\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _18 := mload(/** @src 0:11705:11723  \"_request.liquidity\" */ _7)\n                            /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                            let expr_mpos := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                            let _19 := add(expr_mpos, /** @src 0:10722:10736  \"_request.owner\" */ 32)\n                            /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                            mstore(_19, shl(225, 0x462cc8ff))\n                            let _20 := sub(abi_encode_uint256_bytes(add(expr_mpos, 36), _18, _mpos), expr_mpos)\n                            mstore(expr_mpos, add(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ not(31)))\n                            /// @src 0:11617:11768  \"abi.encodeWithSignature(...\"\n                            finalize_allocation(expr_mpos, _20)\n                            /// @src 0:11820:11834  \"_request.owner\"\n                            let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:11820:11834  \"_request.owner\" */ _5))\n                            /// @src 0:11820:11883  \"_request.owner.call(...\"\n                            let expr_component := call(gas(), _21, /** @src 2:181:189  \"unlocked\" */ _1, /** @src 0:11820:11883  \"_request.owner.call(...\" */ _19, mload(expr_mpos), /** @src 2:181:189  \"unlocked\" */ _1, _1)\n                            /// @src 0:11820:11883  \"_request.owner.call(...\"\n                            let expr_component_mpos := extract_returndata()\n                            /// @src 0:11993:12635  \"if (!success) {...\"\n                            if /** @src 0:11997:12005  \"!success\" */ iszero(expr_component)\n                            /// @src 0:11993:12635  \"if (!success) {...\"\n                            {\n                                /// @src 0:12106:12621  \"if (result.length < 68) {...\"\n                                switch /** @src 0:12110:12128  \"result.length < 68\" */ lt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:12110:12123  \"result.length\" */ expr_component_mpos), /** @src 0:12126:12128  \"68\" */ 0x44)\n                                case /** @src 0:12106:12621  \"if (result.length < 68) {...\" */ 0 {\n                                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                    let _22 := mload(/** @src 0:12512:12526  \"_request.index\" */ var_request_mpos)\n                                    /// @src 0:12552:12580  \"abi.decode(result, (string))\"\n                                    let expr_mpos_1 := abi_decode_string_fromMemory(add(/** @src 0:12353:12437  \"assembly {...\" */ expr_component_mpos, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 36), /** @src 0:12552:12580  \"abi.decode(result, (string))\" */ add(add(/** @src 0:12353:12437  \"assembly {...\" */ expr_component_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:12353:12437  \"assembly {...\" */ add(expr_component_mpos, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 4))), 36))\n                                    /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                                    if iszero(extcodesize(_3))\n                                    {\n                                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                        revert(/** @src 2:181:189  \"unlocked\" */ _1, _1)\n                                    }\n                                    /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                                    let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                                    /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                                    mstore(_23, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x4d4a6fbb))\n                                    /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                                    let _24 := call(gas(), _3, /** @src 2:181:189  \"unlocked\" */ _1, /** @src 0:12458:12602  \"monitor.updateCallbackResult(...\" */ _23, sub(abi_encode_uint256_bytes(add(_23, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 4), /** @src 0:12458:12602  \"monitor.updateCallbackResult(...\" */ _22, expr_mpos_1), _23), _23, /** @src 2:181:189  \"unlocked\" */ _1)\n                                    /// @src 0:12458:12602  \"monitor.updateCallbackResult(...\"\n                                    if iszero(_24) { revert_forward() }\n                                    if _24\n                                    {\n                                        finalize_allocation_20719(_23)\n                                        abi_decode(_23, _23)\n                                    }\n                                }\n                                default /// @src 0:12106:12621  \"if (result.length < 68) {...\"\n                                {\n                                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                    let _25 := mload(/** @src 0:12206:12220  \"_request.index\" */ var_request_mpos)\n                                    /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                                    if iszero(extcodesize(_3))\n                                    {\n                                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                        revert(/** @src 2:181:189  \"unlocked\" */ _1, _1)\n                                    }\n                                    /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                                    let _26 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                                    /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                                    mstore(_26, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x4d4a6fbb))\n                                    /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                                    let _27 := call(gas(), _3, /** @src 2:181:189  \"unlocked\" */ _1, /** @src 0:12152:12306  \"monitor.updateCallbackResult(...\" */ _26, sub(abi_encode_uint256_stringliteral(add(_26, /** @src 0:11617:11768  \"abi.encodeWithSignature(...\" */ 4), /** @src 0:12152:12306  \"monitor.updateCallbackResult(...\" */ _25), _26), _26, /** @src 2:181:189  \"unlocked\" */ _1)\n                                    /// @src 0:12152:12306  \"monitor.updateCallbackResult(...\"\n                                    if iszero(_27) { revert_forward() }\n                                    if _27\n                                    {\n                                        finalize_allocation_20719(_26)\n                                        abi_decode(_26, _26)\n                                    }\n                                }\n                            }\n                        }\n                        /// @src 0:12696:12706  \"quoteToken\"\n                        let _28 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:12696:12706  \"quoteToken\" */ 0x04))\n                        /// @src 0:12720:12731  \"_request.to\"\n                        let _29 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:12720:12731  \"_request.to\" */ add(var_request_mpos, 128)))\n                        /// @src 0:12745:12763  \"_request.liquidity\"\n                        fun_safeTransfer(_28, _29, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:12745:12763  \"_request.liquidity\" */ _7))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _30 := mload(/** @src 0:12806:12824  \"_request.liquidity\" */ _7)\n                        /// @src 0:12789:12825  \"Burn(msg.sender, _request.liquidity)\"\n                        let _31 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:12789:12825  \"Burn(msg.sender, _request.liquidity)\"\n                        log2(_31, sub(abi_encode_uint256(_31, _30), _31), 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5, /** @src 0:10578:10588  \"msg.sender\" */ caller())\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function copy_memory_to_memory(src, dst, length)\n                    {\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 32) }\n                        {\n                            mstore(add(dst, i), mload(add(src, i)))\n                        }\n                        if gt(i, length) { mstore(add(dst, length), 0) }\n                    }\n                    function abi_encode_uint256_bytes(headStart, value0, value1) -> tail\n                    {\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), 64)\n                        let length := mload(value1)\n                        mstore(add(headStart, 64), length)\n                        copy_memory_to_memory(add(value1, 32), add(headStart, 96), length)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n                    }\n                    function extract_returndata() -> data\n                    {\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _1 := returndatasize()\n                            let _2 := array_allocation_size_bytes(_1)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _2)\n                            mstore(memPtr, _1)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ returndatasize())\n                        }\n                    }\n                    function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let offset := mload(headStart)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        let _1 := add(headStart, offset)\n                        if iszero(slt(add(_1, 0x1f), dataEnd))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _2 := mload(_1)\n                        let _3 := array_allocation_size_bytes(_2)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _3)\n                        mstore(memPtr, _2)\n                        if gt(add(add(_1, _2), 32), dataEnd)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        copy_memory_to_memory(add(_1, 32), add(memPtr, 32), _2)\n                        value0 := memPtr\n                    }\n                    function abi_encode_uint256_stringliteral(headStart, value0) -> tail\n                    {\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), 64)\n                        mstore(add(headStart, 64), 36)\n                        mstore(add(headStart, 96), \"Callback transaction failed sile\")\n                        mstore(add(headStart, 128), \"ntly\")\n                        tail := add(headStart, 160)\n                    }\n                    /// @ast-id 2803 @src 2:151:273  \"modifier lock() {...\"\n                    function modifier_lock_20692(var_params_mpos) -> _1\n                    {\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 2:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src -1:-1:-1 */ _2), /** @src 2:193:194  \"1\" */ 0x01))\n                        /// @src 2:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 2:203:211  \"Locked()\"\n                            let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 2:203:211  \"Locked()\"\n                            mstore(_3, shl(226, 0x03cb96db))\n                            revert(_3, 4)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 0:14435:14452  \"_params.baseToken\"\n                        let _4 := 32\n                        let _5 := add(var_params_mpos, _4)\n                        /// @src 0:14411:14513  \"if (!tradeableBaseToken[_params.baseToken])...\"\n                        if /** @src 0:14415:14453  \"!tradeableBaseToken[_params.baseToken]\" */ cleanup_bool(iszero(/** @src 0:14416:14453  \"tradeableBaseToken[_params.baseToken]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_bool_of_address_20742(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14435:14452  \"_params.baseToken\" */ _5))))))\n                        /// @src 0:14411:14513  \"if (!tradeableBaseToken[_params.baseToken])...\"\n                        {\n                            /// @src 0:14495:14512  \"_params.baseToken\"\n                            let _6 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14495:14512  \"_params.baseToken\" */ _5))\n                            /// @src 0:14474:14513  \"UntradeableBaseToken(_params.baseToken)\"\n                            let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:14474:14513  \"UntradeableBaseToken(_params.baseToken)\"\n                            mstore(_7, shl(232, 12270121))\n                            revert(_7, sub(abi_encode_tuple_address(add(_7, 4), _6), _7))\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _8 := sload(/** @src 0:14527:14539  \"openInterest\" */ 0x08)\n                        /// @src 0:14542:14561  \"_params.quoteAmount\"\n                        let _9 := add(var_params_mpos, 160)\n                        /// @src 0:14527:14561  \"openInterest + _params.quoteAmount\"\n                        let expr := checked_add_uint256(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14542:14561  \"_params.quoteAmount\" */ _9))\n                        /// @src 0:14523:14623  \"if (openInterest + _params.quoteAmount > maxOpenInterest)...\"\n                        if /** @src 0:14527:14579  \"openInterest + _params.quoteAmount > maxOpenInterest\" */ gt(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:14564:14579  \"maxOpenInterest\" */ 0x07))\n                        /// @src 0:14523:14623  \"if (openInterest + _params.quoteAmount > maxOpenInterest)...\"\n                        {\n                            /// @src 0:14600:14623  \"ExceedMaxOpenInterest()\"\n                            let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:14600:14623  \"ExceedMaxOpenInterest()\"\n                            mstore(_10, shl(225, 0x554028e7))\n                            revert(_10, 4)\n                        }\n                        /// @src 0:14656:14666  \"quoteToken\"\n                        let _11 := 0x04\n                        let _12 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:14656:14666  \"quoteToken\" */ _11))\n                        /// @src 0:14676:14694  \"_params.quoteToken\"\n                        let _13 := 64\n                        let _14 := add(var_params_mpos, _13)\n                        /// @src 0:14676:14708  \"_params.quoteToken = _quoteToken\"\n                        write_to_memory_address(_14, _12)\n                        /// @src 0:14722:14739  \"_params.baseToken\"\n                        let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14722:14739  \"_params.baseToken\" */ _5))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _16 := sub(shl(160, 1), 1)\n                        /// @src 0:14718:14782  \"if (_params.baseToken == _quoteToken) revert InvalidParameters()\"\n                        if /** @src 0:14722:14754  \"_params.baseToken == _quoteToken\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:14722:14754  \"_params.baseToken == _quoteToken\" */ _15, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16), and(/** @src 0:14722:14754  \"_params.baseToken == _quoteToken\" */ _12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16))\n                        /// @src 0:14718:14782  \"if (_params.baseToken == _quoteToken) revert InvalidParameters()\"\n                        {\n                            /// @src 0:14763:14782  \"InvalidParameters()\"\n                            let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                            /// @src 0:14763:14782  \"InvalidParameters()\"\n                            mstore(_17, shl(228, 0x0e523909))\n                            revert(_17, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                        }\n                        /// @src 0:14792:14851  \"if (!_checkInputTokens(_params)) revert InsufficientInput()\"\n                        if /** @src 0:14796:14823  \"!_checkInputTokens(_params)\" */ cleanup_bool(iszero(/** @src 0:14797:14823  \"_checkInputTokens(_params)\" */ fun_checkInputTokens(var_params_mpos)))\n                        /// @src 0:14792:14851  \"if (!_checkInputTokens(_params)) revert InsufficientInput()\"\n                        {\n                            /// @src 0:14832:14851  \"InsufficientInput()\"\n                            let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                            /// @src 0:14832:14851  \"InsufficientInput()\"\n                            mstore(_18, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                            /// @src 0:14832:14851  \"InsufficientInput()\"\n                            revert(_18, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                        }\n                        /// @src 0:14985:15035  \"_positionStorage...\"\n                        let expr_address := cleanup_address(/** @src 0:14898:14931  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:14915:14930  \"positionStorage\" */ 0x02))))\n                        /// @src 0:14985:15044  \"_positionStorage...\"\n                        let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                        /// @src 0:14985:15044  \"_positionStorage...\"\n                        mstore(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x2fa7cffb))\n                        /// @src 0:14985:15044  \"_positionStorage...\"\n                        let _20 := 832\n                        let _21 := staticcall(gas(), expr_address, _19, sub(abi_encode_struct_OpenTradePositionParams(add(_19, /** @src 0:14656:14666  \"quoteToken\" */ _11), /** @src 0:14985:15044  \"_positionStorage...\" */ var_params_mpos), _19), _19, _20)\n                        if iszero(_21) { revert_forward() }\n                        let expr_mpos := /** @src -1:-1:-1 */ _2\n                        /// @src 0:14985:15044  \"_positionStorage...\"\n                        if _21\n                        {\n                            let _22 := _20\n                            if gt(_20, returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_19, _22)\n                            expr_mpos := abi_decode_struct_TradePosition_fromMemory(_19, add(_19, _22))\n                        }\n                        /// @src 0:15054:15109  \"if (pos.owner == address(0)) revert InvalidParameters()\"\n                        if /** @src 0:15058:15081  \"pos.owner == address(0)\" */ iszero(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(cleanup_address(mload(/** @src 0:15058:15067  \"pos.owner\" */ add(expr_mpos, /** @src 0:14435:14452  \"_params.baseToken\" */ _4))), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16))\n                        /// @src 0:15054:15109  \"if (pos.owner == address(0)) revert InvalidParameters()\"\n                        {\n                            /// @src 0:15090:15109  \"InvalidParameters()\"\n                            let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                            /// @src 0:15090:15109  \"InvalidParameters()\"\n                            mstore(_23, /** @src 0:14763:14782  \"InvalidParameters()\" */ shl(228, 0x0e523909))\n                            /// @src 0:15090:15109  \"InvalidParameters()\"\n                            revert(_23, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                        }\n                        /// @src 0:15146:15160  \"pos.quoteToken\"\n                        let _24 := add(expr_mpos, 128)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _25 := mload(/** @src 0:15146:15167  \"pos.quoteToken.amount\" */ add(/** @src 0:15146:15160  \"pos.quoteToken\" */ mload(_24), /** @src 0:14435:14452  \"_params.baseToken\" */ _4))\n                        /// @src 0:15170:15177  \"pos.fee\"\n                        let _26 := add(expr_mpos, 288)\n                        /// @src 0:15146:15177  \"pos.quoteToken.amount - pos.fee\"\n                        let expr_1 := checked_sub_uint256(_25, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15170:15177  \"pos.fee\" */ _26))\n                        /// @src 0:15238:15298  \"if (realQuoteAmount > available) revert InsufficientOutput()\"\n                        if /** @src 0:15242:15269  \"realQuoteAmount > available\" */ gt(expr_1, /** @src 0:15207:15228  \"_availableLiquidity()\" */ fun_availableLiquidity())\n                        /// @src 0:15238:15298  \"if (realQuoteAmount > available) revert InsufficientOutput()\"\n                        {\n                            /// @src 0:15278:15298  \"InsufficientOutput()\"\n                            let _27 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                            /// @src 0:15278:15298  \"InsufficientOutput()\"\n                            mstore(_27, /** @src 0:10085:10105  \"InsufficientOutput()\" */ shl(224, 0xbb2875c3))\n                            /// @src 0:15278:15298  \"InsufficientOutput()\"\n                            revert(_27, /** @src 0:14656:14666  \"quoteToken\" */ _11)\n                        }\n                        /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                        let _28 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                        /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                        mstore(_28, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xf76e91fd))\n                        /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                        let _29 := call(gas(), expr_address, /** @src -1:-1:-1 */ _2, /** @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\" */ _28, sub(abi_encode_struct_TradePosition(add(_28, /** @src 0:14656:14666  \"quoteToken\" */ _11), /** @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\" */ expr_mpos), _28), _28, /** @src 0:14435:14452  \"_params.baseToken\" */ _4)\n                        /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                        if iszero(_29) { revert_forward() }\n                        let expr_2 := /** @src -1:-1:-1 */ _2\n                        /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                        if _29\n                        {\n                            let _30 := /** @src 0:14435:14452  \"_params.baseToken\" */ _4\n                            /// @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\"\n                            if gt(/** @src 0:14435:14452  \"_params.baseToken\" */ _4, /** @src 0:15323:15362  \"_positionStorage.openTradePosition(pos)\" */ returndatasize()) { _30 := returndatasize() }\n                            finalize_allocation(_28, _30)\n                            expr_2 := abi_decode_uint256_fromMemory(_28, add(_28, _30))\n                        }\n                        /// @src 0:15373:15407  \"quoteInDebt += _params.quoteAmount\"\n                        update_storage_value_offsett_uint256_to_uint256(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15373:15407  \"quoteInDebt += _params.quoteAmount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15388:15407  \"_params.quoteAmount\" */ _9)))\n                        /// @src 0:15435:15450  \"pos.protocolFee\"\n                        let _31 := add(expr_mpos, 320)\n                        /// @src 0:15417:15450  \"accProtocolFee += pos.protocolFee\"\n                        update_storage_value_offsett_uint256_to_uint256_20789(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15417:15450  \"accProtocolFee += pos.protocolFee\" */ 0x0d), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15435:15450  \"pos.protocolFee\" */ _31)))\n                        /// @src 0:15494:15512  \"_params.baseAmount\"\n                        let _32 := add(var_params_mpos, /** @src 0:15146:15160  \"pos.quoteToken\" */ 128)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _33 := mload(/** @src 0:15494:15512  \"_params.baseAmount\" */ _32)\n                        /// @src 0:15460:15490  \"baseReserve[_params.baseToken]\"\n                        let _34 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15472:15489  \"_params.baseToken\" */ _5)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_34, /** @src 0:15460:15512  \"baseReserve[_params.baseToken] += _params.baseAmount\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15460:15512  \"baseReserve[_params.baseToken] += _params.baseAmount\" */ _34), _33))\n                        /// @src 0:15563:15587  \"_params.collateralAmount\"\n                        let _35 := add(var_params_mpos, 192)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _36 := mload(/** @src 0:15563:15587  \"_params.collateralAmount\" */ _35)\n                        /// @src 0:15540:15558  \"_params.collateral\"\n                        let _37 := add(var_params_mpos, 96)\n                        /// @src 0:15522:15559  \"collateralReserve[_params.collateral]\"\n                        let _38 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15540:15558  \"_params.collateral\" */ _37)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_38, /** @src 0:15522:15587  \"collateralReserve[_params.collateral] += _params.collateralAmount\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:15522:15587  \"collateralReserve[_params.collateral] += _params.collateralAmount\" */ _38), _36))\n                        /// @src 0:15597:15634  \"openInterest += pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20792(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:14527:14539  \"openInterest\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15613:15634  \"pos.quoteToken.amount\" */ add(/** @src 0:15613:15627  \"pos.quoteToken\" */ mload(_24), /** @src 0:14435:14452  \"_params.baseToken\" */ _4))))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _39 := mload(/** @src 0:15652:15659  \"pos.fee\" */ _26)\n                        /// @src 0:15652:15677  \"pos.fee - pos.protocolFee\"\n                        fun_addFee(checked_sub_uint256(_39, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:15662:15677  \"pos.protocolFee\" */ _31)))\n                        /// @src 0:15782:15797  \"realQuoteAmount\"\n                        fun_safeTransfer(_12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15755:15768  \"_params.owner\" */ var_params_mpos)), /** @src 0:15782:15797  \"realQuoteAmount\" */ expr_1)\n                        /// @src 0:15865:15878  \"_params.owner\"\n                        let _40 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15865:15878  \"_params.owner\" */ var_params_mpos))\n                        /// @src 0:15917:15934  \"_params.baseToken\"\n                        let _41 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15917:15934  \"_params.baseToken\" */ _5))\n                        /// @src 0:15948:15966  \"_params.quoteToken\"\n                        let _42 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15948:15966  \"_params.quoteToken\" */ _14))\n                        /// @src 0:15980:15998  \"_params.collateral\"\n                        let _43 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:15980:15998  \"_params.collateral\" */ _37))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _44 := mload(/** @src 0:16012:16030  \"_params.baseAmount\" */ _32)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _45 := mload(/** @src 0:16044:16063  \"_params.quoteAmount\" */ _9)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _46 := mload(/** @src 0:16077:16101  \"_params.collateralAmount\" */ _35)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _47 := mload(/** @src 0:16115:16122  \"pos.fee\" */ _26)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _48 := mload(/** @src 0:16136:16151  \"pos.protocolFee\" */ _31)\n                        /// @src 0:15823:16161  \"Open(...\"\n                        let _49 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14676:14694  \"_params.quoteToken\" */ _13)\n                        /// @src 0:15823:16161  \"Open(...\"\n                        log4(_49, sub(abi_encode_address_address_address_uint256_uint256_uint256_uint256_uint256(_49, _41, _42, _43, _44, _45, _46, _47, _48), _49), 0x6fa15176f59ef643f98e48bb7bbcdc1f7ed128c889a18626d6c28f6e7e2dece4, /** @src 0:15841:15851  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:15823:16161  \"Open(...\" */ _40, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _16), /** @src 0:15823:16161  \"Open(...\" */ expr_2)\n                        /// @src 2:243:244  \"_\"\n                        _1 := expr_2\n                        /// @src 2:254:266  \"unlocked = 1\"\n                        update_storage_value_offsett_uint256_to_uint256_20701()\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function read_from_storage_split_offset_bool(slot) -> value\n                    {\n                        value := and(sload(slot), 0xff)\n                    }\n                    function write_to_memory_address(memPtr, value)\n                    {\n                        mstore(memPtr, and(value, sub(shl(160, 1), 1)))\n                    }\n                    function abi_decode_struct_BaseToken_fromMemory(headStart, end) -> value\n                    {\n                        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        finalize_allocation_20704(memPtr)\n                        value := memPtr\n                        let value_1 := mload(headStart)\n                        validator_revert_address(value_1)\n                        mstore(memPtr, value_1)\n                        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n                        mstore(add(memPtr, 64), mload(add(headStart, 64)))\n                        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n                        mstore(add(memPtr, 128), mload(add(headStart, 128)))\n                    }\n                    function abi_decode_struct_QuoteToken_fromMemory(headStart, end) -> value\n                    {\n                        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n                        let memPtr := mload(0x40)\n                        let newFreePtr := add(memPtr, 0x40)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(0x40, newFreePtr)\n                        value := memPtr\n                        let value_1 := mload(headStart)\n                        validator_revert_address(value_1)\n                        mstore(memPtr, value_1)\n                        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n                    }\n                    function abi_decode_struct_Status_fromMemory(headStart, end) -> value\n                    {\n                        if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let newFreePtr := add(memPtr, 0x80)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                        value := memPtr\n                        let value_1 := mload(headStart)\n                        validator_revert_bool(value_1)\n                        mstore(memPtr, value_1)\n                        let value_2 := mload(add(headStart, 32))\n                        validator_revert_bool(value_2)\n                        mstore(add(memPtr, 32), value_2)\n                        let value_3 := mload(add(headStart, 64))\n                        validator_revert_bool(value_3)\n                        mstore(add(memPtr, 64), value_3)\n                        let value_4 := mload(add(headStart, 96))\n                        validator_revert_bool(value_4)\n                        mstore(add(memPtr, 96), value_4)\n                    }\n                    function abi_decode_struct_TradePosition_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 832) { revert(0, 0) }\n                        let value := allocate_memory()\n                        mstore(value, mload(headStart))\n                        mstore(add(value, 32), abi_decode_address_fromMemory(add(headStart, 32)))\n                        mstore(add(value, 64), abi_decode_address_fromMemory(add(headStart, 64)))\n                        mstore(add(value, 96), abi_decode_struct_BaseToken_fromMemory(add(headStart, 96), dataEnd))\n                        let _1 := 256\n                        mstore(add(value, 0x80), abi_decode_struct_QuoteToken_fromMemory(add(headStart, _1), dataEnd))\n                        let _2 := 320\n                        mstore(add(value, 0xa0), abi_decode_struct_BaseToken_fromMemory(add(headStart, _2), dataEnd))\n                        mstore(add(value, 0xc0), mload(add(headStart, 480)))\n                        mstore(add(value, 0xe0), mload(add(headStart, 512)))\n                        mstore(add(value, _1), mload(add(headStart, 544)))\n                        mstore(add(value, 0x0120), mload(add(headStart, 576)))\n                        mstore(add(value, _2), mload(add(headStart, 608)))\n                        mstore(add(value, 0x0160), abi_decode_struct_Status_fromMemory(add(headStart, 640), dataEnd))\n                        mstore(add(value, 0x0180), abi_decode_address_fromMemory(add(headStart, 768)))\n                        mstore(add(value, 0x01a0), mload(add(headStart, 800)))\n                        value0 := value\n                    }\n                    function abi_encode_struct_OpenTradePositionParams(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 320)\n                        abi_encode_address(mload(value0), headStart)\n                        let memberValue0 := mload(add(value0, 0x20))\n                        abi_encode_address(memberValue0, add(headStart, 0x20))\n                        let memberValue0_1 := mload(add(value0, 0x40))\n                        abi_encode_address(memberValue0_1, add(headStart, 0x40))\n                        let memberValue0_2 := mload(add(value0, 0x60))\n                        abi_encode_address(memberValue0_2, add(headStart, 0x60))\n                        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n                        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n                        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n                        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n                        let _1 := 0x0100\n                        mstore(add(headStart, _1), mload(add(value0, _1)))\n                        let _2 := 0x0120\n                        mstore(add(headStart, _2), mload(add(value0, _2)))\n                    }\n                    function abi_encode_struct_BaseToken(value, pos)\n                    {\n                        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n                        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n                        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                    }\n                    function abi_encode_struct_QuoteToken(value, pos)\n                    {\n                        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n                        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                    }\n                    function abi_encode_struct_Status(value, pos)\n                    {\n                        mstore(pos, iszero(iszero(mload(value))))\n                        mstore(add(pos, 0x20), iszero(iszero(mload(add(value, 0x20)))))\n                        mstore(add(pos, 0x40), iszero(iszero(mload(add(value, 0x40)))))\n                        mstore(add(pos, 0x60), iszero(iszero(mload(add(value, 0x60)))))\n                    }\n                    function abi_encode_struct_TradePosition(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 832)\n                        mstore(headStart, mload(value0))\n                        let memberValue0 := mload(add(value0, 0x20))\n                        abi_encode_address(memberValue0, add(headStart, 0x20))\n                        let memberValue0_1 := mload(add(value0, 0x40))\n                        abi_encode_address(memberValue0_1, add(headStart, 0x40))\n                        let memberValue0_2 := mload(add(value0, 0x60))\n                        abi_encode_struct_BaseToken(memberValue0_2, add(headStart, 0x60))\n                        let memberValue0_3 := mload(add(value0, 0x80))\n                        let _1 := 0x0100\n                        abi_encode_struct_QuoteToken(memberValue0_3, add(headStart, _1))\n                        let memberValue0_4 := mload(add(value0, 0xa0))\n                        let _2 := 0x0140\n                        abi_encode_struct_BaseToken(memberValue0_4, add(headStart, _2))\n                        mstore(add(headStart, 0x01e0), mload(add(value0, 0xc0)))\n                        mstore(add(headStart, 0x0200), mload(add(value0, 0xe0)))\n                        mstore(add(headStart, 0x0220), mload(add(value0, _1)))\n                        mstore(add(headStart, 0x0240), mload(add(value0, 0x0120)))\n                        mstore(add(headStart, 0x0260), mload(add(value0, _2)))\n                        let memberValue0_5 := mload(add(value0, 0x0160))\n                        abi_encode_struct_Status(memberValue0_5, add(headStart, 0x0280))\n                        let memberValue0_6 := mload(add(value0, 0x0180))\n                        abi_encode_address(memberValue0_6, add(headStart, 0x0300))\n                        mstore(add(headStart, 0x0320), mload(add(value0, 0x01a0)))\n                    }\n                    function abi_encode_address_address_address_uint256_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n                    {\n                        tail := add(headStart, 256)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), and(value2, _1))\n                        mstore(add(headStart, 96), value3)\n                        mstore(add(headStart, 128), value4)\n                        mstore(add(headStart, 160), value5)\n                        mstore(add(headStart, 192), value6)\n                        mstore(add(headStart, 224), value7)\n                    }\n                    /// @ast-id 654 @src 0:7131:7296  \"function _addFee(uint256 _fee) internal {...\"\n                    function fun_addFee(var_fee)\n                    {\n                        /// @src 0:7181:7195  \"accFee += _fee\"\n                        let _1 := checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7181:7195  \"accFee += _fee\" */ 0x0c), var_fee)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(/** @src 0:7181:7195  \"accFee += _fee\" */ 0x0c, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        /// @src 0:7224:7240  \"_fee * precision\"\n                        let expr := checked_mul_uint256(var_fee, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7231:7240  \"precision\" */ 0x05))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(/** @src 0:7205:7256  \"accFeePerShare += (_fee * precision) / quoteReserve\" */ 0x0e, checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7205:7256  \"accFeePerShare += (_fee * precision) / quoteReserve\" */ 0x0e), /** @src 0:7223:7256  \"(_fee * precision) / quoteReserve\" */ checked_div_uint256(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:7244:7256  \"quoteReserve\" */ 0x09))))\n                        /// @src 0:7272:7289  \"UpdateFee(accFee)\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        mstore(_2, _1)\n                        /// @src 0:7272:7289  \"UpdateFee(accFee)\"\n                        log1(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 32, /** @src 0:7272:7289  \"UpdateFee(accFee)\" */ 0x38e229a7f3f9c329892d08eb37c4e91ccac6d12c798d394990ca4f56028ec266)\n                    }\n                    /// @ast-id 1347 @src 0:12838:14257  \"function _checkInputTokens(...\"\n                    function fun_checkInputTokens(var_params_1211_mpos) -> var\n                    {\n                        /// @src 0:12979:12997  \"_params.collateral\"\n                        let _1 := add(var_params_1211_mpos, 96)\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:12979:12997  \"_params.collateral\" */ _1))\n                        /// @src 0:13001:13018  \"_params.baseToken\"\n                        let _3 := 32\n                        let _4 := add(var_params_1211_mpos, _3)\n                        /// @src 0:12979:13018  \"_params.collateral != _params.baseToken\"\n                        let _5 := cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13001:13018  \"_params.baseToken\" */ _4)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _6 := sub(shl(160, 1), 1)\n                        let _7 := and(/** @src 0:12979:13018  \"_params.collateral != _params.baseToken\" */ _2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _6)\n                        /// @src 0:12975:14230  \"if (_params.collateral != _params.baseToken) {...\"\n                        switch /** @src 0:12979:13018  \"_params.collateral != _params.baseToken\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _7, /** @src 0:12979:13018  \"_params.collateral != _params.baseToken\" */ _5))\n                        case /** @src 0:12975:14230  \"if (_params.collateral != _params.baseToken) {...\" */ 0 {\n                            /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                            let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                            mstore(_8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                            /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                            let _9 := staticcall(gas(), _7, _8, sub(abi_encode_tuple_address(add(_8, 4), /** @src 0:13975:13979  \"this\" */ address()), /** @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\" */ _8), _8, /** @src 0:13001:13018  \"_params.baseToken\" */ _3)\n                            /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                            if iszero(_9) { revert_forward() }\n                            let expr := /** @src -1:-1:-1 */ 0\n                            /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                            if _9\n                            {\n                                let _10 := /** @src 0:13001:13018  \"_params.baseToken\" */ _3\n                                /// @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\"\n                                if gt(/** @src 0:13001:13018  \"_params.baseToken\" */ _3, /** @src 0:13913:13994  \"IERC20(_params.collateral).balanceOf(...\" */ returndatasize()) { _10 := returndatasize() }\n                                finalize_allocation(_8, _10)\n                                expr := abi_decode_uint256_fromMemory(_8, add(_8, _10))\n                            }\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _11 := sload(/** @src 0:14024:14061  \"collateralReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14042:14060  \"_params.collateral\" */ _1))))\n                            /// @src 0:14008:14112  \"addedAmount -= (collateralReserve[_params.collateral] +...\"\n                            let expr_1 := checked_sub_uint256(expr, /** @src 0:14024:14111  \"collateralReserve[_params.collateral] +...\" */ checked_add_uint256(_11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:14080:14111  \"baseReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:14092:14110  \"_params.collateral\" */ _1))))))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _12 := mload(/** @src 0:14144:14168  \"_params.collateralAmount\" */ add(var_params_1211_mpos, 192))\n                            /// @src 0:14126:14219  \"if (addedAmount < _params.collateralAmount + _params.baseAmount)...\"\n                            if /** @src 0:14130:14189  \"addedAmount < _params.collateralAmount + _params.baseAmount\" */ lt(expr_1, /** @src 0:14144:14189  \"_params.collateralAmount + _params.baseAmount\" */ checked_add_uint256(_12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:14171:14189  \"_params.baseAmount\" */ add(var_params_1211_mpos, 128))))\n                            /// @src 0:14126:14219  \"if (addedAmount < _params.collateralAmount + _params.baseAmount)...\"\n                            {\n                                /// @src 0:14207:14219  \"return false\"\n                                var := /** @src -1:-1:-1 */ 0\n                                /// @src 0:14207:14219  \"return false\"\n                                leave\n                            }\n                        }\n                        default /// @src 0:12975:14230  \"if (_params.collateral != _params.baseToken) {...\"\n                        {\n                            /// @src 0:13061:13097  \"IERC20(_params.collateral).balanceOf\"\n                            let expr_1227_address := cleanup_address(/** @src 0:13061:13087  \"IERC20(_params.collateral)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13068:13086  \"_params.collateral\" */ _1))))\n                            /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                            let _13 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            let _14 := shl(224, 0x70a08231)\n                            /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                            mstore(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14)\n                            /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                            let _15 := staticcall(gas(), expr_1227_address, _13, sub(abi_encode_tuple_address(add(_13, 4), /** @src 0:13123:13127  \"this\" */ address()), /** @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\" */ _13), _13, /** @src 0:13001:13018  \"_params.baseToken\" */ _3)\n                            /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                            if iszero(_15) { revert_forward() }\n                            let expr_2 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                            if _15\n                            {\n                                let _16 := /** @src 0:13001:13018  \"_params.baseToken\" */ _3\n                                /// @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\"\n                                if gt(/** @src 0:13001:13018  \"_params.baseToken\" */ _3, /** @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\" */ returndatasize()) { _16 := returndatasize() }\n                                finalize_allocation(_13, _16)\n                                expr_2 := abi_decode_uint256_fromMemory(_13, add(_13, _16))\n                            }\n                            /// @src 0:13034:13142  \"uint256 collateralAmount = IERC20(_params.collateral).balanceOf(...\"\n                            let var_collateralAmount := expr_2\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _17 := sload(/** @src 0:13177:13214  \"collateralReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13195:13213  \"_params.collateral\" */ _1))))\n                            /// @src 0:13156:13265  \"collateralAmount -= (collateralReserve[_params.collateral] +...\"\n                            var_collateralAmount := checked_sub_uint256(expr_2, /** @src 0:13177:13264  \"collateralReserve[_params.collateral] +...\" */ checked_add_uint256(_17, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13233:13264  \"baseReserve[_params.collateral]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13245:13263  \"_params.collateral\" */ _1))))))\n                            /// @src 0:13283:13301  \"_params.collateral\"\n                            let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13283:13301  \"_params.collateral\" */ _1))\n                            /// @src 0:13279:13492  \"if (_params.collateral == _params.quoteToken) {...\"\n                            if /** @src 0:13283:13323  \"_params.collateral == _params.quoteToken\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:13283:13323  \"_params.collateral == _params.quoteToken\" */ _18, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _6), /** @src 0:13283:13323  \"_params.collateral == _params.quoteToken\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13305:13323  \"_params.quoteToken\" */ add(var_params_1211_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64)))))\n                            /// @src 0:13279:13492  \"if (_params.collateral == _params.quoteToken) {...\"\n                            {\n                                /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                                let _19 := sload(/** @src 0:13364:13376  \"quoteReserve\" */ 0x09)\n                                /// @src 0:13364:13410  \"quoteReserve -...\"\n                                let expr_3 := checked_sub_uint256(_19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13399:13410  \"quoteInDebt\" */ 0x0a))\n                                /// @src 0:13364:13439  \"quoteReserve -...\"\n                                let expr_4 := checked_sub_uint256(expr_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13433:13439  \"accFee\" */ 0x0c))\n                                /// @src 0:13343:13477  \"collateralAmount -= (quoteReserve -...\"\n                                var_collateralAmount := checked_sub_uint256(var_collateralAmount, /** @src 0:13364:13476  \"quoteReserve -...\" */ checked_sub_uint256(expr_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13462:13476  \"accProtocolFee\" */ 0x0d)))\n                            }\n                            /// @src 0:13505:13566  \"if (collateralAmount < _params.collateralAmount) return false\"\n                            if /** @src 0:13509:13552  \"collateralAmount < _params.collateralAmount\" */ lt(var_collateralAmount, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:13528:13552  \"_params.collateralAmount\" */ add(var_params_1211_mpos, 192)))\n                            /// @src 0:13505:13566  \"if (collateralAmount < _params.collateralAmount) return false\"\n                            {\n                                /// @src 0:13554:13566  \"return false\"\n                                var := /** @src -1:-1:-1 */ 0\n                                /// @src 0:13554:13566  \"return false\"\n                                leave\n                            }\n                            /// @src 0:13602:13637  \"IERC20(_params.baseToken).balanceOf\"\n                            let expr_1278_address := cleanup_address(/** @src 0:13602:13627  \"IERC20(_params.baseToken)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13609:13626  \"_params.baseToken\" */ _4))))\n                            /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                            let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                            mstore(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14)\n                            /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                            let _21 := staticcall(gas(), expr_1278_address, _20, sub(abi_encode_tuple_address(add(_20, /** @src 0:13061:13142  \"IERC20(_params.collateral).balanceOf(...\" */ 4), /** @src 0:13123:13127  \"this\" */ address()), /** @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\" */ _20), _20, /** @src 0:13001:13018  \"_params.baseToken\" */ _3)\n                            /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                            if iszero(_21) { revert_forward() }\n                            let expr_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                            if _21\n                            {\n                                let _22 := /** @src 0:13001:13018  \"_params.baseToken\" */ _3\n                                /// @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\"\n                                if gt(/** @src 0:13001:13018  \"_params.baseToken\" */ _3, /** @src 0:13602:13682  \"IERC20(_params.baseToken).balanceOf(...\" */ returndatasize()) { _22 := returndatasize() }\n                                finalize_allocation(_20, _22)\n                                expr_5 := abi_decode_uint256_fromMemory(_20, add(_20, _22))\n                            }\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _23 := sload(/** @src 0:13711:13747  \"collateralReserve[_params.baseToken]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13729:13746  \"_params.baseToken\" */ _4))))\n                            /// @src 0:13696:13797  \"baseAmount -= (collateralReserve[_params.baseToken] +...\"\n                            let expr_6 := checked_sub_uint256(expr_5, /** @src 0:13711:13796  \"collateralReserve[_params.baseToken] +...\" */ checked_add_uint256(_23, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:13766:13796  \"baseReserve[_params.baseToken]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:13778:13795  \"_params.baseToken\" */ _4))))))\n                            /// @src 0:13811:13860  \"if (baseAmount < _params.baseAmount) return false\"\n                            if /** @src 0:13815:13846  \"baseAmount < _params.baseAmount\" */ lt(expr_6, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:13828:13846  \"_params.baseAmount\" */ add(var_params_1211_mpos, 128)))\n                            /// @src 0:13811:13860  \"if (baseAmount < _params.baseAmount) return false\"\n                            {\n                                /// @src 0:13848:13860  \"return false\"\n                                var := /** @src -1:-1:-1 */ 0\n                                /// @src 0:13848:13860  \"return false\"\n                                leave\n                            }\n                        }\n                        /// @src 0:14239:14250  \"return true\"\n                        var := /** @src 0:14246:14250  \"true\" */ 0x01\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        validator_revert_bool(value)\n                        value0 := value\n                    }\n                    function read_from_calldatat_address(ptr) -> returnValue\n                    {\n                        let value := calldataload(ptr)\n                        validator_revert_address(value)\n                        returnValue := value\n                    }\n                    function abi_encode_bytes32_address(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                    }\n                    function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n                    {\n                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                        length := calldataload(addr_1)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        addr := add(addr_1, 0x20)\n                        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n                    }\n                    function abi_decode_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n                    {\n                        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                        value0 := mload(headStart)\n                        let value := mload(add(headStart, 32))\n                        validator_revert_address(value)\n                        value1 := value\n                    }\n                    function abi_encode_address_address_address_uint256(headStart, value1, value2, value3) -> tail\n                    {\n                        tail := add(headStart, 128)\n                        mstore(headStart, 0)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), and(value2, _1))\n                        mstore(add(headStart, 96), value3)\n                    }\n                    function abi_encode_bytes32_uint256_uint256_uint256(headStart, value0, value1, value2, value3) -> tail\n                    {\n                        tail := add(headStart, 128)\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), value3)\n                    }\n                    function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @src 0:18135:21832  \"function close(...\"\n                    function fun_close_inner(var_params_offset)\n                    {\n                        /// @src 0:18290:18307  \"IFactory(factory)\"\n                        let expr_1742_address := cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:18299:18306  \"factory\" */ 0x01)))\n                        /// @src 0:18418:18447  \"_positionStorage.updateStatus\"\n                        let expr_1754_address := cleanup_address(/** @src 0:18353:18386  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:18370:18385  \"positionStorage\" */ 0x02))))\n                        /// @src 0:18461:18480  \"_params.positionKey\"\n                        let expr := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(/** @src 0:18461:18480  \"_params.positionKey\" */ var_params_offset)\n                        /// @src 0:18494:18508  \"_params.closer\"\n                        let expr_1 := read_from_calldatat_address(add(var_params_offset, 96))\n                        /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                        let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                        mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x2b002d9d))\n                        /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                        let _2 := sub(abi_encode_bytes32_address(add(_1, 4), expr, expr_1), _1)\n                        let _3 := call(gas(), expr_1754_address, /** @src 0:18461:18480  \"_params.positionKey\" */ 0, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ _1, _2, _1, 32)\n                        if iszero(_3) { revert_forward() }\n                        let expr_2 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:18418:18518  \"_positionStorage.updateStatus(...\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(32, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_1, _4)\n                            expr_2 := abi_decode_bool_fromMemory(_1, add(_1, _4))\n                        }\n                        /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                        let _5 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                        mstore(_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                        /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                        let _6 := 832\n                        let _7 := staticcall(gas(), expr_1754_address, _5, sub(abi_encode_uint256(add(_5, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:18572:18640  \"_positionStorage.position(...\" */ expr), _5), _5, _6)\n                        if iszero(_7) { revert_forward() }\n                        let expr_1770_mpos := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:18572:18640  \"_positionStorage.position(...\"\n                        if _7\n                        {\n                            let _8 := _6\n                            if gt(_6, returndatasize()) { _8 := returndatasize() }\n                            finalize_allocation(_5, _8)\n                            expr_1770_mpos := abi_decode_struct_TradePosition_fromMemory(_5, add(_5, _8))\n                        }\n                        /// @src 0:18695:18708  \"_params.data0\"\n                        let expr_1777_offset, expr_length := access_calldata_tail_bytes_calldata(var_params_offset, add(var_params_offset, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                        /// @src 0:18670:18709  \"_liquidateBaseToken(pos, _params.data0)\"\n                        let expr_3 := fun_liquidateBaseToken(expr_1770_mpos, expr_1777_offset, expr_length)\n                        /// @src 0:18719:18741  \"uint256 liquidationFee\"\n                        let var_liquidationFee := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:18751:18794  \"uint256 quoteAmount = pos.quoteToken.amount\"\n                        let var_quoteAmount := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:18773:18794  \"pos.quoteToken.amount\" */ add(/** @src 0:18773:18787  \"pos.quoteToken\" */ mload(add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                        /// @src 0:18804:19022  \"if (needLiquidate) {...\"\n                        if expr_2\n                        {\n                            /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                            let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                            mstore(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x5fb3b1b5))\n                            /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                            let _10 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:18866:18893  \"_factory.liquidationFeeRate\" */ expr_1742_address, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)), /** @src 0:18866:18895  \"_factory.liquidationFeeRate()\" */ _9, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4, /** @src 0:18866:18895  \"_factory.liquidationFeeRate()\" */ _9, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)\n                            /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                            if iszero(_10) { revert_forward() }\n                            let expr_4 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                            /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                            if _10\n                            {\n                                let _11 := /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32\n                                /// @src 0:18866:18895  \"_factory.liquidationFeeRate()\"\n                                if gt(/** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32, /** @src 0:18866:18895  \"_factory.liquidationFeeRate()\" */ returndatasize()) { _11 := returndatasize() }\n                                finalize_allocation(_9, _11)\n                                expr_4 := abi_decode_uint256_fromMemory(_9, add(_9, _11))\n                            }\n                            /// @src 0:18909:18968  \"liquidationFee = (quoteAmount * liquidationFeeRate) / 10000\"\n                            var_liquidationFee := /** @src 0:18926:18968  \"(quoteAmount * liquidationFeeRate) / 10000\" */ checked_div_uint256_20819(/** @src 0:18927:18959  \"quoteAmount * liquidationFeeRate\" */ checked_mul_uint256(var_quoteAmount, expr_4))\n                            /// @src 0:18982:19011  \"quoteAmount += liquidationFee\"\n                            var_quoteAmount := checked_add_uint256(var_quoteAmount, var_liquidationFee)\n                        }\n                        /// @src 0:19031:19043  \"uint256 loss\"\n                        let var_loss := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:19053:19086  \"uint256 remainingCollateralAmount\"\n                        let var_remainingCollateralAmount := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:19142:19172  \"uint256 neededCollateralAmount\"\n                        let var_neededCollateralAmount := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                        /// @src 0:19186:20290  \"if (baseValue < quoteAmount) {...\"\n                        if /** @src 0:19190:19213  \"baseValue < quoteAmount\" */ lt(expr_3, var_quoteAmount)\n                        /// @src 0:19186:20290  \"if (baseValue < quoteAmount) {...\"\n                        {\n                            /// @src 0:19233:19263  \"loss = quoteAmount - baseValue\"\n                            var_loss := /** @src 0:19240:19263  \"quoteAmount - baseValue\" */ checked_sub_uint256(var_quoteAmount, expr_3)\n                            /// @src 0:19281:19310  \"neededCollateralAmount = loss\"\n                            var_neededCollateralAmount := var_loss\n                            /// @src 0:19332:19349  \"pos.collateral.id\"\n                            let _12 := read_from_memoryt_address(/** @src 0:19332:19346  \"pos.collateral\" */ mload(add(expr_1770_mpos, 160)))\n                            /// @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\"\n                            let _13 := cleanup_address(/** @src 0:19353:19370  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:19353:19367  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128))))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _14 := sub(shl(160, 1), 1)\n                            /// @src 0:19328:20019  \"if (pos.collateral.id != pos.quoteToken.id) {...\"\n                            if /** @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\" */ iszero(eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\" */ _12, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14), /** @src 0:19332:19370  \"pos.collateral.id != pos.quoteToken.id\" */ _13))\n                            /// @src 0:19328:20019  \"if (pos.collateral.id != pos.quoteToken.id) {...\"\n                            {\n                                /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                                let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                                /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                                mstore(_15, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(229, 0x03e10eaf))\n                                /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                                let _16 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:19465:19487  \"_factory.dexAggregator\" */ expr_1742_address, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14), /** @src 0:19465:19489  \"_factory.dexAggregator()\" */ _15, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4, /** @src 0:19465:19489  \"_factory.dexAggregator()\" */ _15, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)\n                                /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                                if iszero(_16) { revert_forward() }\n                                let expr_5 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                                /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                                if _16\n                                {\n                                    let _17 := /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32\n                                    /// @src 0:19465:19489  \"_factory.dexAggregator()\"\n                                    if gt(/** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32, /** @src 0:19465:19489  \"_factory.dexAggregator()\" */ returndatasize()) { _17 := returndatasize() }\n                                    finalize_allocation(_15, _17)\n                                    expr_5 := abi_decode_tuple_address_fromMemory(_15, add(_15, _17))\n                                }\n                                /// @src 0:19649:19666  \"pos.collateral.id\"\n                                let _18 := read_from_memoryt_address(/** @src 0:19649:19663  \"pos.collateral\" */ mload(/** @src 0:19332:19346  \"pos.collateral\" */ add(expr_1770_mpos, 160)))\n                                /// @src 0:19692:19709  \"pos.quoteToken.id\"\n                                let _19 := read_from_memoryt_address(/** @src 0:19692:19706  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)))\n                                /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                                let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                                /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                                mstore(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xec278309))\n                                /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                                let _21 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:19425:19511  \"IDEXAggregator(...\" */ expr_5, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _14), /** @src 0:19562:19761  \"dexAggregator.getAmountIn(...\" */ _20, sub(abi_encode_address_address_address_uint256(add(_20, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:19562:19761  \"dexAggregator.getAmountIn(...\" */ _18, _19, var_loss), _20), _20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64)\n                                /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                                if iszero(_21) { revert_forward() }\n                                let expr_1864_component := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                                /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                                if _21\n                                {\n                                    let _22 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64\n                                    /// @src 0:19562:19761  \"dexAggregator.getAmountIn(...\"\n                                    if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64, /** @src 0:19562:19761  \"dexAggregator.getAmountIn(...\" */ returndatasize()) { _22 := returndatasize() }\n                                    finalize_allocation(_20, _22)\n                                    let expr_component, expr_component_1 := abi_decode_uint256t_address_fromMemory(_20, add(_20, _22))\n                                    expr_1864_component := expr_component\n                                }\n                                /// @src 0:19533:19761  \"(neededCollateralAmount, ) = dexAggregator.getAmountIn(...\"\n                                var_neededCollateralAmount := expr_1864_component\n                                /// @src 0:19965:19978  \"_params.data1\"\n                                let expr_offset, expr_1873_length := access_calldata_tail_bytes_calldata(var_params_offset, add(var_params_offset, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64))\n                                /// @src 0:19783:20000  \"remainingCollateralAmount += _liquidateCollateral(...\"\n                                var_remainingCollateralAmount := /** @src 0:19812:20000  \"_liquidateCollateral(...\" */ fun_liquidateCollateral(expr_1770_mpos, expr_1864_component, var_loss, expr_offset, expr_1873_length)\n                            }\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _23 := mload(/** @src 0:20066:20087  \"pos.collateral.amount\" */ add(/** @src 0:20066:20080  \"pos.collateral\" */ mload(/** @src 0:19332:19346  \"pos.collateral\" */ add(expr_1770_mpos, 160)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                            /// @src 0:20037:20276  \"if (neededCollateralAmount > pos.collateral.amount) {...\"\n                            if /** @src 0:20041:20087  \"neededCollateralAmount > pos.collateral.amount\" */ gt(var_neededCollateralAmount, _23)\n                            /// @src 0:20037:20276  \"if (neededCollateralAmount > pos.collateral.amount) {...\"\n                            {\n                                /// @src 0:20118:20257  \"InsufficientCollateral(...\"\n                                let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                                /// @src 0:20118:20257  \"InsufficientCollateral(...\"\n                                mstore(_24, shl(226, 0x2c1f8ef1))\n                                revert(_24, sub(abi_encode_uint256_uint256(add(_24, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:20118:20257  \"InsufficientCollateral(...\" */ _23, var_neededCollateralAmount), _24))\n                            }\n                        }\n                        /// @src 0:20304:20397  \"remainingCollateralAmount += (pos.collateral.amount -...\"\n                        let expr_6 := checked_add_uint256(var_remainingCollateralAmount, /** @src 0:20334:20396  \"pos.collateral.amount -...\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20334:20355  \"pos.collateral.amount\" */ add(/** @src 0:20334:20348  \"pos.collateral\" */ mload(add(expr_1770_mpos, 160)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)), /** @src 0:20334:20396  \"pos.collateral.amount -...\" */ var_neededCollateralAmount))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _25 := mload(/** @src 0:20466:20481  \"pos.positionKey\" */ expr_1770_mpos)\n                        /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                        if iszero(extcodesize(expr_1754_address))\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src 0:18461:18480  \"_params.positionKey\" */ 0, 0)\n                        }\n                        /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                        let _26 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                        mstore(_26, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x8b029d61))\n                        /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                        let _27 := call(gas(), expr_1754_address, /** @src 0:18461:18480  \"_params.positionKey\" */ 0, /** @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\" */ _26, sub(abi_encode_bytes32_uint256_uint256_uint256(add(_26, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4), /** @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\" */ _25, expr_3, var_loss, expr_6), _26), _26, /** @src 0:18461:18480  \"_params.positionKey\" */ 0)\n                        /// @src 0:20418:20571  \"_positionStorage.updateCloseValues(...\"\n                        if iszero(_27) { revert_forward() }\n                        if _27\n                        {\n                            finalize_allocation_20719(_26)\n                            abi_decode(_26, _26)\n                        }\n                        /// @src 0:20582:20618  \"quoteInDebt -= pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20582:20618  \"quoteInDebt -= pos.quoteToken.amount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20597:20618  \"pos.quoteToken.amount\" */ add(/** @src 0:20597:20611  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))))\n                        /// @src 0:20628:20673  \"withdrawingLiquidity += pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20628:20673  \"withdrawingLiquidity += pos.quoteToken.amount\" */ 0x0b), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20652:20673  \"pos.quoteToken.amount\" */ add(/** @src 0:20652:20666  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))))\n                        /// @src 0:20716:20729  \"pos.baseToken\"\n                        let _782_mpos := mload(add(expr_1770_mpos, /** @src 0:18494:18508  \"_params.closer\" */ 96))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _28 := mload(/** @src 0:20716:20736  \"pos.baseToken.amount\" */ add(_782_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                        /// @src 0:20683:20712  \"baseReserve[pos.baseToken.id]\"\n                        let _29 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:20695:20711  \"pos.baseToken.id\" */ _782_mpos)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_29, /** @src 0:20683:20736  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20683:20736  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ _29), _28))\n                        /// @src 0:20786:20800  \"pos.collateral\"\n                        let _795_mpos := mload(/** @src 0:20334:20348  \"pos.collateral\" */ add(expr_1770_mpos, 160))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _30 := mload(/** @src 0:20786:20807  \"pos.collateral.amount\" */ add(_795_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))\n                        /// @src 0:20746:20782  \"collateralReserve[pos.collateral.id]\"\n                        let _31 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:20764:20781  \"pos.collateral.id\" */ _795_mpos)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_31, /** @src 0:20746:20807  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20746:20807  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ _31), _30))\n                        /// @src 0:20817:20854  \"openInterest -= pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20792(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:20817:20854  \"openInterest -= pos.quoteToken.amount\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:20833:20854  \"pos.quoteToken.amount\" */ add(/** @src 0:20833:20847  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)), /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))))\n                        /// @src 0:20865:21124  \"if (liquidationFee > 0) {...\"\n                        if /** @src 0:20869:20887  \"liquidationFee > 0\" */ iszero(iszero(var_liquidationFee))\n                        /// @src 0:20865:21124  \"if (liquidationFee > 0) {...\"\n                        {\n                            /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                            let _32 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                            mstore(_32, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xbd2bae9d))\n                            /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                            let _33 := staticcall(gas(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:20930:20955  \"_factory.liquidationFeeTo\" */ expr_1742_address, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)), /** @src 0:20930:20957  \"_factory.liquidationFeeTo()\" */ _32, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 4, /** @src 0:20930:20957  \"_factory.liquidationFeeTo()\" */ _32, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)\n                            /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                            if iszero(_33) { revert_forward() }\n                            let expr_7 := /** @src 0:18461:18480  \"_params.positionKey\" */ 0\n                            /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                            if _33\n                            {\n                                let _34 := /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32\n                                /// @src 0:20930:20957  \"_factory.liquidationFeeTo()\"\n                                if gt(/** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32, /** @src 0:20930:20957  \"_factory.liquidationFeeTo()\" */ returndatasize()) { _34 := returndatasize() }\n                                finalize_allocation(_32, _34)\n                                expr_7 := abi_decode_tuple_address_fromMemory(_32, add(_32, _34))\n                            }\n                            /// @src 0:21085:21099  \"liquidationFee\"\n                            fun_safeTransfer(/** @src 0:21016:21033  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:21016:21030  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128))), /** @src 0:21085:21099  \"liquidationFee\" */ expr_7, var_liquidationFee)\n                        }\n                        /// @src 0:21133:21418  \"if (loss == 0) {...\"\n                        if /** @src 0:21137:21146  \"loss == 0\" */ iszero(var_loss)\n                        /// @src 0:21133:21418  \"if (loss == 0) {...\"\n                        {\n                            /// @src 0:21179:21202  \"baseValue - quoteAmount\"\n                            let expr_8 := checked_sub_uint256(expr_3, var_quoteAmount)\n                            /// @src 0:21216:21408  \"if (profit > 0) {...\"\n                            if /** @src 0:21220:21230  \"profit > 0\" */ iszero(iszero(expr_8))\n                            /// @src 0:21216:21408  \"if (profit > 0) {...\"\n                            {\n                                /// @src 0:21299:21316  \"pos.quoteToken.id\"\n                                let _35 := read_from_memoryt_address(/** @src 0:21299:21313  \"pos.quoteToken\" */ mload(/** @src 0:18773:18787  \"pos.quoteToken\" */ add(expr_1770_mpos, 128)))\n                                /// @src 0:21369:21375  \"profit\"\n                                fun_safeTransfer(_35, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:21338:21347  \"pos.owner\" */ add(expr_1770_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))), /** @src 0:21369:21375  \"profit\" */ expr_8)\n                            }\n                        }\n                        /// @src 0:21427:21633  \"if (remainingCollateralAmount > 0) {...\"\n                        if /** @src 0:21431:21460  \"remainingCollateralAmount > 0\" */ iszero(iszero(expr_6))\n                        /// @src 0:21427:21633  \"if (remainingCollateralAmount > 0) {...\"\n                        {\n                            /// @src 0:21521:21538  \"pos.collateral.id\"\n                            let _36 := read_from_memoryt_address(/** @src 0:21521:21535  \"pos.collateral\" */ mload(/** @src 0:20334:20348  \"pos.collateral\" */ add(expr_1770_mpos, 160)))\n                            /// @src 0:21583:21608  \"remainingCollateralAmount\"\n                            fun_safeTransfer(_36, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:21556:21565  \"pos.owner\" */ add(expr_1770_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32))), /** @src 0:21583:21608  \"remainingCollateralAmount\" */ expr_6)\n                        }\n                        /// @src 0:21691:21700  \"pos.owner\"\n                        let _37 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:21691:21700  \"pos.owner\" */ add(expr_1770_mpos, /** @src 0:18418:18518  \"_positionStorage.updateStatus(...\" */ 32)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _38 := mload(/** @src 0:21714:21729  \"pos.positionKey\" */ expr_1770_mpos)\n                        /// @src 0:21743:21759  \"pos.baseToken.id\"\n                        let _39 := read_from_memoryt_address(/** @src 0:21743:21756  \"pos.baseToken\" */ mload(/** @src 0:20716:20729  \"pos.baseToken\" */ add(expr_1770_mpos, /** @src 0:18494:18508  \"_params.closer\" */ 96)))\n                        /// @src 0:21773:21787  \"_params.closer\"\n                        let expr_9 := read_from_calldatat_address(/** @src 0:18494:18508  \"_params.closer\" */ add(var_params_offset, 96))\n                        /// @src 0:21648:21825  \"Close(...\"\n                        let _40 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:21648:21825  \"Close(...\"\n                        log4(_40, sub(abi_encode_address_address_uint256(_40, _39, expr_9, var_liquidationFee), _40), 0xad34241f9e3b3d38652a7493d4e07da1f3e88afa819a546544b20de727f2ffd8, /** @src 0:21667:21677  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:21648:21825  \"Close(...\" */ _37, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)), /** @src 0:21648:21825  \"Close(...\" */ _38)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_encode_address_address_rational_by_bytes_calldata(headStart, value0, value1, value3, value4) -> tail\n                    {\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        mstore(add(headStart, 96), 128)\n                        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n                    }\n                    /// @ast-id 1613 @src 0:16174:16948  \"function _liquidateBaseToken(...\"\n                    function fun_liquidateBaseToken(var_pos_mpos, var_data_1540_offset, var_data_1540_length) -> var\n                    {\n                        /// @src 0:16359:16374  \"_pos.quoteToken\"\n                        let _1 := add(var_pos_mpos, 128)\n                        /// @src 0:16352:16388  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                        let expr_1552_address := cleanup_address(/** @src 0:16352:16378  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:16359:16377  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:16359:16374  \"_pos.quoteToken\" */ mload(_1))))\n                        /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        let _3 := shl(224, 0x70a08231)\n                        /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _3)\n                        /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _4 := 32\n                        let _5 := staticcall(gas(), expr_1552_address, _2, sub(abi_encode_tuple_address(add(_2, 4), /** @src 0:16410:16414  \"this\" */ address()), /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _2), _2, _4)\n                        if iszero(_5) { revert_forward() }\n                        let expr := /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0\n                        /// @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if _5\n                        {\n                            let _6 := _4\n                            if gt(_4, returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_2, _6)\n                            expr := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                        }\n                        /// @src 0:16476:16490  \"_pos.baseToken\"\n                        let _7 := add(var_pos_mpos, 96)\n                        let _880_mpos := mload(_7)\n                        /// @src 0:16476:16493  \"_pos.baseToken.id\"\n                        let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:16476:16493  \"_pos.baseToken.id\" */ _880_mpos))\n                        /// @src 0:16531:16552  \"_pos.baseToken.amount\"\n                        fun_safeTransfer(_8, /** @src 0:16507:16517  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:16531:16552  \"_pos.baseToken.amount\" */ add(_880_mpos, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4)))\n                        /// @src 0:16626:16643  \"_pos.baseToken.id\"\n                        let _9 := read_from_memoryt_address(/** @src 0:16626:16640  \"_pos.baseToken\" */ mload(_7))\n                        /// @src 0:16657:16675  \"_pos.quoteToken.id\"\n                        let _10 := read_from_memoryt_address(/** @src 0:16657:16672  \"_pos.quoteToken\" */ mload(_1))\n                        /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        if iszero(extcodesize(/** @src 0:16507:16517  \"msg.sender\" */ caller()))\n                        /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0, 0)\n                        }\n                        /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        let _11 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        mstore(_11, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x39d87e77))\n                        /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        let _12 := call(gas(), /** @src 0:16507:16517  \"msg.sender\" */ caller(), /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0, /** @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\" */ _11, sub(abi_encode_address_address_rational_by_bytes_calldata(add(_11, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ 4), /** @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\" */ _9, _10, var_data_1540_offset, var_data_1540_length), _11), _11, /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0)\n                        /// @src 0:16572:16719  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        if iszero(_12) { revert_forward() }\n                        if _12\n                        {\n                            finalize_allocation_20719(_11)\n                            abi_decode(_11, _11)\n                        }\n                        /// @src 0:16753:16789  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                        let expr_address := cleanup_address(/** @src 0:16753:16779  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:16760:16778  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:16760:16775  \"_pos.quoteToken\" */ mload(_1))))\n                        /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _13 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        mstore(_13, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _3)\n                        /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _14 := staticcall(gas(), expr_address, _13, sub(abi_encode_tuple_address(add(_13, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ 4), /** @src 0:16410:16414  \"this\" */ address()), /** @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _13), _13, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4)\n                        /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if iszero(_14) { revert_forward() }\n                        let expr_1 := /** @src 0:16359:16377  \"_pos.quoteToken.id\" */ 0\n                        /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if _14\n                        {\n                            let _15 := /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4\n                            /// @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                            if gt(/** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _4, /** @src 0:16753:16826  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ returndatasize()) { _15 := returndatasize() }\n                            finalize_allocation(_13, _15)\n                            expr_1 := abi_decode_uint256_fromMemory(_13, add(_13, _15))\n                        }\n                        /// @src 0:16836:16896  \"if (balanceAfter < balanceBefore) revert InsufficientInput()\"\n                        if /** @src 0:16840:16868  \"balanceAfter < balanceBefore\" */ lt(expr_1, expr)\n                        /// @src 0:16836:16896  \"if (balanceAfter < balanceBefore) revert InsufficientInput()\"\n                        {\n                            /// @src 0:16877:16896  \"InsufficientInput()\"\n                            let _16 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:16877:16896  \"InsufficientInput()\"\n                            mstore(_16, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                            /// @src 0:16877:16896  \"InsufficientInput()\"\n                            revert(_16, /** @src 0:16352:16425  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ 4)\n                        }\n                        /// @src 0:16906:16941  \"return balanceAfter - balanceBefore\"\n                        var := /** @src 0:16913:16941  \"balanceAfter - balanceBefore\" */ checked_sub_uint256(expr_1, expr)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_encode_address_address_uint256_bytes_calldata(headStart, value0, value1, value2, value3, value4) -> tail\n                    {\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), 128)\n                        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n                    }\n                    /// @ast-id 1726 @src 0:16954:18129  \"function _liquidateCollateral(...\"\n                    function fun_liquidateCollateral(var__pos_mpos, var_neededCollateralAmount, var_loss, var_data_offset, var_data_length) -> var\n                    {\n                        /// @src 0:17207:17222  \"_pos.collateral\"\n                        let _1 := add(var__pos_mpos, 160)\n                        /// @src 0:17200:17236  \"IERC20(_pos.collateral.id).balanceOf\"\n                        let expr_1634_address := cleanup_address(/** @src 0:17200:17226  \"IERC20(_pos.collateral.id)\" */ cleanup_address(/** @src 0:17207:17225  \"_pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:17207:17222  \"_pos.collateral\" */ mload(_1))))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _2 := 64\n                        /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        let _4 := shl(224, 0x70a08231)\n                        /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                        /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        let _5 := 32\n                        let _6 := 4\n                        let _7 := staticcall(gas(), expr_1634_address, _3, sub(abi_encode_tuple_address(add(_3, _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _3), _3, _5)\n                        if iszero(_7) { revert_forward() }\n                        let expr := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                        /// @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        if _7\n                        {\n                            let _8 := _5\n                            if gt(_5, returndatasize()) { _8 := returndatasize() }\n                            finalize_allocation(_3, _8)\n                            expr := abi_decode_uint256_fromMemory(_3, add(_3, _8))\n                        }\n                        /// @src 0:17319:17334  \"_pos.quoteToken\"\n                        let _9 := add(var__pos_mpos, 128)\n                        /// @src 0:17312:17348  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                        let expr_1648_address := cleanup_address(/** @src 0:17312:17338  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:17319:17337  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:17319:17334  \"_pos.quoteToken\" */ mload(_9))))\n                        /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        mstore(_10, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                        /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _11 := staticcall(gas(), expr_1648_address, _10, sub(abi_encode_tuple_address(add(_10, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _10), _10, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5)\n                        /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if iszero(_11) { revert_forward() }\n                        let expr_1 := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                        /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if _11\n                        {\n                            let _12 := /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5\n                            /// @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                            if gt(/** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5, /** @src 0:17312:17385  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_10, _12)\n                            expr_1 := abi_decode_uint256_fromMemory(_10, add(_10, _12))\n                        }\n                        /// @src 0:17436:17454  \"_pos.collateral.id\"\n                        let _13 := read_from_memoryt_address(/** @src 0:17436:17451  \"_pos.collateral\" */ mload(_1))\n                        /// @src 0:17492:17515  \"_neededCollateralAmount\"\n                        fun_safeTransfer(_13, /** @src 0:17468:17478  \"msg.sender\" */ caller(), /** @src 0:17492:17515  \"_neededCollateralAmount\" */ var_neededCollateralAmount)\n                        /// @src 0:17589:17607  \"_pos.collateral.id\"\n                        let _14 := read_from_memoryt_address(/** @src 0:17589:17604  \"_pos.collateral\" */ mload(_1))\n                        /// @src 0:17621:17639  \"_pos.quoteToken.id\"\n                        let _15 := read_from_memoryt_address(/** @src 0:17621:17636  \"_pos.quoteToken\" */ mload(_9))\n                        /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        if iszero(extcodesize(/** @src 0:17468:17478  \"msg.sender\" */ caller()))\n                        /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src 0:17207:17225  \"_pos.collateral.id\" */ 0, 0)\n                        }\n                        /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        let _16 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        mstore(_16, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(226, 0x39d87e77))\n                        /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        let _17 := call(gas(), /** @src 0:17468:17478  \"msg.sender\" */ caller(), /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0, /** @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\" */ _16, sub(abi_encode_address_address_uint256_bytes_calldata(add(_16, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\" */ _14, _15, var_loss, var_data_offset, var_data_length), _16), _16, /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0)\n                        /// @src 0:17535:17687  \"ICloseCallback(msg.sender).closeCallback(...\"\n                        if iszero(_17) { revert_forward() }\n                        if _17\n                        {\n                            finalize_allocation_20719(_16)\n                            abi_decode(_16, _16)\n                        }\n                        /// @src 0:17724:17760  \"IERC20(_pos.collateral.id).balanceOf\"\n                        let expr_1688_address := cleanup_address(/** @src 0:17724:17750  \"IERC20(_pos.collateral.id)\" */ cleanup_address(/** @src 0:17731:17749  \"_pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:17731:17746  \"_pos.collateral\" */ mload(_1))))\n                        /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        mstore(_18, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                        /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        let _19 := staticcall(gas(), expr_1688_address, _18, sub(abi_encode_tuple_address(add(_18, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _18), _18, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5)\n                        /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        if iszero(_19) { revert_forward() }\n                        let expr_2 := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                        /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                        if _19\n                        {\n                            let _20 := /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5\n                            /// @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\"\n                            if gt(/** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5, /** @src 0:17724:17797  \"IERC20(_pos.collateral.id).balanceOf(...\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            expr_2 := abi_decode_uint256_fromMemory(_18, add(_18, _20))\n                        }\n                        /// @src 0:17835:17871  \"IERC20(_pos.quoteToken.id).balanceOf\"\n                        let expr_1702_address := cleanup_address(/** @src 0:17835:17861  \"IERC20(_pos.quoteToken.id)\" */ cleanup_address(/** @src 0:17842:17860  \"_pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:17842:17857  \"_pos.quoteToken\" */ mload(_9))))\n                        /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        mstore(_21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _4)\n                        /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        let _22 := staticcall(gas(), expr_1702_address, _21, sub(abi_encode_tuple_address(add(_21, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6), /** @src 0:17258:17262  \"this\" */ address()), /** @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ _21), _21, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5)\n                        /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if iszero(_22) { revert_forward() }\n                        let expr_3 := /** @src 0:17207:17225  \"_pos.collateral.id\" */ 0\n                        /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                        if _22\n                        {\n                            let _23 := /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5\n                            /// @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\"\n                            if gt(/** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _5, /** @src 0:17835:17908  \"IERC20(_pos.quoteToken.id).balanceOf(...\" */ returndatasize()) { _23 := returndatasize() }\n                            finalize_allocation(_21, _23)\n                            expr_3 := abi_decode_uint256_fromMemory(_21, add(_21, _23))\n                        }\n                        /// @src 0:17918:18008  \"if (quoteBalanceAfter < quoteBalanceBefore + _loss)...\"\n                        if /** @src 0:17922:17968  \"quoteBalanceAfter < quoteBalanceBefore + _loss\" */ lt(expr_3, /** @src 0:17942:17968  \"quoteBalanceBefore + _loss\" */ checked_add_uint256(expr_1, var_loss))\n                        /// @src 0:17918:18008  \"if (quoteBalanceAfter < quoteBalanceBefore + _loss)...\"\n                        {\n                            /// @src 0:17989:18008  \"InsufficientInput()\"\n                            let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                            /// @src 0:17989:18008  \"InsufficientInput()\"\n                            mstore(_24, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                            /// @src 0:17989:18008  \"InsufficientInput()\"\n                            revert(_24, /** @src 0:17200:17273  \"IERC20(_pos.collateral.id).balanceOf(...\" */ _6)\n                        }\n                        /// @src 0:18018:18087  \"return colBalanceAfter - (colBalanceBefore - _neededCollateralAmount)\"\n                        var := /** @src 0:18025:18087  \"colBalanceAfter - (colBalanceBefore - _neededCollateralAmount)\" */ checked_sub_uint256(expr_2, /** @src 0:18044:18086  \"colBalanceBefore - _neededCollateralAmount\" */ checked_sub_uint256(expr, var_neededCollateralAmount))\n                    }\n                    /// @src 0:21838:23123  \"function rollback(...\"\n                    function fun_rollback_inner(var_params_offset)\n                    {\n                        /// @src 0:22102:22127  \"_positionStorage.position\"\n                        let expr_2057_address := cleanup_address(/** @src 0:22015:22048  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:22032:22047  \"positionStorage\" */ 0x02))))\n                        /// @src 0:22141:22160  \"_params.positionKey\"\n                        let expr := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(/** @src 0:22141:22160  \"_params.positionKey\" */ var_params_offset)\n                        /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                        let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                        mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                        /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                        let _2 := 832\n                        let _3 := staticcall(gas(), expr_2057_address, _1, sub(abi_encode_uint256(add(_1, 4), expr), _1), _1, _2)\n                        if iszero(_3) { revert_forward() }\n                        let expr_2060_mpos := /** @src 0:22141:22160  \"_params.positionKey\" */ 0\n                        /// @src 0:22102:22170  \"_positionStorage.position(...\"\n                        if _3\n                        {\n                            let _4 := _2\n                            if gt(_2, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_1, _4)\n                            expr_2060_mpos := abi_decode_struct_TradePosition_fromMemory(_1, add(_1, _4))\n                        }\n                        /// @src 0:22202:22223  \"_unrealizeLiquidity()\"\n                        let expr_1 := fun_unrealizeLiquidity()\n                        /// @src 0:22251:22265  \"pos.quoteToken\"\n                        let _5 := add(expr_2060_mpos, 128)\n                        /// @src 0:22251:22272  \"pos.quoteToken.amount\"\n                        let _6 := 32\n                        /// @src 0:22233:22300  \"if (quoteAmount < pos.quoteToken.amount) revert InsufficientInput()\"\n                        if /** @src 0:22237:22272  \"quoteAmount < pos.quoteToken.amount\" */ lt(expr_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22251:22272  \"pos.quoteToken.amount\" */ add(/** @src 0:22251:22265  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)))\n                        /// @src 0:22233:22300  \"if (quoteAmount < pos.quoteToken.amount) revert InsufficientInput()\"\n                        {\n                            /// @src 0:22281:22300  \"InsufficientInput()\"\n                            let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:22281:22300  \"InsufficientInput()\"\n                            mstore(_7, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                            /// @src 0:22281:22300  \"InsufficientInput()\"\n                            revert(_7, /** @src 0:22102:22170  \"_positionStorage.position(...\" */ 4)\n                        }\n                        /// @src 0:22358:22376  \"_params.rollbacker\"\n                        let _8 := add(var_params_offset, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)\n                        /// @src 0:22358:22376  \"_params.rollbacker\"\n                        let expr_2 := read_from_calldatat_address(_8)\n                        /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                        if iszero(extcodesize(expr_2057_address))\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src 0:22141:22160  \"_params.positionKey\" */ 0, 0)\n                        }\n                        /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                        let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                        mstore(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x9a102341))\n                        /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                        let _10 := call(gas(), expr_2057_address, /** @src 0:22141:22160  \"_params.positionKey\" */ 0, /** @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\" */ _9, sub(abi_encode_bytes32_address(add(_9, /** @src 0:22102:22170  \"_positionStorage.position(...\" */ 4), /** @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\" */ expr, expr_2), _9), _9, /** @src 0:22141:22160  \"_params.positionKey\" */ 0)\n                        /// @src 0:22311:22377  \"_positionStorage.rollback(_params.positionKey, _params.rollbacker)\"\n                        if iszero(_10) { revert_forward() }\n                        if _10\n                        {\n                            finalize_allocation_20719(_9)\n                            abi_decode(_9, _9)\n                        }\n                        /// @src 0:22388:22424  \"quoteInDebt -= pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22388:22424  \"quoteInDebt -= pos.quoteToken.amount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22403:22424  \"pos.quoteToken.amount\" */ add(/** @src 0:22403:22417  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))))\n                        /// @src 0:22434:22479  \"withdrawingLiquidity += pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22434:22479  \"withdrawingLiquidity += pos.quoteToken.amount\" */ 0x0b), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22458:22479  \"pos.quoteToken.amount\" */ add(/** @src 0:22458:22472  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))))\n                        /// @src 0:22522:22535  \"pos.baseToken\"\n                        let _11 := add(expr_2060_mpos, 96)\n                        let _mpos := mload(_11)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _12 := mload(/** @src 0:22522:22542  \"pos.baseToken.amount\" */ add(_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))\n                        /// @src 0:22489:22518  \"baseReserve[pos.baseToken.id]\"\n                        let _13 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22501:22517  \"pos.baseToken.id\" */ _mpos)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_13, /** @src 0:22489:22542  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22489:22542  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ _13), _12))\n                        /// @src 0:22592:22606  \"pos.collateral\"\n                        let _14 := add(expr_2060_mpos, 160)\n                        let _1049_mpos := mload(_14)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _15 := mload(/** @src 0:22592:22613  \"pos.collateral.amount\" */ add(_1049_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))\n                        /// @src 0:22552:22588  \"collateralReserve[pos.collateral.id]\"\n                        let _16 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22570:22587  \"pos.collateral.id\" */ _1049_mpos)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_16, /** @src 0:22552:22613  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22552:22613  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ _16), _15))\n                        /// @src 0:22623:22660  \"openInterest -= pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20792(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:22623:22660  \"openInterest -= pos.quoteToken.amount\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22639:22660  \"pos.quoteToken.amount\" */ add(/** @src 0:22639:22653  \"pos.quoteToken\" */ mload(_5), /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6))))\n                        /// @src 0:22712:22725  \"pos.baseToken\"\n                        let _1068_mpos := mload(_11)\n                        /// @src 0:22712:22728  \"pos.baseToken.id\"\n                        let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22712:22728  \"pos.baseToken.id\" */ _1068_mpos))\n                        /// @src 0:22742:22751  \"pos.owner\"\n                        let _18 := add(expr_2060_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)\n                        /// @src 0:22742:22751  \"pos.owner\"\n                        let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22742:22751  \"pos.owner\" */ _18))\n                        /// @src 0:22765:22785  \"pos.baseToken.amount\"\n                        fun_safeTransfer(_17, _19, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22765:22785  \"pos.baseToken.amount\" */ add(_1068_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)))\n                        /// @src 0:22846:22860  \"pos.collateral\"\n                        let _1081_mpos := mload(_14)\n                        /// @src 0:22846:22863  \"pos.collateral.id\"\n                        let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22846:22863  \"pos.collateral.id\" */ _1081_mpos))\n                        /// @src 0:22877:22886  \"pos.owner\"\n                        let _21 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:22877:22886  \"pos.owner\" */ _18))\n                        /// @src 0:22900:22921  \"pos.collateral.amount\"\n                        fun_safeTransfer(_20, _21, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:22900:22921  \"pos.collateral.amount\" */ add(_1081_mpos, /** @src 0:22251:22272  \"pos.quoteToken.amount\" */ _6)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _22 := mload(/** @src 0:22993:23008  \"pos.positionKey\" */ expr_2060_mpos)\n                        /// @src 0:23022:23040  \"_params.rollbacker\"\n                        let expr_3 := read_from_calldatat_address(_8)\n                        /// @src 0:23054:23074  \"_params.serviceToken\"\n                        let expr_4 := read_from_calldatat_address(add(var_params_offset, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64))\n                        /// @src 0:22947:23116  \"Rollback(...\"\n                        let _23 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:22947:23116  \"Rollback(...\"\n                        log3(_23, sub(abi_encode_address_address_uint256(_23, expr_3, expr_4, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ calldataload(/** @src 0:23088:23106  \"_params.serviceFee\" */ add(var_params_offset, /** @src 0:22522:22535  \"pos.baseToken\" */ 96))), /** @src 0:22947:23116  \"Rollback(...\" */ _23), 0x415e462bce09ff3142dc51f9a6878d89bb34d75a21bc8ffc7fc397eccce872e9, /** @src 0:22969:22979  \"msg.sender\" */ caller(), /** @src 0:22947:23116  \"Rollback(...\" */ _22)\n                    }\n                    /// @ast-id 414 @src 0:4907:5215  \"function _unrealizeLiquidity() internal view returns (uint256) {...\"\n                    function fun_unrealizeLiquidity() -> var\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let cleaned := and(sload(/** @src 0:5002:5012  \"quoteToken\" */ 0x04), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\" */ add(_1, /** @src 0:5002:5012  \"quoteToken\" */ 0x04), /** @src 0:5078:5082  \"this\" */ address())\n                        /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        let _2 := staticcall(gas(), cleaned, _1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36, /** @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\" */ _1, 32)\n                        if iszero(_2) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:5040:5084  \"IERC20(_quoteToken).balanceOf(address(this))\"\n                        if _2\n                        {\n                            let _3 := 32\n                            if gt(_3, returndatasize()) { _3 := returndatasize() }\n                            finalize_allocation(_1, _3)\n                            expr := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _4 := sload(/** @src 0:5135:5165  \"collateralReserve[_quoteToken]\" */ mapping_index_access_mapping_address_bool_of_address_20791(cleaned))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        if lt(expr, _4) { panic_error_0x11() }\n                        let _5 := sload(/** @src 0:5181:5193  \"quoteReserve\" */ 0x09)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _6 := sload(/** @src 0:5196:5207  \"quoteInDebt\" */ 0x0a)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        if lt(_5, _6) { panic_error_0x11() }\n                        /// @src 0:5094:5208  \"return...\"\n                        var := /** @src 0:5113:5208  \"balance -...\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(expr, _4), sub(_5, _6))\n                    }\n                    /// @src 0:23174:24109  \"function closeManuallyStep1(...\"\n                    function fun_closeManuallyStep1_inner(var_positionKey, var_executor)\n                    {\n                        /// @src 0:23381:23416  \"_positionStorage.closeManuallyStep1\"\n                        let expr_2183_address := cleanup_address(/** @src 0:23338:23371  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:23355:23370  \"positionStorage\" */ 0x02))))\n                        /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                        if iszero(extcodesize(expr_2183_address))\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                        let _1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                        mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(227, 0x1601180b))\n                        /// @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\"\n                        let _2 := call(gas(), expr_2183_address, 0, _1, sub(abi_encode_uint256(add(_1, 4), var_positionKey), _1), _1, 0)\n                        if iszero(_2) { revert_forward() }\n                        if _2\n                        {\n                            finalize_allocation_20719(_1)\n                            abi_decode(_1, _1)\n                        }\n                        /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                        let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                        mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                        /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                        let _4 := 832\n                        let _5 := staticcall(gas(), expr_2183_address, _3, sub(abi_encode_uint256(add(_3, /** @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\" */ 4), /** @src 0:23485:23546  \"_positionStorage.position(...\" */ var_positionKey), _3), _3, _4)\n                        if iszero(_5) { revert_forward() }\n                        let expr_2195_mpos := /** @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\" */ 0\n                        /// @src 0:23485:23546  \"_positionStorage.position(...\"\n                        if _5\n                        {\n                            let _6 := _4\n                            if gt(_4, returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_3, _6)\n                            expr_2195_mpos := abi_decode_struct_TradePosition_fromMemory(_3, add(_3, _6))\n                        }\n                        /// @src 0:23677:23690  \"pos.baseToken\"\n                        let _7 := add(expr_2195_mpos, 96)\n                        let _1147_mpos := mload(_7)\n                        /// @src 0:23677:23693  \"pos.baseToken.id\"\n                        let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23677:23693  \"pos.baseToken.id\" */ _1147_mpos))\n                        /// @src 0:23730:23750  \"pos.baseToken.amount\"\n                        fun_safeTransfer(_8, var_executor, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:23730:23750  \"pos.baseToken.amount\" */ add(_1147_mpos, 32)))\n                        /// @src 0:23811:23825  \"pos.collateral\"\n                        let _9 := add(expr_2195_mpos, 160)\n                        let _1158_mpos := mload(_9)\n                        /// @src 0:23811:23828  \"pos.collateral.id\"\n                        let _10 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23811:23828  \"pos.collateral.id\" */ _1158_mpos))\n                        /// @src 0:23865:23886  \"pos.collateral.amount\"\n                        fun_safeTransfer(_10, var_executor, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:23865:23886  \"pos.collateral.amount\" */ add(_1158_mpos, /** @src 0:23730:23750  \"pos.baseToken.amount\" */ 32)))\n                        /// @src 0:23940:23953  \"pos.baseToken\"\n                        let _1169_mpos := mload(_7)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _11 := mload(/** @src 0:23940:23960  \"pos.baseToken.amount\" */ add(_1169_mpos, /** @src 0:23730:23750  \"pos.baseToken.amount\" */ 32))\n                        /// @src 0:23907:23936  \"baseReserve[pos.baseToken.id]\"\n                        let _12 := mapping_index_access_mapping_address_bool_of_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23919:23935  \"pos.baseToken.id\" */ _1169_mpos)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_12, /** @src 0:23907:23960  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:23907:23960  \"baseReserve[pos.baseToken.id] -= pos.baseToken.amount\" */ _12), _11))\n                        /// @src 0:24010:24024  \"pos.collateral\"\n                        let _1182_mpos := mload(_9)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _13 := mload(/** @src 0:24010:24031  \"pos.collateral.amount\" */ add(_1182_mpos, /** @src 0:23730:23750  \"pos.baseToken.amount\" */ 32))\n                        /// @src 0:23970:24006  \"collateralReserve[pos.collateral.id]\"\n                        let _14 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:23988:24005  \"pos.collateral.id\" */ _1182_mpos)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_14, /** @src 0:23970:24031  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:23970:24031  \"collateralReserve[pos.collateral.id] -= pos.collateral.amount\" */ _14), _13))\n                        /// @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\"\n                        log4(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64), /** @src 0:23381:23430  \"_positionStorage.closeManuallyStep1(_positionKey)\" */ 0, /** @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\" */ 0x1cc79853bbf119208b3fab3b7d33fcdb6ceaee7c8b16b89bdb389ed3b51ad17c, /** @src 0:24066:24076  \"msg.sender\" */ caller(), /** @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\" */ var_positionKey, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:24047:24102  \"CloseManuallyStep1(msg.sender, _positionKey, _executor)\" */ var_executor, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    /// @src 0:24211:27128  \"function closeManuallyStep2(...\"\n                    function fun_closeManuallyStep2_inner(var_positionKey, var_baseValue, var_remainingCollateralAmount, var_liquidationFee)\n                    {\n                        /// @src 0:24540:24565  \"_positionStorage.position\"\n                        let expr_2277_address := cleanup_address(/** @src 0:24453:24486  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:24470:24485  \"positionStorage\" */ 0x02))))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := 64\n                        /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                        /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                        let _3 := 832\n                        let _4 := 4\n                        let _5 := staticcall(gas(), expr_2277_address, _2, sub(abi_encode_uint256(add(_2, _4), var_positionKey), _2), _2, _3)\n                        if iszero(_5) { revert_forward() }\n                        let expr_2279_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 0:24540:24601  \"_positionStorage.position(...\"\n                        if _5\n                        {\n                            let _6 := _3\n                            if gt(_3, returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_2, _6)\n                            expr_2279_mpos := abi_decode_struct_TradePosition_fromMemory(_2, add(_2, _6))\n                        }\n                        /// @src 0:24616:24630  \"pos.collateral\"\n                        let _7 := add(expr_2279_mpos, 160)\n                        /// @src 0:24616:24633  \"pos.collateral.id\"\n                        let _8 := read_from_memoryt_address(/** @src 0:24616:24630  \"pos.collateral\" */ mload(_7))\n                        /// @src 0:24637:24651  \"pos.quoteToken\"\n                        let _9 := add(expr_2279_mpos, 128)\n                        /// @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\"\n                        let _10 := cleanup_address(/** @src 0:24637:24654  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:24637:24651  \"pos.quoteToken\" */ mload(_9)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _11 := sub(shl(160, 1), 1)\n                        /// @src 0:24612:25556  \"if (pos.collateral.id == pos.quoteToken.id) {...\"\n                        switch /** @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\" */ _8, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11), /** @src 0:24616:24654  \"pos.collateral.id == pos.quoteToken.id\" */ _10)\n                        case /** @src 0:24612:25556  \"if (pos.collateral.id == pos.quoteToken.id) {...\" */ 0 {\n                            /// @src 0:24919:24940  \"_unrealizeLiquidity()\"\n                            let expr := fun_unrealizeLiquidity()\n                            /// @src 0:24954:25044  \"if (quoteAmount < _baseValue + _liquidationFee)...\"\n                            if /** @src 0:24958:25000  \"quoteAmount < _baseValue + _liquidationFee\" */ lt(expr, /** @src 0:24972:25000  \"_baseValue + _liquidationFee\" */ checked_add_uint256(var_baseValue, var_liquidationFee))\n                            /// @src 0:24954:25044  \"if (quoteAmount < _baseValue + _liquidationFee)...\"\n                            {\n                                /// @src 0:25025:25044  \"InsufficientInput()\"\n                                let _12 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                                /// @src 0:25025:25044  \"InsufficientInput()\"\n                                mstore(_12, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                                /// @src 0:25025:25044  \"InsufficientInput()\"\n                                revert(_12, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4)\n                            }\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _13 := sload(/** @src 0:25087:25123  \"collateralReserve[pos.collateral.id]\" */ mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:25105:25122  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:25105:25119  \"pos.collateral\" */ mload(_7))))\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            let _14 := sload(/** @src 0:25160:25190  \"baseReserve[pos.collateral.id]\" */ mapping_index_access_mapping_address_bool_of_address(/** @src 0:25172:25189  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:25172:25186  \"pos.collateral\" */ mload(_7))))\n                            /// @src 0:25232:25267  \"IERC20(pos.collateral.id).balanceOf\"\n                            let expr_2342_address := cleanup_address(/** @src 0:25232:25257  \"IERC20(pos.collateral.id)\" */ cleanup_address(/** @src 0:25239:25256  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:25239:25253  \"pos.collateral\" */ mload(_7))))\n                            /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                            let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                            /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                            mstore(_15, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                            /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                            let _16 := staticcall(gas(), expr_2342_address, _15, sub(abi_encode_tuple_address(add(_15, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4), /** @src 0:25293:25297  \"this\" */ address()), /** @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\" */ _15), _15, 32)\n                            if iszero(_16) { revert_forward() }\n                            let expr_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:25232:25312  \"IERC20(pos.collateral.id).balanceOf(...\"\n                            if _16\n                            {\n                                let _17 := 32\n                                if gt(_17, returndatasize()) { _17 := returndatasize() }\n                                finalize_allocation(_15, _17)\n                                expr_1 := abi_decode_uint256_fromMemory(_15, add(_15, _17))\n                            }\n                            /// @src 0:25452:25545  \"if (collateralAmount < _remainingCollateralAmount)...\"\n                            if /** @src 0:25456:25501  \"collateralAmount < _remainingCollateralAmount\" */ lt(/** @src 0:25353:25438  \"collateralBalance -...\" */ checked_sub_uint256(/** @src 0:25353:25407  \"collateralBalance -...\" */ checked_sub_uint256(expr_1, _13), /** @src 0:25353:25438  \"collateralBalance -...\" */ _14), /** @src 0:25456:25501  \"collateralAmount < _remainingCollateralAmount\" */ var_remainingCollateralAmount)\n                            /// @src 0:25452:25545  \"if (collateralAmount < _remainingCollateralAmount)...\"\n                            {\n                                /// @src 0:25526:25545  \"InsufficientInput()\"\n                                let _18 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                                /// @src 0:25526:25545  \"InsufficientInput()\"\n                                mstore(_18, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                                /// @src 0:25526:25545  \"InsufficientInput()\"\n                                revert(_18, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4)\n                            }\n                        }\n                        default /// @src 0:24612:25556  \"if (pos.collateral.id == pos.quoteToken.id) {...\"\n                        {\n                            /// @src 0:24687:24708  \"_unrealizeLiquidity()\"\n                            let expr_2 := fun_unrealizeLiquidity()\n                            /// @src 0:24722:24866  \"if (...\"\n                            if /** @src 0:24743:24825  \"amount <...\" */ lt(expr_2, /** @src 0:24768:24825  \"_baseValue + _remainingCollateralAmount + _liquidationFee\" */ checked_add_uint256(/** @src 0:24768:24807  \"_baseValue + _remainingCollateralAmount\" */ checked_add_uint256(var_baseValue, var_remainingCollateralAmount), /** @src 0:24768:24825  \"_baseValue + _remainingCollateralAmount + _liquidationFee\" */ var_liquidationFee))\n                            /// @src 0:24722:24866  \"if (...\"\n                            {\n                                /// @src 0:24847:24866  \"InsufficientInput()\"\n                                let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                                /// @src 0:24847:24866  \"InsufficientInput()\"\n                                mstore(_19, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                                /// @src 0:24847:24866  \"InsufficientInput()\"\n                                revert(_19, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4)\n                            }\n                        }\n                        /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                        if iszero(extcodesize(expr_2277_address))\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                        let _20 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                        mstore(_20, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xf71139f7))\n                        /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                        let _21 := call(gas(), expr_2277_address, /** @src -1:-1:-1 */ 0, /** @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\" */ _20, sub(abi_encode_uint256(add(_20, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4), /** @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\" */ var_positionKey), _20), _20, /** @src -1:-1:-1 */ 0)\n                        /// @src 0:25566:25615  \"_positionStorage.closeManuallyStep2(_positionKey)\"\n                        if iszero(_21) { revert_forward() }\n                        if _21\n                        {\n                            finalize_allocation_20719(_20)\n                            abi_decode(_20, _20)\n                        }\n                        /// @src 0:25626:25638  \"uint256 loss\"\n                        let var_loss := /** @src -1:-1:-1 */ 0\n                        /// @src 0:25676:25697  \"pos.quoteToken.amount\"\n                        let _22 := 32\n                        /// @src 0:25676:25715  \"pos.quoteToken.amount + _liquidationFee\"\n                        let expr_3 := checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:25676:25697  \"pos.quoteToken.amount\" */ add(/** @src 0:25676:25690  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22)), /** @src 0:25676:25715  \"pos.quoteToken.amount + _liquidationFee\" */ var_liquidationFee)\n                        /// @src 0:25725:25823  \"if (_baseValue < neededQuoteAmount) {...\"\n                        if /** @src 0:25729:25759  \"_baseValue < neededQuoteAmount\" */ lt(var_baseValue, expr_3)\n                        /// @src 0:25725:25823  \"if (_baseValue < neededQuoteAmount) {...\"\n                        {\n                            /// @src 0:25775:25812  \"loss = neededQuoteAmount - _baseValue\"\n                            var_loss := /** @src 0:25782:25812  \"neededQuoteAmount - _baseValue\" */ checked_sub_uint256(expr_3, var_baseValue)\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _23 := mload(/** @src 0:25880:25895  \"pos.positionKey\" */ expr_2279_mpos)\n                        /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                        if iszero(extcodesize(expr_2277_address))\n                        {\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                        let _24 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                        mstore(_24, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x8b029d61))\n                        /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                        let _25 := call(gas(), expr_2277_address, /** @src -1:-1:-1 */ 0, /** @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\" */ _24, sub(abi_encode_bytes32_uint256_uint256_uint256(add(_24, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4), /** @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\" */ _23, var_baseValue, var_loss, var_remainingCollateralAmount), _24), _24, /** @src -1:-1:-1 */ 0)\n                        /// @src 0:25832:25987  \"_positionStorage.updateCloseValues(...\"\n                        if iszero(_25) { revert_forward() }\n                        if _25\n                        {\n                            finalize_allocation_20719(_24)\n                            abi_decode(_24, _24)\n                        }\n                        /// @src 0:25998:26034  \"quoteInDebt -= pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:25998:26034  \"quoteInDebt -= pos.quoteToken.amount\" */ 0x0a), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:26013:26034  \"pos.quoteToken.amount\" */ add(/** @src 0:26013:26027  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))))\n                        /// @src 0:26044:26089  \"withdrawingLiquidity += pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20711(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:26044:26089  \"withdrawingLiquidity += pos.quoteToken.amount\" */ 0x0b), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:26068:26089  \"pos.quoteToken.amount\" */ add(/** @src 0:26068:26082  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))))\n                        /// @src 0:26099:26136  \"openInterest -= pos.quoteToken.amount\"\n                        update_storage_value_offsett_uint256_to_uint256_20792(checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:26099:26136  \"openInterest -= pos.quoteToken.amount\" */ 0x08), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:26115:26136  \"pos.quoteToken.amount\" */ add(/** @src 0:26115:26129  \"pos.quoteToken\" */ mload(_9), /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))))\n                        /// @src 0:26147:26417  \"if (_liquidationFee > 0) {...\"\n                        if /** @src 0:26151:26170  \"_liquidationFee > 0\" */ iszero(iszero(var_liquidationFee))\n                        /// @src 0:26147:26417  \"if (_liquidationFee > 0) {...\"\n                        {\n                            /// @src 0:26213:26247  \"IFactory(factory).liquidationFeeTo\"\n                            let expr_2430_address := cleanup_address(/** @src 0:26213:26230  \"IFactory(factory)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:26222:26229  \"factory\" */ 0x01))))\n                            /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                            let _26 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                            /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                            mstore(_26, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xbd2bae9d))\n                            /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                            let _27 := staticcall(gas(), expr_2430_address, _26, /** @src 0:24540:24601  \"_positionStorage.position(...\" */ _4, /** @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\" */ _26, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22)\n                            /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                            if iszero(_27) { revert_forward() }\n                            let expr_4 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                            if _27\n                            {\n                                let _28 := /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22\n                                /// @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\"\n                                if gt(/** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22, /** @src 0:26213:26249  \"IFactory(factory).liquidationFeeTo()\" */ returndatasize()) { _28 := returndatasize() }\n                                finalize_allocation(_26, _28)\n                                expr_4 := abi_decode_tuple_address_fromMemory(_26, add(_26, _28))\n                            }\n                            /// @src 0:26377:26392  \"_liquidationFee\"\n                            fun_safeTransfer(/** @src 0:26308:26325  \"pos.quoteToken.id\" */ read_from_memoryt_address(/** @src 0:26308:26322  \"pos.quoteToken\" */ mload(_9)), /** @src 0:26377:26392  \"_liquidationFee\" */ expr_4, var_liquidationFee)\n                        }\n                        /// @src 0:26426:26718  \"if (loss == 0) {...\"\n                        if /** @src 0:26430:26439  \"loss == 0\" */ iszero(var_loss)\n                        /// @src 0:26426:26718  \"if (loss == 0) {...\"\n                        {\n                            /// @src 0:26472:26502  \"_baseValue - neededQuoteAmount\"\n                            let expr_5 := checked_sub_uint256(var_baseValue, expr_3)\n                            /// @src 0:26516:26708  \"if (profit > 0) {...\"\n                            if /** @src 0:26520:26530  \"profit > 0\" */ iszero(iszero(expr_5))\n                            /// @src 0:26516:26708  \"if (profit > 0) {...\"\n                            {\n                                /// @src 0:26599:26616  \"pos.quoteToken.id\"\n                                let _29 := read_from_memoryt_address(/** @src 0:26599:26613  \"pos.quoteToken\" */ mload(_9))\n                                /// @src 0:26669:26675  \"profit\"\n                                fun_safeTransfer(_29, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:26638:26647  \"pos.owner\" */ add(expr_2279_mpos, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))), /** @src 0:26669:26675  \"profit\" */ expr_5)\n                            }\n                        }\n                        /// @src 0:26727:26935  \"if (_remainingCollateralAmount > 0) {...\"\n                        if /** @src 0:26731:26761  \"_remainingCollateralAmount > 0\" */ iszero(iszero(var_remainingCollateralAmount))\n                        /// @src 0:26727:26935  \"if (_remainingCollateralAmount > 0) {...\"\n                        {\n                            /// @src 0:26822:26839  \"pos.collateral.id\"\n                            let _30 := read_from_memoryt_address(/** @src 0:26822:26836  \"pos.collateral\" */ mload(_7))\n                            /// @src 0:26884:26910  \"_remainingCollateralAmount\"\n                            fun_safeTransfer(_30, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:26857:26866  \"pos.owner\" */ add(expr_2279_mpos, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22))), /** @src 0:26884:26910  \"_remainingCollateralAmount\" */ var_remainingCollateralAmount)\n                        }\n                        /// @src 0:26993:27002  \"pos.owner\"\n                        let _31 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:26993:27002  \"pos.owner\" */ add(expr_2279_mpos, /** @src 0:25676:25697  \"pos.quoteToken.amount\" */ _22)))\n                        /// @src 0:27042:27058  \"pos.baseToken.id\"\n                        let _32 := read_from_memoryt_address(/** @src 0:27042:27055  \"pos.baseToken\" */ mload(add(expr_2279_mpos, 96)))\n                        /// @src 0:26950:27121  \"Close(...\"\n                        let _33 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_1)\n                        /// @src 0:26950:27121  \"Close(...\"\n                        log4(_33, sub(abi_encode_address_address_uint256(_33, _32, /** @src 0:26969:26979  \"msg.sender\" */ caller(), /** @src 0:26950:27121  \"Close(...\" */ var_liquidationFee), _33), 0xad34241f9e3b3d38652a7493d4e07da1f3e88afa819a546544b20de727f2ffd8, /** @src 0:26969:26979  \"msg.sender\" */ caller(), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(/** @src 0:26950:27121  \"Close(...\" */ _31, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _11), /** @src 0:26950:27121  \"Close(...\" */ var_positionKey)\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_encode_struct_UpdateCollateralAmountParams(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 160)\n                        mstore(headStart, mload(value0))\n                        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n                        let memberValue0 := mload(add(value0, 0x40))\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(add(headStart, 0x40), and(memberValue0, _1))\n                        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n                        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n                    }\n                    function abi_encode_uint256_uint256_address_address_uint256(headStart, value0, value1, value2, value3, value4) -> tail\n                    {\n                        tail := add(headStart, 160)\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), value1)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(add(headStart, 64), and(value2, _1))\n                        mstore(add(headStart, 96), and(value3, _1))\n                        mstore(add(headStart, 128), value4)\n                    }\n                    /// @src 0:27134:28085  \"function updateCollateralAmount(...\"\n                    function fun_updateCollateralAmount_inner(var_params_mpos) -> var_collateralLiqPrice\n                    {\n                        /// @src 0:27448:27473  \"_positionStorage.position\"\n                        let expr_2529_address := cleanup_address(/** @src 0:27361:27394  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:27378:27393  \"positionStorage\" */ 0x02))))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := mload(/** @src 0:27487:27506  \"_params.positionKey\" */ var_params_mpos)\n                        /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                        let _2 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                        mstore(_2, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                        /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                        let _3 := 832\n                        let _4 := staticcall(gas(), expr_2529_address, _2, sub(abi_encode_uint256(add(_2, 4), _1), _2), _2, _3)\n                        if iszero(_4) { revert_forward() }\n                        let expr_2532_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 0:27448:27516  \"_positionStorage.position(...\"\n                        if _4\n                        {\n                            let _5 := _3\n                            if gt(_3, returndatasize()) { _5 := returndatasize() }\n                            finalize_allocation(_2, _5)\n                            expr_2532_mpos := abi_decode_struct_TradePosition_fromMemory(_2, add(_2, _5))\n                        }\n                        /// @src 0:27575:27589  \"pos.collateral\"\n                        let _6 := add(expr_2532_mpos, 160)\n                        /// @src 0:27558:27593  \"_unrealizeAmount(pos.collateral.id)\"\n                        let expr := fun_unrealizeAmount(/** @src 0:27575:27592  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:27575:27589  \"pos.collateral\" */ mload(_6)))\n                        /// @src 0:27631:27645  \"_params.amount\"\n                        let _7 := add(var_params_mpos, 32)\n                        /// @src 0:27603:27673  \"if (addedCollateralAmount < _params.amount) revert InsufficientInput()\"\n                        if /** @src 0:27607:27645  \"addedCollateralAmount < _params.amount\" */ lt(expr, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 0:27631:27645  \"_params.amount\" */ _7))\n                        /// @src 0:27603:27673  \"if (addedCollateralAmount < _params.amount) revert InsufficientInput()\"\n                        {\n                            /// @src 0:27654:27673  \"InsufficientInput()\"\n                            let _8 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                            /// @src 0:27654:27673  \"InsufficientInput()\"\n                            mstore(_8, /** @src 0:8835:8854  \"InsufficientInput()\" */ shl(224, 0xf8b3bb61))\n                            /// @src 0:27654:27673  \"InsufficientInput()\"\n                            revert(_8, /** @src 0:27448:27516  \"_positionStorage.position(...\" */ 4)\n                        }\n                        /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                        let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                        mstore(_9, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xc6f61b01))\n                        /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                        let _10 := call(gas(), expr_2529_address, /** @src -1:-1:-1 */ 0, /** @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\" */ _9, sub(abi_encode_struct_UpdateCollateralAmountParams(add(_9, /** @src 0:27448:27516  \"_positionStorage.position(...\" */ 4), /** @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\" */ var_params_mpos), _9), _9, /** @src 0:27631:27645  \"_params.amount\" */ 32)\n                        /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                        if iszero(_10) { revert_forward() }\n                        let expr_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                        if _10\n                        {\n                            let _11 := /** @src 0:27631:27645  \"_params.amount\" */ 32\n                            /// @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\"\n                            if gt(/** @src 0:27631:27645  \"_params.amount\" */ _11, /** @src 0:27705:27753  \"_positionStorage.updateCollateralAmount(_params)\" */ returndatasize()) { _11 := returndatasize() }\n                            finalize_allocation(_9, _11)\n                            expr_1 := abi_decode_uint256_fromMemory(_9, add(_9, _11))\n                        }\n                        /// @src 0:27684:27753  \"collateralLiqPrice = _positionStorage.updateCollateralAmount(_params)\"\n                        var_collateralLiqPrice := expr_1\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _12 := mload(/** @src 0:27804:27818  \"_params.amount\" */ _7)\n                        /// @src 0:27764:27800  \"collateralReserve[pos.collateral.id]\"\n                        let _13 := mapping_index_access_mapping_address_bool_of_address_20791(/** @src 0:27782:27799  \"pos.collateral.id\" */ read_from_memoryt_address(/** @src 0:27782:27796  \"pos.collateral\" */ mload(_6)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        sstore(_13, /** @src 0:27764:27818  \"collateralReserve[pos.collateral.id] += _params.amount\" */ checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:27764:27818  \"collateralReserve[pos.collateral.id] += _params.amount\" */ _13), _12))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _14 := mload(/** @src 0:27894:27913  \"_params.positionKey\" */ var_params_mpos)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _15 := mload(/** @src 0:27927:27941  \"_params.amount\" */ _7)\n                        /// @src 0:27987:28002  \"_params.updater\"\n                        let _16 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:27987:28002  \"_params.updater\" */ add(var_params_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 64)))\n                        /// @src 0:28016:28036  \"_params.serviceToken\"\n                        let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:28016:28036  \"_params.serviceToken\" */ add(var_params_mpos, 96)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _18 := mload(/** @src 0:28050:28068  \"_params.serviceFee\" */ add(var_params_mpos, 128))\n                        /// @src 0:27834:28078  \"UpdateCollateralAmount(...\"\n                        let _19 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:27834:28078  \"UpdateCollateralAmount(...\"\n                        log3(_19, sub(abi_encode_uint256_uint256_address_address_uint256(_19, _15, expr_1, _16, _17, _18), _19), 0x55c8ac91237f6fa939a79c1699293ce14171d61728c7cc56a131f51758fa598f, /** @src 0:27870:27880  \"msg.sender\" */ caller(), /** @src 0:27834:28078  \"UpdateCollateralAmount(...\" */ _14)\n                    }\n                    /// @ast-id 451 @src 0:5221:5507  \"function _unrealizeAmount(address _token) internal view returns (uint256) {...\"\n                    function fun_unrealizeAmount(var_token) -> var\n                    {\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 0:5319:5329  \"quoteToken\" */ 0x04), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        let _2 := and(/** @src 0:5309:5329  \"_token == quoteToken\" */ var_token, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _1)\n                        /// @src 0:5305:5359  \"if (_token == quoteToken) return _unrealizeLiquidity()\"\n                        if /** @src 0:5309:5329  \"_token == quoteToken\" */ eq(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2, /** @src 0:5309:5329  \"_token == quoteToken\" */ cleaned)\n                        /// @src 0:5305:5359  \"if (_token == quoteToken) return _unrealizeLiquidity()\"\n                        {\n                            /// @src 0:5331:5359  \"return _unrealizeLiquidity()\"\n                            var := /** @src 0:5338:5359  \"_unrealizeLiquidity()\" */ fun_unrealizeLiquidity()\n                            /// @src 0:5331:5359  \"return _unrealizeLiquidity()\"\n                            leave\n                        }\n                        /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                        let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                        mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\" */ add(_3, /** @src 0:5319:5329  \"quoteToken\" */ 0x04), /** @src 0:5420:5424  \"this\" */ address())\n                        /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                        let _4 := staticcall(gas(), _2, _3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 36, /** @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\" */ _3, 32)\n                        if iszero(_4) { revert_forward() }\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 0:5387:5426  \"IERC20(_token).balanceOf(address(this))\"\n                        if _4\n                        {\n                            let _5 := 32\n                            if gt(_5, returndatasize()) { _5 := returndatasize() }\n                            finalize_allocation(_3, _5)\n                            expr := abi_decode_uint256_fromMemory(_3, add(_3, _5))\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _6 := sload(/** @src 0:5453:5478  \"collateralReserve[_token]\" */ mapping_index_access_mapping_address_bool_of_address_20791(var_token))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        if lt(expr, _6) { panic_error_0x11() }\n                        /// @src 0:5436:5500  \"return balance - collateralReserve[_token] - baseReserve[_token]\"\n                        var := /** @src 0:5443:5500  \"balance - collateralReserve[_token] - baseReserve[_token]\" */ checked_sub_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sub(expr, _6), sload(/** @src 0:5481:5500  \"baseReserve[_token]\" */ mapping_index_access_mapping_address_bool_of_address(var_token)))\n                    }\n                    /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                    function abi_decode_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n                    {\n                        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                        value0 := mload(headStart)\n                        value1 := mload(add(headStart, 32))\n                    }\n                    function abi_encode_address_address_uint256_uint256_uint256_address_address_uint256(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n                    {\n                        tail := add(headStart, 256)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), value2)\n                        mstore(add(headStart, 96), value3)\n                        mstore(add(headStart, 128), value4)\n                        mstore(add(headStart, 160), and(value5, _1))\n                        mstore(add(headStart, 192), and(value6, _1))\n                        mstore(add(headStart, 224), value7)\n                    }\n                    /// @src 0:28091:28994  \"function updateDeadline(...\"\n                    function fun_updateDeadline_inner(var_params_mpos)\n                    {\n                        /// @src 0:28352:28377  \"_positionStorage.position\"\n                        let expr_2607_address := cleanup_address(/** @src 0:28265:28298  \"IPositionStorage(positionStorage)\" */ cleanup_address(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(sload(/** @src 0:28282:28297  \"positionStorage\" */ 0x02))))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _1 := mload(/** @src 0:28391:28410  \"_params.positionKey\" */ var_params_mpos)\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _2 := 64\n                        /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                        let _3 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                        mstore(_3, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x957d1fe1))\n                        /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                        let _4 := 832\n                        let _5 := staticcall(gas(), expr_2607_address, _3, sub(abi_encode_uint256(add(_3, 4), _1), _3), _3, _4)\n                        if iszero(_5) { revert_forward() }\n                        let expr_2610_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 0:28352:28420  \"_positionStorage.position(...\"\n                        if _5\n                        {\n                            let _6 := _4\n                            if gt(_4, returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_3, _6)\n                            expr_2610_mpos := abi_decode_struct_TradePosition_fromMemory(_3, add(_3, _6))\n                        }\n                        /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                        let _7 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                        mstore(_7, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0x5330e353))\n                        /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                        let _8 := call(gas(), expr_2607_address, /** @src -1:-1:-1 */ 0, /** @src 0:28467:28529  \"_positionStorage.updateDeadline(...\" */ _7, sub(abi_encode_struct_UpdateCollateralAmountParams(add(_7, /** @src 0:28352:28420  \"_positionStorage.position(...\" */ 4), /** @src 0:28467:28529  \"_positionStorage.updateDeadline(...\" */ var_params_mpos), _7), _7, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)\n                        /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                        if iszero(_8) { revert_forward() }\n                        let expr_2619_component := /** @src -1:-1:-1 */ 0\n                        let expr_component := expr_2619_component\n                        /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                        if _8\n                        {\n                            let _9 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2\n                            /// @src 0:28467:28529  \"_positionStorage.updateDeadline(...\"\n                            if gt(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2, /** @src 0:28467:28529  \"_positionStorage.updateDeadline(...\" */ returndatasize()) { _9 := returndatasize() }\n                            finalize_allocation(_7, _9)\n                            let expr_component_1, expr_component_2 := abi_decode_uint256t_uint256_fromMemory(_7, add(_7, _9))\n                            expr_2619_component := expr_component_1\n                            expr_component := expr_component_2\n                        }\n                        /// @src 0:28540:28558  \"quoteInDebt += fee\"\n                        update_storage_value_offsett_uint256_to_uint256(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:28540:28558  \"quoteInDebt += fee\" */ 0x0a), expr_2619_component))\n                        /// @src 0:28568:28597  \"accProtocolFee += protocolFee\"\n                        update_storage_value_offsett_uint256_to_uint256_20789(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:28568:28597  \"accProtocolFee += protocolFee\" */ 0x0d), expr_component))\n                        /// @src 0:28607:28626  \"openInterest += fee\"\n                        update_storage_value_offsett_uint256_to_uint256_20792(checked_add_uint256(/** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ sload(/** @src 0:28607:28626  \"openInterest += fee\" */ 0x08), expr_2619_component))\n                        /// @src 0:28644:28661  \"fee - protocolFee\"\n                        fun_addFee(checked_sub_uint256(expr_2619_component, expr_component))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _10 := mload(/** @src 0:28730:28749  \"_params.positionKey\" */ var_params_mpos)\n                        /// @src 0:28763:28779  \"pos.baseToken.id\"\n                        let _11 := read_from_memoryt_address(/** @src 0:28763:28776  \"pos.baseToken\" */ mload(add(expr_2610_mpos, 96)))\n                        /// @src 0:28793:28810  \"pos.quoteToken.id\"\n                        let _12 := read_from_memoryt_address(/** @src 0:28793:28807  \"pos.quoteToken\" */ mload(add(expr_2610_mpos, 128)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _13 := mload(/** @src 0:28824:28840  \"_params.deadline\" */ add(var_params_mpos, 32))\n                        /// @src 0:28896:28911  \"_params.updater\"\n                        let _14 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:28896:28911  \"_params.updater\" */ add(var_params_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ _2)))\n                        /// @src 0:28925:28945  \"_params.serviceToken\"\n                        let _15 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ cleanup_address(mload(/** @src 0:28925:28945  \"_params.serviceToken\" */ add(var_params_mpos, /** @src 0:28763:28776  \"pos.baseToken\" */ 96)))\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        let _16 := mload(/** @src 0:28959:28977  \"_params.serviceFee\" */ add(var_params_mpos, /** @src 0:28793:28807  \"pos.quoteToken\" */ 128))\n                        /// @src 0:28678:28987  \"UpdateDeadline(...\"\n                        let _17 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(_2)\n                        /// @src 0:28678:28987  \"UpdateDeadline(...\"\n                        log3(_17, sub(abi_encode_address_address_uint256_uint256_uint256_address_address_uint256(_17, _11, _12, _13, expr_2619_component, expr_component, _14, _15, _16), _17), 0x02bde35fb6c4387120ff67d8e52f04c37f08b2a8235cd8a731848afda59f622e, /** @src 0:28706:28716  \"msg.sender\" */ caller(), /** @src 0:28678:28987  \"UpdateDeadline(...\" */ _10)\n                    }\n                    /// @ast-id 3898 @src 13:649:1115  \"function safeTransfer(...\"\n                    function fun_safeTransfer(var__token, var_to, var_value)\n                    {\n                        /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                        let expr_3875_mpos := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(64)\n                        /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                        let _1 := add(expr_3875_mpos, 0x20)\n                        mstore(_1, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ shl(224, 0xa9059cbb))\n                        mstore(/** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ add(expr_3875_mpos, 36), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ expr_3875_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 68), var_value)\n                        /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                        mstore(expr_3875_mpos, /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 68)\n                        /// @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\"\n                        finalize_allocation_20721(expr_3875_mpos)\n                        /// @src 13:867:949  \"_token.call(...\"\n                        let expr_component := call(gas(), var__token, /** @src -1:-1:-1 */ 0, /** @src 13:867:949  \"_token.call(...\" */ _1, mload(expr_3875_mpos), /** @src -1:-1:-1 */ 0, 0)\n                        /// @src 13:867:949  \"_token.call(...\"\n                        let expr_component_mpos := extract_returndata()\n                        /// @src 13:980:1037  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                        let expr := expr_component\n                        if expr_component\n                        {\n                            /// @src 13:992:1003  \"data.length\"\n                            let expr_1 := /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ mload(/** @src 13:992:1003  \"data.length\" */ expr_component_mpos)\n                            /// @src 13:992:1036  \"data.length == 0 || abi.decode(data, (bool))\"\n                            let expr_2 := /** @src 13:992:1008  \"data.length == 0\" */ iszero(expr_1)\n                            /// @src 13:992:1036  \"data.length == 0 || abi.decode(data, (bool))\"\n                            if iszero(expr_2)\n                            {\n                                expr_2 := /** @src 13:1012:1036  \"abi.decode(data, (bool))\" */ abi_decode_bool_fromMemory(add(expr_component_mpos, /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 0x20), /** @src 13:1012:1036  \"abi.decode(data, (bool))\" */ add(add(expr_component_mpos, expr_1), /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 0x20))\n                            }\n                            /// @src 13:980:1037  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                            expr := expr_2\n                        }\n                        /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 0x20)\n                            /// @src 0:460:28996  \"contract Pool is Lockable, IPool {...\"\n                            mstore(add(memPtr, /** @src 13:892:939  \"abi.encodeWithSelector(0xa9059cbb, _to, _value)\" */ 36), /** @src 0:460:28996  \"contract Pool is Lockable, IPool {...\" */ 45)\n                            mstore(add(memPtr, 68), \"TransferHelper::safeTransfer: tr\")\n                            mstore(add(memPtr, 100), \"ansfer failed\")\n                            revert(memPtr, 132)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a264697066735822122048b365fa88dd7f01bcfe94464ece30d664ecd7af417a4a2c2771578f07c5acb764736f6c634300080f0033\"\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122048d4afac460fce11d312b076ab234486c433b4a101ce2fe5bdd30f1f2cf9be9164736f6c634300080f0033\"\n    }\n}\n","hash":"010000733676fb847adbae52381d28629858160f2dc0a81cce7592ad1dc6e9b5","factoryDependencies":{"01000c157a6a234a3691a4db61078def28c0c3a8186f7d698eb83dbe9d157460":"contracts/Pool.sol:Pool"}}},"contracts/base/Lockable.sol":{"Lockable":{"abi":[{"inputs":[],"name":"Locked","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Lockable.sol\":\"Lockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Lockable.sol\":{\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4af8261e270ee279b561618e7eb68593b7af51c9cb365927302bcdcbf7263f60\",\"dweb:/ipfs/QmTy94DQYqyxcCPYK8CrgRmwdfckVi4v4dKy76VyPs2eri\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.5.0"},"evm":{"assembly":"\t.text\n\t.file\t\"Lockable.sol:Lockable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000e0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000e0000c13d0000000101000039000000000010041b0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000d1b53ab73f5f8d1a97bde500268b91f8e3479a5de0aa46145010b72ddcd15353"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 2:\"contracts/base/Lockable.sol\"\nobject \"Lockable_2804\" {\n    code {\n        {\n            /// @src 2:71:275  \"contract Lockable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 2:122:123  \"1\" */ 0x00, 0x01)\n            /// @src 2:71:275  \"contract Lockable {...\"\n            let _2 := datasize(\"Lockable_2804_deployed\")\n            codecopy(_1, dataoffset(\"Lockable_2804_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 2:\"contracts/base/Lockable.sol\"\n    object \"Lockable_2804_deployed\" {\n        code {\n            {\n                /// @src 2:71:275  \"contract Lockable {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207102d150ae56ffdde97fede4c67852b37f136e2e37b4d264a3afb3613b1384f164736f6c634300080f0033\"\n    }\n}\n","hash":"01000007976d1c33ec6e09301d9cbd17882d2974a7924e5485520bd5a1d27539","factoryDependencies":{}}},"contracts/interfaces/ICloseCallback.sol":{"ICloseCallback":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"closeCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"closeCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICloseCallback.sol\":\"ICloseCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICloseCallback.sol\":{\"keccak256\":\"0x018443b6be91235a8e0843503b318ad8c424103637b7be17bd57ca4098c42b83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e418b690cbe19033f682c7fb228d81fa0d6db7804cd582ad448a2e68d6e70a8\",\"dweb:/ipfs/Qmf5godhuJXTxjZegaLgECSEC4eW8x8wpYwPLFkV6WwjWY\"]}},\"version\":1}","evm":{"methodIdentifiers":{"closeCallback(address,address,uint256,bytes)":"e761f9dc"}},"irOptimized":""}},"contracts/interfaces/IDEXAggregator.sol":{"IDEXAggregator":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"dexIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dexNames","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"dexes","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"dex","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address","name":"dex","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_minAmountOut","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address","name":"dex","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_dex","type":"address"},{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dexIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dexes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDEXAggregator.sol\":\"IDEXAggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDEXAggregator.sol\":{\"keccak256\":\"0x050436409ad725de56a178bc04f3af194c092e8819b68a74d3cff79c0e80b53b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f22c550e270aa714d692d8cc0c1e3d6316c087912b91244536275e520c722f18\",\"dweb:/ipfs/QmTZLbGDAC6NRzyvjRew7wKt9rj11hwb9YerHY63oJhYyN\"]}},\"version\":1}","evm":{"methodIdentifiers":{"dexIndex(address)":"4f54d1ce","dexLength()":"52041b5f","dexNames(uint256)":"88a02f23","dexes(uint256)":"6338a7c0","getAmountIn(address,address,address,uint256)":"ec278309","getAmountOut(address,address,address,uint256)":"d7176ca9","swap(address,address,address,uint256,address)":"677fdac8","validatePair(address,address,address)":"af0d9479"}},"irOptimized":""}},"contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d783bcfa47faaa1ed36eb4ce8c1612372cd4118fc11b347d8ecea2ab3d4a1284\",\"dweb:/ipfs/QmbyCFzoezQpCkD6uMEHXeEsMRmNbnwTbqMP74MC3TMgfi\"]}},\"version\":1}","evm":{"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"contracts/interfaces/IFactory.sol":{"IFactory":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"baseTokenLT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"baseTokenMUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"collateralLT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"collateralMUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexAggregator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"interest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidationFeeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidationFeeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manualExpiration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minQuoteRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"operator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"poolByQuoteToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolDeployer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"poolIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionStorage","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rollbackFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"serviceFeeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"serviceToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateCollateralAmountFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateDeadlineFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateTPnSLFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"userStorage","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawalMonitor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"baseTokenLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"baseTokenMUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralMUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFeeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualExpiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minQuoteRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolByQuoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFeeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCollateralAmountFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateDeadlineFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTPnSLFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalMonitor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IFactory.sol\":{\"keccak256\":\"0x8c18d9f7d476a1cb444761ff88f5f7df0bb1f605c4821b7eac11b66bb2dcc540\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bd4ef80a309ad13ac57af819b211cd226257047d5aded698b5f1cc3633fabe7e\",\"dweb:/ipfs/QmVicyyJSjDKaGJzwsxYzG9mZ8yXGTrkkLr8CgrgxgSEpG\"]}},\"version\":1}","evm":{"methodIdentifiers":{"baseTokenLT(address)":"f5d0e175","baseTokenMUT(address)":"b745db56","collateralLT(address)":"5fde0ec0","collateralMUT(address)":"095bf1bb","dexAggregator()":"7c21d5e0","interest(address)":"ac436bdf","liquidationFeeRate()":"5fb3b1b5","liquidationFeeTo()":"bd2bae9d","manager()":"481c6a75","manualExpiration()":"eddf82bb","minQuoteRate()":"6d274553","operator(address)":"9a307391","poolByQuoteToken(address)":"4d83bc33","poolDeployer()":"3119049a","poolIndex(address)":"b42754a5","poolLength()":"081e3eda","pools(uint256)":"ac4afa38","positionStorage()":"8cd47415","priceFeed()":"741bef1a","protocolFeeRate()":"58f85880","protocolFeeTo()":"ef369252","rollbackFee()":"3c093037","serviceFeeTo()":"e9a4e7a2","serviceToken()":"b7692968","updateCollateralAmountFee()":"2a5025b7","updateDeadlineFee()":"c7900584","updateTPnSLFee()":"b6a9b90d","userStorage()":"75e58079","withdrawalMonitor()":"a4fbc0d7"}},"irOptimized":""}},"contracts/interfaces/IMintCallback.sol":{"IMintCallback":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_liquidity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"mintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMintCallback.sol\":\"IMintCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMintCallback.sol\":{\"keccak256\":\"0x9d5d83eabb0f9f91852dc984da6032d3f34abfed0d73810b2658ba0a95e4da29\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e055ac0adde86038e3d8b005592916224ccf19cfe0dbf5bc50dcb828a80979bb\",\"dweb:/ipfs/QmeweMXsfsamgk1Hq6Sfk4ZwTLaoC2ZTDyPv37oghcMXhh\"]}},\"version\":1}","evm":{"methodIdentifiers":{"mintCallback(address,uint256,bytes)":"03a3bcd7"}},"irOptimized":""}},"contracts/interfaces/IPool.sol":{"IPool":{"abi":[{"inputs":[],"name":"accFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accFeePerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accProtocolFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_liquidity","type":"uint256"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"addBurnRequest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"availLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"availableLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"baseReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IWithdrawalMonitor.WithdrawalRequest","name":"","type":"tuple"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimableFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"bytes","name":"data0","type":"bytes"},{"internalType":"bytes","name":"data1","type":"bytes"},{"internalType":"address","name":"closer","type":"address"}],"internalType":"struct IPositionStorage.CloseTradePositionParams","name":"","type":"tuple"}],"name":"close","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"collateralReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"collect","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"liquidityPosition","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"feeDebt","type":"uint256"},{"internalType":"uint256","name":"pendingFee","type":"uint256"},{"internalType":"uint256","name":"withdrawingLiquidity","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxOpenInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_liquidity","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"address","name":"collateral","type":"address"},{"internalType":"uint256","name":"baseAmount","type":"uint256"},{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"}],"internalType":"struct IPositionStorage.OpenTradePositionParams","name":"","type":"tuple"}],"name":"open","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"openInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionStorage","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precision","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteInDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"address","name":"rollbacker","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.RollbackTradePositionParams","name":"","type":"tuple"}],"name":"rollback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_baseTokens","type":"address[]"},{"internalType":"bool[]","name":"_tradeables","type":"bool[]"}],"name":"setBaseTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"setInterest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"setMaxOpenInterest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tradeableBaseToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateCollateralAmountParams","name":"","type":"tuple"}],"name":"updateCollateralAmount","outputs":[{"internalType":"uint256","name":"collateralLiqPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateDeadlineParams","name":"","type":"tuple"}],"name":"updateDeadline","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawalMonitor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawingLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accFeePerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"addBurnRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"baseReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IWithdrawalMonitor.WithdrawalRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimableFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data0\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data1\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"}],\"internalType\":\"struct IPositionStorage.CloseTradePositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawingLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxOpenInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.OpenTradePositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"open\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteInDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"rollbacker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.RollbackTradePositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"rollback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_baseTokens\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_tradeables\",\"type\":\"bool[]\"}],\"name\":\"setBaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setMaxOpenInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradeableBaseToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateCollateralAmountParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"updateCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralLiqPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateDeadlineParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"updateDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalMonitor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawingLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x0df40413291993de9306d0f1fd006f4057eb73713ab3a55e501f5c19544163c3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cdd815390201d8154835657457a1b7b54b621685f361eb492a4bce904b1c9dc9\",\"dweb:/ipfs/QmZuULKjAbdfSabtC2A7o5U8CjvANRdYwKeUdoFBZoAt7Z\"]},\"contracts/interfaces/IPositionStorage.sol\":{\"keccak256\":\"0x59c96dbc599d853167cf4954037f3df32a645c28bd675bb18689a5c1d4750827\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67aa7fb58f85dacf0fe4243d8a99f714981b8c86d201a896afed88651fe7976a\",\"dweb:/ipfs/QmT2f6Wkr44vm82UuBqwLkAqz3mFUCXfdkbWgJFVeTa8ph\"]},\"contracts/interfaces/IWithdrawalMonitor.sol\":{\"keccak256\":\"0xb744b52875c32378810f80f1b49f034e676ea3a7413d97ed022cf28cc09f26d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://461161a473261ca4400e2315ade9b72276b9ccbf8e8384c9847bb7de0b453c84\",\"dweb:/ipfs/QmeoZSgXKF8DiizUAsb5LxpWAeEMQ6ipmvegoWViaDgz8q\"]}},\"version\":1}","evm":{"methodIdentifiers":{"accFee()":"ada3112f","accFeePerShare()":"dd3b829a","accProtocolFee()":"27014e33","addBurnRequest(uint256,address,bytes)":"653741ff","availLiquidity()":"ba343922","availableLiquidity()":"74375359","baseReserve(address)":"ffc9dcbb","burn((uint256,address,address,uint256,address,bytes))":"fb2b74b2","claimableFee(address)":"a1c59afc","close((bytes32,bytes,bytes,address))":"fba0c814","collateralReserve(address)":"8b6e00fa","collect(address,uint256)":"6b8357ac","factory()":"c45a0155","interest()":"c392f766","liquidityPosition(address)":"d4fd6905","maxOpenInterest()":"dc6638f4","mint(address,uint256,bytes)":"94d008ef","open((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256))":"122f7e8b","openInterest()":"fa5a2e62","positionStorage()":"8cd47415","precision()":"d3b5dc3b","quoteInDebt()":"685b61d0","quoteReserve()":"9da771f4","quoteToken()":"217a4b70","rollback((bytes32,address,address,uint256))":"19972a50","setBaseTokens(address[],bool[])":"32196a01","setInterest(uint256)":"1d086720","setMaxOpenInterest(uint256)":"40650eef","tradeableBaseToken(address)":"0adcf0f5","updateCollateralAmount((bytes32,uint256,address,address,uint256))":"c6f61b01","updateDeadline((bytes32,uint256,address,address,uint256))":"5330e353","withdrawalMonitor()":"a4fbc0d7","withdrawingLiquidity()":"0121c777"}},"irOptimized":""}},"contracts/interfaces/IPoolDeployer.sol":{"IPoolDeployer":{"abi":[{"inputs":[{"internalType":"address","name":"_quoteToken","type":"address"},{"internalType":"uint256","name":"_interest","type":"uint256"}],"name":"deployPool","outputs":[{"internalType":"address payable","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_interest\",\"type\":\"uint256\"}],\"name\":\"deployPool\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPoolDeployer.sol\":\"IPoolDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPoolDeployer.sol\":{\"keccak256\":\"0x116f7bb3266dcb37b56ea86715709018089114c17cf430057f5c2802d1bfbef7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8c72018cbdd53c3a35899d6be0305f23e8cb4ab84e5fc423e53f177ddce1f780\",\"dweb:/ipfs/Qma5BWmbhPyp6JzkN6Gso9EmrV5pAbn2VJpsjNJSvoTB3J\"]}},\"version\":1}","evm":{"methodIdentifiers":{"deployPool(address,uint256)":"27c74f7f","factory()":"c45a0155"}},"irOptimized":""}},"contracts/interfaces/IPositionStorage.sol":{"IPositionStorage":{"abi":[{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"canLiquidate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"canLiquidationMark","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"closeManuallyStep1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"closeManuallyStep2","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"address","name":"collateral","type":"address"},{"internalType":"uint256","name":"baseAmount","type":"uint256"},{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"}],"internalType":"struct IPositionStorage.OpenTradePositionParams","name":"","type":"tuple"}],"name":"getMinCollateralAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"address","name":"collateral","type":"address"},{"internalType":"uint256","name":"baseAmount","type":"uint256"},{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"}],"internalType":"struct IPositionStorage.OpenTradePositionParams","name":"","type":"tuple"}],"name":"getQuoteAmountRange","outputs":[{"internalType":"uint256","name":"minQuoteAmount","type":"uint256"},{"internalType":"uint256","name":"maxQuoteAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"liquidationMark","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"entryPrice","type":"uint256"},{"internalType":"uint256","name":"liqPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"}],"internalType":"struct IPositionStorage.BaseToken","name":"baseToken","type":"tuple"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPositionStorage.QuoteToken","name":"quoteToken","type":"tuple"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"entryPrice","type":"uint256"},{"internalType":"uint256","name":"liqPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"}],"internalType":"struct IPositionStorage.Collateral","name":"collateral","type":"tuple"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"components":[{"internalType":"bool","name":"isClosed","type":"bool"},{"internalType":"bool","name":"isRollbacked","type":"bool"},{"internalType":"bool","name":"isClosedManuallyStep1","type":"bool"},{"internalType":"bool","name":"isClosedManuallyStep2","type":"bool"}],"internalType":"struct IPositionStorage.Status","name":"status","type":"tuple"},{"internalType":"address","name":"closer","type":"address"},{"internalType":"uint256","name":"liquidationMarkTime","type":"uint256"}],"internalType":"struct IPositionStorage.TradePosition","name":"","type":"tuple"}],"name":"openTradePosition","outputs":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"position","outputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"entryPrice","type":"uint256"},{"internalType":"uint256","name":"liqPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"}],"internalType":"struct IPositionStorage.BaseToken","name":"baseToken","type":"tuple"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPositionStorage.QuoteToken","name":"quoteToken","type":"tuple"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"entryPrice","type":"uint256"},{"internalType":"uint256","name":"liqPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"}],"internalType":"struct IPositionStorage.Collateral","name":"collateral","type":"tuple"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"components":[{"internalType":"bool","name":"isClosed","type":"bool"},{"internalType":"bool","name":"isRollbacked","type":"bool"},{"internalType":"bool","name":"isClosedManuallyStep1","type":"bool"},{"internalType":"bool","name":"isClosedManuallyStep2","type":"bool"}],"internalType":"struct IPositionStorage.Status","name":"status","type":"tuple"},{"internalType":"address","name":"closer","type":"address"},{"internalType":"uint256","name":"liquidationMarkTime","type":"uint256"}],"internalType":"struct IPositionStorage.TradePosition","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"positionKeyToIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"positionKeys","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"address","name":"collateral","type":"address"},{"internalType":"uint256","name":"baseAmount","type":"uint256"},{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"}],"internalType":"struct IPositionStorage.OpenTradePositionParams","name":"","type":"tuple"}],"name":"previewTradePosition","outputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"pool","type":"address"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"entryPrice","type":"uint256"},{"internalType":"uint256","name":"liqPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"}],"internalType":"struct IPositionStorage.BaseToken","name":"baseToken","type":"tuple"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPositionStorage.QuoteToken","name":"quoteToken","type":"tuple"},{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"entryPrice","type":"uint256"},{"internalType":"uint256","name":"liqPrice","type":"uint256"},{"internalType":"uint256","name":"closePrice","type":"uint256"}],"internalType":"struct IPositionStorage.Collateral","name":"collateral","type":"tuple"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"components":[{"internalType":"bool","name":"isClosed","type":"bool"},{"internalType":"bool","name":"isRollbacked","type":"bool"},{"internalType":"bool","name":"isClosedManuallyStep1","type":"bool"},{"internalType":"bool","name":"isClosedManuallyStep2","type":"bool"}],"internalType":"struct IPositionStorage.Status","name":"status","type":"tuple"},{"internalType":"address","name":"closer","type":"address"},{"internalType":"uint256","name":"liquidationMarkTime","type":"uint256"}],"internalType":"struct IPositionStorage.TradePosition","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateCollateralAmountParams","name":"","type":"tuple"}],"name":"previewUpdateCollateralAmount","outputs":[{"internalType":"uint256","name":"collateralLiqPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateDeadlineParams","name":"","type":"tuple"}],"name":"previewUpdateDeadline","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_positionKey","type":"bytes32"},{"internalType":"address","name":"_updater","type":"address"}],"name":"rollback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_positionKey","type":"bytes32"},{"internalType":"uint256","name":"_baseValue","type":"uint256"},{"internalType":"uint256","name":"_loss","type":"uint256"},{"internalType":"uint256","name":"_remainingCollateralAmount","type":"uint256"}],"name":"updateCloseValues","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateCollateralAmountParams","name":"","type":"tuple"}],"name":"updateCollateralAmount","outputs":[{"internalType":"uint256","name":"collateralLiqPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateDeadlineParams","name":"","type":"tuple"}],"name":"updateDeadline","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_positionKey","type":"bytes32"},{"internalType":"address","name":"_updater","type":"address"}],"name":"updateStatus","outputs":[{"internalType":"bool","name":"needLiquidate","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"positionKey","type":"bytes32"},{"internalType":"uint256","name":"takeProfitPrice","type":"uint256"},{"internalType":"uint256","name":"stoplossPrice","type":"uint256"},{"internalType":"address","name":"updater","type":"address"},{"internalType":"address","name":"serviceToken","type":"address"},{"internalType":"uint256","name":"serviceFee","type":"uint256"}],"internalType":"struct IPositionStorage.UpdateTPnSLParams","name":"","type":"tuple"}],"name":"updateTPnSL","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"canLiquidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"canLiquidationMark\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"closeManuallyStep1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"closeManuallyStep2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.OpenTradePositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"getMinCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.OpenTradePositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"getQuoteAmountRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minQuoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxQuoteAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"liquidationMark\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.BaseToken\",\"name\":\"baseToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.QuoteToken\",\"name\":\"quoteToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.Collateral\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRollbacked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClosedManuallyStep1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClosedManuallyStep2\",\"type\":\"bool\"}],\"internalType\":\"struct IPositionStorage.Status\",\"name\":\"status\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidationMarkTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.TradePosition\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"openTradePosition\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.BaseToken\",\"name\":\"baseToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.QuoteToken\",\"name\":\"quoteToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.Collateral\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRollbacked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClosedManuallyStep1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClosedManuallyStep2\",\"type\":\"bool\"}],\"internalType\":\"struct IPositionStorage.Status\",\"name\":\"status\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidationMarkTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.TradePosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positionKeyToIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positionKeys\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.OpenTradePositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"previewTradePosition\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.BaseToken\",\"name\":\"baseToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.QuoteToken\",\"name\":\"quoteToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liqPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.Collateral\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRollbacked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClosedManuallyStep1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClosedManuallyStep2\",\"type\":\"bool\"}],\"internalType\":\"struct IPositionStorage.Status\",\"name\":\"status\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"closer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidationMarkTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.TradePosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateCollateralAmountParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"previewUpdateCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralLiqPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateDeadlineParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"previewUpdateDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"}],\"name\":\"rollback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_baseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_remainingCollateralAmount\",\"type\":\"uint256\"}],\"name\":\"updateCloseValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateCollateralAmountParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"updateCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralLiqPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateDeadlineParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"updateDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"}],\"name\":\"updateStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"needLiquidate\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"positionKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stoplossPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"serviceToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IPositionStorage.UpdateTPnSLParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"updateTPnSL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPositionStorage.sol\":\"IPositionStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPositionStorage.sol\":{\"keccak256\":\"0x59c96dbc599d853167cf4954037f3df32a645c28bd675bb18689a5c1d4750827\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://67aa7fb58f85dacf0fe4243d8a99f714981b8c86d201a896afed88651fe7976a\",\"dweb:/ipfs/QmT2f6Wkr44vm82UuBqwLkAqz3mFUCXfdkbWgJFVeTa8ph\"]}},\"version\":1}","evm":{"methodIdentifiers":{"canLiquidate(bytes32)":"61ba1508","canLiquidationMark(bytes32)":"e5944f01","closeManuallyStep1(bytes32)":"b008c058","closeManuallyStep2(bytes32)":"f71139f7","factory()":"c45a0155","getMinCollateralAmount((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256))":"71e64bca","getQuoteAmountRange((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256))":"abe06a4d","liquidationMark(bytes32)":"49a4d1d1","openTradePosition((bytes32,address,address,(address,uint256,uint256,uint256,uint256),(address,uint256),(address,uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256,(bool,bool,bool,bool),address,uint256))":"f76e91fd","position(bytes32)":"957d1fe1","positionKeyToIndex(bytes32)":"caa1a44f","positionKeys(uint256)":"2895a2b3","positionLength()":"539826a6","previewTradePosition((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256))":"be9f3fec","previewUpdateCollateralAmount((bytes32,uint256,address,address,uint256))":"6680fda8","previewUpdateDeadline((bytes32,uint256,address,address,uint256))":"a55a3092","rollback(bytes32,address)":"9a102341","updateCloseValues(bytes32,uint256,uint256,uint256)":"8b029d61","updateCollateralAmount((bytes32,uint256,address,address,uint256))":"c6f61b01","updateDeadline((bytes32,uint256,address,address,uint256))":"5330e353","updateStatus(bytes32,address)":"ac00b674","updateTPnSL((bytes32,uint256,uint256,address,address,uint256))":"6f51535e"}},"irOptimized":""}},"contracts/interfaces/IWithdrawalMonitor.sol":{"IWithdrawalMonitor":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"},{"internalType":"uint256","name":"_liquidity","type":"uint256"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"addRequest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"currentIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"request","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"requestLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"string","name":"_result","type":"string"}],"name":"updateCallbackResult","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"addRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"currentIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"request\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"requestLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"updateCallbackResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWithdrawalMonitor.sol\":\"IWithdrawalMonitor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWithdrawalMonitor.sol\":{\"keccak256\":\"0xb744b52875c32378810f80f1b49f034e676ea3a7413d97ed022cf28cc09f26d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://461161a473261ca4400e2315ade9b72276b9ccbf8e8384c9847bb7de0b453c84\",\"dweb:/ipfs/QmeoZSgXKF8DiizUAsb5LxpWAeEMQ6ipmvegoWViaDgz8q\"]}},\"version\":1}","evm":{"methodIdentifiers":{"addRequest(address,address,uint256,address,bytes)":"987037e8","currentIndex(address)":"3b9418fd","execute(address)":"4b64e492","factory()":"c45a0155","request(address,uint256)":"c8c01a55","requestLength(address)":"939124f7","updateCallbackResult(uint256,string)":"4d4a6fbb"}},"irOptimized":""}},"contracts/interfaces/external/IWETH9.sol":{"IWETH9":{"abi":[{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0x8b10c75fabc065dad2edca967243c55972451facbcee902fb871a1741406e82d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3b398f2dd3202ac7a4a3e133412f1c2db65290320ff82c4665deacd13c9827bc\",\"dweb:/ipfs/QmbmegXRKW84nKmcS91uj8GwK2FFnaDFaj5inSbYUYUk6F\"]}},\"version\":1}","evm":{"methodIdentifiers":{"deposit()":"d0e30db0","withdraw(uint256)":"2e1a7d4d"}},"irOptimized":""}},"contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4974ccca392242612b24dc99f2aa88d3f2eaf3d0b3b307519f0a6a425a4e85c1\",\"dweb:/ipfs/QmXdMCaLvTfJwNJ6byE8fiYz57PpMXxQenHXMHpVKKBSAp\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.5.0"},"evm":{"assembly":"\t.text\n\t.file\t\"TransferHelper.sol:TransferHelper\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000003da488f043329f4e041a85fdca12dacc7e9d39516dd53a67dd016f2e661986d9"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 13:\"contracts/libraries/TransferHelper.sol\"\nobject \"TransferHelper_3970\" {\n    code {\n        {\n            /// @src 13:182:1897  \"library TransferHelper {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"TransferHelper_3970_deployed\")\n            codecopy(_1, dataoffset(\"TransferHelper_3970_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 13:\"contracts/libraries/TransferHelper.sol\"\n    object \"TransferHelper_3970_deployed\" {\n        code {\n            {\n                /// @src 13:182:1897  \"library TransferHelper {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a5703ee44cb841e5043b796def910edd5f1f3e06d4bd2d5d2189550f5e9bad4664736f6c634300080f0033\"\n    }\n}\n","hash":"0100000790bd86420036a19810a89f5cbad1df81691cf073573d1114fbd0df99","factoryDependencies":{}}}}}}