{"id":"a4308c1dc18b049fa36b8b21dd6adcf8","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/base/Lockable.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ncontract Lockable {\n    uint256 private unlocked = 1;\n\n    error Locked();\n\n    modifier lock() {\n        if (unlocked != 1) revert Locked();\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n}\n"},"contracts/integrations/PancakeswapV3DEXIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\n\nimport \"../libraries/TransferHelper.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/IDEXIntegration.sol\";\nimport \"../interfaces/IUniswapV3StaticQuoter.sol\";\nimport \"../base/Lockable.sol\";\n\ncontract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {\n    address public immutable factory;\n    address public immutable quoter; // https://github.com/ultimexfi/uniswap-v3-static-quoter\n    address public immutable router;\n    uint24[] public feeTiers;\n\n    constructor(address _factory, address _quoter, address _router) {\n        factory = _factory;\n        quoter = _quoter;\n        router = _router;\n        feeTiers.push(100);\n        feeTiers.push(500);\n        feeTiers.push(2500);\n        feeTiers.push(10000);\n    }\n\n    function _sortTokens(\n        address _tokenA,\n        address _tokenB\n    ) internal pure returns (address token0, address token1) {\n        if (\n            _tokenA != _tokenB && _tokenA != address(0) && _tokenB != address(0)\n        ) {\n            (token0, token1) = _tokenA < _tokenB\n                ? (_tokenA, _tokenB)\n                : (_tokenB, _tokenA);\n        }\n    }\n\n    function validatePair(\n        address _tokenIn,\n        address _tokenOut\n    ) external view override returns (bool) {\n        if (_tokenIn == _tokenOut) {\n            return false;\n        }\n        uint24[] memory _feeTiers = feeTiers;\n        address _factory = factory;\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\n            address pool = IUniswapV3Factory(_factory).getPool(\n                _tokenIn,\n                _tokenOut,\n                _feeTiers[i]\n            );\n            if (pool != address(0)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function _getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) internal view returns (uint256 amountOut, uint24 fee) {\n        uint24[] memory _feeTiers = feeTiers;\n        address _quoter = quoter;\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\n            uint256 tempAmountOut;\n            try\n                IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(\n                    IUniswapV3StaticQuoter.QuoteExactInputSingleParams({\n                        tokenIn: _tokenIn,\n                        tokenOut: _tokenOut,\n                        amountIn: _amountIn,\n                        fee: _feeTiers[i],\n                        sqrtPriceLimitX96: 0\n                    })\n                )\n            returns (uint256 t) {\n                tempAmountOut = t;\n            } catch (bytes memory /*lowLevelData*/) {\n                tempAmountOut = 0;\n            }\n            if (tempAmountOut > amountOut) {\n                amountOut = tempAmountOut;\n                fee = _feeTiers[i];\n            }\n        }\n    }\n\n    function _getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) internal view returns (uint256 amountIn, uint24 fee) {\n        uint24[] memory _feeTiers = feeTiers;\n        address _quoter = quoter;\n        for (uint8 i = 0; i < _feeTiers.length; i++) {\n            uint256 tempAmountIn;\n            try\n                IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(\n                    IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({\n                        tokenIn: _tokenIn,\n                        tokenOut: _tokenOut,\n                        amount: _amountOut,\n                        fee: _feeTiers[i],\n                        sqrtPriceLimitX96: 0\n                    })\n                )\n            returns (uint256 t) {\n                tempAmountIn = t;\n            } catch (bytes memory /*lowLevelData*/) {\n                tempAmountIn = 0;\n            }\n            if (\n                amountIn == 0 || (tempAmountIn > 0 && tempAmountIn < amountIn)\n            ) {\n                amountIn = tempAmountIn;\n                fee = _feeTiers[i];\n            }\n        }\n    }\n\n    function getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view override returns (uint256 amountOut) {\n        (amountOut, ) = _getAmountOut(_tokenIn, _tokenOut, _amountIn);\n    }\n\n    function getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view override returns (uint256 amountIn) {\n        (amountIn, ) = _getAmountIn(_tokenIn, _tokenOut, _amountOut);\n    }\n\n    function swap(\n        address _tokenIn,\n        address _tokenOut,\n        address _to\n    ) external override lock returns (uint256 amountOut) {\n        uint256 amountIn = IERC20(_tokenIn).balanceOf(address(this));\n        uint24 fee;\n        (amountOut, fee) = _getAmountOut(_tokenIn, _tokenOut, amountIn);\n        require(\n            amountOut > 0 && fee > 0,\n            \"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n\n        address _router = router;\n        if (IERC20(_tokenIn).allowance(address(this), _router) == 0) {\n            TransferHelper.safeApprove(_tokenIn, _router, type(uint256).max);\n        }\n\n        uint256 initialBalance = IERC20(_tokenOut).balanceOf(_to);\n        ISwapRouter(_router).exactInputSingle(\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: _tokenIn,\n                tokenOut: _tokenOut,\n                fee: fee,\n                recipient: _to,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            })\n        );\n\n        uint256 balance = IERC20(_tokenOut).balanceOf(_to);\n        amountOut = balance - initialBalance;\n    }\n}\n"},"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"../interfaces/IPriceFeedIntegration.sol\";\nimport \"../interfaces/IERC20.sol\";\n\ncontract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e30;\n    address public immutable factory;\n    uint24[] public feeTiers = [100, 500, 2500, 10000];\n\n    constructor(address _factory) {\n        factory = _factory;\n    }\n\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = denominator & (~denominator + 1);\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        if (_baseToken == _quoteToken) {\n            return PRECISION;\n        }\n\n        uint256 length = feeTiers.length;\n        IUniswapV3Factory _factory = IUniswapV3Factory(factory);\n        uint256 bestLiquidity;\n        (address token0, address token1) = _baseToken < _quoteToken\n            ? (_baseToken, _quoteToken)\n            : (_quoteToken, _baseToken);\n        for (uint256 i = 0; i < length; i++) {\n            address poolAddress = _factory.getPool(token0, token1, feeTiers[i]);\n            if (poolAddress != address(0)) {\n                IUniswapV3Pool pool = IUniswapV3Pool(poolAddress);\n                uint256 balance0 = IERC20(token0).balanceOf(poolAddress);\n                uint256 balance1 = IERC20(token1).balanceOf(poolAddress);\n                (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\n                uint256 price0 = mulDiv(\n                    uint256(sqrtPriceX96) ** 2,\n                    PRECISION,\n                    1 << 192\n                );\n                uint256 liquidity = (balance0 * price0) / PRECISION + balance1;\n                if (liquidity > bestLiquidity) {\n                    bestLiquidity = liquidity;\n                    price = price0;\n                }\n            }\n        }\n\n        if (price != 0 && _baseToken != token0) {\n            price = PRECISION ** 2 / price;\n        }\n\n        uint256 baseDecimals = IERC20(_baseToken).decimals();\n        uint256 quoteDecimals = IERC20(_quoteToken).decimals();\n        uint256 basePrec = 10 ** baseDecimals;\n        uint256 quotePrec = 10 ** quoteDecimals;\n        price = (price * basePrec) / quotePrec;\n    }\n}\n"},"contracts/integrations/PythPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\nimport \"../libraries/PythStructs.sol\";\nimport \"../libraries/PythUtils.sol\";\nimport \"../interfaces/external/IPyth.sol\";\nimport \"../interfaces/IPriceFeedIntegration.sol\";\n\ncontract PythPriceFeedIntegration is IPriceFeedIntegration {\n    uint256 public constant override PRECISION = 1e18;\n    uint8 public constant DECIMALS = 18;\n    address public manager;\n    address public pythAddress;\n    mapping(address => bytes32) feeds;\n\n    event SetManager(address manager);\n    event SetPythAddress(address pyth);\n    event SetPriceFeed(address token, bytes32 feed);\n\n    error Forbidden(address sender);\n    error InvalidFeed(address token);\n\n    constructor(address _pythAddress) {\n        manager = msg.sender;\n        pythAddress = _pythAddress;\n    }\n\n    modifier onlyManager() {\n        if (msg.sender != manager) revert Forbidden(msg.sender);\n        _;\n    }\n\n    function setManager(address _manager) external onlyManager {\n        manager = _manager;\n\n        emit SetManager(_manager);\n    }\n\n    function setPythAddress(address _pythAddress) external onlyManager {\n        pythAddress = _pythAddress;\n\n        emit SetPythAddress(_pythAddress);\n    }\n\n    function setPriceFeed(address _token, bytes32 _feed) external onlyManager {\n        feeds[_token] = _feed;\n\n        emit SetPriceFeed(_token, _feed);\n    }\n\n    function _price(address _token) internal view returns (uint256 price) {\n        bytes32 feed = feeds[_token];\n        if (feed != bytes32(0)) {\n            PythStructs.Price memory pythPrice = IPyth(pythAddress).getPriceUnsafe(\n                feed\n            );\n            price = PythUtils.convertToUint(\n                pythPrice.price,\n                pythPrice.expo,\n                DECIMALS\n            );\n        }\n    }\n\n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view override returns (uint256 price) {\n        uint256 quotePrice = _price(_quoteToken);\n        if (quotePrice > 0) {\n            uint256 basePrice = _price(_baseToken);\n            price = (basePrice * PRECISION) / quotePrice;\n        }\n    }\n}\n"},"contracts/interfaces/external/IPyth.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.8.4;\n\nimport \"../../libraries/PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the period (in seconds) that a price feed is considered valid since its publish time\n    function getValidTimePeriod() external view returns (uint validTimePeriod);\n\n    /// @notice Returns the price and confidence interval.\n    /// @dev Reverts if the price has not been updated within the last `getValidTimePeriod()` seconds.\n    /// @param id The Pyth Price Feed ID of which to fetch the price and confidence interval.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPrice(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price and confidence interval.\n    /// @dev Reverts if the EMA price is not available.\n    /// @param id The Pyth Price Feed ID of which to fetch the EMA price and confidence interval.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPrice(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getPrice` or `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"},"contracts/interfaces/external/IPythEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.8.4;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n}\n"},"contracts/interfaces/IDEXIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IDEXIntegration {\n    function validatePair(\n        address _tokenIn,\n        address _tokenOut\n    ) external view returns (bool);\n\n    function getAmountOut(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountIn\n    ) external view returns (uint256);\n\n    function getAmountIn(\n        address _tokenIn,\n        address _tokenOut,\n        uint256 _amountOut\n    ) external view returns (uint256);\n\n    function swap(\n        address _tokenIn,\n        address _tokenOut,\n        address _to\n    ) external returns (uint256);\n}\n"},"contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address) external view returns (uint256);\n\n    function allowance(\n        address _owner,\n        address _spender\n    ) external view returns (uint256);\n\n    function approve(address _spender, uint256 _value) external returns (bool);\n\n    function transfer(address _to, uint256 _value) external returns (bool);\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external returns (bool);\n\n    function permit(\n        address _owner,\n        address _spender,\n        uint256 _value,\n        uint256 _deadline,\n        uint8 _v,\n        bytes32 _r,\n        bytes32 _s\n    ) external;\n}\n"},"contracts/interfaces/IPriceFeedIntegration.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\ninterface IPriceFeedIntegration {\n    function PRECISION() external view returns (uint256);\n    \n    function getPrice(\n        address _baseToken,\n        address _quoteToken\n    ) external view returns (uint256);\n}\n"},"contracts/interfaces/IUniswapV3StaticQuoter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\ninterface IUniswapV3StaticQuoter {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    function quoteExactInput(\n        bytes memory path,\n        uint256 amountIn\n    ) external view returns (uint256 amountOut);\n\n    struct QuoteExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountIn The desired input amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    function quoteExactInputSingle(\n        QuoteExactInputSingleParams memory params\n    ) external view returns (uint256 amountOut);\n\n    /// @notice Returns the amount in needed for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountOut The amount of the last token that would be received\n    /// @return amountIn The amount of the first token to swap\n    function quoteExactOutput(\n        bytes memory path,\n        uint256 amountOut\n    ) external view returns (uint256 amountIn);\n\n    struct QuoteExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amount;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount in needed for a given exact output but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountOut The desired output amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount of `tokenIn` that would be needed\n    function quoteExactOutputSingle(\n        QuoteExactOutputSingleParams memory params\n    ) external view returns (uint256 amountIn);\n}"},"contracts/libraries/PythStructs.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.8.4;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n}\n"},"contracts/libraries/PythUtils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.8.4;\n\nlibrary PythUtils {\n    /// @notice Converts a Pyth price to a uint256 with a target number of decimals\n    /// @param price The Pyth price\n    /// @param expo The Pyth price exponent\n    /// @param targetDecimals The target number of decimals\n    /// @return The price as a uint256\n    /// @dev Function will lose precision if targetDecimals is less than the Pyth price decimals.\n    /// This method will truncate any digits that cannot be represented by the targetDecimals.\n    /// e.g. If the price is 0.000123 and the targetDecimals is 2, the result will be 0\n    function convertToUint(\n        int64 price,\n        int32 expo,\n        uint8 targetDecimals\n    ) internal pure returns (uint256) {\n        if (price < 0 || expo > 0 || expo < -255) {\n            revert();\n        }\n\n        uint8 priceDecimals = uint8(uint32(-1 * expo));\n\n        if (targetDecimals >= priceDecimals) {\n            return\n                uint(uint64(price)) *\n                10 ** uint32(targetDecimals - priceDecimals);\n        } else {\n            return\n                uint(uint64(price)) /\n                10 ** uint32(priceDecimals - targetDecimals);\n        }\n    }\n}\n"},"contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.8.4;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address _token, address _to, uint256 _value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x095ea7b3, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeApprove: approve failed\"\n        );\n    }\n\n    function safeTransfer(\n        address _token,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0xa9059cbb, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::safeTransfer: transfer failed\"\n        );\n    }\n\n    function safeTransferFrom(\n        address _token,\n        address _from,\n        address _to,\n        uint256 _value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = _token.call(\n            abi.encodeWithSelector(0x23b872dd, _from, _to, _value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"TransferHelper::transferFrom: transferFrom failed\"\n        );\n    }\n\n    function safeTransferETH(address _to, uint256 _value) internal {\n        (bool success, ) = _to.call{value: _value}(new bytes(0));\n        require(\n            success,\n            \"TransferHelper::safeTransferETH: ETH transfer failed\"\n        );\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.15","long_version":"0.8.15+commit.e14f2714.Darwin.appleclang","zk_version":"1.4.1","sources":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"id":0,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[82]},"id":83,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Factory","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"71:163:0","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":82,"linearizedBaseContracts":[82],"name":"IUniswapV3Factory","nameLocation":"244:17:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"268:185:0","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"eventSelector":"b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c","id":9,"name":"OwnerChanged","nameLocation":"464:12:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:0","nodeType":"VariableDeclaration","scope":9,"src":"477:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:0","nodeType":"VariableDeclaration","scope":9,"src":"503:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:0"},"src":"458:71:0"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"535:421:0","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"eventSelector":"783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118","id":22,"name":"PoolCreated","nameLocation":"967:11:0","nodeType":"EventDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:0","nodeType":"VariableDeclaration","scope":22,"src":"988:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:0","nodeType":"VariableDeclaration","scope":22,"src":"1020:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:0","nodeType":"VariableDeclaration","scope":22,"src":"1052:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":15,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:0","nodeType":"VariableDeclaration","scope":22,"src":"1080:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":17,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":20,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:0","nodeType":"VariableDeclaration","scope":22,"src":"1107:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:0"},"src":"961:165:0"},{"anonymous":false,"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1132:275:0","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"eventSelector":"c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc","id":29,"name":"FeeAmountEnabled","nameLocation":"1418:16:0","nodeType":"EventDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:0","nodeType":"VariableDeclaration","scope":29,"src":"1435:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":24,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:0","nodeType":"VariableDeclaration","scope":29,"src":"1455:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":26,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:0"},"src":"1412:70:0"},{"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"1488:163:0","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":35,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:0","nodeType":"FunctionDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1670:2:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35,"src":"1696:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:0"},"scope":82,"src":"1656:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1711:348:0","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":43,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:0","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"fee","nameLocation":"2101:3:0","nodeType":"VariableDeclaration","scope":43,"src":"2094:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":37,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:0"},"returnParameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43,"src":"2129:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":40,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:0"},"scope":82,"src":"2064:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"2142:471:0","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":55,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2644:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2668:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"fee","nameLocation":"2699:3:0","nodeType":"VariableDeclaration","scope":55,"src":"2692:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"pool","nameLocation":"2740:4:0","nodeType":"VariableDeclaration","scope":55,"src":"2732:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:0"},"scope":82,"src":"2618:128:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"2752:554:0","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":67,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:0","nodeType":"FunctionDefinition","parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:0","nodeType":"VariableDeclaration","scope":67,"src":"3340:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:0","nodeType":"VariableDeclaration","scope":67,"src":"3364:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"fee","nameLocation":"3395:3:0","nodeType":"VariableDeclaration","scope":67,"src":"3388:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:0"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"pool","nameLocation":"3431:4:0","nodeType":"VariableDeclaration","scope":67,"src":"3423:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:0"},"scope":82,"src":"3311:126:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"3443:144:0","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:0","nodeType":"VariableDeclaration","scope":73,"src":"3610:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[],"src":"3634:0:0"},"scope":82,"src":"3592:43:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"3641:326:0","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":81,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:0","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"fee","nameLocation":"4004:3:0","nodeType":"VariableDeclaration","scope":81,"src":"3997:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":75,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:0","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:0","nodeType":"VariableDeclaration","scope":81,"src":"4009:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":77,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:0"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"4036:0:0"},"scope":82,"src":"3972:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":83,"src":"234:3805:0","usedErrors":[]}],"src":"45:3995:0"}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"id":1,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[104],"IUniswapV3PoolActions":[214],"IUniswapV3PoolDerivedState":[245],"IUniswapV3PoolEvents":[364],"IUniswapV3PoolImmutables":[404],"IUniswapV3PoolOwnerActions":[430],"IUniswapV3PoolState":[538]},"id":105,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":84,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","file":"./pool/IUniswapV3PoolImmutables.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":405,"src":"71:45:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","file":"./pool/IUniswapV3PoolState.sol","id":86,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":539,"src":"117:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","file":"./pool/IUniswapV3PoolDerivedState.sol","id":87,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":246,"src":"158:47:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","file":"./pool/IUniswapV3PoolActions.sol","id":88,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":215,"src":"206:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","file":"./pool/IUniswapV3PoolOwnerActions.sol","id":89,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":431,"src":"249:47:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","file":"./pool/IUniswapV3PoolEvents.sol","id":90,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":365,"src":"297:41:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":92,"name":"IUniswapV3PoolImmutables","nodeType":"IdentifierPath","referencedDeclaration":404,"src":"637:24:1"},"id":93,"nodeType":"InheritanceSpecifier","src":"637:24:1"},{"baseName":{"id":94,"name":"IUniswapV3PoolState","nodeType":"IdentifierPath","referencedDeclaration":538,"src":"667:19:1"},"id":95,"nodeType":"InheritanceSpecifier","src":"667:19:1"},{"baseName":{"id":96,"name":"IUniswapV3PoolDerivedState","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"692:26:1"},"id":97,"nodeType":"InheritanceSpecifier","src":"692:26:1"},{"baseName":{"id":98,"name":"IUniswapV3PoolActions","nodeType":"IdentifierPath","referencedDeclaration":214,"src":"724:21:1"},"id":99,"nodeType":"InheritanceSpecifier","src":"724:21:1"},{"baseName":{"id":100,"name":"IUniswapV3PoolOwnerActions","nodeType":"IdentifierPath","referencedDeclaration":430,"src":"751:26:1"},"id":101,"nodeType":"InheritanceSpecifier","src":"751:26:1"},{"baseName":{"id":102,"name":"IUniswapV3PoolEvents","nodeType":"IdentifierPath","referencedDeclaration":364,"src":"783:20:1"},"id":103,"nodeType":"InheritanceSpecifier","src":"783:20:1"}],"canonicalName":"IUniswapV3Pool","contractDependencies":[],"contractKind":"interface","documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"340:265:1","text":"@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":104,"linearizedBaseContracts":[104,364,430,214,245,538,404],"name":"IUniswapV3Pool","nameLocation":"615:14:1","nodeType":"ContractDefinition","nodes":[],"scope":105,"src":"605:203:1","usedErrors":[]}],"src":"45:764:1"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"id":2,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[118]},"id":119,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":106,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3SwapCallback","contractDependencies":[],"contractKind":"interface","documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"71:144:2","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":118,"linearizedBaseContracts":[118],"name":"IUniswapV3SwapCallback","nameLocation":"225:22:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"254:898:2","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":117,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"1166:21:2","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"amount0Delta","nameLocation":"1204:12:2","nodeType":"VariableDeclaration","scope":117,"src":"1197:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":109,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"amount1Delta","nameLocation":"1233:12:2","nodeType":"VariableDeclaration","scope":117,"src":"1226:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":111,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"data","nameLocation":"1270:4:2","nodeType":"VariableDeclaration","scope":117,"src":"1255:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":113,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:2"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"1289:0:2"},"scope":118,"src":"1157:133:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":119,"src":"215:1077:2","usedErrors":[]}],"src":"45:1248:2"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"id":3,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","exportedSymbols":{"IUniswapV3PoolActions":[214]},"id":215,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":120,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"71:102:3","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":214,"linearizedBaseContracts":[214],"name":"IUniswapV3PoolActions","nameLocation":"183:21:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"211:206:3","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":127,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"431:10:3","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"450:12:3","nodeType":"VariableDeclaration","scope":127,"src":"442:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":123,"name":"uint160","nodeType":"ElementaryTypeName","src":"442:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"441:22:3"},"returnParameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"472:0:3"},"scope":214,"src":"422:51:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"479:1029:3","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1522:4:3","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"recipient","nameLocation":"1544:9:3","nodeType":"VariableDeclaration","scope":145,"src":"1536:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"tickLower","nameLocation":"1569:9:3","nodeType":"VariableDeclaration","scope":145,"src":"1563:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":131,"name":"int24","nodeType":"ElementaryTypeName","src":"1563:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"tickUpper","nameLocation":"1594:9:3","nodeType":"VariableDeclaration","scope":145,"src":"1588:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":133,"name":"int24","nodeType":"ElementaryTypeName","src":"1588:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"amount","nameLocation":"1621:6:3","nodeType":"VariableDeclaration","scope":145,"src":"1613:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":135,"name":"uint128","nodeType":"ElementaryTypeName","src":"1613:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"data","nameLocation":"1652:4:3","nodeType":"VariableDeclaration","scope":145,"src":"1637:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":137,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:136:3"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"amount0","nameLocation":"1689:7:3","nodeType":"VariableDeclaration","scope":145,"src":"1681:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"amount1","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":145,"src":"1698:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:34:3"},"scope":214,"src":"1513:202:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"1721:1053:3","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":163,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"2788:7:3","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"recipient","nameLocation":"2813:9:3","nodeType":"VariableDeclaration","scope":163,"src":"2805:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"tickLower","nameLocation":"2838:9:3","nodeType":"VariableDeclaration","scope":163,"src":"2832:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":149,"name":"int24","nodeType":"ElementaryTypeName","src":"2832:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"tickUpper","nameLocation":"2863:9:3","nodeType":"VariableDeclaration","scope":163,"src":"2857:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":151,"name":"int24","nodeType":"ElementaryTypeName","src":"2857:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"amount0Requested","nameLocation":"2890:16:3","nodeType":"VariableDeclaration","scope":163,"src":"2882:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":153,"name":"uint128","nodeType":"ElementaryTypeName","src":"2882:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"amount1Requested","nameLocation":"2924:16:3","nodeType":"VariableDeclaration","scope":163,"src":"2916:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":155,"name":"uint128","nodeType":"ElementaryTypeName","src":"2916:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2795:151:3"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"amount0","nameLocation":"2973:7:3","nodeType":"VariableDeclaration","scope":163,"src":"2965:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":158,"name":"uint128","nodeType":"ElementaryTypeName","src":"2965:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"amount1","nameLocation":"2990:7:3","nodeType":"VariableDeclaration","scope":163,"src":"2982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":160,"name":"uint128","nodeType":"ElementaryTypeName","src":"2982:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2964:34:3"},"scope":214,"src":"2779:220:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"3005:631:3","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3650:4:3","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"tickLower","nameLocation":"3670:9:3","nodeType":"VariableDeclaration","scope":177,"src":"3664:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":165,"name":"int24","nodeType":"ElementaryTypeName","src":"3664:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"tickUpper","nameLocation":"3695:9:3","nodeType":"VariableDeclaration","scope":177,"src":"3689:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":167,"name":"int24","nodeType":"ElementaryTypeName","src":"3689:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"amount","nameLocation":"3722:6:3","nodeType":"VariableDeclaration","scope":177,"src":"3714:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":169,"name":"uint128","nodeType":"ElementaryTypeName","src":"3714:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3654:80:3"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"amount0","nameLocation":"3761:7:3","nodeType":"VariableDeclaration","scope":177,"src":"3753:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"amount1","nameLocation":"3778:7:3","nodeType":"VariableDeclaration","scope":177,"src":"3770:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:34:3"},"scope":214,"src":"3641:146:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"3793:1015:3","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"4822:4:3","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"recipient","nameLocation":"4844:9:3","nodeType":"VariableDeclaration","scope":195,"src":"4836:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"zeroForOne","nameLocation":"4868:10:3","nodeType":"VariableDeclaration","scope":195,"src":"4863:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":181,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amountSpecified","nameLocation":"4895:15:3","nodeType":"VariableDeclaration","scope":195,"src":"4888:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":183,"name":"int256","nodeType":"ElementaryTypeName","src":"4888:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"4928:17:3","nodeType":"VariableDeclaration","scope":195,"src":"4920:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":185,"name":"uint160","nodeType":"ElementaryTypeName","src":"4920:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"data","nameLocation":"4970:4:3","nodeType":"VariableDeclaration","scope":195,"src":"4955:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":187,"name":"bytes","nodeType":"ElementaryTypeName","src":"4955:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4826:154:3"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"amount0","nameLocation":"5006:7:3","nodeType":"VariableDeclaration","scope":195,"src":"4999:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":190,"name":"int256","nodeType":"ElementaryTypeName","src":"4999:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"amount1","nameLocation":"5022:7:3","nodeType":"VariableDeclaration","scope":195,"src":"5015:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":192,"name":"int256","nodeType":"ElementaryTypeName","src":"5015:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4998:32:3"},"scope":214,"src":"4813:218:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"5037:657:3","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nameLocation":"5708:5:3","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"recipient","nameLocation":"5731:9:3","nodeType":"VariableDeclaration","scope":207,"src":"5723:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"5723:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"amount0","nameLocation":"5758:7:3","nodeType":"VariableDeclaration","scope":207,"src":"5750:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"amount1","nameLocation":"5783:7:3","nodeType":"VariableDeclaration","scope":207,"src":"5775:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"data","nameLocation":"5815:4:3","nodeType":"VariableDeclaration","scope":207,"src":"5800:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":203,"name":"bytes","nodeType":"ElementaryTypeName","src":"5800:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:112:3"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"5834:0:3"},"scope":214,"src":"5699:136:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"5841:367:3","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nameLocation":"6222:34:3","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"6264:26:3","nodeType":"VariableDeclaration","scope":213,"src":"6257:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":209,"name":"uint16","nodeType":"ElementaryTypeName","src":"6257:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6256:35:3"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"6300:0:3"},"scope":214,"src":"6213:88:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":215,"src":"173:6130:3","usedErrors":[]}],"src":"45:6259:3"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"id":4,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[245]},"id":246,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":216,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolDerivedState","contractDependencies":[],"contractKind":"interface","documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"71:222:4","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":245,"linearizedBaseContracts":[245],"name":"IUniswapV3PoolDerivedState","nameLocation":"303:26:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"336:1045:4","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":230,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nameLocation":"1395:7:4","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"secondsAgos","nameLocation":"1421:11:4","nodeType":"VariableDeclaration","scope":230,"src":"1403:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":219,"name":"uint32","nodeType":"ElementaryTypeName","src":"1403:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":220,"nodeType":"ArrayTypeName","src":"1403:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1402:31:4"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"tickCumulatives","nameLocation":"1496:15:4","nodeType":"VariableDeclaration","scope":230,"src":"1481:30:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":223,"name":"int56","nodeType":"ElementaryTypeName","src":"1481:5:4","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":224,"nodeType":"ArrayTypeName","src":"1481:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nameLocation":"1530:34:4","nodeType":"VariableDeclaration","scope":230,"src":"1513:51:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":226,"name":"uint160","nodeType":"ElementaryTypeName","src":"1513:7:4","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":227,"nodeType":"ArrayTypeName","src":"1513:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1480:85:4"},"scope":245,"src":"1386:180:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"1572:771:4","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":244,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nameLocation":"2357:25:4","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"tickLower","nameLocation":"2389:9:4","nodeType":"VariableDeclaration","scope":244,"src":"2383:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":232,"name":"int24","nodeType":"ElementaryTypeName","src":"2383:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"tickUpper","nameLocation":"2406:9:4","nodeType":"VariableDeclaration","scope":244,"src":"2400:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":234,"name":"int24","nodeType":"ElementaryTypeName","src":"2400:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2382:34:4"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"tickCumulativeInside","nameLocation":"2483:20:4","nodeType":"VariableDeclaration","scope":244,"src":"2477:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":237,"name":"int56","nodeType":"ElementaryTypeName","src":"2477:5:4","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nameLocation":"2525:29:4","nodeType":"VariableDeclaration","scope":244,"src":"2517:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":239,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:4","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"secondsInside","nameLocation":"2575:13:4","nodeType":"VariableDeclaration","scope":244,"src":"2568:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":241,"name":"uint32","nodeType":"ElementaryTypeName","src":"2568:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:135:4"},"scope":245,"src":"2348:251:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":246,"src":"293:2308:4","usedErrors":[]}],"src":"45:2557:4"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"id":5,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","exportedSymbols":{"IUniswapV3PoolEvents":[364]},"id":365,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":247,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"71:88:5","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":364,"linearizedBaseContracts":[364],"name":"IUniswapV3PoolEvents","nameLocation":"169:20:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"196:344:5","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"eventSelector":"98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95","id":255,"name":"Initialize","nameLocation":"551:10:5","nodeType":"EventDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"570:12:5","nodeType":"VariableDeclaration","scope":255,"src":"562:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":250,"name":"uint160","nodeType":"ElementaryTypeName","src":"562:7:5","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":253,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"590:4:5","nodeType":"VariableDeclaration","scope":255,"src":"584:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":252,"name":"int24","nodeType":"ElementaryTypeName","src":"584:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"561:34:5"},"src":"545:51:5"},{"anonymous":false,"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"602:551:5","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"eventSelector":"7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde","id":272,"name":"Mint","nameLocation":"1164:4:5","nodeType":"EventDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1186:6:5","nodeType":"VariableDeclaration","scope":272,"src":"1178:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1218:5:5","nodeType":"VariableDeclaration","scope":272,"src":"1202:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1247:9:5","nodeType":"VariableDeclaration","scope":272,"src":"1233:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":261,"name":"int24","nodeType":"ElementaryTypeName","src":"1233:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"1280:9:5","nodeType":"VariableDeclaration","scope":272,"src":"1266:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":263,"name":"int24","nodeType":"ElementaryTypeName","src":"1266:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1307:6:5","nodeType":"VariableDeclaration","scope":272,"src":"1299:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":265,"name":"uint128","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1331:7:5","nodeType":"VariableDeclaration","scope":272,"src":"1323:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1356:7:5","nodeType":"VariableDeclaration","scope":272,"src":"1348:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:201:5"},"src":"1158:212:5"},{"anonymous":false,"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"1376:493:5","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"eventSelector":"70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0","id":287,"name":"Collect","nameLocation":"1880:7:5","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1913:5:5","nodeType":"VariableDeclaration","scope":287,"src":"1897:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":277,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1936:9:5","nodeType":"VariableDeclaration","scope":287,"src":"1928:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":279,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1969:9:5","nodeType":"VariableDeclaration","scope":287,"src":"1955:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":278,"name":"int24","nodeType":"ElementaryTypeName","src":"1955:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":281,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2002:9:5","nodeType":"VariableDeclaration","scope":287,"src":"1988:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":280,"name":"int24","nodeType":"ElementaryTypeName","src":"1988:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":283,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2029:7:5","nodeType":"VariableDeclaration","scope":287,"src":"2021:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":282,"name":"uint128","nodeType":"ElementaryTypeName","src":"2021:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":285,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2054:7:5","nodeType":"VariableDeclaration","scope":287,"src":"2046:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":284,"name":"uint128","nodeType":"ElementaryTypeName","src":"2046:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1887:180:5"},"src":"1874:194:5"},{"anonymous":false,"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"2074:523:5","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"eventSelector":"0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c","id":302,"name":"Burn","nameLocation":"2608:4:5","nodeType":"EventDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2638:5:5","nodeType":"VariableDeclaration","scope":302,"src":"2622:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"2667:9:5","nodeType":"VariableDeclaration","scope":302,"src":"2653:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":291,"name":"int24","nodeType":"ElementaryTypeName","src":"2653:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":294,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2700:9:5","nodeType":"VariableDeclaration","scope":302,"src":"2686:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":293,"name":"int24","nodeType":"ElementaryTypeName","src":"2686:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":296,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2727:6:5","nodeType":"VariableDeclaration","scope":302,"src":"2719:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":295,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":298,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2751:7:5","nodeType":"VariableDeclaration","scope":302,"src":"2743:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2776:7:5","nodeType":"VariableDeclaration","scope":302,"src":"2768:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:177:5"},"src":"2602:188:5"},{"anonymous":false,"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"2796:600:5","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"},"eventSelector":"c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67","id":319,"name":"Swap","nameLocation":"3407:4:5","nodeType":"EventDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3437:6:5","nodeType":"VariableDeclaration","scope":319,"src":"3421:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3469:9:5","nodeType":"VariableDeclaration","scope":319,"src":"3453:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3495:7:5","nodeType":"VariableDeclaration","scope":319,"src":"3488:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":308,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":311,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3519:7:5","nodeType":"VariableDeclaration","scope":319,"src":"3512:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":310,"name":"int256","nodeType":"ElementaryTypeName","src":"3512:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"3544:12:5","nodeType":"VariableDeclaration","scope":319,"src":"3536:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":312,"name":"uint160","nodeType":"ElementaryTypeName","src":"3536:7:5","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3574:9:5","nodeType":"VariableDeclaration","scope":319,"src":"3566:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":314,"name":"uint128","nodeType":"ElementaryTypeName","src":"3566:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":317,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3599:4:5","nodeType":"VariableDeclaration","scope":319,"src":"3593:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":316,"name":"int24","nodeType":"ElementaryTypeName","src":"3593:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3411:198:5"},"src":"3401:209:5"},{"anonymous":false,"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3616:562:5","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"eventSelector":"bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633","id":334,"name":"Flash","nameLocation":"4189:5:5","nodeType":"EventDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4220:6:5","nodeType":"VariableDeclaration","scope":334,"src":"4204:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4252:9:5","nodeType":"VariableDeclaration","scope":334,"src":"4236:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":326,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4279:7:5","nodeType":"VariableDeclaration","scope":334,"src":"4271:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4304:7:5","nodeType":"VariableDeclaration","scope":334,"src":"4296:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"indexed":false,"mutability":"mutable","name":"paid0","nameLocation":"4329:5:5","nodeType":"VariableDeclaration","scope":334,"src":"4321:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":false,"mutability":"mutable","name":"paid1","nameLocation":"4352:5:5","nodeType":"VariableDeclaration","scope":334,"src":"4344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:169:5"},"src":"4183:181:5"},{"anonymous":false,"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"4370:451:5","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"eventSelector":"ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a","id":341,"name":"IncreaseObservationCardinalityNext","nameLocation":"4832:34:5","nodeType":"EventDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nameLocation":"4883:29:5","nodeType":"VariableDeclaration","scope":341,"src":"4876:36:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":336,"name":"uint16","nodeType":"ElementaryTypeName","src":"4876:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":339,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nameLocation":"4929:29:5","nodeType":"VariableDeclaration","scope":341,"src":"4922:36:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":338,"name":"uint16","nodeType":"ElementaryTypeName","src":"4922:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4866:98:5"},"src":"4826:139:5"},{"anonymous":false,"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"4971:370:5","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"eventSelector":"973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133","id":352,"name":"SetFeeProtocol","nameLocation":"5352:14:5","nodeType":"EventDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nameLocation":"5373:15:5","nodeType":"VariableDeclaration","scope":352,"src":"5367:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":343,"name":"uint8","nodeType":"ElementaryTypeName","src":"5367:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":346,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nameLocation":"5396:15:5","nodeType":"VariableDeclaration","scope":352,"src":"5390:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":345,"name":"uint8","nodeType":"ElementaryTypeName","src":"5390:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":348,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nameLocation":"5419:15:5","nodeType":"VariableDeclaration","scope":352,"src":"5413:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":347,"name":"uint8","nodeType":"ElementaryTypeName","src":"5413:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":350,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nameLocation":"5442:15:5","nodeType":"VariableDeclaration","scope":352,"src":"5436:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":349,"name":"uint8","nodeType":"ElementaryTypeName","src":"5436:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5366:92:5"},"src":"5346:113:5"},{"anonymous":false,"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"5465:384:5","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"eventSelector":"596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151","id":363,"name":"CollectProtocol","nameLocation":"5860:15:5","nodeType":"EventDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5892:6:5","nodeType":"VariableDeclaration","scope":363,"src":"5876:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"5916:9:5","nodeType":"VariableDeclaration","scope":363,"src":"5900:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5935:7:5","nodeType":"VariableDeclaration","scope":363,"src":"5927:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":358,"name":"uint128","nodeType":"ElementaryTypeName","src":"5927:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5952:7:5","nodeType":"VariableDeclaration","scope":363,"src":"5944:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":360,"name":"uint128","nodeType":"ElementaryTypeName","src":"5944:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5875:85:5"},"src":"5854:107:5"}],"scope":365,"src":"159:5804:5","usedErrors":[]}],"src":"45:5919:5"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"id":6,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[404]},"id":405,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolImmutables","contractDependencies":[],"contractKind":"interface","documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"71:153:6","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":404,"linearizedBaseContracts":[404],"name":"IUniswapV3PoolImmutables","nameLocation":"234:24:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"265:138:6","text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"functionSelector":"c45a0155","id":373,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"417:7:6","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"424:2:6"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"450:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:9:6"},"scope":404,"src":"408:51:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"465:113:6","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"592:6:6","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"598:2:6"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"624:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:9:6"},"scope":404,"src":"583:50:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"639:114:6","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"767:6:6","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"773:2:6"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"799:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:9:6"},"scope":404,"src":"758:50:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"814:84:6","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"912:3:6","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[],"src":"915:2:6"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":391,"src":"941:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":388,"name":"uint24","nodeType":"ElementaryTypeName","src":"941:6:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"940:8:6"},"scope":404,"src":"903:46:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"955:358:6","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":397,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nameLocation":"1327:11:6","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"1338:2:6"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"1364:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":394,"name":"int24","nodeType":"ElementaryTypeName","src":"1364:5:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1363:7:6"},"scope":404,"src":"1318:53:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"1377:363:6","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":403,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nameLocation":"1754:19:6","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"1773:2:6"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":403,"src":"1799:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":400,"name":"uint128","nodeType":"ElementaryTypeName","src":"1799:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1798:9:6"},"scope":404,"src":"1745:63:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":405,"src":"224:1586:6","usedErrors":[]}],"src":"45:1766:6"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"id":7,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","exportedSymbols":{"IUniswapV3PoolOwnerActions":[430]},"id":431,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":406,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolOwnerActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"71:116:7","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":430,"linearizedBaseContracts":[430],"name":"IUniswapV3PoolOwnerActions","nameLocation":"197:26:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"230:205:7","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"8206a4d1","id":415,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nameLocation":"449:14:7","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"feeProtocol0","nameLocation":"470:12:7","nodeType":"VariableDeclaration","scope":415,"src":"464:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":409,"name":"uint8","nodeType":"ElementaryTypeName","src":"464:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"feeProtocol1","nameLocation":"490:12:7","nodeType":"VariableDeclaration","scope":415,"src":"484:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":411,"name":"uint8","nodeType":"ElementaryTypeName","src":"484:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"463:40:7"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"512:0:7"},"scope":430,"src":"440:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"519:483:7","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":429,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nameLocation":"1016:15:7","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"recipient","nameLocation":"1049:9:7","nodeType":"VariableDeclaration","scope":429,"src":"1041:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"amount0Requested","nameLocation":"1076:16:7","nodeType":"VariableDeclaration","scope":429,"src":"1068:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":419,"name":"uint128","nodeType":"ElementaryTypeName","src":"1068:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"amount1Requested","nameLocation":"1110:16:7","nodeType":"VariableDeclaration","scope":429,"src":"1102:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":421,"name":"uint128","nodeType":"ElementaryTypeName","src":"1102:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1031:101:7"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"amount0","nameLocation":"1159:7:7","nodeType":"VariableDeclaration","scope":429,"src":"1151:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":424,"name":"uint128","nodeType":"ElementaryTypeName","src":"1151:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"amount1","nameLocation":"1176:7:7","nodeType":"VariableDeclaration","scope":429,"src":"1168:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":426,"name":"uint128","nodeType":"ElementaryTypeName","src":"1168:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1150:34:7"},"scope":430,"src":"1007:178:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":431,"src":"187:1000:7","usedErrors":[]}],"src":"45:1143:7"}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"id":8,"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","exportedSymbols":{"IUniswapV3PoolState":[538]},"id":539,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":432,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolState","contractDependencies":[],"contractKind":"interface","documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"71:169:8","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":538,"linearizedBaseContracts":[538],"name":"IUniswapV3PoolState","nameLocation":"250:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"276:1140:8","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":451,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nameLocation":"1430:5:8","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"1435:2:8"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1506:12:8","nodeType":"VariableDeclaration","scope":451,"src":"1498:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":436,"name":"uint160","nodeType":"ElementaryTypeName","src":"1498:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"tick","nameLocation":"1538:4:8","nodeType":"VariableDeclaration","scope":451,"src":"1532:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":438,"name":"int24","nodeType":"ElementaryTypeName","src":"1532:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"observationIndex","nameLocation":"1563:16:8","nodeType":"VariableDeclaration","scope":451,"src":"1556:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":440,"name":"uint16","nodeType":"ElementaryTypeName","src":"1556:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"observationCardinality","nameLocation":"1600:22:8","nodeType":"VariableDeclaration","scope":451,"src":"1593:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":442,"name":"uint16","nodeType":"ElementaryTypeName","src":"1593:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"1643:26:8","nodeType":"VariableDeclaration","scope":451,"src":"1636:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":444,"name":"uint16","nodeType":"ElementaryTypeName","src":"1636:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"feeProtocol","nameLocation":"1689:11:8","nodeType":"VariableDeclaration","scope":451,"src":"1683:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":446,"name":"uint8","nodeType":"ElementaryTypeName","src":"1683:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"unlocked","nameLocation":"1719:8:8","nodeType":"VariableDeclaration","scope":451,"src":"1714:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":448,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1484:253:8"},"scope":538,"src":"1421:317:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1744:168:8","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":457,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nameLocation":"1926:20:8","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1946:2:8"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"1972:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:8"},"scope":538,"src":"1917:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1987:168:8","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":463,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nameLocation":"2169:20:8","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"2189:2:8"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":463,"src":"2215:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:8"},"scope":538,"src":"2160:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"2230:147:8","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":471,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nameLocation":"2391:12:8","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2403:2:8"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"token0","nameLocation":"2437:6:8","nodeType":"VariableDeclaration","scope":471,"src":"2429:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":466,"name":"uint128","nodeType":"ElementaryTypeName","src":"2429:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"token1","nameLocation":"2453:6:8","nodeType":"VariableDeclaration","scope":471,"src":"2445:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":468,"name":"uint128","nodeType":"ElementaryTypeName","src":"2445:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2428:32:8"},"scope":538,"src":"2382:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"2467:150:8","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":477,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"2631:9:8","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"2640:2:8"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"2666:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":474,"name":"uint128","nodeType":"ElementaryTypeName","src":"2666:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2665:9:8"},"scope":538,"src":"2622:53:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2681:1244:8","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":499,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nameLocation":"3939:5:8","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"tick","nameLocation":"3951:4:8","nodeType":"VariableDeclaration","scope":499,"src":"3945:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":479,"name":"int24","nodeType":"ElementaryTypeName","src":"3945:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3944:12:8"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"liquidityGross","nameLocation":"4025:14:8","nodeType":"VariableDeclaration","scope":499,"src":"4017:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":482,"name":"uint128","nodeType":"ElementaryTypeName","src":"4017:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"liquidityNet","nameLocation":"4060:12:8","nodeType":"VariableDeclaration","scope":499,"src":"4053:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":484,"name":"int128","nodeType":"ElementaryTypeName","src":"4053:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"feeGrowthOutside0X128","nameLocation":"4094:21:8","nodeType":"VariableDeclaration","scope":499,"src":"4086:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"feeGrowthOutside1X128","nameLocation":"4137:21:8","nodeType":"VariableDeclaration","scope":499,"src":"4129:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"tickCumulativeOutside","nameLocation":"4178:21:8","nodeType":"VariableDeclaration","scope":499,"src":"4172:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":490,"name":"int56","nodeType":"ElementaryTypeName","src":"4172:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nameLocation":"4221:30:8","nodeType":"VariableDeclaration","scope":499,"src":"4213:38:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":492,"name":"uint160","nodeType":"ElementaryTypeName","src":"4213:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"secondsOutside","nameLocation":"4272:14:8","nodeType":"VariableDeclaration","scope":499,"src":"4265:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":494,"name":"uint32","nodeType":"ElementaryTypeName","src":"4265:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"initialized","nameLocation":"4305:11:8","nodeType":"VariableDeclaration","scope":499,"src":"4300:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"4300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4003:323:8"},"scope":538,"src":"3930:397:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"4333:99:8","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":507,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nameLocation":"4446:10:8","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"wordPosition","nameLocation":"4463:12:8","nodeType":"VariableDeclaration","scope":507,"src":"4457:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":501,"name":"int16","nodeType":"ElementaryTypeName","src":"4457:5:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4456:20:8"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4500:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:9:8"},"scope":538,"src":"4437:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"4515:700:8","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":523,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"5229:9:8","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"key","nameLocation":"5247:3:8","nodeType":"VariableDeclaration","scope":523,"src":"5239:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5238:13:8"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"_liquidity","nameLocation":"5320:10:8","nodeType":"VariableDeclaration","scope":523,"src":"5312:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":512,"name":"uint128","nodeType":"ElementaryTypeName","src":"5312:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"feeGrowthInside0LastX128","nameLocation":"5352:24:8","nodeType":"VariableDeclaration","scope":523,"src":"5344:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"feeGrowthInside1LastX128","nameLocation":"5398:24:8","nodeType":"VariableDeclaration","scope":523,"src":"5390:32:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"tokensOwed0","nameLocation":"5444:11:8","nodeType":"VariableDeclaration","scope":523,"src":"5436:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":518,"name":"uint128","nodeType":"ElementaryTypeName","src":"5436:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"tokensOwed1","nameLocation":"5477:11:8","nodeType":"VariableDeclaration","scope":523,"src":"5469:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":520,"name":"uint128","nodeType":"ElementaryTypeName","src":"5469:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5298:200:8"},"scope":538,"src":"5220:279:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"5505:749:8","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":537,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nameLocation":"6268:12:8","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"index","nameLocation":"6289:5:8","nodeType":"VariableDeclaration","scope":537,"src":"6281:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6280:15:8"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"blockTimestamp","nameLocation":"6363:14:8","nodeType":"VariableDeclaration","scope":537,"src":"6356:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":528,"name":"uint32","nodeType":"ElementaryTypeName","src":"6356:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"tickCumulative","nameLocation":"6397:14:8","nodeType":"VariableDeclaration","scope":537,"src":"6391:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":530,"name":"int56","nodeType":"ElementaryTypeName","src":"6391:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nameLocation":"6433:33:8","nodeType":"VariableDeclaration","scope":537,"src":"6425:41:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":532,"name":"uint160","nodeType":"ElementaryTypeName","src":"6425:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"initialized","nameLocation":"6485:11:8","nodeType":"VariableDeclaration","scope":537,"src":"6480:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":534,"name":"bool","nodeType":"ElementaryTypeName","src":"6480:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6342:164:8"},"scope":538,"src":"6259:248:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":539,"src":"240:6269:8","usedErrors":[]}],"src":"45:6465:8"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"id":9,"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[638],"IUniswapV3SwapCallback":[118]},"id":639,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:9"},{"id":541,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:9"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":639,"sourceUnit":119,"src":"91:83:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":544,"name":"IUniswapV3SwapCallback","nodeType":"IdentifierPath","referencedDeclaration":118,"src":"305:22:9"},"id":545,"nodeType":"InheritanceSpecifier","src":"305:22:9"}],"canonicalName":"ISwapRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"176:104:9","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":638,"linearizedBaseContracts":[638,118],"name":"ISwapRouter","nameLocation":"290:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":562,"members":[{"constant":false,"id":547,"mutability":"mutable","name":"tokenIn","nameLocation":"382:7:9","nodeType":"VariableDeclaration","scope":562,"src":"374:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"tokenOut","nameLocation":"407:8:9","nodeType":"VariableDeclaration","scope":562,"src":"399:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"fee","nameLocation":"432:3:9","nodeType":"VariableDeclaration","scope":562,"src":"425:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":550,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"recipient","nameLocation":"453:9:9","nodeType":"VariableDeclaration","scope":562,"src":"445:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"deadline","nameLocation":"480:8:9","nodeType":"VariableDeclaration","scope":562,"src":"472:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"amountIn","nameLocation":"506:8:9","nodeType":"VariableDeclaration","scope":562,"src":"498:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"532:16:9","nodeType":"VariableDeclaration","scope":562,"src":"524:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"566:17:9","nodeType":"VariableDeclaration","scope":562,"src":"558:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":560,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nameLocation":"341:22:9","nodeType":"StructDefinition","scope":638,"src":"334:256:9","visibility":"public"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"596:250:9","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":571,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nameLocation":"860:16:9","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"params","nameLocation":"909:6:9","nodeType":"VariableDeclaration","scope":571,"src":"877:38:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$562_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":565,"nodeType":"UserDefinedTypeName","pathNode":{"id":564,"name":"ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":562,"src":"877:22:9"},"referencedDeclaration":562,"src":"877:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$562_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:9"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"amountOut","nameLocation":"951:9:9","nodeType":"VariableDeclaration","scope":571,"src":"943:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:9"},"scope":638,"src":"851:111:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":582,"members":[{"constant":false,"id":573,"mutability":"mutable","name":"path","nameLocation":"1008:4:9","nodeType":"VariableDeclaration","scope":582,"src":"1002:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"recipient","nameLocation":"1030:9:9","nodeType":"VariableDeclaration","scope":582,"src":"1022:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"deadline","nameLocation":"1057:8:9","nodeType":"VariableDeclaration","scope":582,"src":"1049:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"amountIn","nameLocation":"1083:8:9","nodeType":"VariableDeclaration","scope":582,"src":"1075:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"amountOutMinimum","nameLocation":"1109:16:9","nodeType":"VariableDeclaration","scope":582,"src":"1101:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nameLocation":"975:16:9","nodeType":"StructDefinition","scope":638,"src":"968:164:9","visibility":"public"},{"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"1138:273:9","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":591,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nameLocation":"1425:10:9","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"params","nameLocation":"1462:6:9","nodeType":"VariableDeclaration","scope":591,"src":"1436:32:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$582_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":585,"nodeType":"UserDefinedTypeName","pathNode":{"id":584,"name":"ExactInputParams","nodeType":"IdentifierPath","referencedDeclaration":582,"src":"1436:16:9"},"referencedDeclaration":582,"src":"1436:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$582_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:9"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"amountOut","nameLocation":"1504:9:9","nodeType":"VariableDeclaration","scope":591,"src":"1496:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:9"},"scope":638,"src":"1416:99:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":608,"members":[{"constant":false,"id":593,"mutability":"mutable","name":"tokenIn","nameLocation":"1570:7:9","nodeType":"VariableDeclaration","scope":608,"src":"1562:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"tokenOut","nameLocation":"1595:8:9","nodeType":"VariableDeclaration","scope":608,"src":"1587:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"fee","nameLocation":"1620:3:9","nodeType":"VariableDeclaration","scope":608,"src":"1613:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":596,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"recipient","nameLocation":"1641:9:9","nodeType":"VariableDeclaration","scope":608,"src":"1633:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"deadline","nameLocation":"1668:8:9","nodeType":"VariableDeclaration","scope":608,"src":"1660:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"amountOut","nameLocation":"1694:9:9","nodeType":"VariableDeclaration","scope":608,"src":"1686:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"amountInMaximum","nameLocation":"1721:15:9","nodeType":"VariableDeclaration","scope":608,"src":"1713:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"1754:17:9","nodeType":"VariableDeclaration","scope":608,"src":"1746:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":606,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nameLocation":"1528:23:9","nodeType":"StructDefinition","scope":638,"src":"1521:257:9","visibility":"public"},{"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"1784:250:9","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":617,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nameLocation":"2048:17:9","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"params","nameLocation":"2099:6:9","nodeType":"VariableDeclaration","scope":617,"src":"2066:39:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$608_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":611,"nodeType":"UserDefinedTypeName","pathNode":{"id":610,"name":"ExactOutputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":608,"src":"2066:23:9"},"referencedDeclaration":608,"src":"2066:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$608_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:9"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"amountIn","nameLocation":"2141:8:9","nodeType":"VariableDeclaration","scope":617,"src":"2133:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:9"},"scope":638,"src":"2039:112:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":628,"members":[{"constant":false,"id":619,"mutability":"mutable","name":"path","nameLocation":"2198:4:9","nodeType":"VariableDeclaration","scope":628,"src":"2192:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":618,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"recipient","nameLocation":"2220:9:9","nodeType":"VariableDeclaration","scope":628,"src":"2212:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"deadline","nameLocation":"2247:8:9","nodeType":"VariableDeclaration","scope":628,"src":"2239:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"amountOut","nameLocation":"2273:9:9","nodeType":"VariableDeclaration","scope":628,"src":"2265:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"amountInMaximum","nameLocation":"2300:15:9","nodeType":"VariableDeclaration","scope":628,"src":"2292:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nameLocation":"2164:17:9","nodeType":"StructDefinition","scope":638,"src":"2157:165:9","visibility":"public"},{"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"2328:284:9","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nameLocation":"2626:11:9","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"params","nameLocation":"2665:6:9","nodeType":"VariableDeclaration","scope":637,"src":"2638:33:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$628_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":631,"nodeType":"UserDefinedTypeName","pathNode":{"id":630,"name":"ExactOutputParams","nodeType":"IdentifierPath","referencedDeclaration":628,"src":"2638:17:9"},"referencedDeclaration":628,"src":"2638:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$628_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:9"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"amountIn","nameLocation":"2707:8:9","nodeType":"VariableDeclaration","scope":637,"src":"2699:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:9"},"scope":638,"src":"2617:100:9","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":639,"src":"280:2439:9","usedErrors":[]}],"src":"45:2675:9"}},"contracts/base/Lockable.sol":{"id":10,"ast":{"absolutePath":"contracts/base/Lockable.sol","exportedSymbols":{"Lockable":[665]},"id":666,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":640,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Lockable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":665,"linearizedBaseContracts":[665],"name":"Lockable","nameLocation":"80:8:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":643,"mutability":"mutable","name":"unlocked","nameLocation":"111:8:10","nodeType":"VariableDeclaration","scope":665,"src":"95:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"95:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"errorSelector":"0f2e5b6c","id":645,"name":"Locked","nameLocation":"136:6:10","nodeType":"ErrorDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"142:2:10"},"src":"130:15:10"},{"body":{"id":663,"nodeType":"Block","src":"167:106:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"181:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"181:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"177:34:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":650,"name":"Locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"203:6:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"203:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"RevertStatement","src":"196:15:10"}},{"expression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":654,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"221:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"221:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":657,"nodeType":"ExpressionStatement","src":"221:12:10"},{"id":658,"nodeType":"PlaceholderStatement","src":"243:1:10"},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":659,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"254:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"265:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"254:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":662,"nodeType":"ExpressionStatement","src":"254:12:10"}]},"id":664,"name":"lock","nameLocation":"160:4:10","nodeType":"ModifierDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"164:2:10"},"src":"151:122:10","virtual":false,"visibility":"internal"}],"scope":666,"src":"71:204:10","usedErrors":[645]}],"src":"45:231:10"}},"contracts/integrations/PancakeswapV3DEXIntegration.sol":{"id":11,"ast":{"absolutePath":"contracts/integrations/PancakeswapV3DEXIntegration.sol","exportedSymbols":{"IDEXIntegration":[1822],"IERC20":[1907],"ISwapRouter":[638],"IUniswapV3Factory":[82],"IUniswapV3StaticQuoter":[1988],"IUniswapV3SwapCallback":[118],"Lockable":[665],"PancakeswapV3DEXIntegration":[1203],"TransferHelper":[2407]},"id":1204,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":667,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:11"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":83,"src":"71:69:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":639,"src":"141:68:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TransferHelper.sol","file":"../libraries/TransferHelper.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":2408,"src":"211:41:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":1908,"src":"253:34:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDEXIntegration.sol","file":"../interfaces/IDEXIntegration.sol","id":672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":1823,"src":"288:43:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IUniswapV3StaticQuoter.sol","file":"../interfaces/IUniswapV3StaticQuoter.sol","id":673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":1989,"src":"332:50:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/base/Lockable.sol","file":"../base/Lockable.sol","id":674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1204,"sourceUnit":666,"src":"383:30:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":675,"name":"IDEXIntegration","nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"455:15:11"},"id":676,"nodeType":"InheritanceSpecifier","src":"455:15:11"},{"baseName":{"id":677,"name":"Lockable","nodeType":"IdentifierPath","referencedDeclaration":665,"src":"472:8:11"},"id":678,"nodeType":"InheritanceSpecifier","src":"472:8:11"}],"canonicalName":"PancakeswapV3DEXIntegration","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1203,"linearizedBaseContracts":[1203,665,1822],"name":"PancakeswapV3DEXIntegration","nameLocation":"424:27:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c45a0155","id":680,"mutability":"immutable","name":"factory","nameLocation":"512:7:11","nodeType":"VariableDeclaration","scope":1203,"src":"487:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c6bbd5a7","id":682,"mutability":"immutable","name":"quoter","nameLocation":"550:6:11","nodeType":"VariableDeclaration","scope":1203,"src":"525:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f887ea40","id":684,"mutability":"immutable","name":"router","nameLocation":"644:6:11","nodeType":"VariableDeclaration","scope":1203,"src":"619:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"230ed44a","id":687,"mutability":"mutable","name":"feeTiers","nameLocation":"672:8:11","nodeType":"VariableDeclaration","scope":1203,"src":"656:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[]"},"typeName":{"baseType":{"id":685,"name":"uint24","nodeType":"ElementaryTypeName","src":"656:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":686,"nodeType":"ArrayTypeName","src":"656:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"751:202:11","statements":[{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":696,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"761:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":697,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"771:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"761:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"nodeType":"ExpressionStatement","src":"761:18:11"},{"expression":{"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":700,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"789:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":701,"name":"_quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"798:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"789:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":703,"nodeType":"ExpressionStatement","src":"789:16:11"},{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":704,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"815:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":705,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"824:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"815:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":707,"nodeType":"ExpressionStatement","src":"815:16:11"},{"expression":{"arguments":[{"hexValue":"313030","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"855:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"expression":{"id":708,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"841:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"841:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"841:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"841:18:11"},{"expression":{"arguments":[{"hexValue":"353030","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"}],"expression":{"id":714,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"869:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"869:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"869:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"869:18:11"},{"expression":{"arguments":[{"hexValue":"32353030","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"911:4:11","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"}],"expression":{"id":720,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"897:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"897:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"897:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"897:19:11"},{"expression":{"arguments":[{"hexValue":"3130303030","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"id":726,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"926:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"926:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint24_$dyn_storage_ptr_$_t_uint24_$returns$__$bound_to$_t_array$_t_uint24_$dyn_storage_ptr_$","typeString":"function (uint24[] storage pointer,uint24)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"926:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"926:20:11"}]},"id":733,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"_factory","nameLocation":"707:8:11","nodeType":"VariableDeclaration","scope":733,"src":"699:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"_quoter","nameLocation":"725:7:11","nodeType":"VariableDeclaration","scope":733,"src":"717:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"717:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"_router","nameLocation":"742:7:11","nodeType":"VariableDeclaration","scope":733,"src":"734:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"698:52:11"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"751:0:11"},"scope":1203,"src":"687:266:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":778,"nodeType":"Block","src":"1091:247:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"1118:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":745,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1129:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1118:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":747,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"1140:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1159:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1151:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:11","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1151:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1140:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1118:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1165:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1184:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1176:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:11","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1165:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1118:68:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":777,"nodeType":"IfStatement","src":"1101:231:11","trueBody":{"id":776,"nodeType":"Block","src":"1197:135:11","statements":[{"expression":{"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":761,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"1212:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1220:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":763,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1211:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":764,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"1230:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":765,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1240:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1230:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":770,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1304:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"1313:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1303:18:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1230:91:11","trueExpression":{"components":[{"id":767,"name":"_tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"1267:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"_tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1276:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1266:18:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"1211:110:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"ExpressionStatement","src":"1211:110:11"}]}}]},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"_sortTokens","nameLocation":"968:11:11","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"_tokenA","nameLocation":"997:7:11","nodeType":"VariableDeclaration","scope":779,"src":"989:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"_tokenB","nameLocation":"1022:7:11","nodeType":"VariableDeclaration","scope":779,"src":"1014:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1014:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"979:56:11"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"token0","nameLocation":"1067:6:11","nodeType":"VariableDeclaration","scope":779,"src":"1059:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"token1","nameLocation":"1083:6:11","nodeType":"VariableDeclaration","scope":779,"src":"1075:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1058:32:11"},"scope":1203,"src":"959:379:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1788],"body":{"id":845,"nodeType":"Block","src":"1463:491:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":789,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1477:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":790,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1489:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1477:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"1473:64:11","trueBody":{"id":794,"nodeType":"Block","src":"1500:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1521:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":788,"id":793,"nodeType":"Return","src":"1514:12:11"}]}},{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"_feeTiers","nameLocation":"1562:9:11","nodeType":"VariableDeclaration","scope":845,"src":"1546:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":798,"name":"uint24","nodeType":"ElementaryTypeName","src":"1546:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":799,"nodeType":"ArrayTypeName","src":"1546:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":802,"initialValue":{"id":801,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"1574:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1546:36:11"},{"assignments":[804],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"_factory","nameLocation":"1600:8:11","nodeType":"VariableDeclaration","scope":845,"src":"1592:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"id":805,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1611:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1592:26:11"},{"body":{"id":841,"nodeType":"Block","src":"1673:253:11","statements":[{"assignments":[819],"declarations":[{"constant":false,"id":819,"mutability":"mutable","name":"pool","nameLocation":"1695:4:11","nodeType":"VariableDeclaration","scope":841,"src":"1687:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":830,"initialValue":{"arguments":[{"id":824,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"1755:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":825,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"1781:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":826,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1808:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":828,"indexExpression":{"id":827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1818:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1808:12:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"arguments":[{"id":821,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"1720:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":820,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1702:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$82_$","typeString":"type(contract IUniswapV3Factory)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1702:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$82","typeString":"contract IUniswapV3Factory"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":55,"src":"1702:35:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1702:132:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1687:147:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"1852:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1868:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1860:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:11","typeDescriptions":{}}},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1852:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":840,"nodeType":"IfStatement","src":"1848:68:11","trueBody":{"id":839,"nodeType":"Block","src":"1872:44:11","statements":[{"expression":{"hexValue":"74727565","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1897:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":788,"id":838,"nodeType":"Return","src":"1890:11:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1646:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":812,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1650:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1650:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1646:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":842,"initializationExpression":{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"i","nameLocation":"1639:1:11","nodeType":"VariableDeclaration","scope":842,"src":"1633:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":807,"name":"uint8","nodeType":"ElementaryTypeName","src":"1633:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":810,"initialValue":{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1643:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1633:11:11"},"loopExpression":{"expression":{"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1668:3:11","subExpression":{"id":815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1668:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":817,"nodeType":"ExpressionStatement","src":"1668:3:11"},"nodeType":"ForStatement","src":"1628:298:11"},{"expression":{"hexValue":"66616c7365","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1942:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":788,"id":844,"nodeType":"Return","src":"1935:12:11"}]},"functionSelector":"b88c5f91","id":846,"implemented":true,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"1353:12:11","nodeType":"FunctionDefinition","overrides":{"id":785,"nodeType":"OverrideSpecifier","overrides":[],"src":"1439:8:11"},"parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"_tokenIn","nameLocation":"1383:8:11","nodeType":"VariableDeclaration","scope":846,"src":"1375:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"_tokenOut","nameLocation":"1409:9:11","nodeType":"VariableDeclaration","scope":846,"src":"1401:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"1401:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1365:59:11"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":846,"src":"1457:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"1457:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1456:6:11"},"scope":1203,"src":"1344:610:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":935,"nodeType":"Block","src":"2123:919:11","statements":[{"assignments":[863],"declarations":[{"constant":false,"id":863,"mutability":"mutable","name":"_feeTiers","nameLocation":"2149:9:11","nodeType":"VariableDeclaration","scope":935,"src":"2133:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":861,"name":"uint24","nodeType":"ElementaryTypeName","src":"2133:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":862,"nodeType":"ArrayTypeName","src":"2133:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":865,"initialValue":{"id":864,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2161:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2133:36:11"},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"_quoter","nameLocation":"2187:7:11","nodeType":"VariableDeclaration","scope":935,"src":"2179:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":869,"initialValue":{"id":868,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2197:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2179:24:11"},{"body":{"id":933,"nodeType":"Block","src":"2258:778:11","statements":[{"assignments":[882],"declarations":[{"constant":false,"id":882,"mutability":"mutable","name":"tempAmountOut","nameLocation":"2280:13:11","nodeType":"VariableDeclaration","scope":933,"src":"2272:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":883,"nodeType":"VariableDeclarationStatement","src":"2272:21:11"},{"clauses":[{"block":{"id":906,"nodeType":"Block","src":"2749:50:11","statements":[{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":902,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2767:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":903,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2783:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2767:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":905,"nodeType":"ExpressionStatement","src":"2767:17:11"}]},"errorName":"","id":907,"nodeType":"TryCatchClause","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"t","nameLocation":"2746:1:11","nodeType":"VariableDeclaration","scope":907,"src":"2738:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2737:11:11"},"src":"2729:70:11"},{"block":{"id":915,"nodeType":"Block","src":"2838:50:11","statements":[{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":911,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2856:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2856:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"2856:17:11"}]},"errorName":"","id":916,"nodeType":"TryCatchClause","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"2807:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"2807:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2806:31:11"},"src":"2800:88:11"}],"externalCall":{"arguments":[{"arguments":[{"id":890,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2488:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2532:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"2577:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":893,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2617:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":895,"indexExpression":{"id":894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2627:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2617:12:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":888,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"2402:22:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1988_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"QuoteExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"2402:50:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_QuoteExactInputSingleParams_$1948_storage_ptr_$","typeString":"type(struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams storage pointer)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","amountIn","fee","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"2402:296:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1948_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1948_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams memory"}],"expression":{"arguments":[{"id":885,"name":"_quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2350:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"2327:22:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1988_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3StaticQuoter_$1988","typeString":"contract IUniswapV3StaticQuoter"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"quoteExactInputSingle","nodeType":"MemberAccess","referencedDeclaration":1957,"src":"2327:53:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_QuoteExactInputSingleParams_$1948_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams memory) view external returns (uint256)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:389:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":917,"nodeType":"TryStatement","src":"2307:581:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":918,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2905:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":919,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2921:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2905:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":932,"nodeType":"IfStatement","src":"2901:125:11","trueBody":{"id":931,"nodeType":"Block","src":"2932:94:11","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":921,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2950:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":922,"name":"tempAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2962:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"2950:25:11"},{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":925,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"2993:3:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":926,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2999:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":928,"indexExpression":{"id":927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"3009:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2999:12:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2993:18:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":930,"nodeType":"ExpressionStatement","src":"2993:18:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2231:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":875,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"2235:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2235:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2231:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":934,"initializationExpression":{"assignments":[871],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"i","nameLocation":"2224:1:11","nodeType":"VariableDeclaration","scope":934,"src":"2218:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":870,"name":"uint8","nodeType":"ElementaryTypeName","src":"2218:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":873,"initialValue":{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2228:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2218:11:11"},"loopExpression":{"expression":{"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2253:3:11","subExpression":{"id":878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2253:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":880,"nodeType":"ExpressionStatement","src":"2253:3:11"},"nodeType":"ForStatement","src":"2213:823:11"}]},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountOut","nameLocation":"1969:13:11","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"_tokenIn","nameLocation":"2000:8:11","nodeType":"VariableDeclaration","scope":936,"src":"1992:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"_tokenOut","nameLocation":"2026:9:11","nodeType":"VariableDeclaration","scope":936,"src":"2018:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"_amountIn","nameLocation":"2053:9:11","nodeType":"VariableDeclaration","scope":936,"src":"2045:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2045:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:86:11"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"amountOut","nameLocation":"2100:9:11","nodeType":"VariableDeclaration","scope":936,"src":"2092:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"fee","nameLocation":"2118:3:11","nodeType":"VariableDeclaration","scope":936,"src":"2111:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":856,"name":"uint24","nodeType":"ElementaryTypeName","src":"2111:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2091:31:11"},"scope":1203,"src":"1960:1082:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1034,"nodeType":"Block","src":"3210:982:11","statements":[{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"_feeTiers","nameLocation":"3236:9:11","nodeType":"VariableDeclaration","scope":1034,"src":"3220:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":951,"name":"uint24","nodeType":"ElementaryTypeName","src":"3220:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":952,"nodeType":"ArrayTypeName","src":"3220:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"id":955,"initialValue":{"id":954,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"3248:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3220:36:11"},{"assignments":[957],"declarations":[{"constant":false,"id":957,"mutability":"mutable","name":"_quoter","nameLocation":"3274:7:11","nodeType":"VariableDeclaration","scope":1034,"src":"3266:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"3266:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":959,"initialValue":{"id":958,"name":"quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3284:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3266:24:11"},{"body":{"id":1032,"nodeType":"Block","src":"3345:841:11","statements":[{"assignments":[972],"declarations":[{"constant":false,"id":972,"mutability":"mutable","name":"tempAmountIn","nameLocation":"3367:12:11","nodeType":"VariableDeclaration","scope":1032,"src":"3359:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3359:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":973,"nodeType":"VariableDeclarationStatement","src":"3359:20:11"},{"clauses":[{"block":{"id":996,"nodeType":"Block","src":"3836:49:11","statements":[{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":992,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3854:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":993,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"3869:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3854:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ExpressionStatement","src":"3854:16:11"}]},"errorName":"","id":997,"nodeType":"TryCatchClause","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"t","nameLocation":"3833:1:11","nodeType":"VariableDeclaration","scope":997,"src":"3825:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"3825:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3824:11:11"},"src":"3816:69:11"},{"block":{"id":1005,"nodeType":"Block","src":"3924:49:11","statements":[{"expression":{"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1001,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3942:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3957:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3942:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1004,"nodeType":"ExpressionStatement","src":"3942:16:11"}]},"errorName":"","id":1006,"nodeType":"TryCatchClause","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"3893:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":998,"name":"bytes","nodeType":"ElementaryTypeName","src":"3893:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3892:31:11"},"src":"3886:87:11"}],"externalCall":{"arguments":[{"arguments":[{"id":980,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"3576:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"3620:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"3663:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":983,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3704:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":985,"indexExpression":{"id":984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"3714:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3704:12:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3761:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":978,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3489:22:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1988_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"QuoteExactOutputSingleParams","nodeType":"MemberAccess","referencedDeclaration":1978,"src":"3489:51:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_QuoteExactOutputSingleParams_$1978_storage_ptr_$","typeString":"type(struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","amount","fee","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"3489:296:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1978_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1978_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams memory"}],"expression":{"arguments":[{"id":975,"name":"_quoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3436:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"IUniswapV3StaticQuoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3413:22:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3StaticQuoter_$1988_$","typeString":"type(contract IUniswapV3StaticQuoter)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3413:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3StaticQuoter_$1988","typeString":"contract IUniswapV3StaticQuoter"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"quoteExactOutputSingle","nodeType":"MemberAccess","referencedDeclaration":1987,"src":"3413:54:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_QuoteExactOutputSingleParams_$1978_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams memory) view external returns (uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3413:390:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1007,"nodeType":"TryStatement","src":"3393:580:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1008,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4007:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4019:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4007:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4025:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4040:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4025:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4045:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1015,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4060:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4045:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4025:43:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4024:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4007:62:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1031,"nodeType":"IfStatement","src":"3986:190:11","trueBody":{"id":1030,"nodeType":"Block","src":"4084:92:11","statements":[{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1020,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4102:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1021,"name":"tempAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4113:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4102:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"4102:23:11"},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1024,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4143:3:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1025,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"4149:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":1027,"indexExpression":{"id":1026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"4159:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4149:12:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"4143:18:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":1029,"nodeType":"ExpressionStatement","src":"4143:18:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"3318:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":965,"name":"_feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3322:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[] memory"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3322:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3318:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1033,"initializationExpression":{"assignments":[961],"declarations":[{"constant":false,"id":961,"mutability":"mutable","name":"i","nameLocation":"3311:1:11","nodeType":"VariableDeclaration","scope":1033,"src":"3305:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":960,"name":"uint8","nodeType":"ElementaryTypeName","src":"3305:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":963,"initialValue":{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3305:11:11"},"loopExpression":{"expression":{"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3340:3:11","subExpression":{"id":968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"3340:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":970,"nodeType":"ExpressionStatement","src":"3340:3:11"},"nodeType":"ForStatement","src":"3300:886:11"}]},"id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountIn","nameLocation":"3057:12:11","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"_tokenIn","nameLocation":"3087:8:11","nodeType":"VariableDeclaration","scope":1035,"src":"3079:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3079:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"_tokenOut","nameLocation":"3113:9:11","nodeType":"VariableDeclaration","scope":1035,"src":"3105:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"3105:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"_amountOut","nameLocation":"3140:10:11","nodeType":"VariableDeclaration","scope":1035,"src":"3132:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3069:87:11"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"amountIn","nameLocation":"3188:8:11","nodeType":"VariableDeclaration","scope":1035,"src":"3180:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"fee","nameLocation":"3205:3:11","nodeType":"VariableDeclaration","scope":1035,"src":"3198:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":946,"name":"uint24","nodeType":"ElementaryTypeName","src":"3198:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3179:30:11"},"scope":1203,"src":"3048:1144:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1799],"body":{"id":1056,"nodeType":"Block","src":"4357:78:11","statements":[{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1047,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"4368:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":1048,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4367:13:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1050,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4397:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4407:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4418:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1049,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4383:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$","typeString":"function (address,address,uint256) view returns (uint256,uint24)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4383:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"src":"4367:61:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"4367:61:11"}]},"functionSelector":"4aa06652","id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"4207:12:11","nodeType":"FunctionDefinition","overrides":{"id":1043,"nodeType":"OverrideSpecifier","overrides":[],"src":"4320:8:11"},"parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"_tokenIn","nameLocation":"4237:8:11","nodeType":"VariableDeclaration","scope":1057,"src":"4229:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"4229:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"_tokenOut","nameLocation":"4263:9:11","nodeType":"VariableDeclaration","scope":1057,"src":"4255:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"4255:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"_amountIn","nameLocation":"4290:9:11","nodeType":"VariableDeclaration","scope":1057,"src":"4282:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4282:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4219:86:11"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"amountOut","nameLocation":"4346:9:11","nodeType":"VariableDeclaration","scope":1057,"src":"4338:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"4338:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4337:19:11"},"scope":1203,"src":"4198:237:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1810],"body":{"id":1078,"nodeType":"Block","src":"4599:77:11","statements":[{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1069,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"4610:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":1070,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4609:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1072,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4637:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"4647:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"4658:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1071,"name":"_getAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4624:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$","typeString":"function (address,address,uint256) view returns (uint256,uint24)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4624:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"src":"4609:60:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"4609:60:11"}]},"functionSelector":"53b609b5","id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"4450:11:11","nodeType":"FunctionDefinition","overrides":{"id":1065,"nodeType":"OverrideSpecifier","overrides":[],"src":"4563:8:11"},"parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"_tokenIn","nameLocation":"4479:8:11","nodeType":"VariableDeclaration","scope":1079,"src":"4471:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"4471:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"_tokenOut","nameLocation":"4505:9:11","nodeType":"VariableDeclaration","scope":1079,"src":"4497:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"_amountOut","nameLocation":"4532:10:11","nodeType":"VariableDeclaration","scope":1079,"src":"4524:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"4524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4461:87:11"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"amountIn","nameLocation":"4589:8:11","nodeType":"VariableDeclaration","scope":1079,"src":"4581:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"4581:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4580:18:11"},"scope":1203,"src":"4441:235:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1821],"body":{"id":1201,"nodeType":"Block","src":"4827:1073:11","statements":[{"assignments":[1094],"declarations":[{"constant":false,"id":1094,"mutability":"mutable","name":"amountIn","nameLocation":"4845:8:11","nodeType":"VariableDeclaration","scope":1201,"src":"4837:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"4837:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1104,"initialValue":{"arguments":[{"arguments":[{"id":1101,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4891:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PancakeswapV3DEXIntegration_$1203","typeString":"contract PancakeswapV3DEXIntegration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PancakeswapV3DEXIntegration_$1203","typeString":"contract PancakeswapV3DEXIntegration"}],"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4883:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"4883:7:11","typeDescriptions":{}}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4883:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1096,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4863:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1095,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"4856:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4856:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"4856:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4856:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4837:60:11"},{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"fee","nameLocation":"4914:3:11","nodeType":"VariableDeclaration","scope":1201,"src":"4907:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1105,"name":"uint24","nodeType":"ElementaryTypeName","src":"4907:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":1107,"nodeType":"VariableDeclarationStatement","src":"4907:10:11"},{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1108,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"4928:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1109,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4939:3:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"id":1110,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4927:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1112,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4960:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4970:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"4981:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4946:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$","typeString":"function (address,address,uint256) view returns (uint256,uint24)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4946:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint24_$","typeString":"tuple(uint256,uint24)"}},"src":"4927:63:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"4927:63:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5021:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5033:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5021:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5038:3:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5044:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5038:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5021:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e69737761705633496e746567726174696f6e3a20494e53554646494349454e545f4f55545055545f414d4f554e54","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5059:50:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff","typeString":"literal_string \"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\""},"value":"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d33c7d656a37e2d51096a86bf4fdd989ace91e4e1b9601a9f565b11d348b32ff","typeString":"literal_string \"UniswapV3Integration: INSUFFICIENT_OUTPUT_AMOUNT\""}],"id":1118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5000:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5000:119:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"5000:119:11"},{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"_router","nameLocation":"5138:7:11","nodeType":"VariableDeclaration","scope":1201,"src":"5130:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"5130:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1132,"initialValue":{"id":1131,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5148:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5130:24:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1139,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5203:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PancakeswapV3DEXIntegration_$1203","typeString":"contract PancakeswapV3DEXIntegration"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PancakeswapV3DEXIntegration_$1203","typeString":"contract PancakeswapV3DEXIntegration"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5195:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:11","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5195:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1141,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5210:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1134,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5175:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1133,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5168:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5168:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"5168:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5168:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5222:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5168:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1158,"nodeType":"IfStatement","src":"5164:150:11","trueBody":{"id":1157,"nodeType":"Block","src":"5225:89:11","statements":[{"expression":{"arguments":[{"id":1148,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5266:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5276:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5290:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5290:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1150,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5285:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5285:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5285:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1145,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"5239:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$2407_$","typeString":"type(library TransferHelper)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":2292,"src":"5239:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"5239:64:11"}]}},{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"initialBalance","nameLocation":"5332:14:11","nodeType":"VariableDeclaration","scope":1201,"src":"5324:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[{"id":1165,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5377:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1162,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5356:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1161,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5349:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5349:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"5349:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5349:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5324:57:11"},{"expression":{"arguments":[{"arguments":[{"id":1174,"name":"_tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5504:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5540:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"5572:3:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":1177,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5604:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1178,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5635:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5635:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"5678:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5722:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5760:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1172,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"5442:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$638_$","typeString":"type(contract ISwapRouter)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":562,"src":"5442:34:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$562_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"5442:334:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$562_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$562_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"arguments":[{"id":1169,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5403:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1168,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"5391:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$638_$","typeString":"type(contract ISwapRouter)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5391:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$638","typeString":"contract ISwapRouter"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":571,"src":"5391:37:11","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$562_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5391:395:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1185,"nodeType":"ExpressionStatement","src":"5391:395:11"},{"assignments":[1187],"declarations":[{"constant":false,"id":1187,"mutability":"mutable","name":"balance","nameLocation":"5805:7:11","nodeType":"VariableDeclaration","scope":1201,"src":"5797:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5797:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1194,"initialValue":{"arguments":[{"id":1192,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5843:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1189,"name":"_tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"5822:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1188,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5815:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5815:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"5815:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5815:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5797:50:11"},{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1195,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5857:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"5869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1197,"name":"initialBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5879:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5869:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5857:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ExpressionStatement","src":"5857:36:11"}]},"functionSelector":"93316212","id":1202,"implemented":true,"kind":"function","modifiers":[{"id":1089,"kind":"modifierInvocation","modifierName":{"id":1088,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":664,"src":"4794:4:11"},"nodeType":"ModifierInvocation","src":"4794:4:11"}],"name":"swap","nameLocation":"4691:4:11","nodeType":"FunctionDefinition","overrides":{"id":1087,"nodeType":"OverrideSpecifier","overrides":[],"src":"4785:8:11"},"parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"_tokenIn","nameLocation":"4713:8:11","nodeType":"VariableDeclaration","scope":1202,"src":"4705:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"4705:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"_tokenOut","nameLocation":"4739:9:11","nodeType":"VariableDeclaration","scope":1202,"src":"4731:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"4731:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"_to","nameLocation":"4766:3:11","nodeType":"VariableDeclaration","scope":1202,"src":"4758:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"4758:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4695:80:11"},"returnParameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"amountOut","nameLocation":"4816:9:11","nodeType":"VariableDeclaration","scope":1202,"src":"4808:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4808:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4807:19:11"},"scope":1203,"src":"4682:1218:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1204,"src":"415:5487:11","usedErrors":[645]}],"src":"45:5858:11"}},"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol":{"id":12,"ast":{"absolutePath":"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol","exportedSymbols":{"IERC20":[1907],"IPriceFeedIntegration":[1924],"IUniswapV3Factory":[82],"IUniswapV3Pool":[104],"IUniswapV3PoolActions":[214],"IUniswapV3PoolDerivedState":[245],"IUniswapV3PoolEvents":[364],"IUniswapV3PoolImmutables":[404],"IUniswapV3PoolOwnerActions":[430],"IUniswapV3PoolState":[538],"PancakeswapV3PriceFeedIntegration":[1567]},"id":1568,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1205,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:12"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":1206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1568,"sourceUnit":83,"src":"71:69:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":1207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1568,"sourceUnit":105,"src":"141:66:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"../interfaces/IPriceFeedIntegration.sol","id":1208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1568,"sourceUnit":1925,"src":"208:49:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20.sol","file":"../interfaces/IERC20.sol","id":1209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1568,"sourceUnit":1908,"src":"258:34:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1210,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":1924,"src":"340:21:12"},"id":1211,"nodeType":"InheritanceSpecifier","src":"340:21:12"}],"canonicalName":"PancakeswapV3PriceFeedIntegration","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1567,"linearizedBaseContracts":[1567,1924],"name":"PancakeswapV3PriceFeedIntegration","nameLocation":"303:33:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1914],"constant":true,"functionSelector":"aaf5eb68","id":1215,"mutability":"constant","name":"PRECISION","nameLocation":"401:9:12","nodeType":"VariableDeclaration","overrides":{"id":1213,"nodeType":"OverrideSpecifier","overrides":[],"src":"392:8:12"},"scope":1567,"src":"368:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653330","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"value":"1e30"},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":1217,"mutability":"immutable","name":"factory","nameLocation":"448:7:12","nodeType":"VariableDeclaration","scope":1567,"src":"423:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"423:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"230ed44a","id":1225,"mutability":"mutable","name":"feeTiers","nameLocation":"477:8:12","nodeType":"VariableDeclaration","scope":1567,"src":"461:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[]"},"typeName":{"baseType":{"id":1218,"name":"uint24","nodeType":"ElementaryTypeName","src":"461:6:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":1219,"nodeType":"ArrayTypeName","src":"461:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"value":{"components":[{"hexValue":"313030","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"489:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"353030","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"494:3:12","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},{"hexValue":"32353030","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"499:4:12","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"},{"hexValue":"3130303030","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"505:5:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"}],"id":1224,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"488:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$4_memory_ptr","typeString":"uint16[4] memory"}},"visibility":"public"},{"body":{"id":1234,"nodeType":"Block","src":"548:35:12","statements":[{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1230,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"558:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1231,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"568:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"558:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1233,"nodeType":"ExpressionStatement","src":"558:18:12"}]},"id":1235,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"_factory","nameLocation":"538:8:12","nodeType":"VariableDeclaration","scope":1235,"src":"530:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"529:18:12"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"548:0:12"},"scope":1567,"src":"518:65:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1362,"nodeType":"Block","src":"717:3654:12","statements":[{"assignments":[1247],"declarations":[{"constant":false,"id":1247,"mutability":"mutable","name":"prod0","nameLocation":"1038:5:12","nodeType":"VariableDeclaration","scope":1362,"src":"1030:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1030:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1248,"nodeType":"VariableDeclarationStatement","src":"1030:13:12"},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"prod1","nameLocation":"1106:5:12","nodeType":"VariableDeclaration","scope":1362,"src":"1098:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1251,"nodeType":"VariableDeclarationStatement","src":"1098:13:12"},{"AST":{"nodeType":"YulBlock","src":"1174:141:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1188:30:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1205:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"1208:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1215:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1211:3:12"},"nodeType":"YulFunctionCall","src":"1211:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1198:6:12"},"nodeType":"YulFunctionCall","src":"1198:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1192:2:12","type":""}]},{"nodeType":"YulAssignment","src":"1231:18:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1244:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"1247:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1240:3:12"},"nodeType":"YulFunctionCall","src":"1240:9:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"1231:5:12"}]},{"nodeType":"YulAssignment","src":"1262:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1279:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"1283:5:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1275:3:12"},"nodeType":"YulFunctionCall","src":"1275:14:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1294:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"1298:5:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1291:2:12"},"nodeType":"YulFunctionCall","src":"1291:13:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1271:3:12"},"nodeType":"YulFunctionCall","src":"1271:34:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"1262:5:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1237,"isOffset":false,"isSlot":false,"src":"1205:1:12","valueSize":1},{"declaration":1237,"isOffset":false,"isSlot":false,"src":"1244:1:12","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"1208:1:12","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"1247:1:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"1231:5:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"1283:5:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"1298:5:12","valueSize":1},{"declaration":1250,"isOffset":false,"isSlot":false,"src":"1262:5:12","valueSize":1}],"id":1252,"nodeType":"InlineAssembly","src":"1165:150:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1387:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1387:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1266,"nodeType":"IfStatement","src":"1383:179:12","trueBody":{"id":1265,"nodeType":"Block","src":"1399:163:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1421:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1435:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1421:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1413:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1413:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"1413:24:12"},{"AST":{"nodeType":"YulBlock","src":"1460:65:12","statements":[{"nodeType":"YulAssignment","src":"1478:33:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"1492:5:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"1499:11:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1488:3:12"},"nodeType":"YulFunctionCall","src":"1488:23:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1478:6:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1241,"isOffset":false,"isSlot":false,"src":"1499:11:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"1492:5:12","valueSize":1},{"declaration":1244,"isOffset":false,"isSlot":false,"src":"1478:6:12","valueSize":1}],"id":1262,"nodeType":"InlineAssembly","src":"1451:74:12"},{"expression":{"id":1263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1545:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1245,"id":1264,"nodeType":"Return","src":"1538:13:12"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1675:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1269,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1689:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1675:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1667:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1667:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"ExpressionStatement","src":"1667:28:12"},{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"remainder","nameLocation":"1980:9:12","nodeType":"VariableDeclaration","scope":1362,"src":"1972:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1275,"nodeType":"VariableDeclarationStatement","src":"1972:17:12"},{"AST":{"nodeType":"YulBlock","src":"2008:62:12","statements":[{"nodeType":"YulAssignment","src":"2022:38:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2042:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"2045:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"2048:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2035:6:12"},"nodeType":"YulFunctionCall","src":"2035:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"2022:9:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1237,"isOffset":false,"isSlot":false,"src":"2042:1:12","valueSize":1},{"declaration":1239,"isOffset":false,"isSlot":false,"src":"2045:1:12","valueSize":1},{"declaration":1241,"isOffset":false,"isSlot":false,"src":"2048:11:12","valueSize":1},{"declaration":1274,"isOffset":false,"isSlot":false,"src":"2022:9:12","valueSize":1}],"id":1276,"nodeType":"InlineAssembly","src":"1999:71:12"},{"AST":{"nodeType":"YulBlock","src":"2143:108:12","statements":[{"nodeType":"YulAssignment","src":"2157:41:12","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"2170:5:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"2180:9:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"2191:5:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2177:2:12"},"nodeType":"YulFunctionCall","src":"2177:20:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2166:3:12"},"nodeType":"YulFunctionCall","src":"2166:32:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2157:5:12"}]},{"nodeType":"YulAssignment","src":"2211:30:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"2224:5:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"2231:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2220:3:12"},"nodeType":"YulFunctionCall","src":"2220:21:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2211:5:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1247,"isOffset":false,"isSlot":false,"src":"2191:5:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"2211:5:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"2224:5:12","valueSize":1},{"declaration":1250,"isOffset":false,"isSlot":false,"src":"2157:5:12","valueSize":1},{"declaration":1250,"isOffset":false,"isSlot":false,"src":"2170:5:12","valueSize":1},{"declaration":1274,"isOffset":false,"isSlot":false,"src":"2180:9:12","valueSize":1},{"declaration":1274,"isOffset":false,"isSlot":false,"src":"2231:9:12","valueSize":1}],"id":1277,"nodeType":"InlineAssembly","src":"2134:117:12"},{"assignments":[1279],"declarations":[{"constant":false,"id":1279,"mutability":"mutable","name":"twos","nameLocation":"2408:4:12","nodeType":"VariableDeclaration","scope":1362,"src":"2400:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"2415:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"2430:12:12","subExpression":{"id":1281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"2431:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2445:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2430:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2429:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2415:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2400:47:12"},{"AST":{"nodeType":"YulBlock","src":"2512:61:12","statements":[{"nodeType":"YulAssignment","src":"2526:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"2545:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"2558:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2541:3:12"},"nodeType":"YulFunctionCall","src":"2541:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"2526:11:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1241,"isOffset":false,"isSlot":false,"src":"2526:11:12","valueSize":1},{"declaration":1241,"isOffset":false,"isSlot":false,"src":"2545:11:12","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"2558:4:12","valueSize":1}],"id":1288,"nodeType":"InlineAssembly","src":"2503:70:12"},{"AST":{"nodeType":"YulBlock","src":"2646:49:12","statements":[{"nodeType":"YulAssignment","src":"2660:25:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"2673:5:12"},{"name":"twos","nodeType":"YulIdentifier","src":"2680:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2669:3:12"},"nodeType":"YulFunctionCall","src":"2669:16:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2660:5:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1247,"isOffset":false,"isSlot":false,"src":"2660:5:12","valueSize":1},{"declaration":1247,"isOffset":false,"isSlot":false,"src":"2673:5:12","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"2680:4:12","valueSize":1}],"id":1289,"nodeType":"InlineAssembly","src":"2637:58:12"},{"AST":{"nodeType":"YulBlock","src":"2883:63:12","statements":[{"nodeType":"YulAssignment","src":"2897:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2917:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"2920:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2913:3:12"},"nodeType":"YulFunctionCall","src":"2913:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"2927:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2909:3:12"},"nodeType":"YulFunctionCall","src":"2909:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"2934:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2905:3:12"},"nodeType":"YulFunctionCall","src":"2905:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"2897:4:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1279,"isOffset":false,"isSlot":false,"src":"2897:4:12","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"2920:4:12","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"2927:4:12","valueSize":1}],"id":1290,"nodeType":"InlineAssembly","src":"2874:72:12"},{"expression":{"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1291,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2955:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2964:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1293,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"2972:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2955:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1296,"nodeType":"ExpressionStatement","src":"2955:21:12"},{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"inv","nameLocation":"3318:3:12","nodeType":"VariableDeclaration","scope":1362,"src":"3310:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3325:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1300,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3329:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3325:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3324:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3344:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3324:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3310:35:12"},{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1306,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3560:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3567:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3571:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1309,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3585:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3571:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3567:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3560:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1313,"nodeType":"ExpressionStatement","src":"3560:28:12"},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1314,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3618:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3625:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3629:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1317,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3643:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3629:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3625:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3618:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1321,"nodeType":"ExpressionStatement","src":"3618:28:12"},{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1322,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3677:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3688:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1325,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3702:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3688:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3677:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ExpressionStatement","src":"3677:28:12"},{"expression":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3736:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3743:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3747:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1333,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3761:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3747:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3743:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3736:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ExpressionStatement","src":"3736:28:12"},{"expression":{"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1338,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3795:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3802:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3806:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1341,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3820:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3806:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3802:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3795:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1345,"nodeType":"ExpressionStatement","src":"3795:28:12"},{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1346,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3855:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3862:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3866:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1349,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3880:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3866:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3862:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3855:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"3855:28:12"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"4321:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4330:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1356,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4338:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4330:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4321:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1359,"nodeType":"ExpressionStatement","src":"4321:20:12"},{"expression":{"id":1360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"4358:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1245,"id":1361,"nodeType":"Return","src":"4351:13:12"}]},"id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"598:6:12","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"a","nameLocation":"622:1:12","nodeType":"VariableDeclaration","scope":1363,"src":"614:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"b","nameLocation":"641:1:12","nodeType":"VariableDeclaration","scope":1363,"src":"633:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"denominator","nameLocation":"660:11:12","nodeType":"VariableDeclaration","scope":1363,"src":"652:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"604:73:12"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"result","nameLocation":"709:6:12","nodeType":"VariableDeclaration","scope":1363,"src":"701:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"700:16:12"},"scope":1567,"src":"589:3782:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1923],"body":{"id":1565,"nodeType":"Block","src":"4505:1629:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4519:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1374,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4533:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4519:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1379,"nodeType":"IfStatement","src":"4515:72:12","trueBody":{"id":1378,"nodeType":"Block","src":"4546:41:12","statements":[{"expression":{"id":1376,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"4567:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1372,"id":1377,"nodeType":"Return","src":"4560:16:12"}]}},{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"length","nameLocation":"4605:6:12","nodeType":"VariableDeclaration","scope":1565,"src":"4597:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4597:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1384,"initialValue":{"expression":{"id":1382,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4614:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4614:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4597:32:12"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"_factory","nameLocation":"4657:8:12","nodeType":"VariableDeclaration","scope":1565,"src":"4639:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$82","typeString":"contract IUniswapV3Factory"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"IUniswapV3Factory","nodeType":"IdentifierPath","referencedDeclaration":82,"src":"4639:17:12"},"referencedDeclaration":82,"src":"4639:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$82","typeString":"contract IUniswapV3Factory"}},"visibility":"internal"}],"id":1391,"initialValue":{"arguments":[{"id":1389,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4686:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1388,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"4668:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$82_$","typeString":"type(contract IUniswapV3Factory)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4668:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$82","typeString":"contract IUniswapV3Factory"}},"nodeType":"VariableDeclarationStatement","src":"4639:55:12"},{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"bestLiquidity","nameLocation":"4712:13:12","nodeType":"VariableDeclaration","scope":1565,"src":"4704:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1394,"nodeType":"VariableDeclarationStatement","src":"4704:21:12"},{"assignments":[1396,1398],"declarations":[{"constant":false,"id":1396,"mutability":"mutable","name":"token0","nameLocation":"4744:6:12","nodeType":"VariableDeclaration","scope":1565,"src":"4736:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"4736:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"token1","nameLocation":"4760:6:12","nodeType":"VariableDeclaration","scope":1565,"src":"4752:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"4752:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1409,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4770:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1400,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4783:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4770:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":1405,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4850:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4863:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4849:25:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4770:104:12","trueExpression":{"components":[{"id":1402,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"4810:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1403,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"4822:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4809:25:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"4735:139:12"},{"body":{"id":1509,"nodeType":"Block","src":"4921:831:12","statements":[{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"poolAddress","nameLocation":"4943:11:12","nodeType":"VariableDeclaration","scope":1509,"src":"4935:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"4935:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1430,"initialValue":{"arguments":[{"id":1424,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"4974:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1425,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"4982:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1426,"name":"feeTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4990:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage","typeString":"uint24[] storage ref"}},"id":1428,"indexExpression":{"id":1427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4999:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4990:11:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":1422,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"4957:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$82","typeString":"contract IUniswapV3Factory"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":55,"src":"4957:16:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4957:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4935:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5020:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5043:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"5035:7:12","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5035:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5020:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1508,"nodeType":"IfStatement","src":"5016:726:12","trueBody":{"id":1507,"nodeType":"Block","src":"5047:695:12","statements":[{"assignments":[1439],"declarations":[{"constant":false,"id":1439,"mutability":"mutable","name":"pool","nameLocation":"5080:4:12","nodeType":"VariableDeclaration","scope":1507,"src":"5065:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$104","typeString":"contract IUniswapV3Pool"},"typeName":{"id":1438,"nodeType":"UserDefinedTypeName","pathNode":{"id":1437,"name":"IUniswapV3Pool","nodeType":"IdentifierPath","referencedDeclaration":104,"src":"5065:14:12"},"referencedDeclaration":104,"src":"5065:14:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$104","typeString":"contract IUniswapV3Pool"}},"visibility":"internal"}],"id":1443,"initialValue":{"arguments":[{"id":1441,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5102:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1440,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"5087:14:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$104_$","typeString":"type(contract IUniswapV3Pool)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5087:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$104","typeString":"contract IUniswapV3Pool"}},"nodeType":"VariableDeclarationStatement","src":"5065:49:12"},{"assignments":[1445],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"balance0","nameLocation":"5140:8:12","nodeType":"VariableDeclaration","scope":1507,"src":"5132:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5132:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"arguments":[{"id":1450,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5176:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1447,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"5158:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1446,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5151:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5151:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"5151:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5151:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5132:56:12"},{"assignments":[1454],"declarations":[{"constant":false,"id":1454,"mutability":"mutable","name":"balance1","nameLocation":"5214:8:12","nodeType":"VariableDeclaration","scope":1507,"src":"5206:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1461,"initialValue":{"arguments":[{"id":1459,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5250:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1456,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"5232:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1455,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5225:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5225:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"5225:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5225:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5206:56:12"},{"assignments":[1463,null,null,null,null,null,null],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"5289:12:12","nodeType":"VariableDeclaration","scope":1507,"src":"5281:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1462,"name":"uint160","nodeType":"ElementaryTypeName","src":"5281:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},null,null,null,null,null,null],"id":1467,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1464,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"5317:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$104","typeString":"contract IUniswapV3Pool"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slot0","nodeType":"MemberAccess","referencedDeclaration":451,"src":"5317:10:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$","typeString":"function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5317:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$","typeString":"tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"}},"nodeType":"VariableDeclarationStatement","src":"5280:49:12"},{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"price0","nameLocation":"5355:6:12","nodeType":"VariableDeclaration","scope":1507,"src":"5347:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"5347:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1482,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1473,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"5400:12:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5392:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"5392:7:12","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5392:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5417:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5392:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5440:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5471:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313932","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5476:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"5471:8:12","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}],"id":1470,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"5364:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5364:133:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5347:150:12"},{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"liquidity","nameLocation":"5523:9:12","nodeType":"VariableDeclaration","scope":1507,"src":"5515:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"5515:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1485,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5536:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1486,"name":"price0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"5547:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5536:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5535:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1489,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5557:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5535:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1491,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5569:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5535:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5515:62:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1494,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"5599:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1495,"name":"bestLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"5611:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5599:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"5595:133:12","trueBody":{"id":1505,"nodeType":"Block","src":"5626:102:12","statements":[{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1497,"name":"bestLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"5648:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1498,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"5664:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5648:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1500,"nodeType":"ExpressionStatement","src":"5648:25:12"},{"expression":{"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5695:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1502,"name":"price0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"5703:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5695:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1504,"nodeType":"ExpressionStatement","src":"5695:14:12"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4904:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1415,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"4908:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4904:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1510,"initializationExpression":{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"i","nameLocation":"4897:1:12","nodeType":"VariableDeclaration","scope":1510,"src":"4889:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"4889:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1413,"initialValue":{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4889:13:12"},"loopExpression":{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4916:3:12","subExpression":{"id":1417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4916:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"4916:3:12"},"nodeType":"ForStatement","src":"4884:868:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5766:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5775:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5766:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5780:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1515,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"5794:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5780:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5766:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1527,"nodeType":"IfStatement","src":"5762:95:12","trueBody":{"id":1526,"nodeType":"Block","src":"5802:55:12","statements":[{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1518,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5816:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1519,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5824:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5837:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5824:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1522,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"5841:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5824:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5816:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"5816:30:12"}]}},{"assignments":[1529],"declarations":[{"constant":false,"id":1529,"mutability":"mutable","name":"baseDecimals","nameLocation":"5875:12:12","nodeType":"VariableDeclaration","scope":1565,"src":"5867:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"5867:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1535,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1531,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5897:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1530,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5890:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5890:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"5890:27:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5890:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5867:52:12"},{"assignments":[1537],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"quoteDecimals","nameLocation":"5937:13:12","nodeType":"VariableDeclaration","scope":1565,"src":"5929:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5929:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1543,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1539,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5960:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1538,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5953:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1907_$","typeString":"type(contract IERC20)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1907","typeString":"contract IERC20"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"5953:28:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5953:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5929:54:12"},{"assignments":[1545],"declarations":[{"constant":false,"id":1545,"mutability":"mutable","name":"basePrec","nameLocation":"6001:8:12","nodeType":"VariableDeclaration","scope":1565,"src":"5993:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"5993:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6012:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1547,"name":"baseDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"6018:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6012:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5993:37:12"},{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"quotePrec","nameLocation":"6048:9:12","nodeType":"VariableDeclaration","scope":1565,"src":"6040:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6040:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6060:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1553,"name":"quoteDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"6066:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6040:39:12"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6089:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6098:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1558,"name":"basePrec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6106:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6098:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6097:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1561,"name":"quotePrec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"6118:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6097:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6089:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1564,"nodeType":"ExpressionStatement","src":"6089:38:12"}]},"functionSelector":"ac41865a","id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"4386:8:12","nodeType":"FunctionDefinition","overrides":{"id":1369,"nodeType":"OverrideSpecifier","overrides":[],"src":"4472:8:12"},"parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"_baseToken","nameLocation":"4412:10:12","nodeType":"VariableDeclaration","scope":1566,"src":"4404:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"4404:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"_quoteToken","nameLocation":"4440:11:12","nodeType":"VariableDeclaration","scope":1566,"src":"4432:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"4432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4394:63:12"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"price","nameLocation":"4498:5:12","nodeType":"VariableDeclaration","scope":1566,"src":"4490:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4490:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:15:12"},"scope":1567,"src":"4377:1757:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1568,"src":"294:5842:12","usedErrors":[]}],"src":"45:6092:12"}},"contracts/integrations/PythPriceFeedIntegration.sol":{"id":13,"ast":{"absolutePath":"contracts/integrations/PythPriceFeedIntegration.sol","exportedSymbols":{"IPriceFeedIntegration":[1924],"IPyth":[2125],"IPythEvents":[2140],"PythPriceFeedIntegration":[1777],"PythStructs":[2161],"PythUtils":[2247]},"id":1778,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1569,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:13"},{"absolutePath":"contracts/libraries/PythStructs.sol","file":"../libraries/PythStructs.sol","id":1570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":2162,"src":"71:38:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/PythUtils.sol","file":"../libraries/PythUtils.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":2248,"src":"110:36:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/IPyth.sol","file":"../interfaces/external/IPyth.sol","id":1572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":2126,"src":"147:42:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","file":"../interfaces/IPriceFeedIntegration.sol","id":1573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1778,"sourceUnit":1925,"src":"190:49:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1574,"name":"IPriceFeedIntegration","nodeType":"IdentifierPath","referencedDeclaration":1924,"src":"278:21:13"},"id":1575,"nodeType":"InheritanceSpecifier","src":"278:21:13"}],"canonicalName":"PythPriceFeedIntegration","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1777,"linearizedBaseContracts":[1777,1924],"name":"PythPriceFeedIntegration","nameLocation":"250:24:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1914],"constant":true,"functionSelector":"aaf5eb68","id":1579,"mutability":"constant","name":"PRECISION","nameLocation":"339:9:13","nodeType":"VariableDeclaration","overrides":{"id":1577,"nodeType":"OverrideSpecifier","overrides":[],"src":"330:8:13"},"scope":1777,"src":"306:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"351:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":true,"functionSelector":"2e0f2625","id":1582,"mutability":"constant","name":"DECIMALS","nameLocation":"383:8:13","nodeType":"VariableDeclaration","scope":1777,"src":"361:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1580,"name":"uint8","nodeType":"ElementaryTypeName","src":"361:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"394:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":false,"functionSelector":"481c6a75","id":1584,"mutability":"mutable","name":"manager","nameLocation":"417:7:13","nodeType":"VariableDeclaration","scope":1777,"src":"402:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"402:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"65f92bac","id":1586,"mutability":"mutable","name":"pythAddress","nameLocation":"445:11:13","nodeType":"VariableDeclaration","scope":1777,"src":"430:26:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"430:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":1590,"mutability":"mutable","name":"feeds","nameLocation":"490:5:13","nodeType":"VariableDeclaration","scope":1777,"src":"462:33:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":1589,"keyType":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"462:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueType":{"id":1588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"481:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"},{"anonymous":false,"eventSelector":"54a6385aa0292b04e1ef8513253c17d1863f7cdfc87029d77fd55cc4c2e717e2","id":1594,"name":"SetManager","nameLocation":"508:10:13","nodeType":"EventDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"indexed":false,"mutability":"mutable","name":"manager","nameLocation":"527:7:13","nodeType":"VariableDeclaration","scope":1594,"src":"519:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:17:13"},"src":"502:34:13"},{"anonymous":false,"eventSelector":"931a8c555eae21c9b81a0611e2fa25e870b9c8a01c76a40eaa4cd436962ac630","id":1598,"name":"SetPythAddress","nameLocation":"547:14:13","nodeType":"EventDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"indexed":false,"mutability":"mutable","name":"pyth","nameLocation":"570:4:13","nodeType":"VariableDeclaration","scope":1598,"src":"562:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"561:14:13"},"src":"541:35:13"},{"anonymous":false,"eventSelector":"7b0054713deba93ed9e8fbce5dbacc9302b9a3d414f82ed07de1619b907fd0de","id":1604,"name":"SetPriceFeed","nameLocation":"587:12:13","nodeType":"EventDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"608:5:13","nodeType":"VariableDeclaration","scope":1604,"src":"600:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"indexed":false,"mutability":"mutable","name":"feed","nameLocation":"623:4:13","nodeType":"VariableDeclaration","scope":1604,"src":"615:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"615:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"599:29:13"},"src":"581:48:13"},{"errorSelector":"a59d7f4d","id":1608,"name":"Forbidden","nameLocation":"641:9:13","nodeType":"ErrorDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"sender","nameLocation":"659:6:13","nodeType":"VariableDeclaration","scope":1608,"src":"651:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:16:13"},"src":"635:32:13"},{"errorSelector":"6787b555","id":1612,"name":"InvalidFeed","nameLocation":"678:11:13","nodeType":"ErrorDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"token","nameLocation":"698:5:13","nodeType":"VariableDeclaration","scope":1612,"src":"690:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"689:15:13"},"src":"672:33:13"},{"body":{"id":1626,"nodeType":"Block","src":"745:73:13","statements":[{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1617,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"755:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1618,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"765:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"765:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"755:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1621,"nodeType":"ExpressionStatement","src":"755:20:13"},{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1622,"name":"pythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"785:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1623,"name":"_pythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"799:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"785:26:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1625,"nodeType":"ExpressionStatement","src":"785:26:13"}]},"id":1627,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"_pythAddress","nameLocation":"731:12:13","nodeType":"VariableDeclaration","scope":1627,"src":"723:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:22:13"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"745:0:13"},"scope":1777,"src":"711:107:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1640,"nodeType":"Block","src":"847:83:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"861:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"861:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1631,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"875:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"861:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1638,"nodeType":"IfStatement","src":"857:55:13","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"901:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"901:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1633,"name":"Forbidden","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"891:9:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"891:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"RevertStatement","src":"884:28:13"}},{"id":1639,"nodeType":"PlaceholderStatement","src":"922:1:13"}]},"id":1641,"name":"onlyManager","nameLocation":"833:11:13","nodeType":"ModifierDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"844:2:13"},"src":"824:106:13","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"995:71:13","statements":[{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"1005:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1649,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1015:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1005:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1651,"nodeType":"ExpressionStatement","src":"1005:18:13"},{"eventCall":{"arguments":[{"id":1653,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1050:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1652,"name":"SetManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1039:10:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1039:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"EmitStatement","src":"1034:25:13"}]},"functionSelector":"d0ebdbe7","id":1657,"implemented":true,"kind":"function","modifiers":[{"id":1646,"kind":"modifierInvocation","modifierName":{"id":1645,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"983:11:13"},"nodeType":"ModifierInvocation","src":"983:11:13"}],"name":"setManager","nameLocation":"945:10:13","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"_manager","nameLocation":"964:8:13","nodeType":"VariableDeclaration","scope":1657,"src":"956:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"955:18:13"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"995:0:13"},"scope":1777,"src":"936:130:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1672,"nodeType":"Block","src":"1139:87:13","statements":[{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1664,"name":"pythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"1149:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1665,"name":"_pythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1163:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1149:26:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1667,"nodeType":"ExpressionStatement","src":"1149:26:13"},{"eventCall":{"arguments":[{"id":1669,"name":"_pythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1206:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1668,"name":"SetPythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1191:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1191:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1671,"nodeType":"EmitStatement","src":"1186:33:13"}]},"functionSelector":"1dc381cb","id":1673,"implemented":true,"kind":"function","modifiers":[{"id":1662,"kind":"modifierInvocation","modifierName":{"id":1661,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"1127:11:13"},"nodeType":"ModifierInvocation","src":"1127:11:13"}],"name":"setPythAddress","nameLocation":"1081:14:13","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"_pythAddress","nameLocation":"1104:12:13","nodeType":"VariableDeclaration","scope":1673,"src":"1096:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1095:22:13"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"1139:0:13"},"scope":1777,"src":"1072:154:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1693,"nodeType":"Block","src":"1306:81:13","statements":[{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1682,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1316:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":1684,"indexExpression":{"id":1683,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1322:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1316:13:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1685,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1332:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1316:21:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1687,"nodeType":"ExpressionStatement","src":"1316:21:13"},{"eventCall":{"arguments":[{"id":1689,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1366:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"_feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1374:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1688,"name":"SetPriceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1353:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1353:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"EmitStatement","src":"1348:32:13"}]},"functionSelector":"adcb085a","id":1694,"implemented":true,"kind":"function","modifiers":[{"id":1680,"kind":"modifierInvocation","modifierName":{"id":1679,"name":"onlyManager","nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"1294:11:13"},"nodeType":"ModifierInvocation","src":"1294:11:13"}],"name":"setPriceFeed","nameLocation":"1241:12:13","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"_token","nameLocation":"1262:6:13","nodeType":"VariableDeclaration","scope":1694,"src":"1254:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"1254:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"_feed","nameLocation":"1278:5:13","nodeType":"VariableDeclaration","scope":1694,"src":"1270:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1270:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:31:13"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"1306:0:13"},"scope":1777,"src":"1232:155:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1738,"nodeType":"Block","src":"1463:359:13","statements":[{"assignments":[1702],"declarations":[{"constant":false,"id":1702,"mutability":"mutable","name":"feed","nameLocation":"1481:4:13","nodeType":"VariableDeclaration","scope":1738,"src":"1473:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1473:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1706,"initialValue":{"baseExpression":{"id":1703,"name":"feeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1488:5:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":1705,"indexExpression":{"id":1704,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1494:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1488:13:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1473:28:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"1515:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1531:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1523:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1523:7:13","typeDescriptions":{}}},"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1523:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1515:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1737,"nodeType":"IfStatement","src":"1511:305:13","trueBody":{"id":1736,"nodeType":"Block","src":"1535:281:13","statements":[{"assignments":[1717],"declarations":[{"constant":false,"id":1717,"mutability":"mutable","name":"pythPrice","nameLocation":"1574:9:13","nodeType":"VariableDeclaration","scope":1736,"src":"1549:34:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":1716,"nodeType":"UserDefinedTypeName","pathNode":{"id":1715,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1549:17:13"},"referencedDeclaration":2151,"src":"1549:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":1724,"initialValue":{"arguments":[{"id":1722,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"1637:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":1719,"name":"pythAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"1592:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1718,"name":"IPyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1586:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPyth_$2125_$","typeString":"type(contract IPyth)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1586:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$2125","typeString":"contract IPyth"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":2028,"src":"1586:33:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$2151_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1586:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"1549:106:13"},{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1725,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1669:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1728,"name":"pythPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"1718:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2144,"src":"1718:15:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"id":1730,"name":"pythPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"1751:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"expo","nodeType":"MemberAccess","referencedDeclaration":2148,"src":"1751:14:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},{"id":1732,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"1783:8:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int32","typeString":"int32"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1726,"name":"PythUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1677:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PythUtils_$2247_$","typeString":"type(library PythUtils)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"convertToUint","nodeType":"MemberAccess","referencedDeclaration":2246,"src":"1677:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int64_$_t_int32_$_t_uint8_$returns$_t_uint256_$","typeString":"function (int64,int32,uint8) pure returns (uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1677:128:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1669:136:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ExpressionStatement","src":"1669:136:13"}]}}]},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_price","nameLocation":"1402:6:13","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"_token","nameLocation":"1417:6:13","nodeType":"VariableDeclaration","scope":1739,"src":"1409:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1408:16:13"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"price","nameLocation":"1456:5:13","nodeType":"VariableDeclaration","scope":1739,"src":"1448:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1447:15:13"},"scope":1777,"src":"1393:429:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1923],"body":{"id":1775,"nodeType":"Block","src":"1956:207:13","statements":[{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"quotePrice","nameLocation":"1974:10:13","nodeType":"VariableDeclaration","scope":1775,"src":"1966:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1754,"initialValue":{"arguments":[{"id":1752,"name":"_quoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"1994:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1751,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"1987:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1987:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1966:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1755,"name":"quotePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2020:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2033:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2020:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1774,"nodeType":"IfStatement","src":"2016:141:13","trueBody":{"id":1773,"nodeType":"Block","src":"2036:121:13","statements":[{"assignments":[1759],"declarations":[{"constant":false,"id":1759,"mutability":"mutable","name":"basePrice","nameLocation":"2058:9:13","nodeType":"VariableDeclaration","scope":1773,"src":"2050:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2050:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1763,"initialValue":{"arguments":[{"id":1761,"name":"_baseToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2077:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1760,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2070:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2070:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2050:38:13"},{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"2102:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2111:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1766,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"2123:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2111:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1769,"name":"quotePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2136:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2110:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2102:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1772,"nodeType":"ExpressionStatement","src":"2102:44:13"}]}}]},"functionSelector":"ac41865a","id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"1837:8:13","nodeType":"FunctionDefinition","overrides":{"id":1745,"nodeType":"OverrideSpecifier","overrides":[],"src":"1923:8:13"},"parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"_baseToken","nameLocation":"1863:10:13","nodeType":"VariableDeclaration","scope":1776,"src":"1855:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"_quoteToken","nameLocation":"1891:11:13","nodeType":"VariableDeclaration","scope":1776,"src":"1883:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"1883:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1845:63:13"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"price","nameLocation":"1949:5:13","nodeType":"VariableDeclaration","scope":1776,"src":"1941:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1940:15:13"},"scope":1777,"src":"1828:335:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1778,"src":"241:1924:13","usedErrors":[1608,1612]}],"src":"45:2121:13"}},"contracts/interfaces/IDEXIntegration.sol":{"id":14,"ast":{"absolutePath":"contracts/interfaces/IDEXIntegration.sol","exportedSymbols":{"IDEXIntegration":[1822]},"id":1823,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1779,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IDEXIntegration","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1822,"linearizedBaseContracts":[1822],"name":"IDEXIntegration","nameLocation":"81:15:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b88c5f91","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"validatePair","nameLocation":"112:12:14","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"_tokenIn","nameLocation":"142:8:14","nodeType":"VariableDeclaration","scope":1788,"src":"134:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"134:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"_tokenOut","nameLocation":"168:9:14","nodeType":"VariableDeclaration","scope":1788,"src":"160:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"160:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124:59:14"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"207:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"207:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"206:6:14"},"scope":1822,"src":"103:110:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":1799,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"228:12:14","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"_tokenIn","nameLocation":"258:8:14","nodeType":"VariableDeclaration","scope":1799,"src":"250:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"_tokenOut","nameLocation":"284:9:14","nodeType":"VariableDeclaration","scope":1799,"src":"276:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"276:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"_amountIn","nameLocation":"311:9:14","nodeType":"VariableDeclaration","scope":1799,"src":"303:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:86:14"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"350:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:9:14"},"scope":1822,"src":"219:140:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"53b609b5","id":1810,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"374:11:14","nodeType":"FunctionDefinition","parameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"_tokenIn","nameLocation":"403:8:14","nodeType":"VariableDeclaration","scope":1810,"src":"395:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"_tokenOut","nameLocation":"429:9:14","nodeType":"VariableDeclaration","scope":1810,"src":"421:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"_amountOut","nameLocation":"456:10:14","nodeType":"VariableDeclaration","scope":1810,"src":"448:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"385:87:14"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"496:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"495:9:14"},"scope":1822,"src":"365:140:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"93316212","id":1821,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"520:4:14","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"_tokenIn","nameLocation":"542:8:14","nodeType":"VariableDeclaration","scope":1821,"src":"534:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"_tokenOut","nameLocation":"568:9:14","nodeType":"VariableDeclaration","scope":1821,"src":"560:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"560:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"_to","nameLocation":"595:3:14","nodeType":"VariableDeclaration","scope":1821,"src":"587:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"524:80:14"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1821,"src":"623:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:9:14"},"scope":1822,"src":"511:121:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1823,"src":"71:563:14","usedErrors":[]}],"src":"45:590:14"}},"contracts/interfaces/IERC20.sol":{"id":15,"ast":{"absolutePath":"contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1907]},"id":1908,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1824,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1907,"linearizedBaseContracts":[1907],"name":"IERC20","nameLocation":"81:6:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":1829,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"103:4:15","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"107:2:15"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"133:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1826,"name":"string","nodeType":"ElementaryTypeName","src":"133:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"132:15:15"},"scope":1907,"src":"94:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":1834,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"163:6:15","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"169:2:15"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"195:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"195:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"194:15:15"},"scope":1907,"src":"154:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1839,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"225:8:15","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[],"src":"233:2:15"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"259:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1836,"name":"uint8","nodeType":"ElementaryTypeName","src":"259:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"258:7:15"},"scope":1907,"src":"216:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":1844,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"281:11:15","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"292:2:15"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"318:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"318:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:9:15"},"scope":1907,"src":"272:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1851,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"342:9:15","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"352:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"351:9:15"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"384:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"383:9:15"},"scope":1907,"src":"333:60:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":1860,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"408:9:15","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"_owner","nameLocation":"435:6:15","nodeType":"VariableDeclaration","scope":1860,"src":"427:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"_spender","nameLocation":"459:8:15","nodeType":"VariableDeclaration","scope":1860,"src":"451:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"417:56:15"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"497:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:15"},"scope":1907,"src":"399:107:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":1869,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"521:7:15","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"_spender","nameLocation":"537:8:15","nodeType":"VariableDeclaration","scope":1869,"src":"529:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"_value","nameLocation":"555:6:15","nodeType":"VariableDeclaration","scope":1869,"src":"547:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:34:15"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"581:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1866,"name":"bool","nodeType":"ElementaryTypeName","src":"581:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"580:6:15"},"scope":1907,"src":"512:75:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1878,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"602:8:15","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"_to","nameLocation":"619:3:15","nodeType":"VariableDeclaration","scope":1878,"src":"611:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"_value","nameLocation":"632:6:15","nodeType":"VariableDeclaration","scope":1878,"src":"624:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:29:15"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1878,"src":"658:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1875,"name":"bool","nodeType":"ElementaryTypeName","src":"658:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"657:6:15"},"scope":1907,"src":"593:71:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":1889,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"679:12:15","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"_from","nameLocation":"709:5:15","nodeType":"VariableDeclaration","scope":1889,"src":"701:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"_to","nameLocation":"732:3:15","nodeType":"VariableDeclaration","scope":1889,"src":"724:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"_value","nameLocation":"753:6:15","nodeType":"VariableDeclaration","scope":1889,"src":"745:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:74:15"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"784:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1886,"name":"bool","nodeType":"ElementaryTypeName","src":"784:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"783:6:15"},"scope":1907,"src":"670:120:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":1906,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"805:6:15","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"_owner","nameLocation":"829:6:15","nodeType":"VariableDeclaration","scope":1906,"src":"821:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"_spender","nameLocation":"853:8:15","nodeType":"VariableDeclaration","scope":1906,"src":"845:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"_value","nameLocation":"879:6:15","nodeType":"VariableDeclaration","scope":1906,"src":"871:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"_deadline","nameLocation":"903:9:15","nodeType":"VariableDeclaration","scope":1906,"src":"895:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"_v","nameLocation":"928:2:15","nodeType":"VariableDeclaration","scope":1906,"src":"922:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1898,"name":"uint8","nodeType":"ElementaryTypeName","src":"922:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"_r","nameLocation":"948:2:15","nodeType":"VariableDeclaration","scope":1906,"src":"940:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"940:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"_s","nameLocation":"968:2:15","nodeType":"VariableDeclaration","scope":1906,"src":"960:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"960:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"811:165:15"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"985:0:15"},"scope":1907,"src":"796:190:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1908,"src":"71:917:15","usedErrors":[]}],"src":"45:944:15"}},"contracts/interfaces/IPriceFeedIntegration.sol":{"id":16,"ast":{"absolutePath":"contracts/interfaces/IPriceFeedIntegration.sol","exportedSymbols":{"IPriceFeedIntegration":[1924]},"id":1925,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1909,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceFeedIntegration","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1924,"linearizedBaseContracts":[1924],"name":"IPriceFeedIntegration","nameLocation":"81:21:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"aaf5eb68","id":1914,"implemented":false,"kind":"function","modifiers":[],"name":"PRECISION","nameLocation":"118:9:16","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"127:2:16"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"153:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"152:9:16"},"scope":1924,"src":"109:53:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ac41865a","id":1923,"implemented":false,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"181:8:16","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"_baseToken","nameLocation":"207:10:16","nodeType":"VariableDeclaration","scope":1923,"src":"199:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"_quoteToken","nameLocation":"235:11:16","nodeType":"VariableDeclaration","scope":1923,"src":"227:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"189:63:16"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"276:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"275:9:16"},"scope":1924,"src":"172:113:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1925,"src":"71:216:16","usedErrors":[]}],"src":"45:243:16"}},"contracts/interfaces/IUniswapV3StaticQuoter.sol":{"id":17,"ast":{"absolutePath":"contracts/interfaces/IUniswapV3StaticQuoter.sol","exportedSymbols":{"IUniswapV3StaticQuoter":[1988]},"id":1989,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1926,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:17"},{"id":1927,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3StaticQuoter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1988,"linearizedBaseContracts":[1988],"name":"IUniswapV3StaticQuoter","nameLocation":"101:22:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"130:319:17","text":"@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"},"functionSelector":"cdca1753","id":1937,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactInput","nameLocation":"463:15:17","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"path","nameLocation":"501:4:17","nodeType":"VariableDeclaration","scope":1937,"src":"488:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"488:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"amountIn","nameLocation":"523:8:17","nodeType":"VariableDeclaration","scope":1937,"src":"515:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:59:17"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"amountOut","nameLocation":"569:9:17","nodeType":"VariableDeclaration","scope":1937,"src":"561:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"560:19:17"},"scope":1988,"src":"454:126:17","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IUniswapV3StaticQuoter.QuoteExactInputSingleParams","id":1948,"members":[{"constant":false,"id":1939,"mutability":"mutable","name":"tokenIn","nameLocation":"639:7:17","nodeType":"VariableDeclaration","scope":1948,"src":"631:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"tokenOut","nameLocation":"664:8:17","nodeType":"VariableDeclaration","scope":1948,"src":"656:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"amountIn","nameLocation":"690:8:17","nodeType":"VariableDeclaration","scope":1948,"src":"682:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"fee","nameLocation":"715:3:17","nodeType":"VariableDeclaration","scope":1948,"src":"708:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1944,"name":"uint24","nodeType":"ElementaryTypeName","src":"708:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"736:17:17","nodeType":"VariableDeclaration","scope":1948,"src":"728:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1946,"name":"uint160","nodeType":"ElementaryTypeName","src":"728:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"QuoteExactInputSingleParams","nameLocation":"593:27:17","nodeType":"StructDefinition","scope":1988,"src":"586:174:17","visibility":"public"},{"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"766:545:17","text":"@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountIn The desired input amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"},"functionSelector":"c6a5026a","id":1957,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactInputSingle","nameLocation":"1325:21:17","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"params","nameLocation":"1391:6:17","nodeType":"VariableDeclaration","scope":1957,"src":"1356:41:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1948_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams"},"typeName":{"id":1951,"nodeType":"UserDefinedTypeName","pathNode":{"id":1950,"name":"QuoteExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":1948,"src":"1356:27:17"},"referencedDeclaration":1948,"src":"1356:27:17","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactInputSingleParams_$1948_storage_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams"}},"visibility":"internal"}],"src":"1346:57:17"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"amountOut","nameLocation":"1435:9:17","nodeType":"VariableDeclaration","scope":1957,"src":"1427:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1426:19:17"},"scope":1988,"src":"1316:130:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"1452:317:17","text":"@notice Returns the amount in needed for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountOut The amount of the last token that would be received\n @return amountIn The amount of the first token to swap"},"functionSelector":"2f80bb1d","id":1967,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactOutput","nameLocation":"1783:16:17","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"path","nameLocation":"1822:4:17","nodeType":"VariableDeclaration","scope":1967,"src":"1809:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1959,"name":"bytes","nodeType":"ElementaryTypeName","src":"1809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"amountOut","nameLocation":"1844:9:17","nodeType":"VariableDeclaration","scope":1967,"src":"1836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1799:60:17"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"amountIn","nameLocation":"1891:8:17","nodeType":"VariableDeclaration","scope":1967,"src":"1883:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1882:18:17"},"scope":1988,"src":"1774:127:17","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams","id":1978,"members":[{"constant":false,"id":1969,"mutability":"mutable","name":"tokenIn","nameLocation":"1961:7:17","nodeType":"VariableDeclaration","scope":1978,"src":"1953:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"tokenOut","nameLocation":"1986:8:17","nodeType":"VariableDeclaration","scope":1978,"src":"1978:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"amount","nameLocation":"2012:6:17","nodeType":"VariableDeclaration","scope":1978,"src":"2004:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2004:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"fee","nameLocation":"2035:3:17","nodeType":"VariableDeclaration","scope":1978,"src":"2028:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1974,"name":"uint24","nodeType":"ElementaryTypeName","src":"2028:6:17","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"2056:17:17","nodeType":"VariableDeclaration","scope":1978,"src":"2048:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1976,"name":"uint160","nodeType":"ElementaryTypeName","src":"2048:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"QuoteExactOutputSingleParams","nameLocation":"1914:28:17","nodeType":"StructDefinition","scope":1988,"src":"1907:173:17","visibility":"public"},{"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"2086:542:17","text":"@notice Returns the amount in needed for a given exact output but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountOut The desired output amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount of `tokenIn` that would be needed"},"functionSelector":"bd21704a","id":1987,"implemented":false,"kind":"function","modifiers":[],"name":"quoteExactOutputSingle","nameLocation":"2642:22:17","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"params","nameLocation":"2710:6:17","nodeType":"VariableDeclaration","scope":1987,"src":"2674:42:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1978_memory_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"QuoteExactOutputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":1978,"src":"2674:28:17"},"referencedDeclaration":1978,"src":"2674:28:17","typeDescriptions":{"typeIdentifier":"t_struct$_QuoteExactOutputSingleParams_$1978_storage_ptr","typeString":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams"}},"visibility":"internal"}],"src":"2664:58:17"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"amountIn","nameLocation":"2754:8:17","nodeType":"VariableDeclaration","scope":1987,"src":"2746:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2745:18:17"},"scope":1988,"src":"2633:131:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1989,"src":"91:2675:17","usedErrors":[]}],"src":"45:2721:17"}},"contracts/interfaces/external/IPyth.sol":{"id":18,"ast":{"absolutePath":"contracts/interfaces/external/IPyth.sol","exportedSymbols":{"IPyth":[2125],"IPythEvents":[2140],"PythStructs":[2161]},"id":2126,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1990,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"39:24:18"},{"absolutePath":"contracts/libraries/PythStructs.sol","file":"../../libraries/PythStructs.sol","id":1991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":2162,"src":"65:41:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/external/IPythEvents.sol","file":"./IPythEvents.sol","id":1992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2126,"sourceUnit":2141,"src":"107:27:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1994,"name":"IPythEvents","nodeType":"IdentifierPath","referencedDeclaration":2140,"src":"412:11:18"},"id":1995,"nodeType":"InheritanceSpecifier","src":"412:11:18"}],"canonicalName":"IPyth","contractDependencies":[],"contractKind":"interface","documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"136:257:18","text":"@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"},"fullyImplemented":false,"id":2125,"linearizedBaseContracts":[2125,2140],"name":"IPyth","nameLocation":"403:5:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"430:104:18","text":"@notice Returns the period (in seconds) that a price feed is considered valid since its publish time"},"functionSelector":"e18910a3","id":2001,"implemented":false,"kind":"function","modifiers":[],"name":"getValidTimePeriod","nameLocation":"548:18:18","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"566:2:18"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"validTimePeriod","nameLocation":"597:15:18","nodeType":"VariableDeclaration","scope":2001,"src":"592:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint","nodeType":"ElementaryTypeName","src":"592:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:22:18"},"scope":2125,"src":"539:75:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"620:364:18","text":"@notice Returns the price and confidence interval.\n @dev Reverts if the price has not been updated within the last `getValidTimePeriod()` seconds.\n @param id The Pyth Price Feed ID of which to fetch the price and confidence interval.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"31d98b3f","id":2010,"implemented":false,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"998:8:18","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"id","nameLocation":"1024:2:18","nodeType":"VariableDeclaration","scope":2010,"src":"1016:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1016:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1006:26:18"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"price","nameLocation":"1081:5:18","nodeType":"VariableDeclaration","scope":2010,"src":"1056:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2007,"nodeType":"UserDefinedTypeName","pathNode":{"id":2006,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1056:17:18"},"referencedDeclaration":2151,"src":"1056:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1055:32:18"},"scope":2125,"src":"989:99:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"1094:359:18","text":"@notice Returns the exponentially-weighted moving average price and confidence interval.\n @dev Reverts if the EMA price is not available.\n @param id The Pyth Price Feed ID of which to fetch the EMA price and confidence interval.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"b5dcc911","id":2019,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPrice","nameLocation":"1467:11:18","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"id","nameLocation":"1496:2:18","nodeType":"VariableDeclaration","scope":2019,"src":"1488:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1488:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1478:26:18"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"price","nameLocation":"1553:5:18","nodeType":"VariableDeclaration","scope":2019,"src":"1528:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2016,"nodeType":"UserDefinedTypeName","pathNode":{"id":2015,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1528:17:18"},"referencedDeclaration":2151,"src":"1528:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1527:32:18"},"scope":2125,"src":"1458:102:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"1566:690:18","text":"@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getPrice` or `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"96834ad3","id":2028,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceUnsafe","nameLocation":"2270:14:18","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"id","nameLocation":"2302:2:18","nodeType":"VariableDeclaration","scope":2028,"src":"2294:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:26:18"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"price","nameLocation":"2359:5:18","nodeType":"VariableDeclaration","scope":2028,"src":"2334:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2025,"nodeType":"UserDefinedTypeName","pathNode":{"id":2024,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"2334:17:18"},"referencedDeclaration":2151,"src":"2334:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2333:32:18"},"scope":2125,"src":"2261:105:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"2372:423:18","text":"@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"a4ae35e0","id":2039,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceNoOlderThan","nameLocation":"2809:19:18","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"id","nameLocation":"2846:2:18","nodeType":"VariableDeclaration","scope":2039,"src":"2838:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2838:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"age","nameLocation":"2863:3:18","nodeType":"VariableDeclaration","scope":2039,"src":"2858:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint","nodeType":"ElementaryTypeName","src":"2858:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2828:44:18"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"price","nameLocation":"2921:5:18","nodeType":"VariableDeclaration","scope":2039,"src":"2896:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2036,"nodeType":"UserDefinedTypeName","pathNode":{"id":2035,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"2896:17:18"},"referencedDeclaration":2151,"src":"2896:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2895:32:18"},"scope":2125,"src":"2800:128:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"2934:925:18","text":"@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"9474f45b","id":2048,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceUnsafe","nameLocation":"3873:17:18","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"id","nameLocation":"3908:2:18","nodeType":"VariableDeclaration","scope":2048,"src":"3900:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3900:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3890:26:18"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"price","nameLocation":"3965:5:18","nodeType":"VariableDeclaration","scope":2048,"src":"3940:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2045,"nodeType":"UserDefinedTypeName","pathNode":{"id":2044,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"3940:17:18"},"referencedDeclaration":2151,"src":"3940:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"3939:32:18"},"scope":2125,"src":"3864:108:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"3978:472:18","text":"@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"711a2e28","id":2059,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceNoOlderThan","nameLocation":"4464:22:18","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"id","nameLocation":"4504:2:18","nodeType":"VariableDeclaration","scope":2059,"src":"4496:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4496:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"age","nameLocation":"4521:3:18","nodeType":"VariableDeclaration","scope":2059,"src":"4516:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint","nodeType":"ElementaryTypeName","src":"4516:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4486:44:18"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"price","nameLocation":"4579:5:18","nodeType":"VariableDeclaration","scope":2059,"src":"4554:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2056,"nodeType":"UserDefinedTypeName","pathNode":{"id":2055,"name":"PythStructs.Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"4554:17:18"},"referencedDeclaration":2151,"src":"4554:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"4553:32:18"},"scope":2125,"src":"4455:131:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"4592:535:18","text":"@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."},"functionSelector":"ef9e5e28","id":2066,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeeds","nameLocation":"5141:16:18","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"updateData","nameLocation":"5175:10:18","nodeType":"VariableDeclaration","scope":2066,"src":"5158:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2061,"name":"bytes","nodeType":"ElementaryTypeName","src":"5158:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2062,"nodeType":"ArrayTypeName","src":"5158:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5157:29:18"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"5203:0:18"},"scope":2125,"src":"5132:72:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"5210:1299:18","text":"@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"},"functionSelector":"b9256d28","id":2079,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeedsIfNecessary","nameLocation":"6523:27:18","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"updateData","nameLocation":"6577:10:18","nodeType":"VariableDeclaration","scope":2079,"src":"6560:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2068,"name":"bytes","nodeType":"ElementaryTypeName","src":"6560:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2069,"nodeType":"ArrayTypeName","src":"6560:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"priceIds","nameLocation":"6616:8:18","nodeType":"VariableDeclaration","scope":2079,"src":"6597:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6597:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2072,"nodeType":"ArrayTypeName","src":"6597:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"publishTimes","nameLocation":"6652:12:18","nodeType":"VariableDeclaration","scope":2079,"src":"6634:30:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":2074,"name":"uint64","nodeType":"ElementaryTypeName","src":"6634:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2075,"nodeType":"ArrayTypeName","src":"6634:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"6550:120:18"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"6687:0:18"},"scope":2125,"src":"6514:174:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"6694:178:18","text":"@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"d47eed45","id":2088,"implemented":false,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"6886:12:18","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"updateData","nameLocation":"6925:10:18","nodeType":"VariableDeclaration","scope":2088,"src":"6908:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"6908:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2082,"nodeType":"ArrayTypeName","src":"6908:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6898:43:18"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"feeAmount","nameLocation":"6970:9:18","nodeType":"VariableDeclaration","scope":2088,"src":"6965:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint","nodeType":"ElementaryTypeName","src":"6965:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6964:16:18"},"scope":2125,"src":"6877:104:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"6987:1213:18","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"4716e9c5","id":2106,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdates","nameLocation":"8214:21:18","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"updateData","nameLocation":"8262:10:18","nodeType":"VariableDeclaration","scope":2106,"src":"8245:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2090,"name":"bytes","nodeType":"ElementaryTypeName","src":"8245:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2091,"nodeType":"ArrayTypeName","src":"8245:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"priceIds","nameLocation":"8301:8:18","nodeType":"VariableDeclaration","scope":2106,"src":"8282:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8282:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2094,"nodeType":"ArrayTypeName","src":"8282:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"minPublishTime","nameLocation":"8326:14:18","nodeType":"VariableDeclaration","scope":2106,"src":"8319:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2096,"name":"uint64","nodeType":"ElementaryTypeName","src":"8319:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"maxPublishTime","nameLocation":"8357:14:18","nodeType":"VariableDeclaration","scope":2106,"src":"8350:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2098,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8235:142:18"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"priceFeeds","nameLocation":"8435:10:18","nodeType":"VariableDeclaration","scope":2106,"src":"8404:41:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$2160_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":2102,"nodeType":"UserDefinedTypeName","pathNode":{"id":2101,"name":"PythStructs.PriceFeed","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"8404:21:18"},"referencedDeclaration":2160,"src":"8404:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2160_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":2103,"nodeType":"ArrayTypeName","src":"8404:23:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$2160_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"8403:43:18"},"scope":2125,"src":"8205:242:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"8453:972:18","text":"@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"accca7f9","id":2124,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesUnique","nameLocation":"9439:27:18","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"updateData","nameLocation":"9493:10:18","nodeType":"VariableDeclaration","scope":2124,"src":"9476:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2108,"name":"bytes","nodeType":"ElementaryTypeName","src":"9476:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2109,"nodeType":"ArrayTypeName","src":"9476:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"priceIds","nameLocation":"9532:8:18","nodeType":"VariableDeclaration","scope":2124,"src":"9513:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9513:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2112,"nodeType":"ArrayTypeName","src":"9513:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"minPublishTime","nameLocation":"9557:14:18","nodeType":"VariableDeclaration","scope":2124,"src":"9550:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2114,"name":"uint64","nodeType":"ElementaryTypeName","src":"9550:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"maxPublishTime","nameLocation":"9588:14:18","nodeType":"VariableDeclaration","scope":2124,"src":"9581:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2116,"name":"uint64","nodeType":"ElementaryTypeName","src":"9581:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9466:142:18"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"priceFeeds","nameLocation":"9666:10:18","nodeType":"VariableDeclaration","scope":2124,"src":"9635:41:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$2160_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":2120,"nodeType":"UserDefinedTypeName","pathNode":{"id":2119,"name":"PythStructs.PriceFeed","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"9635:21:18"},"referencedDeclaration":2160,"src":"9635:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$2160_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":2121,"nodeType":"ArrayTypeName","src":"9635:23:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$2160_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"9634:43:18"},"scope":2125,"src":"9430:248:18","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2126,"src":"393:9287:18","usedErrors":[]}],"src":"39:9642:18"}},"contracts/interfaces/external/IPythEvents.sol":{"id":19,"ast":{"absolutePath":"contracts/interfaces/external/IPythEvents.sol","exportedSymbols":{"IPythEvents":[2140]},"id":2141,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2127,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"39:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IPythEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"65:170:19","text":"@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."},"fullyImplemented":true,"id":2140,"linearizedBaseContracts":[2140],"name":"IPythEvents","nameLocation":"245:11:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"263:305:19","text":"@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."},"eventSelector":"d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec","id":2139,"name":"PriceFeedUpdate","nameLocation":"579:15:19","nodeType":"EventDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"620:2:19","nodeType":"VariableDeclaration","scope":2139,"src":"604:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"604:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2133,"indexed":false,"mutability":"mutable","name":"publishTime","nameLocation":"639:11:19","nodeType":"VariableDeclaration","scope":2139,"src":"632:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2132,"name":"uint64","nodeType":"ElementaryTypeName","src":"632:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2135,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"666:5:19","nodeType":"VariableDeclaration","scope":2139,"src":"660:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2134,"name":"int64","nodeType":"ElementaryTypeName","src":"660:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2137,"indexed":false,"mutability":"mutable","name":"conf","nameLocation":"688:4:19","nodeType":"VariableDeclaration","scope":2139,"src":"681:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2136,"name":"uint64","nodeType":"ElementaryTypeName","src":"681:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"594:104:19"},"src":"573:126:19"}],"scope":2141,"src":"235:466:19","usedErrors":[]}],"src":"39:663:19"}},"contracts/libraries/PythStructs.sol":{"id":20,"ast":{"absolutePath":"contracts/libraries/PythStructs.sol","exportedSymbols":{"PythStructs":[2161]},"id":2162,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2142,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"39:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"PythStructs","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2161,"linearizedBaseContracts":[2161],"name":"PythStructs","nameLocation":"74:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PythStructs.Price","id":2151,"members":[{"constant":false,"id":2144,"mutability":"mutable","name":"price","nameLocation":"648:5:20","nodeType":"VariableDeclaration","scope":2151,"src":"642:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2143,"name":"int64","nodeType":"ElementaryTypeName","src":"642:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"conf","nameLocation":"718:4:20","nodeType":"VariableDeclaration","scope":2151,"src":"711:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2145,"name":"uint64","nodeType":"ElementaryTypeName","src":"711:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"expo","nameLocation":"764:4:20","nodeType":"VariableDeclaration","scope":2151,"src":"758:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2147,"name":"int32","nodeType":"ElementaryTypeName","src":"758:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"publishTime","nameLocation":"849:11:20","nodeType":"VariableDeclaration","scope":2151,"src":"844:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint","nodeType":"ElementaryTypeName","src":"844:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Price","nameLocation":"609:5:20","nodeType":"StructDefinition","scope":2161,"src":"602:265:20","visibility":"public"},{"canonicalName":"PythStructs.PriceFeed","id":2160,"members":[{"constant":false,"id":2153,"mutability":"mutable","name":"id","nameLocation":"1014:2:20","nodeType":"VariableDeclaration","scope":2160,"src":"1006:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1006:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2156,"mutability":"mutable","name":"price","nameLocation":"1066:5:20","nodeType":"VariableDeclaration","scope":2160,"src":"1060:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1060:5:20"},"referencedDeclaration":2151,"src":"1060:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"emaPrice","nameLocation":"1159:8:20","nodeType":"VariableDeclaration","scope":2160,"src":"1153:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":2158,"nodeType":"UserDefinedTypeName","pathNode":{"id":2157,"name":"Price","nodeType":"IdentifierPath","referencedDeclaration":2151,"src":"1153:5:20"},"referencedDeclaration":2151,"src":"1153:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$2151_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"961:9:20","nodeType":"StructDefinition","scope":2161,"src":"954:220:20","visibility":"public"}],"scope":2162,"src":"65:1111:20","usedErrors":[]}],"src":"39:1138:20"}},"contracts/libraries/PythUtils.sol":{"id":21,"ast":{"absolutePath":"contracts/libraries/PythUtils.sol","exportedSymbols":{"PythUtils":[2247]},"id":2248,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2163,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"39:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"PythUtils","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2247,"linearizedBaseContracts":[2247],"name":"PythUtils","nameLocation":"73:9:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":2245,"nodeType":"Block","src":"765:461:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"779:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"787:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"779:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int32","typeString":"int32"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2178,"name":"expo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"792:4:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"799:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"792:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"779:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int32","typeString":"int32"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"expo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"804:4:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"811:4:21","subExpression":{"hexValue":"323535","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"812:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_255_by_1","typeString":"int_const -255"}},"src":"804:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"779:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2191,"nodeType":"IfStatement","src":"775:75:21","trueBody":{"id":2190,"nodeType":"Block","src":"817:33:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2187,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"831:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"831:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"831:8:21"}]}},{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"priceDecimals","nameLocation":"866:13:21","nodeType":"VariableDeclaration","scope":2245,"src":"860:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2192,"name":"uint8","nodeType":"ElementaryTypeName","src":"860:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2204,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int32","typeString":"int32"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"895:2:21","subExpression":{"hexValue":"31","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"896:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2200,"name":"expo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"900:4:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"895:9:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int32","typeString":"int32"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"888:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2196,"name":"uint32","nodeType":"ElementaryTypeName","src":"888:6:21","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"888:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"882:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2194,"name":"uint8","nodeType":"ElementaryTypeName","src":"882:5:21","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"882:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"860:46:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"targetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"921:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2206,"name":"priceDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"939:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"921:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2243,"nodeType":"Block","src":"1090:130:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2230,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1139:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1132:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2228,"name":"uint64","nodeType":"ElementaryTypeName","src":"1132:6:21","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1132:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1127:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2226,"name":"uint","nodeType":"ElementaryTypeName","src":"1127:4:21","typeDescriptions":{}}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1127:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"priceDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1178:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2237,"name":"targetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1194:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1178:30:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1171:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2234,"name":"uint32","nodeType":"ElementaryTypeName","src":"1171:6:21","typeDescriptions":{}}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1171:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1165:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1127:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2174,"id":2242,"nodeType":"Return","src":"1104:105:21"}]},"id":2244,"nodeType":"IfStatement","src":"917:303:21","trueBody":{"id":2225,"nodeType":"Block","src":"954:130:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2212,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1003:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"996:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2210,"name":"uint64","nodeType":"ElementaryTypeName","src":"996:6:21","typeDescriptions":{}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"996:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2208,"name":"uint","nodeType":"ElementaryTypeName","src":"991:4:21","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1029:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"targetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1042:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2219,"name":"priceDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1059:13:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1042:30:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1035:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":2216,"name":"uint32","nodeType":"ElementaryTypeName","src":"1035:6:21","typeDescriptions":{}}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1035:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1029:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"991:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2174,"id":2224,"nodeType":"Return","src":"968:105:21"}]}}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"89:539:21","text":"@notice Converts a Pyth price to a uint256 with a target number of decimals\n @param price The Pyth price\n @param expo The Pyth price exponent\n @param targetDecimals The target number of decimals\n @return The price as a uint256\n @dev Function will lose precision if targetDecimals is less than the Pyth price decimals.\n This method will truncate any digits that cannot be represented by the targetDecimals.\n e.g. If the price is 0.000123 and the targetDecimals is 2, the result will be 0"},"id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"convertToUint","nameLocation":"642:13:21","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"price","nameLocation":"671:5:21","nodeType":"VariableDeclaration","scope":2246,"src":"665:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":2165,"name":"int64","nodeType":"ElementaryTypeName","src":"665:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"expo","nameLocation":"692:4:21","nodeType":"VariableDeclaration","scope":2246,"src":"686:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":2167,"name":"int32","nodeType":"ElementaryTypeName","src":"686:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"targetDecimals","nameLocation":"712:14:21","nodeType":"VariableDeclaration","scope":2246,"src":"706:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2169,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"655:77:21"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2246,"src":"756:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:9:21"},"scope":2247,"src":"633:593:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2248,"src":"65:1163:21","usedErrors":[]}],"src":"39:1190:21"}},"contracts/libraries/TransferHelper.sol":{"id":22,"ast":{"absolutePath":"contracts/libraries/TransferHelper.sol","exportedSymbols":{"TransferHelper":[2407]},"id":2408,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2249,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"45:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"TransferHelper","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2407,"linearizedBaseContracts":[2407],"name":"TransferHelper","nameLocation":"190:14:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":2291,"nodeType":"Block","src":"286:357:22","statements":[{"assignments":[2259,2261],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"success","nameLocation":"367:7:22","nodeType":"VariableDeclaration","scope":2291,"src":"362:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2258,"name":"bool","nodeType":"ElementaryTypeName","src":"362:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"data","nameLocation":"389:4:22","nodeType":"VariableDeclaration","scope":2291,"src":"376:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2260,"name":"bytes","nodeType":"ElementaryTypeName","src":"376:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2271,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783039356561376233","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"445:10:22","typeDescriptions":{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},"value":"0x095ea7b3"},{"id":2267,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"457:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2268,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"462:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_157198259_by_1","typeString":"int_const 157198259"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2264,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"422:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"422:22:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"422:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2262,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"397:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"397:11:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"397:82:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"361:118:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"510:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2274,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"522:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"522:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"522:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2280,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"553:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"560:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2281,"name":"bool","nodeType":"ElementaryTypeName","src":"560:4:22","typeDescriptions":{}}}],"id":2283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"559:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2278,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"542:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"542:10:22","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"542:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"522:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"521:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"510:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:45:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""},"value":"TransferHelper::safeApprove: approve failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123","typeString":"literal_string \"TransferHelper::safeApprove: approve failed\""}],"id":2272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"489:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"489:147:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"489:147:22"}]},"id":2292,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"220:11:22","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"_token","nameLocation":"240:6:22","nodeType":"VariableDeclaration","scope":2292,"src":"232:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"_to","nameLocation":"256:3:22","nodeType":"VariableDeclaration","scope":2292,"src":"248:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"248:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"_value","nameLocation":"269:6:22","nodeType":"VariableDeclaration","scope":2292,"src":"261:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"231:45:22"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"286:0:22"},"scope":2407,"src":"211:432:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"755:360:22","statements":[{"assignments":[2302,2304],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"success","nameLocation":"837:7:22","nodeType":"VariableDeclaration","scope":2334,"src":"832:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2301,"name":"bool","nodeType":"ElementaryTypeName","src":"832:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"data","nameLocation":"859:4:22","nodeType":"VariableDeclaration","scope":2334,"src":"846:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"846:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30786139303539636262","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:10:22","typeDescriptions":{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},"value":"0xa9059cbb"},{"id":2310,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"927:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"932:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2835717307_by_1","typeString":"int_const 2835717307"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2307,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"892:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"892:22:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2305,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"867:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"867:11:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"867:82:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"831:118:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2316,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"980:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"992:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"992:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"992:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2323,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1023:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1030:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2324,"name":"bool","nodeType":"ElementaryTypeName","src":"1030:4:22","typeDescriptions":{}}}],"id":2326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1029:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2321,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1012:10:22","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"992:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"991:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"980:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1051:47:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""},"value":"TransferHelper::safeTransfer: transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611","typeString":"literal_string \"TransferHelper::safeTransfer: transfer failed\""}],"id":2315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"959:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:149:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2333,"nodeType":"ExpressionStatement","src":"959:149:22"}]},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"658:12:22","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"_token","nameLocation":"688:6:22","nodeType":"VariableDeclaration","scope":2335,"src":"680:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"_to","nameLocation":"712:3:22","nodeType":"VariableDeclaration","scope":2335,"src":"704:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"_value","nameLocation":"733:6:22","nodeType":"VariableDeclaration","scope":2335,"src":"725:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"725:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:75:22"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[],"src":"755:0:22"},"scope":2407,"src":"649:466:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"1254:383:22","statements":[{"assignments":[2347,2349],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"success","nameLocation":"1348:7:22","nodeType":"VariableDeclaration","scope":2380,"src":"1343:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2346,"name":"bool","nodeType":"ElementaryTypeName","src":"1343:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"data","nameLocation":"1370:4:22","nodeType":"VariableDeclaration","scope":2380,"src":"1357:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2348,"name":"bytes","nodeType":"ElementaryTypeName","src":"1357:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2360,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30783233623837326464","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1426:10:22","typeDescriptions":{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},"value":"0x23b872dd"},{"id":2355,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1438:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2356,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"1445:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2357,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"1450:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_599290589_by_1","typeString":"int_const 599290589"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2352,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1403:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1403:22:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1403:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2350,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1378:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1378:11:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:89:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1342:125:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"1498:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1510:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1510:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1510:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2369,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1541:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1548:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2370,"name":"bool","nodeType":"ElementaryTypeName","src":"1548:4:22","typeDescriptions":{}}}],"id":2372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1547:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2367,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1530:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1530:10:22","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1530:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1510:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1509:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1498:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1569:51:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""},"value":"TransferHelper::transferFrom: transferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c","typeString":"literal_string \"TransferHelper::transferFrom: transferFrom failed\""}],"id":2361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1477:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:153:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"1477:153:22"}]},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1130:16:22","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"_token","nameLocation":"1164:6:22","nodeType":"VariableDeclaration","scope":2381,"src":"1156:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"_from","nameLocation":"1188:5:22","nodeType":"VariableDeclaration","scope":2381,"src":"1180:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"_to","nameLocation":"1211:3:22","nodeType":"VariableDeclaration","scope":2381,"src":"1203:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"_value","nameLocation":"1232:6:22","nodeType":"VariableDeclaration","scope":2381,"src":"1224:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1146:98:22"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[],"src":"1254:0:22"},"scope":2407,"src":"1121:516:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2405,"nodeType":"Block","src":"1706:189:22","statements":[{"assignments":[2389,null],"declarations":[{"constant":false,"id":2389,"mutability":"mutable","name":"success","nameLocation":"1722:7:22","nodeType":"VariableDeclaration","scope":2405,"src":"1717:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2388,"name":"bool","nodeType":"ElementaryTypeName","src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2399,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1759:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2394,"name":"bytes","nodeType":"ElementaryTypeName","src":"1763:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1759:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2390,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1735:3:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"1735:8:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2392,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1751:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1735:23:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1735:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1716:56:22"},{"expression":{"arguments":[{"id":2401,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"1803:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1824:54:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""},"value":"TransferHelper::safeTransferETH: ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350","typeString":"literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""}],"id":2400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1782:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1782:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"ExpressionStatement","src":"1782:106:22"}]},"id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"1652:15:22","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"_to","nameLocation":"1676:3:22","nodeType":"VariableDeclaration","scope":2406,"src":"1668:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"_value","nameLocation":"1689:6:22","nodeType":"VariableDeclaration","scope":2406,"src":"1681:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1667:29:22"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"1706:0:22"},"scope":2407,"src":"1643:252:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2408,"src":"182:1715:22","usedErrors":[]}],"src":"45:1853:22"}}},"contracts":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"IUniswapV3PoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"IUniswapV3PoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"IUniswapV3PoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"IUniswapV3PoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"IUniswapV3PoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"}},"irOptimized":""}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"IUniswapV3PoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"irOptimized":""}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"irOptimized":""}},"contracts/base/Lockable.sol":{"Lockable":{"abi":[{"inputs":[],"name":"Locked","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/Lockable.sol\":\"Lockable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/base/Lockable.sol\":{\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4af8261e270ee279b561618e7eb68593b7af51c9cb365927302bcdcbf7263f60\",\"dweb:/ipfs/QmTy94DQYqyxcCPYK8CrgRmwdfckVi4v4dKy76VyPs2eri\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Lockable.sol:Lockable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000e0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000e0000c13d0000000101000039000000000010041b0000002001000039000001000010044300000120000004430000000501000041000000110001042e000000000100001900000012000104300000001000000432000000110001042e000000120001043000000000000000000000000200000000000000000000000000000040000001000000000000000000bd03608aa00a459d0226b20b2d1f1eaa65822219c3b425abc86c7a138155e2f4"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 10:\"contracts/base/Lockable.sol\"\nobject \"Lockable_665\" {\n    code {\n        {\n            /// @src 10:71:275  \"contract Lockable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 10:122:123  \"1\" */ 0x00, 0x01)\n            /// @src 10:71:275  \"contract Lockable {...\"\n            let _2 := datasize(\"Lockable_665_deployed\")\n            codecopy(_1, dataoffset(\"Lockable_665_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"contracts/base/Lockable.sol\"\n    object \"Lockable_665_deployed\" {\n        code {\n            {\n                /// @src 10:71:275  \"contract Lockable {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207102d150ae56ffdde97fede4c67852b37f136e2e37b4d264a3afb3613b1384f164736f6c634300080f0033\"\n    }\n}\n","hash":"01000007bfcf7ec85535b5baf00a28cb79e3ec8455b04516efdbc6f37bbaea42","factoryDependencies":{}}},"contracts/integrations/PancakeswapV3DEXIntegration.sol":{"PancakeswapV3DEXIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_quoter","type":"address"},{"internalType":"address","name":"_router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Locked","type":"error"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeTiers","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/integrations/PancakeswapV3DEXIntegration.sol\":\"PancakeswapV3DEXIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/base/Lockable.sol\":{\"keccak256\":\"0x51bad8a22e77a2611fc69518057a590b645033607e72076d43e66bb2591a89c2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4af8261e270ee279b561618e7eb68593b7af51c9cb365927302bcdcbf7263f60\",\"dweb:/ipfs/QmTy94DQYqyxcCPYK8CrgRmwdfckVi4v4dKy76VyPs2eri\"]},\"contracts/integrations/PancakeswapV3DEXIntegration.sol\":{\"keccak256\":\"0xc1751c7339f0411e9a195d2cfc9d29790f23b38c98c91bea4979e0b088963146\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c45f17fc4abdd1903f2448aa06cc01d3f62d80b86a41ff919306db6805619c11\",\"dweb:/ipfs/QmP7C7a3RD5Q4DiGPZVncKx36UVqXC7Q4XLMUAGC1qtZcd\"]},\"contracts/interfaces/IDEXIntegration.sol\":{\"keccak256\":\"0xdb59a456949a60735ad9a8af40701ced24cd467bf0513d9a548f896f44ff7182\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d00c68899ef0240099bdaebf242280a1cca435bbdc0e6ab954c1ac545979ff3e\",\"dweb:/ipfs/QmXj1276hqhyfnq8jFYbWEzvuW6k2xLCGFFpaFpzRPvAiB\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d783bcfa47faaa1ed36eb4ce8c1612372cd4118fc11b347d8ecea2ab3d4a1284\",\"dweb:/ipfs/QmbyCFzoezQpCkD6uMEHXeEsMRmNbnwTbqMP74MC3TMgfi\"]},\"contracts/interfaces/IUniswapV3StaticQuoter.sol\":{\"keccak256\":\"0xac75d87dcb20505222561e784d5cb69e82841aee7fca8261b0e36cd242064d5a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://13f95db1224c2885c41f90918f5fb2a1920796b9237f1f1fe70b5a6e43733159\",\"dweb:/ipfs/QmQZhysnprnxF99FBRCmp3gAavXV7zGtZWJtyAJp63hyQr\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4974ccca392242612b24dc99f2aa88d3f2eaf3d0b3b307519f0a6a425a4e85c1\",\"dweb:/ipfs/QmXdMCaLvTfJwNJ6byE8fiYz57PpMXxQenHXMHpVKKBSAp\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PancakeswapV3DEXIntegration.sol:PancakeswapV3DEXIntegration\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[19]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tadd\t128, r0, r7\n\tst.1\t64, r7\n\tsub.s!\t4, r3, r4\n\tjump.lt\t@.BB0_129\n\tld\tr1, r4\n\tshr.s\t224, r4, r4\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.gt\t@.BB0_26\n\tsub.s!\t@CPI0_15[0], r4, r2\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_18[0], r4, r2\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_19[0], r4, r1\n\tjump.ne\t@.BB0_129\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_129\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getAmountOut, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_27[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_129\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t224, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_12\n\tadd\tr0, r0, r5\n.BB0_11:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t224, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_11\n.BB0_12:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_14\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t224, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_14:\n\tsub.s!\t96, r3, r1\n\tjump.lt\t@.BB0_129\n\tld.1\t224, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_129\n\tld.1\t256, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_129\n\tld.1\t288, r3\n\tsub.s!\t@CPI0_2[0], r3, r4\n\tjump.gt\t@.BB0_129\n\tadd\t1, r0, r4\n\tsstore\tr0, r4\n\tst.1\t128, r1\n\tst.1\t160, r2\n\tst.1\t192, r3\n\tsload\tr4, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.ge\t@.BB0_108\n\tadd\tr2, r0, stack-[10]\n\tadd\t1, r2, r1\n\tsstore\tr4, r1\n\tadd\tr4, r0, stack-[11]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_129\n\tadd\tstack-[10], r0, r5\n\tand\t@CPI0_5[0], r5, r2\n\tdiv.s\t10, r2, r2, r3\n\tmul\t10, r2, r3, r4\n\tsub\tr5, r3, r3\n\tmul\t24, r3, r3, r4\n\tand\t@CPI0_6[0], r3, r3\n\tshl\t@CPI0_7[0], r3, r4\n\tsub.s\t1, r0, r5\n\txor\tr4, r5, r4\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\tr2, r4, r2\n\tshl\t100, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tjump.gt\t@.BB0_108\n\tadd\tr5, r0, stack-[10]\n\tadd\tr3, r0, stack-[9]\n\tadd\t1, r3, r1\n\tsstore\tr2, r1\n\tst.1\t0, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_129\n\tadd\tstack-[9], r0, r5\n\tand\t@CPI0_5[0], r5, r2\n\tdiv.s\t10, r2, r2, r3\n\tmul\t10, r2, r3, r4\n\tsub\tr5, r3, r3\n\tmul\t24, r3, r3, r4\n\tand\t@CPI0_6[0], r3, r3\n\tshl\t@CPI0_7[0], r3, r4\n\txor\tstack-[10], r4, r4\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r2\n\tand\tr2, r4, r2\n\tshl\t500, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r3\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tjump.gt\t@.BB0_108\n\tadd\tr3, r0, stack-[9]\n\tadd\t1, r3, r1\n\tsstore\tr2, r1\n\tst.1\t0, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_129\n\tadd\tstack-[9], r0, r5\n\tand\t@CPI0_5[0], r5, r2\n\tdiv.s\t10, r2, r3, r2\n\tmul\t10, r3, r2, r4\n\tsub\tr5, r2, r2\n\tmul\t24, r2, r2, r4\n\tand\t@CPI0_6[0], r2, r4\n\tadd\t@CPI0_7[0], r0, r2\n\tshl\tr2, r4, r5\n\tadd\tstack-[10], r0, r6\n\txor\tr5, r6, r5\n\tld\tr1, r1\n\tadd\tr1, r3, r1\n\tsload\tr1, r3\n\tand\tr3, r5, r3\n\tshl\t2500, r4, r4\n\tor\tr3, r4, r3\n\tsstore\tr1, r3\n\tadd\tstack-[11], r0, r4\n\tsload\tr4, r1\n\tsub.s!\t@CPI0_5[0], r1, r3\n\tjump.gt\t@.BB0_108\n\tadd\t1, r1, r3\n\tsstore\tr4, r3\n\tst.1\t0, r4\n\tand\t@CPI0_5[0], r1, r3\n\tdiv.s\t10, r3, r4, r3\n\tadd\tr4, r0, stack-[11]\n\tmul\t10, r4, r3, r4\n\tsub\tr1, r3, r1\n\tmul\t24, r1, r1, r3\n\tand\t@CPI0_6[0], r1, stack-[9]\n\tshl.s\tstack-[9], r2, r1\n\txor\tr1, r6, stack-[10]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[11], r1, r1\n\tsload\tr1, r2\n\tand\tstack-[10], r2, r2\n\tadd\tstack-[9], r0, r3\n\tshl\t10000, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tadd\t64, r0, r2\n\tld.1\t192, r3\n\tst.2\t448, r2\n\tst.2\t480, r3\n\tst.2\t256, r1\n\tadd\t3, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_26:\n\tsub.s!\t@CPI0_10[0], r4, r5\n\tjump.gt\t@.BB0_41\n\tsub.s!\t@CPI0_13[0], r4, r5\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_14[0], r4, r1\n\tjump.ne\t@.BB0_129\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_129\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[17]\n\tadd\t0, r0, stack-[16]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t17, r4, r4\n\tjump\t@.BB0_64\n.BB0_31:\n\tsub.s!\t@CPI0_16[0], r4, r2\n\tjump.eq\t@.BB0_55\n\tsub.s!\t@CPI0_17[0], r4, r2\n\tjump.ne\t@.BB0_129\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_129\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_129\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r6\n\tsub.s!\t@CPI0_2[0], r6, r2\n\tjump.gt\t@.BB0_129\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_129\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_2[0], r5, r1\n\tjump.gt\t@.BB0_129\n\tsload\tr0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_94\n\tsstore\tr0, r0\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB0_121\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_128\n.BB0_41:\n\tsub.s!\t@CPI0_11[0], r4, r1\n\tjump.eq\t@.BB0_62\n\tsub.s!\t@CPI0_12[0], r4, r1\n\tjump.ne\t@.BB0_129\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_129\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[13]\n\tadd\t64, r0, stack-[12]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t13, r4, r4\n\tjump\t@.BB0_64\n.BB0_45:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_129\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_129\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tsub!\tr1, r3, r3\n\tjump.ge\t@.BB0_129\n\tst.1\t0, r2\n\tdiv.s\t10, r1, r1, r2\n\tmul\t24, r2, r2, r3\n\tadd\t@CPI0_22[0], r1, r1\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_7[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tcontext.get_context_u128\tr4\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_129\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_129\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r8\n\tsub.s!\t@CPI0_2[0], r8, r3\n\tjump.gt\t@.BB0_129\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r9\n\tsub.s!\t@CPI0_2[0], r9, r1\n\tjump.gt\t@.BB0_129\n\tsub!\tr8, r9, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB0_65\n.BB0_54:\n\tst.1\tr7, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r7, r3\n\tadd.ge\tr1, r0, r7\n\tshl.s\t64, r7, r1\n\tor\t@CPI0_27[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_55:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_129\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_129\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r9\n\tsub.s!\t@CPI0_2[0], r9, r2\n\tjump.gt\t@.BB0_129\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r10\n\tsub.s!\t@CPI0_2[0], r10, r2\n\tjump.gt\t@.BB0_129\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r8\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tst.1\t128, r2\n\tst.1\t0, r1\n\tsub.s!\t10, r2, r1\n\tjump.lt\t@.BB0_68\n\tadd\t160, r0, r1\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_61:\n\tsload\tr4, r3\n\tshr.s\t216, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t288, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t192, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t256, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t168, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t224, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t144, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t192, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t120, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t160, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t96, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t128, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t72, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t96, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t48, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t64, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t24, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t32, r1, r7\n\tst.1\tr7, r6\n\tand\t@CPI0_7[0], r3, r3\n\tst.1\tr1, r3\n\tadd\t10, r5, r3\n\tadd\t1, r4, r4\n\tadd\t320, r1, r1\n\tadd\t19, r5, r5\n\tsub!\tr5, r2, r5\n\tadd\tr3, r0, r5\n\tjump.lt\t@.BB0_61\n\tjump\t@.BB0_69\n.BB0_62:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_129\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[15]\n\tadd\t32, r0, stack-[14]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t15, r4, r4\n.BB0_64:\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_20[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_65:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tst.1\t128, r2\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tsub.s!\t10, r2, r1\n\tjump.lt\t@.BB0_95\n\tadd\t160, r0, r1\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_67:\n\tsload\tr4, r3\n\tshr.s\t216, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t288, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t192, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t256, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t168, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t224, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t144, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t192, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t120, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t160, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t96, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t128, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t72, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t96, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t48, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t64, r1, r7\n\tst.1\tr7, r6\n\tshr.s\t24, r3, r6\n\tand\t@CPI0_7[0], r6, r6\n\tadd\t32, r1, r7\n\tst.1\tr7, r6\n\tand\t@CPI0_7[0], r3, r3\n\tst.1\tr1, r3\n\tadd\t10, r5, r3\n\tadd\t1, r4, r4\n\tadd\t320, r1, r1\n\tadd\t19, r5, r5\n\tsub!\tr5, r2, r5\n\tadd\tr3, r0, r5\n\tjump.lt\t@.BB0_67\n\tjump\t@.BB0_96\n.BB0_68:\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\t160, r0, r1\n\tadd\tr0, r0, r3\n.BB0_69:\n\tsload\tr4, r4\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_70\n\tand\t@CPI0_7[0], r4, r5\n\tst.1.inc\tr1, r5, r1\n\tor\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_86\n.BB0_71:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_72\n.BB0_87:\n\tshr.s\t48, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_88\n.BB0_73:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_74\n.BB0_89:\n\tshr.s\t96, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_90\n.BB0_75:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_76\n.BB0_91:\n\tshr.s\t144, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_92\n.BB0_77:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_78\n.BB0_93:\n\tshr.s\t192, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r2\n\tjump.lt\t@.BB0_79\n\tjump\t@.BB0_80\n.BB0_70:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_71\n.BB0_86:\n\tshr.s\t24, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_87\n.BB0_72:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_73\n.BB0_88:\n\tshr.s\t72, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_89\n.BB0_74:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_75\n.BB0_90:\n\tshr.s\t120, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_91\n.BB0_76:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_77\n.BB0_92:\n\tshr.s\t168, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_93\n.BB0_78:\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_80\n.BB0_79:\n\tshr.s\t216, r4, r2\n\tand\t@CPI0_7[0], r2, r2\n\tst.1.inc\tr1, r2, r1\n.BB0_80:\n\tsub.s\t97, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.gt\t@.BB0_108\n\tadd\tr10, r0, stack-[10]\n\tadd\tr9, r0, stack-[11]\n\tadd\tr8, r0, stack-[8]\n\tadd\t128, r1, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_246\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r9\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r13\n\tadd\tstack-[8], r0, r8\n\tjump.ne\t@.BB0_130\n.BB0_83:\n\tld.1\t64, r1\n\tst.1\tr1, r13\n.BB0_84:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_27[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_94:\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_95:\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\t160, r0, r1\n\tadd\tr0, r0, r3\n.BB0_96:\n\tsload\tr4, r4\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_97\n\tand\t@CPI0_7[0], r4, r5\n\tst.1.inc\tr1, r5, r1\n\tor\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_110\n.BB0_98:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_99\n.BB0_111:\n\tshr.s\t48, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_112\n.BB0_100:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_101\n.BB0_113:\n\tshr.s\t96, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_114\n.BB0_102:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_103\n.BB0_115:\n\tshr.s\t144, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_116\n.BB0_104:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_105\n.BB0_117:\n\tshr.s\t192, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r2\n\tjump.lt\t@.BB0_106\n\tjump\t@.BB0_107\n.BB0_97:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_98\n.BB0_110:\n\tshr.s\t24, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_111\n.BB0_99:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_100\n.BB0_112:\n\tshr.s\t72, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_113\n.BB0_101:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_102\n.BB0_114:\n\tshr.s\t120, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_115\n.BB0_103:\n\tsub!\tr3, r2, r5\n\tjump.ge\t@.BB0_104\n.BB0_116:\n\tshr.s\t168, r4, r5\n\tand\t@CPI0_7[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_117\n.BB0_105:\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_107\n.BB0_106:\n\tshr.s\t216, r4, r2\n\tand\t@CPI0_7[0], r2, r2\n\tst.1.inc\tr1, r2, r1\n.BB0_107:\n\tsub.s\t97, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.le\t@.BB0_118\n.BB0_108:\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_118:\n\tadd\tr9, r0, stack-[9]\n\tadd\tr8, r0, stack-[8]\n\tadd\t128, r1, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_246\n\tld.1\t64, r10\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r2\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[9], r0, r6\n\tjump.ne\t@.BB0_166\n\tadd\tr10, r0, r7\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_54\n.BB0_121:\n\tadd\tr5, r0, stack-[8]\n\tadd\tr2, r0, stack-[9]\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\tr6, r0, stack-[11]\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_124\n\tadd\tr0, r0, r7\n.BB0_123:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_123\n.BB0_124:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_126\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_126:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_184\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[11], r0, r6\n.BB0_128:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.ge\t@.BB0_161\n.BB0_129:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_130:\n\tadd\tstack-[10], r0, r1\n\tand\t@CPI0_2[0], r1, r10\n\tadd\tstack-[11], r0, r1\n\tand\t@CPI0_2[0], r1, r11\n\tadd\t@CPI0_49[0], r0, r12\n\tadd\tr0, r0, r14\n\tadd\tr0, r0, r13\n\tadd\tr9, r0, stack-[7]\n\tadd\tr10, r0, stack-[6]\n\tadd\tr11, r0, stack-[5]\n.BB0_131:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_48[0], r1, r2\n\tjump.gt\t@.BB0_108\n\tshl.s\t5, r14, r2\n\tadd\t160, r2, r2\n\tld.1\tr2, r2\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tand\t@CPI0_7[0], r2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r8\n\tadd\t32, r1, r4\n\tst.1\tr4, r10\n\tst.1\tr1, r11\n\tadd\t128, r1, r5\n\tst.1\tr5, r0\n\tld.1\t64, r15\n\tst.1\tr15, r12\n\tld.1\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t4, r15, r6\n\tst.1\tr6, r1\n\tld.1\tr4, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t36, r15, r4\n\tst.1\tr4, r1\n\tld.1\tr2, r1\n\tadd\t68, r15, r2\n\tst.1\tr2, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t100, r15, r2\n\tst.1\tr2, r1\n\tld.1\tr5, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t132, r15, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r9, r2\n\tjump.ne\t@.BB0_134\n\tcontext.sp\tr5\n\tsub.s\t19, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[19]\n\tjump\t@.BB0_141\n.BB0_134:\n\tadd\tr14, r0, stack-[10]\n\tadd\tr13, r0, stack-[11]\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r15, r2\n\tadd\tr3, r0, r2\n\tadd.lt\tr15, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_50[0], r1, r1\n\tadd\tr9, r0, r2\n\tadd\tr15, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r15\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_137\n\tadd\tr0, r0, r6\n.BB0_136:\n\tshl.s\t5, r6, r7\n\tadd\tr15, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_136\n.BB0_137:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_139\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr15, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_139:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t18, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\t0, r0, stack-[18]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r9\n\tadd\tstack-[6], r0, r10\n\tadd\tstack-[5], r0, r11\n\tadd\t@CPI0_49[0], r0, r12\n\tadd\tstack-[11], r0, r13\n\tadd\tstack-[10], r0, r14\n\tjump.eq\t@.BB0_151\n\tadd\tstack-[8], r0, r8\n.BB0_141:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r15, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_5[0], r1, r4\n\tjump.gt\t@.BB0_108\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_108\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_129\n\tld.1\tr15, r1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n.BB0_145:\n\tsub!\tr13, r0, r2\n\tjump.eq\t@.BB0_148\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_149\n\tsub!\tr1, r13, r2\n\tjump.ge\t@.BB0_149\n.BB0_148:\n\tld.1\t128, r2\n\tsub!\tr2, r14, r2\n\tadd\tr1, r0, r13\n\tjump.le\t@.BB0_191\n.BB0_149:\n\tsub.s!\t255, r14, r1\n\tjump.eq\t@.BB0_275\n\tadd\t1, r14, r1\n\tand\t255, r1, r14\n\tld.1\t128, r1\n\tsub!\tr14, r1, r1\n\tjump.lt\t@.BB0_131\n\tjump\t@.BB0_83\n.BB0_151:\n\tsub!\tr3, r0, r2\n\tadd\tstack-[8], r0, r8\n\tjump.eq\t@.BB0_159\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_51[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r4, r6\n\tjump.gt\t@.BB0_108\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_108\n\tst.1\t64, r4\n\tst.1.inc\tr2, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_157\n\tadd\tr0, r0, r5\n.BB0_156:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_156\n.BB0_157:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB0_160\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r2\n\tshl.s\t3, r3, r3\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_145\n.BB0_159:\n.BB0_160:\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_145\n.BB0_161:\n\tadd\tr5, r0, stack-[8]\n\tld.1\t128, r3\n\tadd\tr6, r0, stack-[11]\n\tadd\tr6, r0, r1\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @fun_getAmountOut, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\t4, r4, r3\n\tand\t@CPI0_7[0], r2, r2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_190\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_190\n\tadd\tr2, r0, stack-[4]\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr4, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_246\n\tadd\tstack-[7], r0, r2\n\tadd\t36, r2, r2\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_192\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_198\n.BB0_166:\n\tadd\t@CPI0_25[0], r0, r8\n\tadd\tr0, r0, r9\n\tadd\tr2, r0, stack-[7]\n.BB0_167:\n\tshl.s\t5, r9, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\t36, r10, r3\n\tst.1\tr3, r6\n\tand\t@CPI0_7[0], r1, r1\n\tadd\t68, r10, r3\n\tst.1\tr3, r1\n\tst.1\tr10, r8\n\tadd\t4, r10, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_169\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_176\n.BB0_169:\n\tadd\tr9, r0, stack-[11]\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\tr10, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_172\n\tadd\tr0, r0, r6\n.BB0_171:\n\tshl.s\t5, r6, r7\n\tadd\tr10, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_171\n.BB0_172:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_174\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr10, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_174:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[11], r0, r9\n\tjump.eq\t@.BB0_212\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[7], r0, r2\n\tadd\t@CPI0_25[0], r0, r8\n.BB0_176:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r7\n\tsub!\tr7, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_5[0], r7, r4\n\tjump.gt\t@.BB0_108\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_108\n\tst.1\t64, r7\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_129\n\tld.1\tr10, r1\n\tsub.s!\t@CPI0_2[0], r1, r3\n\tjump.gt\t@.BB0_129\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_206\n\tsub.s!\t255, r9, r1\n\tjump.eq\t@.BB0_275\n\tadd\t1, r9, r1\n\tand\t255, r1, r9\n\tld.1\t128, r1\n\tsub!\tr9, r1, r1\n\tadd\tr7, r0, r10\n\tjump.lt\t@.BB0_167\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_54\n.BB0_184:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_187\n\tadd\tr0, r0, r6\n.BB0_186:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_186\n.BB0_187:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_189\n.BB0_188:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_189:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_190:\n\tadd\t@CPI0_44[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t32, r0, r1\n\tst.1\tr3, r1\n\tadd\t100, r4, r1\n\tadd\t@CPI0_46[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tadd\t@CPI0_47[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\t48, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_191:\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_192:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_195\n\tadd\tr0, r0, r7\n.BB0_194:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_194\n.BB0_195:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_197\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[7], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_197:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_207\n.BB0_198:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[7], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.gt\t@.BB0_108\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_108\n\tadd\tstack-[3], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_129\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_230\n\tadd\tstack-[3], r0, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_34[0], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_246\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r4\n\tadd\t68, r4, r2\n\tsub.s\t1, r0, r3\n\tst.1\tr2, r3\n\tand\t@CPI0_2[0], r1, r1\n\tadd\t36, r4, r2\n\tst.1\tr2, r1\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_23[0], r4, r1\n\tjump.gt\t@.BB0_108\n\tadd\tstack-[3], r0, r2\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tld.1\tr2, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[11], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_217\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_218\n.BB0_206:\n\tadd\tstack-[6], r0, r1\n\tjump\t@.BB0_54\n.BB0_207:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_210\n\tadd\tr0, r0, r6\n.BB0_209:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_209\n.BB0_210:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_189\n\tjump\t@.BB0_188\n.BB0_212:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_215\n\tadd\tr0, r0, r6\n.BB0_214:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_214\n.BB0_215:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_189\n\tjump\t@.BB0_188\n.BB0_217:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[7], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t64, r5, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_218:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_222\n\tadd\t96, r0, r4\n\tadd\t128, r0, r1\n.BB0_220:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_229\n.BB0_221:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_42[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_43[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t43, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_44[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_45[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_222:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\t63, r1, r1\n\tand\tr1, r4, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tsub!\tr1, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_5[0], r1, r6\n\tjump.gt\t@.BB0_108\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_108\n\tst.1\t64, r1\n\tand\t31, r3, r5\n\tst.1.inc\tr4, r3, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_227\n\tadd\tr0, r0, r8\n.BB0_226:\n\tshl.s\t5, r8, r9\n\tadd\tr1, r9, r10\n\tptr.add\tr6, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_226\n.BB0_227:\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB0_220\n\tshl.s\t5, r7, r7\n\tptr.add\tr6, r7, r6\n\tadd\tr1, r7, r7\n\tshl.s\t3, r5, r5\n\tld.1\tr7, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr7, r5\n\tjump\t@.BB0_220\n.BB0_229:\n\tld.1\tr4, r2\n\tsub!\tr2, r0, r4\n\tjump.ne\t@.BB0_252\n.BB0_230:\n\tld.1\t64, r2\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[7]\n\tadd\t4, r2, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_232\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_238\n.BB0_232:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_36[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_235\n\tadd\tr0, r0, r7\n.BB0_234:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_234\n.BB0_235:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_237\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[7], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_237:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_247\n.BB0_238:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[7], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.gt\t@.BB0_108\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_108\n\tadd\tstack-[3], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_129\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t@CPI0_37[0], r1, r1\n\tjump.gt\t@.BB0_108\n\tadd\tstack-[3], r0, r2\n\tadd\t256, r2, r1\n\tst.1\t64, r1\n\tadd\t96, r2, r3\n\tadd\tstack-[8], r0, r1\n\tadd\tr3, r0, stack-[2]\n\tst.1\tr3, r1\n\tadd\t64, r2, r3\n\tadd\tstack-[4], r0, r1\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr3, r1\n\tadd\tstack-[11], r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_246\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r6\n\tadd\t160, r6, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r6, r3\n\tst.1\tr3, r1\n\tadd\t224, r6, r1\n\tst.1\tr1, r0\n\tadd\t192, r6, r4\n\tst.1\tr4, r0\n\tadd\t@CPI0_40[0], r0, r5\n\tld.1\t64, r7\n\tst.1\tr7, r5\n\tld.1\tr6, r5\n\tand\t@CPI0_2[0], r5, r5\n\tadd\t4, r7, r6\n\tst.1\tr6, r5\n\tadd\tstack-[11], r0, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_2[0], r5, r5\n\tadd\t36, r7, r6\n\tst.1\tr6, r5\n\tadd\tstack-[1], r0, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_7[0], r5, r5\n\tadd\t68, r7, r6\n\tst.1\tr6, r5\n\tadd\tstack-[2], r0, r5\n\tld.1\tr5, r5\n\tand\t@CPI0_2[0], r5, r5\n\tadd\t100, r7, r6\n\tst.1\tr6, r5\n\tld.1\tr3, r3\n\tadd\t132, r7, r5\n\tst.1\tr5, r3\n\tld.1\tr2, r2\n\tadd\t164, r7, r3\n\tst.1\tr3, r2\n\tld.1\tr4, r2\n\tadd\t196, r7, r3\n\tst.1\tr3, r2\n\tld.1\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr7, r0, stack-[6]\n\tadd\t228, r7, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_246\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_255\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_261\n.BB0_246:\n\trevert\n.BB0_247:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_250\n\tadd\tr0, r0, r6\n.BB0_249:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_249\n.BB0_250:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_189\n\tjump\t@.BB0_188\n.BB0_252:\n\tadd\t@CPI0_35[0], r0, r4\n\tsub.s!\t32, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_35[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_129\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_129\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_221\n\tjump\t@.BB0_230\n.BB0_255:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[6], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_41[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_258\n\tadd\tr0, r0, r7\n.BB0_257:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_257\n.BB0_258:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_260\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[6], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_260:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_276\n.BB0_261:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[6], r1, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[11]\n\tsub.s!\t@CPI0_5[0], r4, r4\n\tjump.gt\t@.BB0_108\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_108\n\tadd\tstack-[11], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tadd\tstack-[9], r0, r4\n\tadd\tstack-[8], r0, r5\n\tjump.lt\t@.BB0_129\n\tadd\t@CPI0_30[0], r0, r2\n\tadd\tstack-[11], r0, r6\n\tst.1\tr6, r2\n\tadd\t4, r6, r2\n\tst.1\tr2, r5\n\tcontext.gas_left\tr2\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_272\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[11], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_36[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_268\n\tadd\tr0, r0, r7\n.BB0_267:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_267\n.BB0_268:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_270\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[11], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_270:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_281\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_272:\n\tadd\tstack-[11], r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_108\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_129\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[7], r2, r3\n\tjump.ge\t@.BB0_286\n.BB0_275:\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_276:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_279\n\tadd\tr0, r0, r6\n.BB0_278:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_278\n.BB0_279:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_189\n\tjump\t@.BB0_188\n.BB0_281:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_284\n\tadd\tr0, r0, r6\n.BB0_283:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_283\n.BB0_284:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_189\n\tjump\t@.BB0_188\n.BB0_286:\n\tadd\t1, r0, r3\n\tsstore\tr0, r3\n\tsub.s\tstack-[7], r2, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_84\n.func_end0:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t99, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI1_1[0], r1, r2\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI1_1[0], r2, r4\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_getAmountOut:\n.func_begin2:\n\tnop\tstack+=[13]\n\tadd\tr3, r0, stack-[11]\n\tadd\tr2, r0, stack-[9]\n\tadd\tr1, r0, stack-[10]\n\tadd\t1, r0, r2\n\tsload\tr2, r1\n\tld.1\t64, r8\n\tst.1.inc\tr8, r1, r9\n\tst.1\t0, r2\n\tadd\t@CPI2_0[0], r0, r4\n\tsub.s!\t10, r1, r2\n\tjump.lt\t@.BB2_1\n\tadd\tr0, r0, r5\n\tadd\tr9, r0, r2\n.BB2_3:\n\tsload\tr4, r3\n\tshr.s\t216, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t288, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t192, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t256, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t168, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t224, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t144, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t192, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t120, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t160, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t96, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t128, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t72, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t96, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t48, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t64, r2, r7\n\tst.1\tr7, r6\n\tshr.s\t24, r3, r6\n\tand\t@CPI2_1[0], r6, r6\n\tadd\t32, r2, r7\n\tst.1\tr7, r6\n\tand\t@CPI2_1[0], r3, r3\n\tst.1\tr2, r3\n\tadd\t10, r5, r3\n\tadd\t1, r4, r4\n\tadd\t320, r2, r2\n\tadd\t19, r5, r5\n\tsub!\tr5, r1, r5\n\tadd\tr3, r0, r5\n\tjump.lt\t@.BB2_3\n\tsload\tr4, r4\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_5\n.BB2_6:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_7\n.BB2_8:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_9\n.BB2_10:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_11\n.BB2_12:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_13\n.BB2_14:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_15\n.BB2_16:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_17\n.BB2_18:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_19\n.BB2_20:\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB2_21\n.BB2_22:\n\tsub!\tr3, r1, r1\n\tjump.ge\t@.BB2_24\n.BB2_23:\n\tshr.s\t216, r4, r1\n\tand\t@CPI2_1[0], r1, r1\n\tst.1.inc\tr2, r1, r2\n.BB2_24:\n\tsub\tr2, r8, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_2[0], r1, r3\n\tjump.gt\t@.BB2_26\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_26\n\tadd\tr9, r0, stack-[5]\n\tadd\tr8, r0, stack-[6]\n\tst.1\t64, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_5[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_29\n\tld\tr1, r1\n\tand\t@CPI2_6[0], r1, r10\n\tadd\tstack-[6], r0, r8\n\tld.1\tr8, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB2_31\n\tadd\tstack-[9], r0, r1\n\tand\t@CPI2_6[0], r1, r11\n\tadd\tstack-[10], r0, r1\n\tand\t@CPI2_6[0], r1, r12\n\tadd\tr0, r0, stack-[1]\n\tadd\tr0, r0, r14\n\tadd\tr0, r0, r15\n\tadd\tstack-[5], r0, r9\n\tadd\tr10, r0, stack-[4]\n\tadd\tr11, r0, stack-[3]\n\tadd\tr12, r0, stack-[2]\n.BB2_35:\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_7[0], r1, r2\n\tjump.gt\t@.BB2_26\n\tshl.s\t5, r15, r2\n\tadd\tr2, r9, r7\n\tld.1\tr7, r2\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tand\t@CPI2_1[0], r2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t64, r1, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r11\n\tst.1\tr1, r12\n\tadd\t128, r1, r5\n\tst.1\tr5, r0\n\tld.1\t64, r13\n\tadd\t@CPI2_8[0], r0, r6\n\tst.1\tr13, r6\n\tld.1\tr1, r1\n\tand\t@CPI2_6[0], r1, r1\n\tadd\t4, r13, r6\n\tst.1\tr6, r1\n\tld.1\tr4, r1\n\tand\t@CPI2_6[0], r1, r1\n\tadd\t36, r13, r4\n\tst.1\tr4, r1\n\tld.1\tr2, r1\n\tadd\t68, r13, r2\n\tst.1\tr2, r1\n\tld.1\tr3, r1\n\tand\t@CPI2_1[0], r1, r1\n\tadd\t100, r13, r2\n\tst.1\tr2, r1\n\tld.1\tr5, r1\n\tand\t@CPI2_6[0], r1, r1\n\tadd\t132, r13, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r10, r2\n\tjump.ne\t@.BB2_38\n\tcontext.sp\tr5\n\tsub.s\t13, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[13]\n\tjump\t@.BB2_44\n.BB2_38:\n\tadd\tr7, r0, stack-[7]\n\tadd\tr15, r0, stack-[9]\n\tadd\tr14, r0, stack-[10]\n\tsub.s!\t@CPI2_4[0], r1, r2\n\tadd\t@CPI2_4[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI2_4[0], r13, r2\n\tadd\tr3, r0, r2\n\tadd.lt\tr13, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI2_9[0], r1, r1\n\tadd\tr10, r0, r2\n\tadd\tr13, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_4[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tadd\tstack-[8], r0, r13\n\tjump.eq\t@.BB2_62\n\tadd\tr0, r0, r6\n.BB2_40:\n\tshl.s\t5, r6, r7\n\tadd\tr13, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_40\n.BB2_62:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB2_42\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr13, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB2_42:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tcontext.sp\tr5\n\tsub.s\t12, r5, r5\n\tshl.s\t5, r5, r5\n\tadd\t0, r0, stack-[12]\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r9\n\tadd\tstack-[4], r0, r10\n\tadd\tstack-[3], r0, r11\n\tadd\tstack-[2], r0, r12\n\tadd\tstack-[10], r0, r14\n\tadd\tstack-[9], r0, r15\n\tjump.eq\t@.BB2_49\n\tadd\tstack-[6], r0, r8\n\tadd\tstack-[7], r0, r7\n.BB2_44:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r13, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_2[0], r1, r4\n\tjump.gt\t@.BB2_26\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_26\n\tst.1\t64, r1\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB2_47\n\tld.1\tr13, r1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tsub!\tr1, r14, r2\n\tjump.le\t@.BB2_59\n\tld.1\tr8, r2\n\tsub!\tr2, r15, r2\n\tjump.le\t@.BB2_57\n\tld.1\tr7, r2\n\tand\t@CPI2_1[0], r2, stack-[1]\n\tadd\tr1, r0, r14\n\tjump\t@.BB2_59\n.BB2_49:\n\tsub!\tr3, r0, r2\n\tadd\tstack-[6], r0, r8\n\tjump.eq\t@.BB2_59\n\tadd\t31, r3, r2\n\tand\t@CPI2_10[0], r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI2_11[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI2_2[0], r4, r6\n\tjump.gt\t@.BB2_26\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB2_26\n\tst.1\t64, r4\n\tst.1.inc\tr2, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB2_61\n\tadd\tr0, r0, r5\n.BB2_54:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB2_54\n.BB2_61:\n\tand!\t31, r3, r3\n\tjump.eq\t@.BB2_59\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr2, r4, r2\n\tshl.s\t3, r3, r3\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB2_59:\n\tand\t255, r15, r1\n\tsub.s!\t255, r1, r2\n\tjump.eq\t@.BB2_60\n\tadd\t1, r1, r15\n\tld.1\tr8, r1\n\tsub!\tr15, r1, r1\n\tjump.lt\t@.BB2_35\n\tadd\tr14, r0, r1\n\tadd\tstack-[1], r0, r2\n\tret\n.BB2_1:\n\tadd\tr9, r0, r2\n\tadd\tr0, r0, r3\n\tsload\tr4, r4\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_6\n.BB2_5:\n\tand\t@CPI2_1[0], r4, r5\n\tst.1.inc\tr2, r5, r2\n\tor\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_8\n.BB2_7:\n\tshr.s\t24, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_10\n.BB2_9:\n\tshr.s\t48, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_12\n.BB2_11:\n\tshr.s\t72, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_14\n.BB2_13:\n\tshr.s\t96, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_16\n.BB2_15:\n\tshr.s\t120, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_18\n.BB2_17:\n\tshr.s\t144, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_20\n.BB2_19:\n\tshr.s\t168, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.ge\t@.BB2_22\n.BB2_21:\n\tshr.s\t192, r4, r5\n\tand\t@CPI2_1[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB2_23\n\tjump\t@.BB2_24\n.BB2_31:\n\tadd\tr0, r0, r14\n\tadd\tr0, r0, stack-[1]\n\tadd\tr14, r0, r1\n\tadd\tstack-[1], r0, r2\n\tret\n.BB2_26:\n\tadd\t@CPI2_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_60:\n\tadd\t@CPI2_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_47:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_57:\n\tadd\t@CPI2_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_29:\n\trevert\n.func_end2:\n\n__cxa_throw:\n.func_begin3:\n\trevert\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__system_request:\n.func_begin5:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t5, r3, r1\n\tjump.lt\t@.BB5_4\n\tadd\t4, r0, r1\n\tadd\tr0, r0, r2\n.BB5_3:\n\tshl.s\t5, r2, r6\n\tadd\tr4, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\tstack[r6], r0, r6\n\tst.2.inc\tr1, r6, r1\n\tadd\t1, r2, r2\n\tsub!\tr1, r3, r6\n\tjump.lt\t@.BB5_3\n.BB5_4:\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI5_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_5\n\tld\tr1, r1\n\tret\n.BB5_5:\n\trevert\n.func_end5:\n\n__farcall:\n.func_begin6:\n.tmp0:\n\tfar_call\tr1, r2, @.BB6_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n__staticcall:\n.func_begin7:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB7_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_4:\nCPI4_0:\nCPI5_0:\n\t.cell 4294967295\nCPI0_1:\nCPI2_10:\n\t.cell 8589934560\nCPI0_2:\nCPI1_1:\nCPI2_6:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 18446744073709551616\nCPI0_4:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_5:\nCPI2_2:\n\t.cell 18446744073709551615\nCPI0_6:\n\t.cell 18446744073709551608\nCPI0_7:\nCPI2_1:\n\t.cell 16777215\nCPI0_8:\n\t.cell 53919893334301279589334030174039261367556698453455181869024116998144\nCPI0_9:\n\t.cell 3096207248\nCPI0_10:\n\t.cell 3334198694\nCPI0_11:\n\t.cell 3334198695\nCPI0_12:\n\t.cell 4169656896\nCPI0_13:\n\t.cell 3096207249\nCPI0_14:\n\t.cell 3294232917\nCPI0_15:\n\t.cell 1404438964\nCPI0_16:\n\t.cell 1404438965\nCPI0_17:\n\t.cell 2469487122\nCPI0_18:\n\t.cell 588174410\nCPI0_19:\n\t.cell 1252025938\nCPI0_20:\nCPI2_3:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_21:\n\t.cell 2535301202817642044428229017600\nCPI0_22:\nCPI2_0:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_23:\n\t.cell 18446744073709551487\nCPI0_24:\nCPI2_5:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_25:\n\t.cell 10221089543101777846074375522904223940155837796292731536049921492511109414912\nCPI0_26:\n\t.cell 7922816251426433759354395033600\nCPI0_27:\n\t.cell 2535301200456458802993406410752\nCPI0_28:\n\t.cell 6866598664320599498334448474708077959941888226986720410818909447117393100800\nCPI0_29:\n\t.cell 316912652418240591808998408192\nCPI0_30:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_31:\n\t.cell 2852213852874699394802404818944\nCPI0_32:\n\t.cell -15656161302665159201809893145089448837013829615782376627744606809190320570368\nCPI0_33:\n\t.cell 5387515050969974956360988622848\nCPI0_34:\n\t.cell 4238056678808933066457772256406219440718756300954938350892797929791311314944\nCPI0_35:\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_36:\nCPI2_13:\n\t.cell 2852213850513516153367582212096\nCPI0_37:\n\t.cell 18446744073709551359\nCPI0_38:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_39:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_40:\n\t.cell 29534529505645657575622816239973483230930741244044994176993982059187126927360\nCPI0_41:\n\t.cell 20599322253708727774321427087360\nCPI0_42:\n\t.cell 51760601895118413838233596500050494314042057571697019455072807568187477458944\nCPI0_43:\n\t.cell 38196372293521921434392468485229502251335822328770176902730163593594462630000\nCPI0_44:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_45:\n\t.cell 10458117451882892562347801444352\nCPI0_46:\n\t.cell 35429475147661123863461723620269735019309877171209831914498514059540773732352\nCPI0_47:\n\t.cell 38641673103035791731730573789310789826262103877898994355067661166756864674117\nCPI0_48:\nCPI2_7:\n\t.cell 18446744073709551455\nCPI0_49:\n\t.cell -30245879911314267425844932417202330606147352457260150592787234755548133982208\nCPI0_50:\nCPI2_9:\n\t.cell 12993418652339351365341207855104\nCPI0_51:\nCPI2_11:\n\t.cell 17179869152\nCPI0_52:\nCPI2_12:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI2_8:\n\t.cell -25942598790893976812176164099192948789763189750069460032025750531548402155520\nCPI5_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n","bytecode":{"object":""},"methodIdentifiers":{"factory()":"c45a0155","feeTiers(uint256)":"230ed44a","getAmountIn(address,address,uint256)":"53b609b5","getAmountOut(address,address,uint256)":"4aa06652","quoter()":"c6bbd5a7","router()":"f887ea40","swap(address,address,address)":"93316212","validatePair(address,address)":"b88c5f91"}},"irOptimized":"/// @use-src 10:\"contracts/base/Lockable.sol\", 11:\"contracts/integrations/PancakeswapV3DEXIntegration.sol\", 14:\"contracts/interfaces/IDEXIntegration.sol\"\nobject \"PancakeswapV3DEXIntegration_1203\" {\n    code {\n        {\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let _1 := memoryguard(0xe0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PancakeswapV3DEXIntegration_1203\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            let value2 := abi_decode_address_fromMemory(add(_1, 64))\n            /// @src 10:122:123  \"1\"\n            let _2 := 0x01\n            /// @src -1:-1:-1\n            let _3 := 0\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            sstore(/** @src -1:-1:-1 */ _3, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:761:779  \"factory = _factory\"\n            mstore(128, value0)\n            /// @src 11:789:805  \"quoter = _quoter\"\n            mstore(160, value1)\n            /// @src 11:815:831  \"router = _router\"\n            mstore(192, value2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let oldLen := sload(/** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let _4 := 18446744073709551616\n            if iszero(lt(oldLen, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            let _5 := add(oldLen, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            sstore(/** @src 10:122:123  \"1\" */ _2, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _5)\n            if iszero(lt(oldLen, _5))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            mstore(/** @src -1:-1:-1 */ _3, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let data := keccak256(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n            let _6 := 10\n            let slot := add(data, div(oldLen, _6))\n            let _7 := 3\n            let _8 := sload(slot)\n            let shiftBits := shl(_7, mul(mod(oldLen, _6), _7))\n            let _9 := 0xffffff\n            let mask := shl(shiftBits, _9)\n            sstore(slot, or(and(_8, not(mask)), and(shl(shiftBits, 100), mask)))\n            let oldLen_1 := sload(/** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            if iszero(lt(oldLen_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            let _10 := add(oldLen_1, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            sstore(/** @src 10:122:123  \"1\" */ _2, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _10)\n            if iszero(lt(oldLen_1, _10))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            mstore(/** @src -1:-1:-1 */ _3, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let data_1 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n            let slot_1 := add(data_1, div(oldLen_1, _6))\n            let _11 := sload(slot_1)\n            let shiftBits_1 := shl(_7, mul(mod(oldLen_1, _6), _7))\n            let mask_1 := shl(shiftBits_1, _9)\n            sstore(slot_1, or(and(_11, not(mask_1)), and(shl(shiftBits_1, 500), mask_1)))\n            let oldLen_2 := sload(/** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            if iszero(lt(oldLen_2, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            let _12 := add(oldLen_2, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            sstore(/** @src 10:122:123  \"1\" */ _2, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _12)\n            if iszero(lt(oldLen_2, _12))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            mstore(/** @src -1:-1:-1 */ _3, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let data_2 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n            let slot_2 := add(data_2, div(oldLen_2, _6))\n            let _13 := sload(slot_2)\n            let shiftBits_2 := shl(_7, mul(mod(oldLen_2, _6), _7))\n            let mask_2 := shl(shiftBits_2, _9)\n            sstore(slot_2, or(and(_13, not(mask_2)), and(shl(shiftBits_2, 2500), mask_2)))\n            let oldLen_3 := sload(/** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            if iszero(lt(oldLen_3, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            let _14 := add(oldLen_3, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            sstore(/** @src 10:122:123  \"1\" */ _2, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _14)\n            if iszero(lt(oldLen_3, _14))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n            }\n            mstore(/** @src -1:-1:-1 */ _3, /** @src 10:122:123  \"1\" */ _2)\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            let data_3 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n            let slot_3 := add(data_3, div(oldLen_3, _6))\n            let _15 := sload(slot_3)\n            let shiftBits_3 := shl(_7, mul(mod(oldLen_3, _6), _7))\n            let mask_3 := shl(shiftBits_3, _9)\n            sstore(slot_3, or(and(_15, not(mask_3)), and(shl(shiftBits_3, 10000), mask_3)))\n            let _16 := mload(64)\n            let _17 := datasize(\"PancakeswapV3DEXIntegration_1203_deployed\")\n            codecopy(_16, dataoffset(\"PancakeswapV3DEXIntegration_1203_deployed\"), _17)\n            setimmutable(_16, \"680\", mload(/** @src 11:761:779  \"factory = _factory\" */ 128))\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            setimmutable(_16, \"682\", mload(/** @src 11:789:805  \"quoter = _quoter\" */ 160))\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            setimmutable(_16, \"684\", mload(/** @src 11:815:831  \"router = _router\" */ 192))\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            return(_16, _17)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 10:\"contracts/base/Lockable.sol\", 11:\"contracts/integrations/PancakeswapV3DEXIntegration.sol\", 22:\"contracts/libraries/TransferHelper.sol\"\n    object \"PancakeswapV3DEXIntegration_1203_deployed\" {\n        code {\n            {\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x230ed44a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 11:656:680  \"uint24[] public feeTiers\"\n                        if iszero(lt(value, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sload(1)))\n                        /// @src 11:656:680  \"uint24[] public feeTiers\"\n                        {\n                            revert(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0, 0)\n                        }\n                        mstore(0, 1)\n                        mstore(_1, and(shr(shl(3, mul(mod(value, 10), 3)), sload(add(80084422859880547211683076133703299733277748156566366325829078699459944778998, div(value, 10)))), 0xffffff))\n                        return(_1, 32)\n                    }\n                    case 0x4aa06652 {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 11:4383:4428  \"_getAmountOut(_tokenIn, _tokenOut, _amountIn)\"\n                        let expr_component, expr_component_1 := fun_getAmountOut(param, param_1, param_2)\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, expr_component)\n                        return(memPos, 32)\n                    }\n                    case 0x53b609b5 {\n                        if callvalue() { revert(0, 0) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 11:4624:4669  \"_getAmountIn(_tokenIn, _tokenOut, _amountOut)\"\n                        let var_amountIn := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                        /// @src 11:3220:3256  \"uint24[] memory _feeTiers = feeTiers\"\n                        let var_feeTiers_mpos := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ copy_array_from_storage_to_memory_array_uint24_dyn()\n                        /// @src 11:3305:3316  \"uint8 i = 0\"\n                        let var_i := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                        let _2 := sub(shl(160, 1), 1)\n                        let _3 := and(/** @src 11:3284:3290  \"quoter\" */ loadimmutable(\"682\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _2)\n                        /// @src 11:3300:4186  \"for (uint8 i = 0; i < _feeTiers.length; i++) {...\"\n                        for { }\n                        /** @src 11:3248:3256  \"feeTiers\" */ 0x01\n                        /// @src 11:3305:3316  \"uint8 i = 0\"\n                        {\n                            /// @src 11:3340:3343  \"i++\"\n                            var_i := increment_uint8(var_i)\n                        }\n                        {\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            let _4 := mload(/** @src 11:3322:3338  \"_feeTiers.length\" */ var_feeTiers_mpos)\n                            /// @src 11:3318:3338  \"i < _feeTiers.length\"\n                            let _5 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:3318:3338  \"i < _feeTiers.length\" */ var_i, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0xff)\n                            /// @src 11:3318:3338  \"i < _feeTiers.length\"\n                            if iszero(lt(_5, _4)) { break }\n                            /// @src 11:3359:3379  \"uint256 tempAmountIn\"\n                            let var_tempAmountIn := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                            let cleaned := and(mload(/** @src 11:3704:3716  \"_feeTiers[i]\" */ memory_array_index_access_uint24_dyn(var_feeTiers_mpos, _5)), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0xffffff)\n                            let memPtr := mload(64)\n                            finalize_allocation_7585(memPtr)\n                            mstore(memPtr, and(param_3, _2))\n                            /// @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\"\n                            let _6 := 32\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            mstore(/** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ add(memPtr, _6), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(param_4, _2))\n                            mstore(/** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ add(memPtr, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 64), param_5)\n                            mstore(/** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ add(memPtr, 96), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ cleaned)\n                            mstore(/** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ add(memPtr, 128), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0)\n                            /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                            let _7 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                            /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                            mstore(_7, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(225, 0x5e90b825))\n                            abi_encode_struct_QuoteExactInputSingleParams(memPtr, /** @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\" */ add(_7, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4))\n                            /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                            let trySuccessCondition := staticcall(gas(), _3, _7, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 164, /** @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\" */ _7, /** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ _6)\n                            /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                            let expr := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                            /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                            if trySuccessCondition\n                            {\n                                let _8 := /** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ _6\n                                /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                                if gt(/** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ _6, /** @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\" */ returndatasize()) { _8 := returndatasize() }\n                                finalize_allocation(_7, _8)\n                                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                                if slt(sub(/** @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\" */ add(_7, _8), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _7), /** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ _6)\n                                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                                { revert(0, 0) }\n                                /// @src 11:3413:3803  \"IUniswapV3StaticQuoter(_quoter).quoteExactOutputSingle(...\"\n                                expr := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_7)\n                            }\n                            /// @src 11:3393:3973  \"try...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 11:3854:3870  \"tempAmountIn = t\"\n                                var_tempAmountIn := expr\n                            }\n                            default /// @src 11:3393:3973  \"try...\"\n                            {\n                                /// @src 11:3886:3973  \"catch (bytes memory /*lowLevelData*\\/) {...\"\n                                pop(extract_returndata())\n                                /// @src 11:3942:3958  \"tempAmountIn = 0\"\n                                var_tempAmountIn := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                            }\n                            /// @src 11:4007:4069  \"amountIn == 0 || (tempAmountIn > 0 && tempAmountIn < amountIn)\"\n                            let expr_1 := /** @src 11:4007:4020  \"amountIn == 0\" */ iszero(var_amountIn)\n                            /// @src 11:4007:4069  \"amountIn == 0 || (tempAmountIn > 0 && tempAmountIn < amountIn)\"\n                            if iszero(expr_1)\n                            {\n                                /// @src 11:4025:4068  \"tempAmountIn > 0 && tempAmountIn < amountIn\"\n                                let expr_2 := /** @src 11:4025:4041  \"tempAmountIn > 0\" */ iszero(iszero(var_tempAmountIn))\n                                /// @src 11:4025:4068  \"tempAmountIn > 0 && tempAmountIn < amountIn\"\n                                if expr_2\n                                {\n                                    expr_2 := /** @src 11:4045:4068  \"tempAmountIn < amountIn\" */ lt(var_tempAmountIn, var_amountIn)\n                                }\n                                /// @src 11:4007:4069  \"amountIn == 0 || (tempAmountIn > 0 && tempAmountIn < amountIn)\"\n                                expr_1 := expr_2\n                            }\n                            /// @src 11:3986:4176  \"if (...\"\n                            if expr_1\n                            {\n                                /// @src 11:4102:4125  \"amountIn = tempAmountIn\"\n                                var_amountIn := var_tempAmountIn\n                                /// @src 11:4149:4161  \"_feeTiers[i]\"\n                                pop(memory_array_index_access_uint24_dyn(var_feeTiers_mpos, _5))\n                            }\n                        }\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, var_amountIn)\n                        return(memPos_1, /** @src 11:3489:3785  \"IUniswapV3StaticQuoter.QuoteExactOutputSingleParams({...\" */ 32)\n                    }\n                    case /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x93316212 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value1 := abi_decode_address_7587()\n                        let value_1 := calldataload(68)\n                        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        /// @src 10:177:211  \"if (unlocked != 1) revert Locked()\"\n                        if /** @src 10:181:194  \"unlocked != 1\" */ iszero(eq(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sload(0), /** @src 10:193:194  \"1\" */ 0x01))\n                        /// @src 10:177:211  \"if (unlocked != 1) revert Locked()\"\n                        {\n                            /// @src 10:203:211  \"Locked()\"\n                            let _9 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                            /// @src 10:203:211  \"Locked()\"\n                            mstore(_9, shl(226, 0x03cb96db))\n                            revert(_9, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4)\n                        }\n                        sstore(0, 0)\n                        /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                        let _10 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                        /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                        mstore(_10, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\" */ add(_10, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4), /** @src 11:4891:4895  \"this\" */ address())\n                        /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                        let _11 := staticcall(gas(), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:4856:4872  \"IERC20(_tokenIn)\" */ value0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)), /** @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\" */ _10, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36, /** @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\" */ _10, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n                        /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                        if iszero(_11)\n                        {\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                        let expr_3 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                        /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                        if _11\n                        {\n                            let _12 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32\n                            /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                            if gt(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32, /** @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_10, _12)\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            if slt(sub(/** @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\" */ add(_10, _12), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _10), 32) { revert(0, 0) }\n                            /// @src 11:4856:4897  \"IERC20(_tokenIn).balanceOf(address(this))\"\n                            expr_3 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_10)\n                        }\n                        /// @src 11:4946:4990  \"_getAmountOut(_tokenIn, _tokenOut, amountIn)\"\n                        let expr_component_2, expr_component_3 := fun_getAmountOut(value0, value1, expr_3)\n                        /// @src 11:5021:5045  \"amountOut > 0 && fee > 0\"\n                        let expr_4 := /** @src 11:5021:5034  \"amountOut > 0\" */ iszero(iszero(expr_component_2))\n                        /// @src 11:5021:5045  \"amountOut > 0 && fee > 0\"\n                        if expr_4\n                        {\n                            expr_4 := /** @src 11:5038:5045  \"fee > 0\" */ iszero(iszero(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:5038:5045  \"fee > 0\" */ expr_component_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0xffffff)))\n                        }\n                        if iszero(expr_4)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 48)\n                            mstore(add(memPtr_1, 68), \"UniswapV3Integration: INSUFFICIE\")\n                            mstore(add(memPtr_1, 100), \"NT_OUTPUT_AMOUNT\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                        let _13 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                        /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                        mstore(_13, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(225, 0x6eb1769f))\n                        mstore(/** @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\" */ add(_13, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4), /** @src 11:4891:4895  \"this\" */ address())\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        mstore(add(/** @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\" */ _13, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36), and(/** @src 11:5148:5154  \"router\" */ loadimmutable(\"684\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                        let _14 := staticcall(gas(), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:4856:4872  \"IERC20(_tokenIn)\" */ value0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)), /** @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\" */ _13, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 68, /** @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\" */ _13, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n                        /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                        if iszero(_14)\n                        {\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                        let expr_5 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                        /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                        if _14\n                        {\n                            let _15 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32\n                            /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                            if gt(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32, /** @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\" */ returndatasize()) { _15 := returndatasize() }\n                            finalize_allocation(_13, _15)\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            if slt(sub(/** @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\" */ add(_13, _15), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _13), 32) { revert(0, 0) }\n                            /// @src 11:5168:5218  \"IERC20(_tokenIn).allowance(address(this), _router)\"\n                            expr_5 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_13)\n                        }\n                        /// @src 11:5164:5314  \"if (IERC20(_tokenIn).allowance(address(this), _router) == 0) {...\"\n                        if /** @src 11:5168:5223  \"IERC20(_tokenIn).allowance(address(this), _router) == 0\" */ iszero(expr_5)\n                        /// @src 11:5164:5314  \"if (IERC20(_tokenIn).allowance(address(this), _router) == 0) {...\"\n                        {\n                            /// @src 22:422:469  \"abi.encodeWithSelector(0x095ea7b3, _to, _value)\"\n                            let expr_mpos := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                            /// @src 22:422:469  \"abi.encodeWithSelector(0x095ea7b3, _to, _value)\"\n                            mstore(add(expr_mpos, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32), shl(224, 0x095ea7b3))\n                            mstore(/** @src 22:422:469  \"abi.encodeWithSelector(0x095ea7b3, _to, _value)\" */ add(expr_mpos, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36), and(/** @src 11:5148:5154  \"router\" */ loadimmutable(\"684\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                            mstore(add(/** @src 22:422:469  \"abi.encodeWithSelector(0x095ea7b3, _to, _value)\" */ expr_mpos, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 68), /** @src 11:5285:5302  \"type(uint256).max\" */ not(0))\n                            /// @src 22:422:469  \"abi.encodeWithSelector(0x095ea7b3, _to, _value)\"\n                            mstore(expr_mpos, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 68)\n                            if or(gt(add(expr_mpos, 128), 0xffffffffffffffff), lt(add(expr_mpos, 128), expr_mpos))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            mstore(64, add(expr_mpos, 128))\n                            /// @src 22:397:479  \"_token.call(...\"\n                            let expr_component_4 := call(gas(), value0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0, /** @src 22:422:469  \"abi.encodeWithSelector(0x095ea7b3, _to, _value)\" */ add(expr_mpos, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32), /** @src 22:397:479  \"_token.call(...\" */ mload(expr_mpos), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0, 0)\n                            /// @src 22:397:479  \"_token.call(...\"\n                            let expr_component_mpos := extract_returndata()\n                            /// @src 22:510:567  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                            let expr_6 := expr_component_4\n                            if expr_component_4\n                            {\n                                /// @src 22:522:533  \"data.length\"\n                                let expr_7 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(/** @src 22:522:533  \"data.length\" */ expr_component_mpos)\n                                /// @src 22:522:566  \"data.length == 0 || abi.decode(data, (bool))\"\n                                let expr_8 := /** @src 22:522:538  \"data.length == 0\" */ iszero(expr_7)\n                                /// @src 22:522:566  \"data.length == 0 || abi.decode(data, (bool))\"\n                                if iszero(expr_8)\n                                {\n                                    /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                                    if slt(sub(/** @src 22:542:566  \"abi.decode(data, (bool))\" */ add(expr_component_mpos, expr_7), expr_component_mpos), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32) { revert(0, 0) }\n                                    let value_2 := mload(/** @src 22:542:566  \"abi.decode(data, (bool))\" */ add(expr_component_mpos, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32))\n                                    if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n                                    /// @src 22:522:566  \"data.length == 0 || abi.decode(data, (bool))\"\n                                    expr_8 := value_2\n                                }\n                                /// @src 22:510:567  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                                expr_6 := expr_8\n                            }\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            if iszero(expr_6)\n                            {\n                                let memPtr_2 := mload(64)\n                                mstore(memPtr_2, shl(229, 4594637))\n                                mstore(add(memPtr_2, 4), 32)\n                                mstore(add(memPtr_2, 36), 43)\n                                mstore(add(memPtr_2, 68), \"TransferHelper::safeApprove: app\")\n                                mstore(add(memPtr_2, 100), \"rove failed\")\n                                revert(memPtr_2, 132)\n                            }\n                        }\n                        /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        let _16 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                        /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        mstore(_16, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\" */ add(_16, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4), and(value_1, sub(shl(160, 1), 1)))\n                        /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        let _17 := staticcall(gas(), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:5349:5366  \"IERC20(_tokenOut)\" */ value1, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)), /** @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\" */ _16, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36, /** @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\" */ _16, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n                        /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        if iszero(_17)\n                        {\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        let expr_9 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                        /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        if _17\n                        {\n                            let _18 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32\n                            /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                            if gt(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32, /** @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\" */ returndatasize()) { _18 := returndatasize() }\n                            finalize_allocation(_16, _18)\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            if slt(sub(/** @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\" */ add(_16, _18), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _16), 32) { revert(0, 0) }\n                            /// @src 11:5349:5381  \"IERC20(_tokenOut).balanceOf(_to)\"\n                            expr_9 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_16)\n                        }\n                        let memPtr_3 := mload(64)\n                        if or(gt(add(memPtr_3, 256), 0xffffffffffffffff), lt(add(memPtr_3, 256), memPtr_3))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, add(memPtr_3, 256))\n                        mstore(memPtr_3, and(/** @src 11:4856:4872  \"IERC20(_tokenIn)\" */ value0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32), and(/** @src 11:5349:5366  \"IERC20(_tokenOut)\" */ value1, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 64), and(expr_component_3, 0xffffff))\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 96), and(value_1, sub(shl(160, 1), 1)))\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, 128), /** @src 11:5635:5650  \"block.timestamp\" */ timestamp())\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, 160), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ expr_3)\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, 192), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0)\n                        mstore(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 224), 0)\n                        /// @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\"\n                        let _19 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                        /// @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\"\n                        mstore(_19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x414bf389))\n                        mstore(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ add(_19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4), and(mload(memPtr_3), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36), and(mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 68), and(mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 64)), 0xffffff))\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 100), and(mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 96)), sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 132), mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, 128)))\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 164), mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, 160)))\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 196), mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, 192)))\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        mstore(add(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 228), and(mload(/** @src 11:5442:5776  \"ISwapRouter.ExactInputSingleParams({...\" */ add(memPtr_3, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 224)), sub(shl(160, 1), 1)))\n                        /// @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\"\n                        let _20 := call(gas(), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:5148:5154  \"router\" */ loadimmutable(\"684\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)), 0, /** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 260, /** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ _19, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n                        /// @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\"\n                        if iszero(_20)\n                        {\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\"\n                        if _20\n                        {\n                            let _21 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32\n                            /// @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\"\n                            if gt(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32, /** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ returndatasize()) { _21 := returndatasize() }\n                            finalize_allocation(_19, _21)\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            if slt(sub(/** @src 11:5391:5786  \"ISwapRouter(_router).exactInputSingle(...\" */ add(_19, _21), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _19), 32) { revert(0, 0) }\n                        }\n                        /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        let _22 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(64)\n                        /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        mstore(_22, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\" */ add(_22, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 4), and(value_1, sub(shl(160, 1), 1)))\n                        /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        let _23 := staticcall(gas(), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:5349:5366  \"IERC20(_tokenOut)\" */ value1, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)), /** @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\" */ _22, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36, /** @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\" */ _22, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32)\n                        /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        if iszero(_23)\n                        {\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, 0, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        let expr_10 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                        /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                        if _23\n                        {\n                            let _24 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32\n                            /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                            if gt(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 32, /** @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_22, _24)\n                            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                            if slt(sub(/** @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\" */ add(_22, _24), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _22), 32) { revert(0, 0) }\n                            /// @src 11:5815:5847  \"IERC20(_tokenOut).balanceOf(_to)\"\n                            expr_10 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_22)\n                        }\n                        if lt(expr_10, expr_9)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(0, /** @src 10:193:194  \"1\" */ 0x01)\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, sub(expr_10, expr_9))\n                        return(memPos_2, 32)\n                    }\n                    case 0xb88c5f91 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let ret := fun_validatePair(value0_1, abi_decode_address_7587())\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, iszero(iszero(ret)))\n                        return(memPos_3, 32)\n                    }\n                    case 0xc45a0155 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, and(/** @src 11:487:519  \"address public immutable factory\" */ loadimmutable(\"680\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_4, 32)\n                    }\n                    case 0xc6bbd5a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, and(/** @src 11:525:556  \"address public immutable quoter\" */ loadimmutable(\"682\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_5, 32)\n                    }\n                    case 0xf887ea40 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, and(/** @src 11:619:650  \"address public immutable router\" */ loadimmutable(\"684\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_7587() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_7585(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_array_uint24_dyn() -> memPtr\n            {\n                let _1 := 64\n                memPtr := mload(_1)\n                let pos := memPtr\n                /// @src 11:3248:3256  \"feeTiers\"\n                let _2 := 0x01\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                let length := sload(/** @src 11:3248:3256  \"feeTiers\" */ _2)\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                mstore(memPtr, length)\n                let _3 := 0x20\n                pos := add(memPtr, _3)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                let srcPtr := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                let itemCounter := /** @src -1:-1:-1 */ 0\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                for { }\n                lt(add(itemCounter, 9), length)\n                {\n                    itemCounter := add(itemCounter, 10)\n                }\n                {\n                    let data := sload(srcPtr)\n                    let _4 := 0xffffff\n                    mstore(pos, and(data, _4))\n                    mstore(add(pos, _3), and(shr(24, data), _4))\n                    mstore(add(pos, _1), and(shr(48, data), _4))\n                    let _5 := 96\n                    mstore(add(pos, _5), and(shr(72, data), _4))\n                    mstore(add(pos, 128), and(shr(_5, data), _4))\n                    mstore(add(pos, 160), and(shr(120, data), _4))\n                    let _6 := 192\n                    mstore(add(pos, _6), and(shr(144, data), _4))\n                    mstore(add(pos, 224), and(shr(168, data), _4))\n                    mstore(add(pos, 256), and(shr(_6, data), _4))\n                    mstore(add(pos, 288), and(shr(216, data), _4))\n                    pos := add(pos, 320)\n                    srcPtr := add(srcPtr, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                let data_1 := sload(srcPtr)\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(data_1, 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(24, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(48, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(72, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(96, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(120, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(144, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(168, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(192, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                    itemCounter := add(itemCounter, /** @src 11:3248:3256  \"feeTiers\" */ _2)\n                }\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, and(shr(216, data_1), 0xffffff))\n                    pos := add(pos, _3)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            function increment_uint8(value) -> ret\n            {\n                let value_1 := and(value, 0xff)\n                if eq(value_1, 0xff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value_1, 1)\n            }\n            function memory_array_index_access_uint24_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 846 @src 11:1344:1954  \"function validatePair(...\"\n            function fun_validatePair(var_tokenIn, var_tokenOut) -> var\n            {\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 11:1477:1498  \"_tokenIn == _tokenOut\" */ var_tokenOut, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _1)\n                let _3 := and(/** @src 11:1477:1498  \"_tokenIn == _tokenOut\" */ var_tokenIn, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _1)\n                /// @src 11:1473:1537  \"if (_tokenIn == _tokenOut) {...\"\n                if /** @src 11:1477:1498  \"_tokenIn == _tokenOut\" */ eq(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _3, _2)\n                /// @src 11:1473:1537  \"if (_tokenIn == _tokenOut) {...\"\n                {\n                    /// @src 11:1514:1526  \"return false\"\n                    var := /** @src 11:1521:1526  \"false\" */ 0x00\n                    /// @src 11:1514:1526  \"return false\"\n                    leave\n                }\n                /// @src 11:1546:1582  \"uint24[] memory _feeTiers = feeTiers\"\n                let var_feeTiers_mpos := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ copy_array_from_storage_to_memory_array_uint24_dyn()\n                /// @src 11:1633:1644  \"uint8 i = 0\"\n                let var_i := /** @src 11:1643:1644  \"0\" */ 0x00\n                /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                let _4 := and(/** @src 11:1611:1618  \"factory\" */ loadimmutable(\"680\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _1)\n                /// @src 11:1628:1926  \"for (uint8 i = 0; i < _feeTiers.length; i++) {...\"\n                for { }\n                /** @src 11:1574:1582  \"feeTiers\" */ 0x01\n                /// @src 11:1633:1644  \"uint8 i = 0\"\n                {\n                    /// @src 11:1668:1671  \"i++\"\n                    var_i := increment_uint8(var_i)\n                }\n                {\n                    /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                    let _5 := mload(/** @src 11:1650:1666  \"_feeTiers.length\" */ var_feeTiers_mpos)\n                    /// @src 11:1646:1666  \"i < _feeTiers.length\"\n                    let _6 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:1646:1666  \"i < _feeTiers.length\" */ var_i, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0xff)\n                    /// @src 11:1646:1666  \"i < _feeTiers.length\"\n                    if iszero(lt(_6, _5)) { break }\n                    /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                    let cleaned := and(mload(/** @src 11:1808:1820  \"_feeTiers[i]\" */ memory_array_index_access_uint24_dyn(var_feeTiers_mpos, _6)), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0xffffff)\n                    let _7 := 64\n                    /// @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\"\n                    let _8 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_7)\n                    /// @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\"\n                    mstore(_8, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(225, 0x0b4c7741))\n                    mstore(/** @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\" */ add(_8, 4), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _3)\n                    mstore(add(/** @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\" */ _8, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 36), _2)\n                    mstore(add(/** @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\" */ _8, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 68), cleaned)\n                    /// @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\"\n                    let _9 := 32\n                    let _10 := staticcall(gas(), _4, _8, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 100, /** @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\" */ _8, _9)\n                    if iszero(_10)\n                    {\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        let pos := mload(_7)\n                        returndatacopy(pos, /** @src 11:1643:1644  \"0\" */ 0x00, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\"\n                    let expr := /** @src 11:1643:1644  \"0\" */ 0x00\n                    /// @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\"\n                    if _10\n                    {\n                        let _11 := _9\n                        if gt(_9, returndatasize()) { _11 := returndatasize() }\n                        finalize_allocation(_8, _11)\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        if slt(sub(/** @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\" */ add(_8, _11), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _8), /** @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\" */ _9)\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        {\n                            revert(/** @src 11:1643:1644  \"0\" */ expr, expr)\n                        }\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        let value := mload(_8)\n                        if iszero(eq(value, and(value, _1)))\n                        {\n                            revert(/** @src 11:1643:1644  \"0\" */ expr, expr)\n                        }\n                        /// @src 11:1702:1834  \"IUniswapV3Factory(_factory).getPool(...\"\n                        expr := value\n                    }\n                    /// @src 11:1848:1916  \"if (pool != address(0)) {...\"\n                    if /** @src 11:1852:1870  \"pool != address(0)\" */ iszero(iszero(/** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:1852:1870  \"pool != address(0)\" */ expr, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _1)))\n                    /// @src 11:1848:1916  \"if (pool != address(0)) {...\"\n                    {\n                        /// @src 11:1890:1901  \"return true\"\n                        var := /** @src 11:1574:1582  \"feeTiers\" */ 0x01\n                        /// @src 11:1890:1901  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 11:1935:1947  \"return false\"\n                var := /** @src 11:1643:1644  \"0\" */ 0x00\n            }\n            /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n            function abi_encode_struct_QuoteExactInputSingleParams(value, pos)\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(pos, and(mload(value), _1))\n                mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n                mstore(add(pos, 0x40), mload(add(value, 0x40)))\n                mstore(add(pos, 0x60), and(mload(add(value, 0x60)), 0xffffff))\n                mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), not(31)), 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 936 @src 11:1960:3042  \"function _getAmountOut(...\"\n            function fun_getAmountOut(var_tokenIn, var_tokenOut, var_amountIn) -> var_amountOut, var_fee\n            {\n                /// @src 11:2092:2109  \"uint256 amountOut\"\n                var_amountOut := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                /// @src 11:2092:2109  \"uint256 amountOut\"\n                let var_amountOut_1 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0\n                /// @src 11:2111:2121  \"uint24 fee\"\n                var_fee := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ var_amountOut_1\n                /// @src 11:2133:2169  \"uint24[] memory _feeTiers = feeTiers\"\n                let var__feeTiers_mpos := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ copy_array_from_storage_to_memory_array_uint24_dyn()\n                /// @src 11:2218:2229  \"uint8 i = 0\"\n                let var_i := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ var_amountOut_1\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 11:2197:2203  \"quoter\" */ loadimmutable(\"682\"), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _1)\n                /// @src 11:2213:3036  \"for (uint8 i = 0; i < _feeTiers.length; i++) {...\"\n                for { }\n                /** @src 11:2161:2169  \"feeTiers\" */ 0x01\n                /// @src 11:2218:2229  \"uint8 i = 0\"\n                {\n                    /// @src 11:2253:2256  \"i++\"\n                    var_i := increment_uint8(var_i)\n                }\n                {\n                    /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                    let _3 := mload(/** @src 11:2235:2251  \"_feeTiers.length\" */ var__feeTiers_mpos)\n                    /// @src 11:2231:2251  \"i < _feeTiers.length\"\n                    let _4 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(/** @src 11:2231:2251  \"i < _feeTiers.length\" */ var_i, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 0xff)\n                    /// @src 11:2231:2251  \"i < _feeTiers.length\"\n                    if iszero(lt(_4, _3)) { break }\n                    /// @src 11:2272:2293  \"uint256 tempAmountOut\"\n                    let var_tempAmountOut := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ var_amountOut_1\n                    let _5 := 0xffffff\n                    let cleaned := and(mload(/** @src 11:2617:2629  \"_feeTiers[i]\" */ memory_array_index_access_uint24_dyn(var__feeTiers_mpos, _4)), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _5)\n                    let _6 := 64\n                    let memPtr := mload(_6)\n                    finalize_allocation_7585(memPtr)\n                    mstore(memPtr, and(var_tokenIn, _1))\n                    /// @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\"\n                    let _7 := 32\n                    /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                    mstore(/** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ add(memPtr, _7), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(var_tokenOut, _1))\n                    mstore(/** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ add(memPtr, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _6), var_amountIn)\n                    mstore(/** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ add(memPtr, 96), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ cleaned)\n                    mstore(/** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ add(memPtr, 128), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ var_amountOut_1)\n                    /// @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\"\n                    let _8 := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_6)\n                    /// @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\"\n                    mstore(_8, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ shl(225, 0x63528135))\n                    abi_encode_struct_QuoteExactInputSingleParams(memPtr, /** @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\" */ add(_8, 4))\n                    let trySuccessCondition := staticcall(gas(), _2, _8, /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ 164, /** @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\" */ _8, /** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ _7)\n                    /// @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\"\n                    let expr := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ var_amountOut_1\n                    /// @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\"\n                    if trySuccessCondition\n                    {\n                        let _9 := /** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ _7\n                        /// @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\"\n                        if gt(/** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ _7, /** @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_8, _9)\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        if slt(sub(/** @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\" */ add(_8, _9), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _8), /** @src 11:2402:2698  \"IUniswapV3StaticQuoter.QuoteExactInputSingleParams({...\" */ _7)\n                        /// @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\"\n                        {\n                            revert(var_amountOut_1, var_amountOut_1)\n                        }\n                        /// @src 11:2327:2716  \"IUniswapV3StaticQuoter(_quoter).quoteExactInputSingle(...\"\n                        expr := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ mload(_8)\n                    }\n                    /// @src 11:2307:2888  \"try...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 11:2767:2784  \"tempAmountOut = t\"\n                        var_tempAmountOut := expr\n                    }\n                    default /// @src 11:2307:2888  \"try...\"\n                    {\n                        /// @src 11:2800:2888  \"catch (bytes memory /*lowLevelData*\\/) {...\"\n                        pop(extract_returndata())\n                        /// @src 11:2856:2873  \"tempAmountOut = 0\"\n                        var_tempAmountOut := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ var_amountOut_1\n                    }\n                    /// @src 11:2901:3026  \"if (tempAmountOut > amountOut) {...\"\n                    if /** @src 11:2905:2930  \"tempAmountOut > amountOut\" */ gt(var_tempAmountOut, var_amountOut)\n                    /// @src 11:2901:3026  \"if (tempAmountOut > amountOut) {...\"\n                    {\n                        /// @src 11:2950:2975  \"amountOut = tempAmountOut\"\n                        var_amountOut := var_tempAmountOut\n                        /// @src 11:2993:3011  \"fee = _feeTiers[i]\"\n                        var_fee := /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ and(mload(/** @src 11:2999:3011  \"_feeTiers[i]\" */ memory_array_index_access_uint24_dyn(var__feeTiers_mpos, _4)), /** @src 11:415:5902  \"contract PancakeswapV3DEXIntegration is IDEXIntegration, Lockable {...\" */ _5)\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f48a6b711949fd9be27659dd454d2f93f298698cbe4ac19fcbac3cb3cc713f3b64736f6c634300080f0033\"\n    }\n}\n","hash":"010002896b652ce4c40891a2de5f6563f9c255d66edf9d0ef2086c6d42ec1b0f","factoryDependencies":{}}},"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol":{"PancakeswapV3PriceFeedIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"feeTiers","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol\":\"PancakeswapV3PriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol\":{\"keccak256\":\"0x6c262aa01817521122bee1574f0ef251ec939272192ca65cf1ec4ec90f6655b7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fae035de75bf899a10b5374569172775b1e977654916a57f38421a3ef0fe2cbc\",\"dweb:/ipfs/Qmcg8TzUnnAKxiNH4zetr4gZ5417psQPbGwM93kSvDxNok\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d783bcfa47faaa1ed36eb4ce8c1612372cd4118fc11b347d8ecea2ab3d4a1284\",\"dweb:/ipfs/QmbyCFzoezQpCkD6uMEHXeEsMRmNbnwTbqMP74MC3TMgfi\"]},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7cb62d186540655a0ff3fce1b3ca6e29756d1dea9d30e3a435572511dc7e7551\",\"dweb:/ipfs/QmT1L8odyZMQ3gqGS3ddPKNvxspbawpDpf9WgkoTUeYTwt\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PancakeswapV3PriceFeedIntegration.sol:PancakeswapV3PriceFeedIntegration\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[14]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r4\n\tjump.lt\t@.BB0_2\n\tld\tr1, r4\n\tshr.s\t224, r4, r4\n\tsub.s!\t@CPI0_8[0], r4, r5\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_11[0], r4, r2\n\tjump.eq\t@.BB0_27\n\tsub.s!\t@CPI0_12[0], r4, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t160, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_198\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_198:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t160, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_3[0], r3, r1\n\tjump.le\t@.BB0_12\n.BB0_8:\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_25:\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.eq\t@.BB0_34\n\tsub.s!\t@CPI0_10[0], r4, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[14]\n\tadd\t0, r0, stack-[13]\n\tcontext.sp\tr1\n\tsub.s\t14, r1, r1\n\tshl.s\t5, r1, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_27:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsload\tr0, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_uint24_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_6[0], r1, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tld.1\t64, r2\n.BB0_183:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_34:\n\tcontext.get_context_u128\tr4\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[7]\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tand\t@CPI0_2[0], r3, stack-[1]\n\tadd\tr3, r0, r5\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_14[0], r0, r1\n\tadd\tstack-[1], r0, r4\n\tsub!\tstack-[7], r4, r3\n\tjump.eq\t@.BB0_183\n\tsload\tr0, r1\n\tadd\tr1, r0, stack-[6]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_41\n\tadd\t128, r0, r10\n\tadd\tr0, r0, stack-[2]\n.BB0_137:\n\tadd\tstack-[7], r0, r2\n.BB0_138:\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\tr10, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_141\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_150\n.BB0_12:\n\tadd\tr2, r0, stack-[12]\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t10000, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t2500, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t500, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r0, r1\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr3, r1\n\tsload\tr0, r2\n\tadd\t4, r0, r1\n\tsstore\tr0, r1\n\tsub.s!\t5, r2, r1\n\tjump.lt\t@.BB0_16\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tsload\tr2, r1\n\tand\t@CPI0_5[0], r1, r1\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tadd\t9, r1, r1\n\tdiv.s\t10, r1, r1, r3\n\tadd\tr2, r1, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_16\n.BB0_18:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_18\n.BB0_16:\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r9\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub.s\t1, r0, r3\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[11], r0, r10\n.BB0_19:\n\tshl.s\t3, r5, r6\n\tshl\t@CPI0_6[0], r6, r7\n\tsub.s!\t255, r6, r8\n\tadd.gt\tr0, r0, r7\n\tld.1.inc\tr10, r8, r10\n\tand\t65535, r8, r8\n\tshl\tr8, r6, r6\n\tadd.gt\tr0, r0, r6\n\tand\tr6, r7, r6\n\txor\tr7, r3, r7\n\tsload\tr1, r8\n\tand\tr8, r7, r7\n\tor\tr6, r7, r6\n\tsstore\tr1, r6\n\tadd\t3, r5, r5\n\tsub.s!\t29, r5, r6\n\tadd.gt\t1, r1, r1\n\tadd\t1, r4, r6\n\tadd.gt\tr0, r0, r5\n\tsub.s!\t3, r4, r4\n\tadd\tr6, r0, r4\n\tjump.lt\t@.BB0_19\n\tst.1\t128, r9\n\tst.2\t320, r0\n\tst.2\t352, r9\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tadd\t1, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_41:\n\tsub!\tstack-[7], r4, r1\n\tadd\tstack-[7], r0, r1\n\tadd.lt\tr5, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd.lt\tstack-[7], r0, r5\n\tadd\tr5, r0, stack-[10]\n\tadd\t128, r0, r10\n\tadd\tr0, r0, stack-[2]\n\tadd\tr0, r0, r3\n\tadd\tr0, r0, stack-[5]\n.BB0_42:\n\tsload\tr0, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_43\n\tadd\tr3, r0, stack-[11]\n\tdiv.s\t10, r3, r1, r2\n\tadd\t@CPI0_17[0], r1, r1\n\tst.1\t0, r0\n\tsload\tr1, r1\n\tadd\t36, r10, r3\n\tadd\tstack-[9], r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI0_18[0], r0, r3\n\tst.1\tr10, r3\n\tadd\t4, r10, r3\n\tadd\tstack-[10], r0, r4\n\tst.1\tr3, r4\n\tmul\t24, r2, r2, r3\n\tshr\tr1, r2, r1\n\tand\t@CPI0_6[0], r1, r1\n\tadd\tr10, r0, stack-[12]\n\tadd\t68, r10, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_45\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_50\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\tstack-[12], r0, r9\n\tjump\t@.BB0_60\n.BB0_50:\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tadd\tstack-[12], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr4, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_21[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_197\n\tadd\tr0, r0, r6\n.BB0_52:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_52\n.BB0_197:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_54\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_54:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n.BB0_60:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r10\n\tsub!\tr10, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_22[0], r10, r4\n\tjump.gt\t@.BB0_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tst.1\t64, r10\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr9, r5\n\tsub.s!\t@CPI0_2[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_134\n\tadd\t@CPI0_23[0], r0, r2\n\tst.1\tr10, r2\n\tadd\t4, r10, r2\n\tst.1\tr2, r5\n\tcontext.gas_left\tr2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t4, r4, r4\n\tadd\tr5, r0, stack-[12]\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r10, r1\n\tadd\tr3, r0, r1\n\tadd.lt\tr10, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_195\n\tadd\tr0, r0, r6\n.BB0_68:\n\tshl.s\t5, r6, r7\n\tadd\tr10, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_68\n.BB0_195:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_70\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr10, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_70:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_72\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[12], r0, r5\n.BB0_76:\n\tadd\tr1, r10, r11\n\tsub.s!\t@CPI0_22[0], r11, r2\n\tjump.gt\t@.BB0_8\n\tst.1\t64, r11\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r9\n\tadd\t@CPI0_23[0], r0, r2\n\tst.1\tr11, r2\n\tadd\t4, r11, r2\n\tst.1\tr2, r5\n\tcontext.gas_left\tr2\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t4, r4, r4\n\tadd\tr9, r0, stack-[8]\n\tjump.eq\t@.BB0_89\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r11, r1\n\tadd\tr3, r0, r1\n\tadd.lt\tr11, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tr11, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_193\n\tadd\tr0, r0, r6\n.BB0_81:\n\tshl.s\t5, r6, r7\n\tadd\tr11, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_81\n.BB0_193:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_83\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr11, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_83:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r9\n\tjump.eq\t@.BB0_85\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[12], r0, r5\n.BB0_89:\n\tadd\tr1, r11, r12\n\tsub.s!\t@CPI0_22[0], r12, r1\n\tjump.gt\t@.BB0_8\n\tst.1\t64, r12\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr11, r11\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1.inc\tr12, r1, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r2\n\tjump.ne\t@.BB0_93\n\tsub.s!\t224, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t224, r0, r4\n\tjump\t@.BB0_103\n.BB0_93:\n\tadd\tr6, r0, stack-[3]\n\tadd\tr11, r0, stack-[4]\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r12, r2\n\tadd\tr3, r0, r2\n\tadd.lt\tr12, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\tr5, r0, r2\n\tadd\tr12, r0, stack-[12]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r12\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t224, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t224, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_191\n\tadd\tr0, r0, r6\n.BB0_95:\n\tshl.s\t5, r6, r7\n\tadd\tr12, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_95\n.BB0_191:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_97\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr12, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_97:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[8], r0, r9\n\tadd\tstack-[4], r0, r11\n\tjump.eq\t@.BB0_99\n\tadd\tstack-[3], r0, r6\n.BB0_103:\n\tadd\t31, r4, r1\n\tand\t480, r1, r1\n\tadd\tr1, r12, r10\n\tsub.s!\t@CPI0_22[0], r10, r1\n\tjump.gt\t@.BB0_8\n\tst.1\t64, r10\n\tsub.s!\t224, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr12, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\tr6, r2\n\tand!\t@CPI0_26[0], r2, r3\n\tadd\t@CPI0_27[0], r0, r3\n\tadd.eq\tr0, r0, r3\n\tand\t@CPI0_28[0], r2, r4\n\tor\tr3, r4, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_2\n\tadd\t64, r12, r2\n\tld.1\tr2, r2\n\tsub.s!\t65535, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t96, r12, r2\n\tld.1\tr2, r2\n\tsub.s!\t65535, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t128, r12, r2\n\tld.1\tr2, r2\n\tsub.s!\t65535, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t160, r12, r2\n\tld.1\tr2, r2\n\tsub.s!\t255, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t192, r12, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_2\n\tand!\t@CPI0_2[0], r1, r2\n\tjump.eq\t@.BB0_114\n\tsub.s!\t1, r2, r3\n\tjump.eq\t@.BB0_109\n\tsub.s!\t2, r2, r2\n\tjump.ne\t@.BB0_108\n\tadd\t4, r0, r2\n\tjump\t@.BB0_114\n.BB0_109:\n\tadd\t1, r0, r2\n\tjump\t@.BB0_114\n.BB0_108:\n\tmul\tr1, r1, r2, r3\n\tsub.s!\t307, r1, r3\n\tjump.lt\t@.BB0_114\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_113\n\tsub.s\t1, r0, r3\n\tdiv\tr3, r1, r3, r4\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB0_113\n.BB0_114:\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r3\n\tadd\tr2, r0, r3\n\tadd.eq\tr0, r0, r3\n\tmul\t@CPI0_14[0], r3, r3, r4\n\tshr.s\t128, r3, r5\n\tshl.s\t128, r4, r4\n\tor\tr4, r5, r4\n\tand\t@CPI0_29[0], r3, r5\n\tdiv.s\t@CPI0_30[0], r4, r6, r4\n\tshl.s\t128, r4, r4\n\tor\tr4, r5, r4\n\tmul\t@CPI0_30[0], r6, r5, r7\n\tsub!\tr5, r4, r4\n\tsub.s.gt\t1, r6, r6\n\tand\t@CPI0_30[0], r6, r4\n\tadd\tr4, r3, r5\n\tmul\t@CPI0_14[0], r2, r3, r4\n\tsub!\tr5, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub\tr5, r3, r5\n\tsub!\tr5, r4, r6\n\tjump.ne\t@.BB0_116\n\tshr.s\t192, r3, r2\n\tsub!\tr9, r0, r3\n\tjump.ne\t@.BB0_124\n\tjump\t@.BB0_125\n.BB0_116:\n\tsub\tr5, r4, r4\n\tsub.s!\t@CPI0_31[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tand\t@CPI0_31[0], r2, r2\n\tmul\t@CPI0_14[0], r2, r2, r5\n\tshl.s\t191, r5, r5\n\tshr.s\t65, r2, r6\n\tand\t@CPI0_32[0], r6, r6\n\tor\tr5, r6, r5\n\tshl.s\t63, r2, r6\n\tshr.s\t128, r6, r2\n\tor\tr5, r2, r2\n\tand\t@CPI0_33[0], r6, r5\n\tand\t@CPI0_34[0], r2, r7\n\tshr.s\t127, r2, r6\n.BB0_118:\n\tsub.s!\t@CPI0_30[0], r6, r8\n\tjump.lt\t@.BB0_120\n\tsub.s!\t@CPI0_34[0], r7, r8\n\tadd\t@CPI0_35[0], r7, r7\n\tsub.s\t1, r6, r6\n\tjump.lt\t@.BB0_118\n.BB0_120:\n\tshl.s\t128, r2, r2\n\tor\tr2, r5, r2\n\tshl.s\t255, r6, r5\n\tadd\tr2, r5, r2\n\tshr.s\t63, r2, r2\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub!\tr4, r5, r4\n\tjump.eq\t@.BB0_122\n\tsub.s!\t@CPI0_31[0], r4, r5\n\tjump.gt\t@.BB0_113\n.BB0_122:\n\tsub\tr3, r2, r2\n\tshr.s\t192, r2, r2\n\tshl.s\t64, r4, r3\n\tor\tr3, r2, r2\n\tsub!\tr9, r0, r3\n\tjump.eq\t@.BB0_125\n.BB0_124:\n\tdiv\tr1, r9, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.lt\t@.BB0_113\n.BB0_125:\n\txor\tr11, r1, r3\n\tmul\tr2, r9, r1, r4\n\tdiv.s\t@CPI0_14[0], r1, r1, r4\n\tsub!\tr1, r3, r3\n\tjump.gt\t@.BB0_113\n\tadd\tr1, r11, r1\n\tsub.s!\tstack-[5], r1, r3\n\tadd.gt\tr1, r0, stack-[5]\n\tadd.gt\tr2, r0, stack-[2]\n.BB0_134:\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[11], r0, r3\n\tadd\t1, r3, r3\n\tsub.s!\tstack-[6], r3, r1\n\tjump.lt\t@.BB0_42\n\tsub!\tstack-[2], r0, r1\n\tjump.ne\t@.BB0_136\n\tadd\tr0, r0, stack-[2]\n\tjump\t@.BB0_138\n.BB0_141:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\tr10, r0, stack-[12]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_189\n\tadd\tr0, r0, r7\n.BB0_143:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_143\n.BB0_189:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_145\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_145:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_146\n.BB0_150:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r7\n\tsub!\tr7, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_22[0], r7, r4\n\tjump.gt\t@.BB0_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tst.1\t64, r7\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r6\n\tsub.s!\t255, r6, r2\n\tjump.le\t@.BB0_153\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_146:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_188\n\tadd\tr0, r0, r6\n.BB0_148:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_148\n.BB0_188:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n.BB0_58:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_59:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_153:\n\tadd\t@CPI0_37[0], r0, r2\n\tst.1\tr7, r2\n\tcontext.gas_left\tr5\n\tadd\tstack-[1], r0, r2\n\tsub.s!\t4, r2, r4\n\tjump.eq\t@.BB0_165\n\tadd\tr6, r0, stack-[11]\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tsub.s!\t@CPI0_0[0], r7, r3\n\tadd.lt\tr7, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\tr7, r0, stack-[12]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_187\n\tadd\tr0, r0, r7\n.BB0_157:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_157\n.BB0_187:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_159\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_159:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_161\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[12], r0, r7\n.BB0_165:\n\tadd\tr1, r7, r2\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.gt\t@.BB0_8\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr7, r3\n\tsub.s!\t255, r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r0, r5\n\tsub.s!\t77, r6, r1\n\tjump.gt\t@.BB0_113\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_170\n\tadd\t1, r0, r1\n\tjump\t@.BB0_172\n.BB0_43:\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_45:\n\trevert\n.BB0_55:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_196\n\tadd\tr0, r0, r6\n.BB0_57:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_57\n.BB0_196:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_58\n\tjump\t@.BB0_59\n.BB0_136:\n\tsub.s!\tstack-[10], r2, r1\n\tjump.eq\t@.BB0_137\n\tadd\tstack-[2], r0, r2\n\tdiv\t@CPI0_36[0], r2, stack-[2], r1\n\tjump\t@.BB0_137\n.BB0_161:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_186\n\tadd\tr0, r0, r6\n.BB0_163:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_163\n.BB0_186:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n\tjump\t@.BB0_58\n.BB0_72:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_194\n\tadd\tr0, r0, r6\n.BB0_74:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_74\n.BB0_194:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n\tjump\t@.BB0_58\n.BB0_85:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_192\n\tadd\tr0, r0, r6\n.BB0_87:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_87\n.BB0_192:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n\tjump\t@.BB0_58\n.BB0_99:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_190\n\tadd\tr0, r0, r6\n.BB0_101:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_101\n.BB0_190:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n\tjump\t@.BB0_58\n.BB0_170:\n\tadd\t10, r0, r4\n\tadd\t1, r0, r1\n\tadd\tr5, r0, r6\n.BB0_171:\n\tand!\t1, r6, r5\n\tadd\tr4, r0, r5\n\tadd.eq\t1, r0, r5\n\tmul\tr5, r1, r1, r5\n\tsub.s!\t1, r6, r5\n\tshr.s\t1, r6, r6\n\tmul\tr4, r4, r4, r5\n\tjump.gt\t@.BB0_171\n.BB0_172:\n\tand\t255, r3, r4\n\tsub.s!\t77, r4, r3\n\tjump.le\t@.BB0_173\n.BB0_113:\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_173:\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_175\n\tadd\t1, r0, r3\n\tjump\t@.BB0_177\n.BB0_175:\n\tadd\t10, r0, r5\n\tadd\t1, r0, r3\n.BB0_176:\n\tand!\t1, r4, r6\n\tadd\tr5, r0, r6\n\tadd.eq\t1, r0, r6\n\tmul\tr6, r3, r3, r6\n\tsub.s!\t1, r4, r6\n\tshr.s\t1, r4, r4\n\tmul\tr5, r5, r5, r6\n\tjump.gt\t@.BB0_176\n.BB0_177:\n\tsub!\tstack-[2], r0, r4\n\tjump.eq\t@.BB0_179\n\tsub.s\t1, r0, r4\n\tdiv.s\tstack-[2], r4, r4, r5\n\tsub!\tr4, r1, r4\n\tjump.lt\t@.BB0_113\n.BB0_179:\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_181\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_181:\n\tmul\tstack-[2], r1, r1, r4\n\tdiv\tr1, r3, r1, r3\n\tjump\t@.BB0_183\n.func_end0:\n\nstorage_array_index_access_uint24_dyn:\n.func_begin1:\n\tsload\tr0, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB1_1\n\tdiv.s\t10, r1, r1, r2\n\tadd\t@CPI1_2[0], r1, r1\n\tmul\t3, r2, r2, r3\n\tst.1\t0, r0\n\tret\n.BB1_1:\n\tadd\t@CPI1_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__system_request:\n.func_begin3:\n\tadd\t@CPI3_0[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t5, r1, r1\n\tadd\tstack[r1], r0, r2\n\tst.2\t4, r2\n\tadd\tstack[1 + r1], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_2\n\tld\tr1, r1\n\tret\n.BB3_2:\n\trevert\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 18446744073709551487\nCPI0_4:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_5:\n\t.cell 79228162514264337593543950335\nCPI0_6:\n\t.cell 16777215\nCPI0_7:\n\t.cell 53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_8:\n\t.cell 2889975385\nCPI0_9:\n\t.cell 2889975386\nCPI0_10:\n\t.cell 3294232917\nCPI0_11:\n\t.cell 588174410\nCPI0_12:\n\t.cell 2868243304\nCPI0_13:\n\t.cell 2535301202817642044428229017600\nCPI0_14:\n\t.cell 1000000000000000000000000000000\nCPI0_15:\nCPI1_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_16:\nCPI1_1:\n\t.cell 2852213850513516153367582212096\nCPI0_17:\nCPI1_2:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_18:\n\t.cell 10221089543101777846074375522904223940155837796292731536049921492511109414912\nCPI0_19:\nCPI3_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_20:\nCPI3_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_21:\n\t.cell 7922816251426433759354395033600\nCPI0_22:\n\t.cell 18446744073709551615\nCPI0_23:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_24:\n\t.cell 25472245828798119908937437479192357898944242945464680667373751268737279852544\nCPI0_25:\n\t.cell 316912650057057350374175801344\nCPI0_26:\n\t.cell 8388608\nCPI0_27:\n\t.cell -8388608\nCPI0_28:\n\t.cell 8388607\nCPI0_29:\n\t.cell 340282366920938463463374607430694469632\nCPI0_30:\n\t.cell 340282366920938463463374607431768211455\nCPI0_31:\n\t.cell 6277101735386680763835789423207666416102355444464034512895\nCPI0_32:\n\t.cell 3138550867693340381577612344682894744587803114800249044992\nCPI0_33:\n\t.cell 340282366911034943149091565232575217664\nCPI0_34:\n\t.cell 170141183460469231731687303715884105727\nCPI0_35:\n\t.cell 170141183460469231731687303715884105728\nCPI0_36:\n\t.cell 1000000000000000000000000000000000000000000000000000000000000\nCPI0_37:\n\t.cell 22270923681254677845691103109158760375340177724800803888364822332811285364736\nCPI0_38:\n\t.cell 2535301200456458802993406410752\n","bytecode":{"object":""},"methodIdentifiers":{"PRECISION()":"aaf5eb68","factory()":"c45a0155","feeTiers(uint256)":"230ed44a","getPrice(address,address)":"ac41865a"}},"irOptimized":"/// @use-src 12:\"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol\", 16:\"contracts/interfaces/IPriceFeedIntegration.sol\"\nobject \"PancakeswapV3PriceFeedIntegration_1567\" {\n    code {\n        {\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let _1 := memoryguard(0xa0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PancakeswapV3PriceFeedIntegration_1567\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            let _2 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            let _3 := 32\n            if slt(sub(add(_1, argSize), _1), _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let memPtr := mload(64)\n            let newFreePtr_1 := add(memPtr, 128)\n            if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr_1)\n            mstore(memPtr, /** @src 12:489:492  \"100\" */ 0x64)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            mstore(/** @src 12:488:511  \"[100, 500, 2500, 10000]\" */ add(memPtr, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _3), /** @src 12:494:497  \"500\" */ 0x01f4)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            mstore(/** @src 12:488:511  \"[100, 500, 2500, 10000]\" */ add(memPtr, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 64), /** @src 12:499:503  \"2500\" */ 0x09c4)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            mstore(/** @src 12:488:511  \"[100, 500, 2500, 10000]\" */ add(memPtr, 96), /** @src 12:505:510  \"10000\" */ 0x2710)\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let oldLen := sload(/** @src -1:-1:-1 */ _4)\n            /// @src 12:488:511  \"[100, 500, 2500, 10000]\"\n            let _5 := 4\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            sstore(/** @src -1:-1:-1 */ _4, /** @src 12:488:511  \"[100, 500, 2500, 10000]\" */ _5)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            if lt(/** @src 12:488:511  \"[100, 500, 2500, 10000]\" */ _5, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ oldLen)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _3)\n                let _6 := 1\n                let deleteEnd := add(data, div(add(oldLen, 9), 10))\n                sstore(data, and(sub(shl(96, 1), 1), sload(data)))\n                let start := add(data, _6)\n                for { } lt(start, deleteEnd) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let srcPtr := memPtr\n            mstore(/** @src -1:-1:-1 */ _4, _4)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let elementSlot := keccak256(/** @src -1:-1:-1 */ _4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _3)\n            let elementOffset := /** @src -1:-1:-1 */ _4\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let i := /** @src -1:-1:-1 */ _4\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            for { }\n            lt(i, /** @src 12:488:511  \"[100, 500, 2500, 10000]\" */ _5)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            { i := add(i, 1) }\n            {\n                let cleaned := and(mload(srcPtr), 0xffff)\n                let _7 := sload(elementSlot)\n                let _8 := 3\n                let shiftBits := shl(_8, elementOffset)\n                let mask := shl(shiftBits, 0xffffff)\n                sstore(elementSlot, or(and(_7, not(mask)), and(shl(shiftBits, cleaned), mask)))\n                srcPtr := add(srcPtr, _3)\n                elementOffset := add(elementOffset, _8)\n                if gt(elementOffset, 29)\n                {\n                    elementOffset := /** @src -1:-1:-1 */ _4\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    elementSlot := add(elementSlot, 1)\n                }\n            }\n            /// @src 12:558:576  \"factory = _factory\"\n            mstore(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 128, /** @src 12:558:576  \"factory = _factory\" */ value)\n            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n            let _9 := mload(64)\n            let _10 := datasize(\"PancakeswapV3PriceFeedIntegration_1567_deployed\")\n            codecopy(_9, dataoffset(\"PancakeswapV3PriceFeedIntegration_1567_deployed\"), _10)\n            setimmutable(_9, \"1217\", mload(128))\n            return(_9, _10)\n        }\n    }\n    /// @use-src 12:\"contracts/integrations/PancakeswapV3PriceFeedIntegration.sol\"\n    object \"PancakeswapV3PriceFeedIntegration_1567_deployed\" {\n        code {\n            {\n                /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x230ed44a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value := calldataload(4)\n                        /// @src 12:461:511  \"uint24[] public feeTiers = [100, 500, 2500, 10000]\"\n                        if iszero(lt(value, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sload(_2)))\n                        /// @src 12:461:511  \"uint24[] public feeTiers = [100, 500, 2500, 10000]\"\n                        {\n                            revert(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _2, _2)\n                        }\n                        /// @src 12:461:511  \"uint24[] public feeTiers = [100, 500, 2500, 10000]\"\n                        let slot, offset := storage_array_index_access_uint24_dyn(value)\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        let _3 := sload(/** @src 12:461:511  \"uint24[] public feeTiers = [100, 500, 2500, 10000]\" */ slot)\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        let memPos := mload(_1)\n                        mstore(memPos, and(shr(shl(3, offset), _3), 0xffffff))\n                        return(memPos, 32)\n                    }\n                    case 0xaaf5eb68 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, /** @src 12:413:417  \"1e30\" */ 0x0c9f2c9cd04674edea40000000)\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0xac41865a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_2, _2) }\n                        let value_1 := calldataload(4)\n                        let _4 := sub(shl(160, 1), 1)\n                        if iszero(eq(value_1, and(value_1, _4))) { revert(_2, _2) }\n                        let value_2 := calldataload(36)\n                        if iszero(eq(value_2, and(value_2, _4))) { revert(_2, _2) }\n                        let ret := fun_getPrice(value_1, value_2)\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, ret)\n                        return(memPos_2, 32)\n                    }\n                    case 0xc45a0155 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, and(/** @src 12:423:455  \"address public immutable factory\" */ loadimmutable(\"1217\"), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function storage_array_index_access_uint24_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(0)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(0, 0)\n                slot := add(18569430475105882587588266137607568536673111973893317399460219858819262702947, div(index, 10))\n                offset := mul(mod(index, 10), 3)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_uint16_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n            }\n            function abi_decode_uint8_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n            }\n            function checked_exp_unsigned(base) -> power\n            {\n                let _1 := 0\n                if iszero(base)\n                {\n                    power := _1\n                    leave\n                }\n                switch base\n                case 1 {\n                    power := 1\n                    leave\n                }\n                case 2 {\n                    power := 4\n                    _1 := _1\n                    leave\n                }\n                let _2 := 1\n                if or(and(lt(base, 11), _2), and(lt(base, 307), _2))\n                {\n                    power := exp(base, 2)\n                    if _1\n                    {\n                        mstore(_1, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(_1, 0x24)\n                    }\n                    leave\n                }\n                let exponent := 2\n                let power_1 := _1\n                let base_1 := _1\n                power_1 := _2\n                base_1 := base\n                for { } gt(exponent, _2) { }\n                {\n                    if gt(base_1, div(not(0), base_1))\n                    {\n                        mstore(_1, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(_1, 0x24)\n                    }\n                    if and(exponent, _2)\n                    {\n                        power_1 := mul(power_1, base_1)\n                    }\n                    base_1 := mul(base_1, base_1)\n                    exponent := shr(_2, exponent)\n                }\n                if gt(power_1, div(not(0), base_1))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(_1, 0x24)\n                }\n                power := mul(power_1, base_1)\n            }\n            function checked_mul_uint256(x, y) -> product\n            {\n                if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                product := mul(x, y)\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function checked_exp_rational_by_uint256(exponent) -> power\n            {\n                if gt(exponent, 77)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                power := exp(10, exponent)\n            }\n            /// @ast-id 1566 @src 12:4377:6134  \"function getPrice(...\"\n            function fun_getPrice(var_baseToken, var_quoteToken) -> var_price\n            {\n                /// @src 12:4490:4503  \"uint256 price\"\n                var_price := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                /// @src 12:4515:4587  \"if (_baseToken == _quoteToken) {...\"\n                if /** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ eq(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_baseToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_quoteToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)))\n                /// @src 12:4515:4587  \"if (_baseToken == _quoteToken) {...\"\n                {\n                    /// @src 12:4560:4576  \"return PRECISION\"\n                    var_price := /** @src 12:413:417  \"1e30\" */ 0x0c9f2c9cd04674edea40000000\n                    /// @src 12:4560:4576  \"return PRECISION\"\n                    leave\n                }\n                /// @src 12:4614:4629  \"feeTiers.length\"\n                let expr := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sload(0)\n                /// @src 12:4704:4725  \"uint256 bestLiquidity\"\n                let var_bestLiquidity := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                /// @src 12:4770:4874  \"_baseToken < _quoteToken...\"\n                let expr_1408_component := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                let expr_component := 0\n                /// @src 12:4770:4874  \"_baseToken < _quoteToken...\"\n                switch /** @src 12:4770:4794  \"_baseToken < _quoteToken\" */ lt(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_baseToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_quoteToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)))\n                case /** @src 12:4770:4874  \"_baseToken < _quoteToken...\" */ 0 {\n                    expr_1408_component := var_quoteToken\n                    expr_component := var_baseToken\n                }\n                default {\n                    expr_1408_component := var_baseToken\n                    expr_component := var_quoteToken\n                }\n                /// @src 12:4889:4902  \"uint256 i = 0\"\n                let var_i := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                /// @src 12:4884:5752  \"for (uint256 i = 0; i < length; i++) {...\"\n                for { }\n                /** @src 12:4904:4914  \"i < length\" */ lt(var_i, expr)\n                /// @src 12:4889:4902  \"uint256 i = 0\"\n                {\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    if eq(var_i, not(0))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x11)\n                        revert(0, 36)\n                    }\n                    /// @src 12:4916:4919  \"i++\"\n                    var_i := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ add(var_i, 1)\n                }\n                /// @src 12:4916:4919  \"i++\"\n                {\n                    /// @src 12:4990:5001  \"feeTiers[i]\"\n                    let _1, _2 := storage_array_index_access_uint24_dyn(var_i)\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    let _3 := sload(/** @src 12:4990:5001  \"feeTiers[i]\" */ _1)\n                    /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                    let _4 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(64)\n                    /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                    mstore(_4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(225, 0x0b4c7741))\n                    let _5 := and(expr_1408_component, sub(shl(160, 1), 1))\n                    mstore(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ add(_4, 4), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _5)\n                    mstore(add(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 36), and(expr_component, sub(shl(160, 1), 1)))\n                    mstore(add(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 68), and(shr(shl(3, _2), _3), 0xffffff))\n                    /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                    let _6 := staticcall(gas(), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:4686:4693  \"factory\" */ loadimmutable(\"1217\"), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 100, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _4, 32)\n                    if iszero(_6)\n                    {\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, 0, returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                    let expr_1 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                    /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                    if _6\n                    {\n                        let _7 := 32\n                        if gt(32, returndatasize()) { _7 := returndatasize() }\n                        finalize_allocation(_4, _7)\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        if slt(sub(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ add(_4, _7), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _4), /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32)\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        { revert(0, 0) }\n                        let value := mload(_4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                        expr_1 := value\n                    }\n                    /// @src 12:5016:5742  \"if (poolAddress != address(0)) {...\"\n                    if /** @src 12:5020:5045  \"poolAddress != address(0)\" */ iszero(iszero(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:5020:5045  \"poolAddress != address(0)\" */ expr_1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1))))\n                    /// @src 12:5016:5742  \"if (poolAddress != address(0)) {...\"\n                    {\n                        /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                        let _8 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(64)\n                        let _9 := shl(224, 0x70a08231)\n                        /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                        mstore(_8, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _9)\n                        mstore(/** @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\" */ add(_8, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:5020:5045  \"poolAddress != address(0)\" */ expr_1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                        let _10 := staticcall(gas(), _5, _8, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 36, /** @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\" */ _8, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32)\n                        /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                        if iszero(_10)\n                        {\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                        let expr_2 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                        /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                        if _10\n                        {\n                            let _11 := /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32\n                            /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                            if gt(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32, /** @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\" */ returndatasize()) { _11 := returndatasize() }\n                            finalize_allocation(_8, _11)\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            if slt(sub(/** @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\" */ add(_8, _11), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _8), /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32)\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            { revert(0, 0) }\n                            /// @src 12:5151:5188  \"IERC20(token0).balanceOf(poolAddress)\"\n                            expr_2 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_8)\n                        }\n                        /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                        let _12 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(64)\n                        /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                        mstore(_12, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _9)\n                        mstore(/** @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\" */ add(_12, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:5020:5045  \"poolAddress != address(0)\" */ expr_1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                        let _13 := staticcall(gas(), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(expr_component, sub(shl(160, 1), 1)), /** @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\" */ _12, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 36, /** @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\" */ _12, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32)\n                        /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                        if iszero(_13)\n                        {\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                        let expr_3 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                        /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                        if _13\n                        {\n                            let _14 := /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32\n                            /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                            if gt(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32, /** @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\" */ returndatasize()) { _14 := returndatasize() }\n                            finalize_allocation(_12, _14)\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            if slt(sub(/** @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\" */ add(_12, _14), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _12), /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32)\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            { revert(0, 0) }\n                            /// @src 12:5225:5262  \"IERC20(token1).balanceOf(poolAddress)\"\n                            expr_3 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_12)\n                        }\n                        /// @src 12:5317:5329  \"pool.slot0()\"\n                        let _15 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(64)\n                        /// @src 12:5317:5329  \"pool.slot0()\"\n                        mstore(_15, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x3850c7bd))\n                        /// @src 12:5317:5329  \"pool.slot0()\"\n                        let _16 := staticcall(gas(), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:5020:5045  \"poolAddress != address(0)\" */ expr_1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), /** @src 12:5317:5329  \"pool.slot0()\" */ _15, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:5317:5329  \"pool.slot0()\" */ _15, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 224)\n                        /// @src 12:5317:5329  \"pool.slot0()\"\n                        if iszero(_16)\n                        {\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 12:5317:5329  \"pool.slot0()\"\n                        let expr_component_1 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                        /// @src 12:5317:5329  \"pool.slot0()\"\n                        if _16\n                        {\n                            let _17 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 224\n                            /// @src 12:5317:5329  \"pool.slot0()\"\n                            if gt(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 224, /** @src 12:5317:5329  \"pool.slot0()\" */ returndatasize()) { _17 := returndatasize() }\n                            finalize_allocation(_15, _17)\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            if slt(sub(/** @src 12:5317:5329  \"pool.slot0()\" */ add(_15, _17), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _15), 224) { revert(0, 0) }\n                            let value_1 := mload(_15)\n                            if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            let value_2 := mload(add(_15, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 32))\n                            /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                            if iszero(eq(value_2, signextend(2, value_2))) { revert(0, 0) }\n                            pop(abi_decode_uint16_fromMemory(add(_15, 64)))\n                            pop(abi_decode_uint16_fromMemory(add(_15, 96)))\n                            pop(abi_decode_uint16_fromMemory(add(_15, 128)))\n                            pop(abi_decode_uint8_fromMemory(add(_15, 160)))\n                            let value_3 := mload(add(_15, 192))\n                            if iszero(eq(value_3, iszero(iszero(value_3)))) { revert(0, 0) }\n                            /// @src 12:5317:5329  \"pool.slot0()\"\n                            expr_component_1 := value_1\n                        }\n                        /// @src 12:5364:5497  \"mulDiv(...\"\n                        let expr_4 := fun_mulDiv(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ checked_exp_unsigned(and(/** @src 12:5392:5413  \"uint256(sqrtPriceX96)\" */ expr_component_1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1))))\n                        let _18 := div(/** @src 12:5536:5553  \"balance0 * price0\" */ checked_mul_uint256(expr_2, expr_4), /** @src 12:413:417  \"1e30\" */ 0x0c9f2c9cd04674edea40000000)\n                        /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                        if gt(_18, not(expr_3))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x11)\n                            revert(0, 36)\n                        }\n                        let sum := add(_18, expr_3)\n                        /// @src 12:5595:5728  \"if (liquidity > bestLiquidity) {...\"\n                        if /** @src 12:5599:5624  \"liquidity > bestLiquidity\" */ gt(sum, var_bestLiquidity)\n                        /// @src 12:5595:5728  \"if (liquidity > bestLiquidity) {...\"\n                        {\n                            /// @src 12:5648:5673  \"bestLiquidity = liquidity\"\n                            var_bestLiquidity := sum\n                            /// @src 12:5695:5709  \"price = price0\"\n                            var_price := expr_4\n                        }\n                    }\n                }\n                /// @src 12:5766:5800  \"price != 0 && _baseToken != token0\"\n                let expr_5 := /** @src 12:5766:5776  \"price != 0\" */ iszero(iszero(var_price))\n                /// @src 12:5766:5800  \"price != 0 && _baseToken != token0\"\n                if expr_5\n                {\n                    expr_5 := /** @src 12:5780:5800  \"_baseToken != token0\" */ iszero(eq(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_baseToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), and(/** @src 12:5780:5800  \"_baseToken != token0\" */ expr_1408_component, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1))))\n                }\n                /// @src 12:5762:5857  \"if (price != 0 && _baseToken != token0) {...\"\n                if expr_5\n                {\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    let exponent := 2\n                    let power := 0\n                    let base := 0\n                    let power_1 := 1\n                    power := power_1\n                    base := /** @src 12:413:417  \"1e30\" */ 0x0c9f2c9cd04674edea40000000\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    for { } gt(exponent, power_1) { }\n                    {\n                        if gt(base, div(not(0), base))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x11)\n                            revert(0, 36)\n                        }\n                        if and(exponent, power_1) { power := mul(power, base) }\n                        base := mul(base, base)\n                        exponent := shr(power_1, exponent)\n                    }\n                    if gt(power, div(not(0), base))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x11)\n                        revert(0, 36)\n                    }\n                    /// @src 12:5816:5846  \"price = PRECISION ** 2 / price\"\n                    var_price := /** @src 12:5824:5846  \"PRECISION ** 2 / price\" */ checked_div_uint256(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mul(power, base), /** @src 12:5824:5846  \"PRECISION ** 2 / price\" */ var_price)\n                }\n                /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                let _19 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(64)\n                let _20 := shl(224, 0x313ce567)\n                /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                mstore(_19, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _20)\n                /// @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\"\n                let _21 := 32\n                /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                let _22 := staticcall(gas(), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_baseToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), /** @src 12:5890:5919  \"IERC20(_baseToken).decimals()\" */ _19, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:5890:5919  \"IERC20(_baseToken).decimals()\" */ _19, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21)\n                /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                if iszero(_22)\n                {\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    let pos_4 := mload(64)\n                    returndatacopy(pos_4, 0, returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                let expr_6 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                if _22\n                {\n                    let _23 := /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21\n                    /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                    if gt(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21, /** @src 12:5890:5919  \"IERC20(_baseToken).decimals()\" */ returndatasize()) { _23 := returndatasize() }\n                    finalize_allocation(_19, _23)\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    if slt(sub(/** @src 12:5890:5919  \"IERC20(_baseToken).decimals()\" */ add(_19, _23), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _19), /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21)\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    { revert(0, 0) }\n                    /// @src 12:5890:5919  \"IERC20(_baseToken).decimals()\"\n                    expr_6 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ abi_decode_uint8_fromMemory(_19)\n                }\n                /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                let _24 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(64)\n                /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                mstore(_24, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _20)\n                /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                let _25 := staticcall(gas(), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:4519:4544  \"_baseToken == _quoteToken\" */ var_quoteToken, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1)), /** @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\" */ _24, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ 4, /** @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\" */ _24, /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21)\n                /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                if iszero(_25)\n                {\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    let pos_5 := mload(64)\n                    returndatacopy(pos_5, 0, returndatasize())\n                    revert(pos_5, returndatasize())\n                }\n                /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                let expr_7 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                if _25\n                {\n                    let _26 := /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21\n                    /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                    if gt(/** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21, /** @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\" */ returndatasize()) { _26 := returndatasize() }\n                    finalize_allocation(_24, _26)\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    if slt(sub(/** @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\" */ add(_24, _26), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _24), /** @src 12:4957:5002  \"_factory.getPool(token0, token1, feeTiers[i])\" */ _21)\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    { revert(0, 0) }\n                    /// @src 12:5953:5983  \"IERC20(_quoteToken).decimals()\"\n                    expr_7 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ abi_decode_uint8_fromMemory(_24)\n                }\n                /// @src 12:6012:6030  \"10 ** baseDecimals\"\n                let expr_8 := checked_exp_rational_by_uint256(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:5867:5919  \"uint256 baseDecimals = IERC20(_baseToken).decimals()\" */ expr_6, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0xff))\n                /// @src 12:6089:6127  \"price = (price * basePrec) / quotePrec\"\n                var_price := /** @src 12:6097:6127  \"(price * basePrec) / quotePrec\" */ checked_div_uint256(/** @src 12:6098:6114  \"price * basePrec\" */ checked_mul_uint256(var_price, expr_8), /** @src 12:6060:6079  \"10 ** quoteDecimals\" */ checked_exp_rational_by_uint256(/** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 12:5929:5983  \"uint256 quoteDecimals = IERC20(_quoteToken).decimals()\" */ expr_7, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0xff)))\n            }\n            /// @ast-id 1363 @src 12:589:4371  \"function mulDiv(...\"\n            function fun_mulDiv(var_a) -> var_result\n            {\n                /// @src 12:1165:1315  \"assembly {...\"\n                let _1 := /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ not(0)\n                /// @src 12:413:417  \"1e30\"\n                let _2 := 0x0c9f2c9cd04674edea40000000\n                /// @src 12:1165:1315  \"assembly {...\"\n                let usr$mm := mulmod(var_a, /** @src 12:413:417  \"1e30\" */ _2, /** @src 12:1165:1315  \"assembly {...\" */ _1)\n                let var_prod0 := mul(var_a, /** @src 12:413:417  \"1e30\" */ _2)\n                /// @src 12:1165:1315  \"assembly {...\"\n                let _3 := lt(usr$mm, var_prod0)\n                let _4 := sub(usr$mm, var_prod0)\n                let var_prod1 := sub(_4, _3)\n                /// @src 12:1387:1397  \"prod1 == 0\"\n                let _5 := /** @src -1:-1:-1 */ 0\n                /// @src 12:1383:1562  \"if (prod1 == 0) {...\"\n                if /** @src 12:1387:1397  \"prod1 == 0\" */ eq(/** @src 12:1165:1315  \"assembly {...\" */ _4, _3)\n                /// @src 12:1383:1562  \"if (prod1 == 0) {...\"\n                {\n                    /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                    _5 := /** @src -1:-1:-1 */ _5\n                    /// @src 12:1538:1551  \"return result\"\n                    var_result := /** @src 12:1451:1525  \"assembly {...\" */ shr(192, var_prod0)\n                    /// @src 12:1538:1551  \"return result\"\n                    leave\n                }\n                /// @src 12:5471:5479  \"1 << 192\"\n                let _6 := shl(192, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 1)\n                if iszero(/** @src 12:1675:1694  \"denominator > prod1\" */ gt(/** @src 12:5471:5479  \"1 << 192\" */ _6, /** @src 12:1675:1694  \"denominator > prod1\" */ var_prod1))\n                /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                {\n                    revert(/** @src -1:-1:-1 */ _5, _5)\n                }\n                /// @src 12:1999:2070  \"assembly {...\"\n                let var_remainder := mulmod(var_a, /** @src 12:413:417  \"1e30\" */ _2, /** @src 12:5471:5479  \"1 << 192\" */ _6)\n                /// @src 12:2134:2251  \"assembly {...\"\n                let _7 := gt(var_remainder, var_prod0)\n                let var_prod1_1 := sub(var_prod1, _7)\n                /// @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\"\n                if _5\n                {\n                    mstore(/** @src -1:-1:-1 */ _5, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ _5, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                }\n                if and(iszero(eq(/** @src 12:2134:2251  \"assembly {...\" */ var_prod1, _7)), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ gt(/** @src 12:2874:2946  \"assembly {...\" */ 0x010000000000000000, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ div(/** @src 12:1165:1315  \"assembly {...\" */ _1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ var_prod1_1)))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                }\n                /// @src 12:2955:2976  \"prod0 |= prod1 * twos\"\n                let _8 := or(/** @src 12:2637:2695  \"assembly {...\" */ shr(192, /** @src 12:2134:2251  \"assembly {...\" */ sub(var_prod0, var_remainder)), /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(64, var_prod1_1))\n                if and(iszero(iszero(_8)), gt(1, div(/** @src 12:1165:1315  \"assembly {...\" */ _1, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ _8)))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 12:294:6136  \"contract PancakeswapV3PriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                }\n                /// @src 12:4351:4364  \"return result\"\n                var_result := _8\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201c12e841425fec8a221d1f6ce36b83c71c6a8b1628b05619a543d4c21b3e063064736f6c634300080f0033\"\n    }\n}\n","hash":"01000137a411ad043a8cbe0ab00d09879bd34beccc95c6bfdc9327e9056690e6","factoryDependencies":{}}},"contracts/integrations/PythPriceFeedIntegration.sol":{"PythPriceFeedIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_pythAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"Forbidden","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"InvalidFeed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"manager","type":"address"}],"name":"SetManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"feed","type":"bytes32"}],"name":"SetPriceFeed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pyth","type":"address"}],"name":"SetPythAddress","type":"event"},{"inputs":[],"name":"DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pythAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_manager","type":"address"}],"name":"setManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_feed","type":"bytes32"}],"name":"setPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pythAddress","type":"address"}],"name":"setPythAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pythAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"InvalidFeed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"SetManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"feed\",\"type\":\"bytes32\"}],\"name\":\"SetPriceFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pyth\",\"type\":\"address\"}],\"name\":\"SetPythAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pythAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_feed\",\"type\":\"bytes32\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pythAddress\",\"type\":\"address\"}],\"name\":\"setPythAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/integrations/PythPriceFeedIntegration.sol\":\"PythPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/integrations/PythPriceFeedIntegration.sol\":{\"keccak256\":\"0xb8dfea2f1d3e79cec6621f3030b36163bdad70af4ea1473ac19b0dc4015f0b8c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://40d9768079249f5cb720076e9617a11397f6d1c0e21705afa91c7a3286ffe731\",\"dweb:/ipfs/QmSZGKaS71fyyPMvyrDRE8cWaAwM2owSeo5xK1PGZaJsJg\"]},\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7cb62d186540655a0ff3fce1b3ca6e29756d1dea9d30e3a435572511dc7e7551\",\"dweb:/ipfs/QmT1L8odyZMQ3gqGS3ddPKNvxspbawpDpf9WgkoTUeYTwt\"]},\"contracts/interfaces/external/IPyth.sol\":{\"keccak256\":\"0x1578ab3adee88ecb7b98918a189cc92d45a0967fc2b626617060a622349bc72f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://57761e45de623e8e70506c5ce1fe61593d3d3c7ed8da236fb4c0f754fd92367a\",\"dweb:/ipfs/QmZkomte2k9WdQ3xGt8EfqwZLtMNmreBPe49GrMF143xi6\"]},\"contracts/interfaces/external/IPythEvents.sol\":{\"keccak256\":\"0x3317cde88ace849f2882f7ea4d385650b3719f338b349a93ab90228499782f9d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db9cf605a922b48352e119c18eebe02b9da4f266b5a5ab6c2f04eee0f2cf5400\",\"dweb:/ipfs/QmPnwbfUwqZLJGhdu5bwLvNC1P1cok8FrYf75NWDPuLswK\"]},\"contracts/libraries/PythStructs.sol\":{\"keccak256\":\"0xd30acdb5307dfb1d9044cf02ca350f2418b5057bfaa1e151792ececae1534ef1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a7588f4b8049f80b773502f51ef88e10451dd2ef1827ff7980b18ccd5201cbd4\",\"dweb:/ipfs/QmUzzwaNkeE7TGcHJ7sfpA1SNfDnnVRVT8WaMXct3GAUow\"]},\"contracts/libraries/PythUtils.sol\":{\"keccak256\":\"0x5ea4bd7b103accc51b80388bed726f3dc95fab93378f4aa5aaef026492d84d2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9613596af03c3d13c26db1785e3b362bfc8d75e69349f58394c96e7d30497383\",\"dweb:/ipfs/QmRczMYDdQo1Y21YUiciQpkeVyAr5y5Lca45yHTK44cVVh\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PythPriceFeedIntegration.sol:PythPriceFeedIntegration\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_16\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_17\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_27\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_39\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_16\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_16\n\tadd\t18, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_16\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_12\n\tadd\tr0, r0, r5\n.BB0_11:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_11\n.BB0_12:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_14\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_14:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_16\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.le\t@.BB0_31\n.BB0_16:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_44\n\tsub.s!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_16\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_16\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_16\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_2[0], r3, r2\n\tjump.gt\t@.BB0_16\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_16\n\tadd\tr3, r0, stack-[2]\n\tnear_call\tr0, @fun_price, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_61\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[2], r0, r1\n\tnear_call\tr0, @fun_price, @DEFAULT_UNWIND\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.le\t@.BB0_60\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_27:\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.eq\t@.BB0_46\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_16\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_16\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_48\n.BB0_31:\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tcontext.caller\tr3\n\tor\tr2, r3, r2\n\tsstore\tr0, r2\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_16\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_16\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_16\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_16\n\tsload\tr0, r2\n\tand\t@CPI0_2[0], r2, r4\n\tcontext.caller\tr3\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB0_59\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r1, r2\n\tsstore\tr0, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_19[0], r0, r4\n\tjump\t@.BB0_55\n.BB0_39:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_16\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_16\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_16\n\tsload\tr0, r2\n\tand\t@CPI0_2[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_57\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r1, r2\n\tsstore\tr3, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_28[0], r0, r4\n\tjump\t@.BB0_55\n.BB0_44:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_16\n\tadd\t@CPI0_23[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_16\n\tsload\tr0, r1\n.BB0_48:\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_49:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_16\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_16\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_2[0], r3, r2\n\tjump.gt\t@.BB0_16\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_58\n\tadd\tr4, r0, stack-[1]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_16\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r4\n\tsstore\tr1, r4\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_21[0], r0, r4\n.BB0_55:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_16\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_57:\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r2\n\tadd\t@CPI0_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_58:\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_59:\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r3\n\tadd\t@CPI0_17[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_60:\n\tmul\t@CPI0_23[0], r1, r1, r2\n\tdiv.s\tstack-[1], r1, r3, r2\n.BB0_61:\n\tld.1\t64, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfun_price:\n.func_begin1:\n\tnop\tstack+=[3]\n\tand\t@CPI1_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\t1, r0, r12\n\tsload\tr12, r2\n\tld.1\t64, r10\n\tadd\t@CPI1_3[0], r0, r3\n\tst.1.inc\tr10, r3, r5\n\tadd\t4, r10, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI1_0[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB1_6\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t128, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t128, r0, r4\n\tjump\t@.BB1_17\n.BB1_3:\n\tadd\tr0, r0, r1\n\tret\n.BB1_6:\n\tadd\tr5, r0, stack-[1]\n\tadd\tr12, r0, stack-[3]\n\tadd\t@CPI1_1[0], r0, r3\n\tsub.s!\t@CPI1_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI1_1[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI1_4[0], r1, r1\n\tadd\tr10, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI1_1[0], r3, r3\n\tsub.s!\t128, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t128, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_52\n\tadd\tr0, r0, r7\n.BB1_8:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_8\n.BB1_52:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_10\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB1_10:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r12\n\tjump.eq\t@.BB1_12\n\tadd\tstack-[1], r0, r5\n.BB1_17:\n\tadd\t31, r4, r1\n\tand\t480, r1, r1\n\tadd\tr1, r10, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI1_5[0], r2, r4\n\tjump.gt\t@.BB1_46\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB1_46\n\tsub.s!\t128, r3, r1\n\tjump.lt\t@.BB1_1\n\tsub.s!\t@CPI1_6[0], r2, r1\n\tjump.gt\t@.BB1_46\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tld.1\tr10, r1\n\tand!\t@CPI1_7[0], r1, r3\n\tadd\t@CPI1_8[0], r0, r3\n\tadd.eq\tr0, r0, r3\n\tand\t@CPI1_9[0], r1, r4\n\tor\tr3, r4, r3\n\tsub!\tr1, r3, r3\n\tjump.ne\t@.BB1_1\n\tst.1.inc\tr2, r1, r1\n\tld.1\tr5, r3\n\tsub.s!\t@CPI1_5[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tst.1\tr1, r3\n\tadd\t64, r10, r1\n\tld.1\tr1, r1\n\tand!\t@CPI1_10[0], r1, r3\n\tadd\t@CPI1_11[0], r0, r4\n\tadd\tr4, r0, r3\n\tadd.eq\tr0, r0, r3\n\tand\t@CPI1_12[0], r1, r5\n\tor\tr3, r5, r3\n\tsub!\tr1, r3, r3\n\tjump.ne\t@.BB1_1\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\t96, r10, r3\n\tld.1\tr3, r3\n\tadd\t96, r2, r5\n\tst.1\tr5, r3\n\tand!\t@CPI1_10[0], r1, r3\n\tadd.eq\tr0, r0, r4\n\tld.1\tr2, r3\n\tand!\t@CPI1_7[0], r3, r2\n\tadd\t@CPI1_8[0], r0, r2\n\tadd.eq\tr0, r0, r2\n\tand\t@CPI1_12[0], r1, r5\n\tand\t@CPI1_9[0], r3, r3\n\tand!\t@CPI1_7[0], r2, r6\n\tjump.ne\t@.BB1_20\n\tand!\t@CPI1_10[0], r4, r6\n\tadd\t@CPI1_11[0], r0, r6\n\tadd.eq\tr0, r0, r6\n\tor\tr6, r5, r6\n\tadd\t@CPI1_13[0], r0, r7\n\tsub!\tr6, r0, r8\n\tadd\tr0, r0, r8\n\tadd.gt\tr7, r0, r8\n\tand\t@CPI1_13[0], r6, r6\n\tsub!\tr6, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI1_13[0], r6, r6\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tjump\t@.BB1_22\n.BB1_20:\n\tshr.s\t63, r6, r6\n.BB1_22:\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB1_1\n\tand!\t@CPI1_10[0], r4, r4\n\tadd\t@CPI1_11[0], r0, r4\n\tadd.eq\tr0, r0, r4\n\tor\tr4, r5, r4\n\tsub.s\t255, r0, r5\n\tadd\t@CPI1_13[0], r0, r6\n\tsub!\tr4, r5, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr6, r0, r5\n\tand\t@CPI1_13[0], r4, r7\n\tsub.s!\t@CPI1_13[0], r7, r8\n\tadd.le\tr0, r0, r6\n\txor\t@CPI1_13[0], r7, r7\n\tsub.s!\t@CPI1_13[0], r7, r7\n\tadd.ne\tr5, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB1_1\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB1_31\n\tadd\t@CPI1_13[0], r0, r5\n\tdiv.s!\t@CPI1_13[0], r4, r6, r7\n\tsub\tr5, r7, r8\n\tadd.eq\tr7, r0, r8\n\tdiv!\t@CPI1_11[0], r5, r7, r9\n\txor\tr7, r6, r7\n\tsub\tr5, r9, r6\n\tadd.eq\tr9, r0, r6\n\tsub.s!\t1, r4, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr5, r0, r9\n\tand\t@CPI1_13[0], r4, r10\n\tsub!\tr10, r0, r11\n\tadd\tr0, r0, r11\n\tadd.gt\tr5, r0, r11\n\tsub.s!\t@CPI1_13[0], r10, r10\n\tadd.ne\tr9, r0, r11\n\tdiv\tr6, r8, r6, r8\n\tshl.s!\t255, r7, r7\n\tsub\tr7, r6, r8\n\tor\tr8, r7, r7\n\tadd.eq\tr6, r0, r7\n\tsub!\tr6, r0, r8\n\tadd.ne\tr7, r0, r6\n\tsub!\tr11, r0, r7\n\tjump.ne\t@.BB1_29\n\tsub!\tr6, r0, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr5, r0, r7\n\tand\t@CPI1_13[0], r6, r6\n\tsub!\tr6, r0, r8\n\tadd\tr0, r0, r8\n\tadd.gt\tr5, r0, r8\n\tsub.s!\t@CPI1_13[0], r6, r6\n\tadd.ne\tr7, r0, r8\n\tsub!\tr8, r0, r6\n\tjump.eq\t@.BB1_27\n.BB1_29:\n\tdiv.s!\t@CPI1_13[0], r4, r6, r7\n\tsub\tr5, r7, r8\n\tadd.eq\tr7, r0, r8\n\tdiv!\t@CPI1_12[0], r5, r7, r9\n\txor\tr7, r6, r7\n\tsub\tr5, r9, r10\n\tadd.eq\tr9, r0, r10\n\tsub.s\t1, r0, r6\n\tsub!\tr4, r6, r9\n\tadd\tr0, r0, r9\n\tadd.gt\tr5, r0, r9\n\tand\t@CPI1_13[0], r4, r4\n\tsub.s!\t@CPI1_13[0], r4, r11\n\tadd.ge\tr0, r0, r5\n\txor\t@CPI1_13[0], r4, r4\n\tsub.s!\t@CPI1_13[0], r4, r4\n\tadd.ne\tr9, r0, r5\n\tdiv\tr10, r8, r4, r8\n\tshl.s!\t255, r7, r7\n\tsub\tr7, r4, r8\n\tor\tr8, r7, r7\n\tadd.eq\tr4, r0, r7\n\tsub!\tr4, r0, r8\n\tadd.ne\tr7, r0, r4\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB1_31\n\tadd\t@CPI1_13[0], r0, r5\n\tsub!\tr4, r6, r6\n\tadd\tr0, r0, r6\n\tadd.gt\tr5, r0, r6\n\tand\t@CPI1_13[0], r4, r4\n\tsub.s!\t@CPI1_13[0], r4, r7\n\tadd.ge\tr0, r0, r5\n\txor\t@CPI1_13[0], r4, r4\n\tsub.s!\t@CPI1_13[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB1_27\n.BB1_31:\n\tor\tr2, r3, r2\n\tsub\t0, r1, r3\n\tand\t255, r3, r3\n\tsub.s!\t19, r3, r4\n\tjump.lt\t@.BB1_40\n\tsub\t238, r1, r1\n\tand\t255, r1, r3\n\tsub.s!\t77, r3, r1\n\tjump.gt\t@.BB1_27\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB1_34\n\tadd\t10, r0, r4\n\tadd\t1, r0, r1\n.BB1_36:\n\tand!\t1, r3, r5\n\tadd\tr4, r0, r5\n\tadd.eq\t1, r0, r5\n\tmul\tr5, r1, r1, r5\n\tsub.s!\t1, r3, r5\n\tshr.s\t1, r3, r3\n\tmul\tr4, r4, r4, r5\n\tjump.gt\t@.BB1_36\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB1_38\n\tand\t@CPI1_5[0], r2, r2\n\tdiv\tr2, r1, r1, r2\n\tret\n.BB1_40:\n\tand\t@CPI1_5[0], r2, r1\n\tsub.s!\t18, r3, r2\n\tjump.eq\t@.BB1_43\n\tadd\t10, r0, r2\n\tadd\t1, r0, r12\n\tsub\t18, r3, r3\n.BB1_42:\n\tand!\t1, r3, r4\n\tadd\tr2, r0, r4\n\tadd.eq\t1, r0, r4\n\tmul\tr4, r12, r12, r4\n\tsub.s!\t1, r3, r4\n\tshr.s\t1, r3, r3\n\tmul\tr2, r2, r2, r4\n\tjump.gt\t@.BB1_42\n.BB1_43:\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB1_45\n\tsub.s\t1, r0, r2\n\tdiv\tr2, r1, r2, r3\n\tsub!\tr12, r2, r2\n\tjump.gt\t@.BB1_27\n.BB1_45:\n\tmul\tr12, r1, r1, r2\n\tret\n.BB1_34:\n\tadd\t1, r0, r1\n\tand\t@CPI1_5[0], r2, r2\n\tdiv\tr2, r1, r1, r2\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_27:\n\tadd\t@CPI1_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_46:\n\tadd\t@CPI1_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_12:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB1_53\n\tadd\tr0, r0, r6\n.BB1_14:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB1_14\n.BB1_53:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB1_16\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB1_16:\n\tadd\t@CPI1_1[0], r0, r1\n\tsub.s!\t@CPI1_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_38:\n\tadd\t@CPI1_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI1_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 2868243303\nCPI0_6:\n\t.cell 2915764313\nCPI0_7:\n\t.cell 2915764314\nCPI0_8:\n\t.cell 3505118183\nCPI0_9:\n\t.cell 2868243304\nCPI0_10:\n\t.cell 2889975386\nCPI0_11:\n\t.cell 1209821812\nCPI0_12:\n\t.cell 1209821813\nCPI0_13:\n\t.cell 1710828460\nCPI0_14:\n\t.cell 499352011\nCPI0_15:\n\t.cell 772744741\nCPI0_16:\n\t.cell -40882195634205099230027652466335720654988126728905360897259259206155517296640\nCPI0_17:\n\t.cell 2852213852874699394802404818944\nCPI0_18:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_19:\n\t.cell 38287964834805110954865662407633969641289207078285232085329977698942286501858\nCPI0_20:\nCPI1_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_21:\n\t.cell 55635063175429864716876849542221101437879069865909494363406100516978091348190\nCPI0_22:\n\t.cell 115792089237316195423570985008687907853269984665640564039457\nCPI0_23:\n\t.cell 1000000000000000000\nCPI0_24:\nCPI1_14:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_25:\nCPI1_4:\n\t.cell 2852213850513516153367582212096\nCPI0_26:\n\t.cell 2535301200456458802993406410752\nCPI0_27:\n\t.cell 2535301202817642044428229017600\nCPI0_28:\n\t.cell -49255193925836791793133627492783181980507873853800330843693438967825676188112\nCPI1_3:\n\t.cell -47713188566561859549891682160888522658895649115624676199408099926252873318400\nCPI1_5:\n\t.cell 18446744073709551615\nCPI1_6:\n\t.cell 18446744073709551487\nCPI1_7:\n\t.cell 9223372036854775808\nCPI1_8:\n\t.cell -9223372036854775808\nCPI1_9:\n\t.cell 9223372036854775807\nCPI1_10:\n\t.cell 2147483648\nCPI1_11:\n\t.cell -2147483648\nCPI1_12:\n\t.cell 2147483647\nCPI1_13:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\n","bytecode":{"object":""},"methodIdentifiers":{"DECIMALS()":"2e0f2625","PRECISION()":"aaf5eb68","getPrice(address,address)":"ac41865a","manager()":"481c6a75","pythAddress()":"65f92bac","setManager(address)":"d0ebdbe7","setPriceFeed(address,bytes32)":"adcb085a","setPythAddress(address)":"1dc381cb"}},"irOptimized":"/// @use-src 13:\"contracts/integrations/PythPriceFeedIntegration.sol\", 16:\"contracts/interfaces/IPriceFeedIntegration.sol\"\nobject \"PythPriceFeedIntegration_1777\" {\n    code {\n        {\n            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PythPriceFeedIntegration_1777\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n            let _3 := not(sub(shl(160, 1), 1))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _3), /** @src 13:765:775  \"msg.sender\" */ caller()))\n            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n            sstore(/** @src 13:785:811  \"pythAddress = _pythAddress\" */ 0x01, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ or(and(sload(/** @src 13:785:811  \"pythAddress = _pythAddress\" */ 0x01), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _3), _2))\n            let _4 := mload(64)\n            let _5 := datasize(\"PythPriceFeedIntegration_1777_deployed\")\n            codecopy(_4, dataoffset(\"PythPriceFeedIntegration_1777_deployed\"), _5)\n            return(_4, _5)\n        }\n    }\n    /// @use-src 13:\"contracts/integrations/PythPriceFeedIntegration.sol\", 21:\"contracts/libraries/PythUtils.sol\"\n    object \"PythPriceFeedIntegration_1777_deployed\" {\n        code {\n            {\n                /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x1dc381cb {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0 := abi_decode_address()\n                        let _4 := sub(shl(160, 1), 1)\n                        /// @src 13:857:912  \"if (msg.sender != manager) revert Forbidden(msg.sender)\"\n                        if /** @src 13:861:882  \"msg.sender != manager\" */ iszero(eq(/** @src 13:861:871  \"msg.sender\" */ caller(), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(sload(_3), _4)))\n                        /// @src 13:857:912  \"if (msg.sender != manager) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            mstore(_1, shl(224, 0xa59d7f4d))\n                            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                            mstore(/** @src 13:891:912  \"Forbidden(msg.sender)\" */ add(_1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 4), /** @src 13:861:871  \"msg.sender\" */ caller())\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            revert(_1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 36)\n                        }\n                        let _5 := and(value0, _4)\n                        sstore(/** @src 13:1149:1175  \"pythAddress = _pythAddress\" */ 0x01, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ or(and(sload(/** @src 13:1149:1175  \"pythAddress = _pythAddress\" */ 0x01), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(160, 0xffffffffffffffffffffffff)), _5))\n                        /// @src 13:1191:1219  \"SetPythAddress(_pythAddress)\"\n                        let _6 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_2)\n                        mstore(_6, _5)\n                        /// @src 13:1191:1219  \"SetPythAddress(_pythAddress)\"\n                        log1(_6, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 32, /** @src 13:1191:1219  \"SetPythAddress(_pythAddress)\" */ 0x931a8c555eae21c9b81a0611e2fa25e870b9c8a01c76a40eaa4cd436962ac630)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        return(mload(_2), _3)\n                    }\n                    case 0x2e0f2625 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos := mload(_2)\n                        mstore(memPos, /** @src 13:394:396  \"18\" */ 0x12)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x481c6a75 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0x65f92bac {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_1 := and(sload(/** @src 13:430:456  \"address public pythAddress\" */ 1), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, value_1)\n                        return(memPos_2, 32)\n                    }\n                    case 0xaaf5eb68 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 13:351:355  \"1e18\" */ 0x0de0b6b3a7640000)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0xac41865a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        if iszero(eq(value_2, and(value_2, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                        let var_price := _3\n                        /// @src 13:1987:2006  \"_price(_quoteToken)\"\n                        let expr := fun_price(value_2)\n                        /// @src 13:2016:2157  \"if (quotePrice > 0) {...\"\n                        if /** @src 13:2020:2034  \"quotePrice > 0\" */ iszero(iszero(expr))\n                        /// @src 13:2016:2157  \"if (quotePrice > 0) {...\"\n                        {\n                            /// @src 13:2070:2088  \"_price(_baseToken)\"\n                            let _7 := fun_price(value0_1)\n                            /// @src 13:351:355  \"1e18\"\n                            let _8 := 0x0de0b6b3a7640000\n                            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                            if and(iszero(iszero(_7)), gt(/** @src 13:351:355  \"1e18\" */ _8, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ div(not(0), _7)))\n                            {\n                                mstore(_3, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(_3, 36)\n                            }\n                            /// @src 13:2102:2146  \"price = (basePrice * PRECISION) / quotePrice\"\n                            var_price := /** @src 13:2110:2146  \"(basePrice * PRECISION) / quotePrice\" */ checked_div_uint256(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mul(_7, /** @src 13:351:355  \"1e18\" */ _8), /** @src 13:2110:2146  \"(basePrice * PRECISION) / quotePrice\" */ expr)\n                        }\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, var_price)\n                        return(memPos_4, 32)\n                    }\n                    case 0xadcb085a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address()\n                        let value_3 := calldataload(36)\n                        let _9 := sub(shl(160, 1), 1)\n                        /// @src 13:857:912  \"if (msg.sender != manager) revert Forbidden(msg.sender)\"\n                        if /** @src 13:861:882  \"msg.sender != manager\" */ iszero(eq(/** @src 13:861:871  \"msg.sender\" */ caller(), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(sload(_3), _9)))\n                        /// @src 13:857:912  \"if (msg.sender != manager) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            let _10 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_2)\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            mstore(_10, shl(224, 0xa59d7f4d))\n                            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                            mstore(/** @src 13:891:912  \"Forbidden(msg.sender)\" */ add(_10, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 4), /** @src 13:861:871  \"msg.sender\" */ caller())\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            revert(_10, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 36)\n                        }\n                        let _11 := and(value0_2, _9)\n                        mstore(_3, _11)\n                        mstore(32, /** @src 13:1316:1321  \"feeds\" */ 0x02)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        sstore(keccak256(_3, _2), value_3)\n                        /// @src 13:1353:1380  \"SetPriceFeed(_token, _feed)\"\n                        let _12 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_2)\n                        mstore(_12, _11)\n                        mstore(add(_12, 32), value_3)\n                        /// @src 13:1353:1380  \"SetPriceFeed(_token, _feed)\"\n                        log1(_12, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _2, /** @src 13:1353:1380  \"SetPriceFeed(_token, _feed)\" */ 0x7b0054713deba93ed9e8fbce5dbacc9302b9a3d414f82ed07de1619b907fd0de)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        return(mload(_2), _3)\n                    }\n                    case 0xd0ebdbe7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address()\n                        let _13 := sload(_3)\n                        let _14 := sub(shl(160, 1), 1)\n                        /// @src 13:857:912  \"if (msg.sender != manager) revert Forbidden(msg.sender)\"\n                        if /** @src 13:861:882  \"msg.sender != manager\" */ iszero(eq(/** @src 13:861:871  \"msg.sender\" */ caller(), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(_13, _14)))\n                        /// @src 13:857:912  \"if (msg.sender != manager) revert Forbidden(msg.sender)\"\n                        {\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            let _15 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_2)\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            mstore(_15, shl(224, 0xa59d7f4d))\n                            /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                            mstore(/** @src 13:891:912  \"Forbidden(msg.sender)\" */ add(_15, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 4), /** @src 13:861:871  \"msg.sender\" */ caller())\n                            /// @src 13:891:912  \"Forbidden(msg.sender)\"\n                            revert(_15, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 36)\n                        }\n                        let _16 := and(value0_3, _14)\n                        sstore(_3, or(and(_13, shl(160, 0xffffffffffffffffffffffff)), _16))\n                        /// @src 13:1039:1059  \"SetManager(_manager)\"\n                        let _17 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_2)\n                        mstore(_17, _16)\n                        /// @src 13:1039:1059  \"SetManager(_manager)\"\n                        log1(_17, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 32, /** @src 13:1039:1059  \"SetManager(_manager)\" */ 0x54a6385aa0292b04e1ef8513253c17d1863f7cdfc87029d77fd55cc4c2e717e2)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        return(mload(_2), _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 1739 @src 13:1393:1822  \"function _price(address _token) internal view returns (uint256 price) {...\"\n            function fun_price(var_token) -> var_price\n            {\n                /// @src 13:1448:1461  \"uint256 price\"\n                var_price := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                /// @src 13:1448:1461  \"uint256 price\"\n                let var_price_1 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0\n                let _1 := sub(shl(160, 1), 1)\n                mstore(var_price_1, and(var_token, _1))\n                mstore(0x20, /** @src 13:1488:1493  \"feeds\" */ 0x02)\n                /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                let _2 := 0x40\n                let _3 := sload(keccak256(var_price_1, _2))\n                /// @src 13:1511:1816  \"if (feed != bytes32(0)) {...\"\n                if /** @src 13:1515:1533  \"feed != bytes32(0)\" */ iszero(iszero(_3))\n                /// @src 13:1511:1816  \"if (feed != bytes32(0)) {...\"\n                {\n                    /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                    let cleaned := and(sload(/** @src 13:1592:1603  \"pythAddress\" */ 0x01), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _1)\n                    /// @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\"\n                    let _4 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mload(_2)\n                    /// @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\"\n                    mstore(_4, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x96834ad3))\n                    mstore(/** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ add(_4, 4), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _3)\n                    /// @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\"\n                    let _5 := staticcall(gas(), cleaned, _4, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 36, /** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ _4, 128)\n                    if iszero(_5)\n                    {\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        let pos := mload(_2)\n                        returndatacopy(pos, var_price_1, returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\"\n                    let expr_mpos := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ var_price_1\n                    /// @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\"\n                    if _5\n                    {\n                        let _6 := 128\n                        if gt(_6, returndatasize()) { _6 := returndatasize() }\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        let newFreePtr := add(_4, and(add(_6, 31), not(31)))\n                        let _7 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _7), lt(newFreePtr, _4))\n                        {\n                            mstore(var_price_1, shl(224, 0x4e487b71))\n                            mstore(/** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ 4, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x41)\n                            revert(var_price_1, 36)\n                        }\n                        if slt(sub(/** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ add(_4, _6), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _4), /** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ 128)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        {\n                            revert(var_price_1, var_price_1)\n                        }\n                        let newFreePtr_1 := add(newFreePtr, /** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ 128)\n                        /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                        if or(gt(newFreePtr_1, _7), lt(newFreePtr_1, newFreePtr))\n                        {\n                            mstore(var_price_1, shl(224, 0x4e487b71))\n                            mstore(/** @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\" */ 4, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x41)\n                            revert(var_price_1, 36)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        let value := mload(_4)\n                        if iszero(eq(value, signextend(7, value)))\n                        {\n                            revert(var_price_1, var_price_1)\n                        }\n                        mstore(newFreePtr, value)\n                        let value_1 := mload(add(_4, 0x20))\n                        if iszero(eq(value_1, and(value_1, _7)))\n                        {\n                            revert(var_price_1, var_price_1)\n                        }\n                        mstore(add(newFreePtr, 0x20), value_1)\n                        let value_2 := mload(add(_4, _2))\n                        if iszero(eq(value_2, signextend(3, value_2)))\n                        {\n                            revert(var_price_1, var_price_1)\n                        }\n                        mstore(add(newFreePtr, _2), value_2)\n                        mstore(add(newFreePtr, 96), mload(add(_4, 96)))\n                        /// @src 13:1586:1655  \"IPyth(pythAddress).getPriceUnsafe(...\"\n                        expr_mpos := newFreePtr\n                    }\n                    /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                    let cleaned_1 := signextend(7, mload(/** @src 13:1718:1733  \"pythPrice.price\" */ expr_mpos))\n                    /// @src 13:1669:1805  \"price = PythUtils.convertToUint(...\"\n                    var_price := /** @src 13:1677:1805  \"PythUtils.convertToUint(...\" */ fun_convertToUint(cleaned_1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ signextend(3, mload(/** @src 13:1751:1765  \"pythPrice.expo\" */ add(expr_mpos, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ _2))))\n                }\n            }\n            function checked_exp_rational_by_uint32(exponent) -> power\n            {\n                let exponent_1 := and(exponent, 0xffffffff)\n                if gt(exponent_1, 77)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                power := exp(10, exponent_1)\n            }\n            /// @ast-id 2246 @src 21:633:1226  \"function convertToUint(...\"\n            function fun_convertToUint(var_price, var_expo) -> var\n            {\n                /// @src 21:787:788  \"0\"\n                let _1 := 0x00\n                /// @src 21:779:800  \"price < 0 || expo > 0\"\n                let expr := /** @src 21:779:788  \"price < 0\" */ slt(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ signextend(7, /** @src 21:779:788  \"price < 0\" */ var_price), /** @src 21:787:788  \"0\" */ _1)\n                /// @src 21:779:800  \"price < 0 || expo > 0\"\n                if iszero(expr)\n                {\n                    expr := /** @src 21:792:800  \"expo > 0\" */ sgt(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ signextend(3, /** @src 21:792:800  \"expo > 0\" */ var_expo), /** @src 21:787:788  \"0\" */ _1)\n                }\n                /// @src 21:779:815  \"price < 0 || expo > 0 || expo < -255\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 21:804:815  \"expo < -255\" */ slt(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ signextend(3, /** @src 21:804:815  \"expo < -255\" */ var_expo), /** @src 21:811:815  \"-255\" */ not(254))\n                }\n                /// @src 21:775:850  \"if (price < 0 || expo > 0 || expo < -255) {...\"\n                if expr_1\n                {\n                    /// @src 21:831:839  \"revert()\"\n                    revert(/** @src 21:787:788  \"0\" */ _1, _1)\n                }\n                /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                let y := signextend(3, var_expo)\n                /// @src 21:895:897  \"-1\"\n                let _2 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ not(0)\n                if and(and(sgt(y, /** @src 21:787:788  \"0\" */ _1), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ slt(/** @src 21:895:897  \"-1\" */ _2, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ sdiv(not(0x7fffffff), y))), 1)\n                {\n                    mstore(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                }\n                if and(and(slt(y, /** @src 21:787:788  \"0\" */ _1), /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ slt(/** @src 21:895:897  \"-1\" */ _2, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ sdiv(0x7fffffff, y))), 1)\n                {\n                    mstore(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                }\n                let converted := and(sub(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ y), 0xff)\n                /// @src 21:921:952  \"targetDecimals >= priceDecimals\"\n                let _3 := lt(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 18, converted)\n                /// @src 21:917:1220  \"if (targetDecimals >= priceDecimals) {...\"\n                switch /** @src 21:921:952  \"targetDecimals >= priceDecimals\" */ iszero(_3)\n                case /** @src 21:917:1220  \"if (targetDecimals >= priceDecimals) {...\" */ 0 {\n                    /// @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\"\n                    if lt(converted, 18)\n                    {\n                        mstore(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                    }\n                    /// @src 21:1104:1209  \"return...\"\n                    var := /** @src 21:1127:1209  \"uint(uint64(price)) /...\" */ checked_div_uint256(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 21:779:788  \"price < 0\" */ var_price, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0xffffffffffffffff), /** @src 21:1165:1209  \"10 ** uint32(priceDecimals - targetDecimals)\" */ checked_exp_rational_by_uint32(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(add(converted, not(17)), 0xff)))\n                    /// @src 21:1104:1209  \"return...\"\n                    leave\n                }\n                default /// @src 21:917:1220  \"if (targetDecimals >= priceDecimals) {...\"\n                {\n                    /// @src 21:991:1010  \"uint(uint64(price))\"\n                    let expr_2 := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(/** @src 21:779:788  \"price < 0\" */ var_price, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0xffffffffffffffff)\n                    if _3\n                    {\n                        mstore(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                    }\n                    /// @src 21:1029:1073  \"10 ** uint32(targetDecimals - priceDecimals)\"\n                    let _4 := checked_exp_rational_by_uint32(/** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ and(sub(18, converted), 0xff))\n                    if and(iszero(iszero(expr_2)), gt(_4, div(/** @src 21:895:897  \"-1\" */ _2, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ expr_2)))\n                    {\n                        mstore(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src 21:787:788  \"0\" */ _1, /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ 0x24)\n                    }\n                    /// @src 21:968:1073  \"return...\"\n                    var := /** @src 13:241:2165  \"contract PythPriceFeedIntegration is IPriceFeedIntegration {...\" */ mul(expr_2, _4)\n                    /// @src 21:968:1073  \"return...\"\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122068b5856a7836bf60cf5046261a4fc61a00e06a920d113d4ed818cafe8b568fa464736f6c634300080f0033\"\n    }\n}\n","hash":"010000d1436043497cb2505e726bb1aa6a77ba9c4d1d4c820f33427fce0ee974","factoryDependencies":{}}},"contracts/interfaces/IDEXIntegration.sol":{"IDEXIntegration":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenIn","type":"address"},{"internalType":"address","name":"_tokenOut","type":"address"}],"name":"validatePair","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"}],\"name\":\"validatePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDEXIntegration.sol\":\"IDEXIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDEXIntegration.sol\":{\"keccak256\":\"0xdb59a456949a60735ad9a8af40701ced24cd467bf0513d9a548f896f44ff7182\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d00c68899ef0240099bdaebf242280a1cca435bbdc0e6ab954c1ac545979ff3e\",\"dweb:/ipfs/QmXj1276hqhyfnq8jFYbWEzvuW6k2xLCGFFpaFpzRPvAiB\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getAmountIn(address,address,uint256)":"53b609b5","getAmountOut(address,address,uint256)":"4aa06652","swap(address,address,address)":"93316212","validatePair(address,address)":"b88c5f91"}},"irOptimized":""}},"contracts/interfaces/IERC20.sol":{"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint8","name":"_v","type":"uint8"},{"internalType":"bytes32","name":"_r","type":"bytes32"},{"internalType":"bytes32","name":"_s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xbb59306c86418977358baf5879543ffe4c23642b41bd4998a5b57e93dc4e3b97\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d783bcfa47faaa1ed36eb4ce8c1612372cd4118fc11b347d8ecea2ab3d4a1284\",\"dweb:/ipfs/QmbyCFzoezQpCkD6uMEHXeEsMRmNbnwTbqMP74MC3TMgfi\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"contracts/interfaces/IPriceFeedIntegration.sol":{"IPriceFeedIntegration":{"abi":[{"inputs":[],"name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceFeedIntegration.sol\":\"IPriceFeedIntegration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceFeedIntegration.sol\":{\"keccak256\":\"0xce2d35d16d300e04226216184eb7af0715122c7bbc81964b39d212b4df31828c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7cb62d186540655a0ff3fce1b3ca6e29756d1dea9d30e3a435572511dc7e7551\",\"dweb:/ipfs/QmT1L8odyZMQ3gqGS3ddPKNvxspbawpDpf9WgkoTUeYTwt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"PRECISION()":"aaf5eb68","getPrice(address,address)":"ac41865a"}},"irOptimized":""}},"contracts/interfaces/IUniswapV3StaticQuoter.sol":{"IUniswapV3StaticQuoter":{"abi":[{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountIn","type":"uint256"}],"name":"quoteExactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"quoteExactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams","name":"params","type":"tuple"}],"name":"quoteExactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3StaticQuoter.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IUniswapV3StaticQuoter.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token that would be received\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountIn\":\"The amount of the first token to swap\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount of `tokenIn` that would be needed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in needed for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in needed for a given exact output but for a swap of a single pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV3StaticQuoter.sol\":\"IUniswapV3StaticQuoter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV3StaticQuoter.sol\":{\"keccak256\":\"0xac75d87dcb20505222561e784d5cb69e82841aee7fca8261b0e36cd242064d5a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://13f95db1224c2885c41f90918f5fb2a1920796b9237f1f1fe70b5a6e43733159\",\"dweb:/ipfs/QmQZhysnprnxF99FBRCmp3gAavXV7zGtZWJtyAJp63hyQr\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"quoteExactInput(bytes,uint256)":"cdca1753","quoteExactInputSingle((address,address,uint256,uint24,uint160))":"c6a5026a","quoteExactOutput(bytes,uint256)":"2f80bb1d","quoteExactOutputSingle((address,address,uint256,uint24,uint160))":"bd21704a"}},"irOptimized":""}},"contracts/interfaces/external/IPyth.sol":{"IPyth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPrice","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getEmaPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPrice","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getValidTimePeriod","outputs":[{"internalType":"uint256","name":"validTimePeriod","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdatesUnique","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"updatePriceFeeds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64[]","name":"publishTimes","type":"uint64[]"}],"name":"updatePriceFeedsIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidTimePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validTimePeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"kind\":\"dev\",\"methods\":{\"getEmaPrice(bytes32)\":{\"details\":\"Reverts if the EMA price is not available.\",\"params\":{\"id\":\"The Pyth Price Feed ID of which to fetch the EMA price and confidence interval.\"},\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPrice(bytes32)\":{\"details\":\"Reverts if the price has not been updated within the last `getValidTimePeriod()` seconds.\",\"params\":{\"id\":\"The Pyth Price Feed ID of which to fetch the price and confidence interval.\"},\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getPrice` or `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPrice(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price and confidence interval.\"},\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPrice(bytes32)\":{\"notice\":\"Returns the price and confidence interval.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"getValidTimePeriod()\":{\"notice\":\"Returns the period (in seconds) that a price feed is considered valid since its publish time\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/IPyth.sol\":{\"keccak256\":\"0x1578ab3adee88ecb7b98918a189cc92d45a0967fc2b626617060a622349bc72f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://57761e45de623e8e70506c5ce1fe61593d3d3c7ed8da236fb4c0f754fd92367a\",\"dweb:/ipfs/QmZkomte2k9WdQ3xGt8EfqwZLtMNmreBPe49GrMF143xi6\"]},\"contracts/interfaces/external/IPythEvents.sol\":{\"keccak256\":\"0x3317cde88ace849f2882f7ea4d385650b3719f338b349a93ab90228499782f9d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db9cf605a922b48352e119c18eebe02b9da4f266b5a5ab6c2f04eee0f2cf5400\",\"dweb:/ipfs/QmPnwbfUwqZLJGhdu5bwLvNC1P1cok8FrYf75NWDPuLswK\"]},\"contracts/libraries/PythStructs.sol\":{\"keccak256\":\"0xd30acdb5307dfb1d9044cf02ca350f2418b5057bfaa1e151792ececae1534ef1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a7588f4b8049f80b773502f51ef88e10451dd2ef1827ff7980b18ccd5201cbd4\",\"dweb:/ipfs/QmUzzwaNkeE7TGcHJ7sfpA1SNfDnnVRVT8WaMXct3GAUow\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"getEmaPrice(bytes32)":"b5dcc911","getEmaPriceNoOlderThan(bytes32,uint256)":"711a2e28","getEmaPriceUnsafe(bytes32)":"9474f45b","getPrice(bytes32)":"31d98b3f","getPriceNoOlderThan(bytes32,uint256)":"a4ae35e0","getPriceUnsafe(bytes32)":"96834ad3","getUpdateFee(bytes[])":"d47eed45","getValidTimePeriod()":"e18910a3","parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)":"4716e9c5","parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)":"accca7f9","updatePriceFeeds(bytes[])":"ef9e5e28","updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])":"b9256d28"}},"irOptimized":""}},"contracts/interfaces/external/IPythEvents.sol":{"IPythEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/external/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/external/IPythEvents.sol\":{\"keccak256\":\"0x3317cde88ace849f2882f7ea4d385650b3719f338b349a93ab90228499782f9d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db9cf605a922b48352e119c18eebe02b9da4f266b5a5ab6c2f04eee0f2cf5400\",\"dweb:/ipfs/QmPnwbfUwqZLJGhdu5bwLvNC1P1cok8FrYf75NWDPuLswK\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/libraries/PythStructs.sol":{"PythStructs":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/PythStructs.sol\":{\"keccak256\":\"0xd30acdb5307dfb1d9044cf02ca350f2418b5057bfaa1e151792ececae1534ef1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a7588f4b8049f80b773502f51ef88e10451dd2ef1827ff7980b18ccd5201cbd4\",\"dweb:/ipfs/QmUzzwaNkeE7TGcHJ7sfpA1SNfDnnVRVT8WaMXct3GAUow\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PythStructs.sol:PythStructs\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000a87e7b0e50f252b6c7026b2547c9f0c67e9f2d3291dec92581627213be96efbd"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 20:\"contracts/libraries/PythStructs.sol\"\nobject \"PythStructs_2161\" {\n    code {\n        {\n            /// @src 20:65:1176  \"contract PythStructs {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"PythStructs_2161_deployed\")\n            codecopy(_1, dataoffset(\"PythStructs_2161_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 20:\"contracts/libraries/PythStructs.sol\"\n    object \"PythStructs_2161_deployed\" {\n        code {\n            {\n                /// @src 20:65:1176  \"contract PythStructs {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202b80cb42bcb5117e0d32a62aba452d1bd92036d15d1c87b00975402a6662795d64736f6c634300080f0033\"\n    }\n}\n","hash":"01000007efa5d37b2fd675fea79172742d726d5fe50eeef87ce2e55f39c144e3","factoryDependencies":{}}},"contracts/libraries/PythUtils.sol":{"PythUtils":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PythUtils.sol\":\"PythUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/PythUtils.sol\":{\"keccak256\":\"0x5ea4bd7b103accc51b80388bed726f3dc95fab93378f4aa5aaef026492d84d2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9613596af03c3d13c26db1785e3b362bfc8d75e69349f58394c96e7d30497383\",\"dweb:/ipfs/QmRczMYDdQo1Y21YUiciQpkeVyAr5y5Lca45yHTK44cVVh\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PythUtils.sol:PythUtils\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b5c5fe914d0a6cc42949d26f8b88a904f9a2643f7f3351d036517021eb255eeb"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 21:\"contracts/libraries/PythUtils.sol\"\nobject \"PythUtils_2247\" {\n    code {\n        {\n            /// @src 21:65:1228  \"library PythUtils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"PythUtils_2247_deployed\")\n            codecopy(_1, dataoffset(\"PythUtils_2247_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 21:\"contracts/libraries/PythUtils.sol\"\n    object \"PythUtils_2247_deployed\" {\n        code {\n            {\n                /// @src 21:65:1228  \"library PythUtils {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220533cb6e4e32019aa803cfe88a5a731312941eccd7beaddec5153798b75e7ca0264736f6c634300080f0033\"\n    }\n}\n","hash":"01000007707ee1b3650f442586732d70d45e9ece57c96c957ad06c91b07b54e7","factoryDependencies":{}}},"contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x8ebc6ea3024d27307e30957b3943a0cb95f626a88d7b78f97e2abcaf068f0af6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4974ccca392242612b24dc99f2aa88d3f2eaf3d0b3b307519f0a6a425a4e85c1\",\"dweb:/ipfs/QmXdMCaLvTfJwNJ6byE8fiYz57PpMXxQenHXMHpVKKBSAp\"]}},\"version\":1}","solc_version":"0.8.15","solc_zkvm_edition":null,"zk_version":"1.4.1"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"TransferHelper.sol:TransferHelper\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000025bbea68b45377495b7a244ef6603526f34b0a299f626999f49718ec25522e04"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 22:\"contracts/libraries/TransferHelper.sol\"\nobject \"TransferHelper_2407\" {\n    code {\n        {\n            /// @src 22:182:1897  \"library TransferHelper {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"TransferHelper_2407_deployed\")\n            codecopy(_1, dataoffset(\"TransferHelper_2407_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 22:\"contracts/libraries/TransferHelper.sol\"\n    object \"TransferHelper_2407_deployed\" {\n        code {\n            {\n                /// @src 22:182:1897  \"library TransferHelper {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a5703ee44cb841e5043b796def910edd5f1f3e06d4bd2d5d2189550f5e9bad4664736f6c634300080f0033\"\n    }\n}\n","hash":"01000007e26fb7979e41079576fe6298746e2a837af2679a007699d44304cf6b","factoryDependencies":{}}}}}}